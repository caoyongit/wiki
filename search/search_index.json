{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\u200b\\-]"},"docs":[{"location":"","text":"Java\u6e90\u7801\u7cfb\u5217 Spring Spring\u6e90\u7801\u7f16\u8bd1\u6559\u7a0b Spring\u6838\u5fc3\u77e5\u8bc6\u70b9 \u624b\u5199\u6a21\u62dfSpring\u5e95\u5c42\u539f\u7406 Spring\u4e4b\u5e95\u5c42\u67b6\u6784\u6838\u5fc3\u6982\u5ff5\u89e3\u6790 Spring\u4e4bBean\u751f\u547d\u5468\u671f\u6e90\u7801\u89e3\u6790\u4e0a Spring\u4e4bBean\u751f\u547d\u5468\u671f\u6e90\u7801\u89e3\u6790\u4e0b Spring\u4f9d\u8d56\u6ce8\u5165\u6e90\u7801\u89e3\u6790\u4e0a Spring\u4f9d\u8d56\u6ce8\u5165\u6e90\u7801\u89e3\u6790\u4e0b Spring\u5faa\u73af\u4f9d\u8d56\u6e90\u7801 Spring\u4e4b\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u6e90\u7801\u89e3\u6790 Nginx 01Nginx\u5b89\u88c5 02Nginx\u914d\u7f6e\u6587\u4ef6\u89e3\u8bfb 03Nginx\u4ee3\u7406 04Nginx\u8d1f\u8f7d\u5747\u8861 05Nginx\u9650\u6d41\u7194\u65ad 06Nginx\u5b9e\u73b0\u52a8\u9759\u5206\u79bb 07Nginx\u8c03\u4f18 08Nginx\u955c\u50cf\u670d\u52a1\u5668 09Nginx\u70ed\u5907\u90e8\u7f72 10Nginx\u5b89\u5168\u8ba4\u8bc1","title":"Home"},{"location":"#java","text":"","title":"Java\u6e90\u7801\u7cfb\u5217"},{"location":"#spring","text":"Spring\u6e90\u7801\u7f16\u8bd1\u6559\u7a0b Spring\u6838\u5fc3\u77e5\u8bc6\u70b9 \u624b\u5199\u6a21\u62dfSpring\u5e95\u5c42\u539f\u7406 Spring\u4e4b\u5e95\u5c42\u67b6\u6784\u6838\u5fc3\u6982\u5ff5\u89e3\u6790 Spring\u4e4bBean\u751f\u547d\u5468\u671f\u6e90\u7801\u89e3\u6790\u4e0a Spring\u4e4bBean\u751f\u547d\u5468\u671f\u6e90\u7801\u89e3\u6790\u4e0b Spring\u4f9d\u8d56\u6ce8\u5165\u6e90\u7801\u89e3\u6790\u4e0a Spring\u4f9d\u8d56\u6ce8\u5165\u6e90\u7801\u89e3\u6790\u4e0b Spring\u5faa\u73af\u4f9d\u8d56\u6e90\u7801 Spring\u4e4b\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u6e90\u7801\u89e3\u6790","title":"Spring"},{"location":"#nginx","text":"01Nginx\u5b89\u88c5 02Nginx\u914d\u7f6e\u6587\u4ef6\u89e3\u8bfb 03Nginx\u4ee3\u7406 04Nginx\u8d1f\u8f7d\u5747\u8861 05Nginx\u9650\u6d41\u7194\u65ad 06Nginx\u5b9e\u73b0\u52a8\u9759\u5206\u79bb 07Nginx\u8c03\u4f18 08Nginx\u955c\u50cf\u670d\u52a1\u5668 09Nginx\u70ed\u5907\u90e8\u7f72 10Nginx\u5b89\u5168\u8ba4\u8bc1","title":"Nginx"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/00Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/","text":"Spring\u6e90\u7801\u7f16\u8bd1\u6559\u7a0b \u4f5c\u8005\uff1a\u5468\u745c \u6b64\u6559\u7a0b\u662f\u57fa\u4e8e\u5468\u745c\u8001\u5e08\u7684Spring5.3.10\u6ce8\u91ca\u7248\u6e90\u7801\u7f16\u8bd1\u7684\uff0c\u5e76\u4e0d\u662fGithub\u539f\u751f\u7684Spring5.3.10\u6e90\u7801\uff0c\u6709\u4e00\u4e9b\u5dee\u522b\uff0c\u4f46\u90fd\u662fgradle\u914d\u7f6e\u6587\u4ef6\u7684\u5fae\u5c0f\u6539\u52a8\uff0c\u6bd4\u5982\u628a\u67d0\u4e9b\u4f9d\u8d56\u4eceoptional\u6539\u6210compile\u7ea7\u522b\uff08\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u7f16\u8bd1\uff09\uff0c\u5176\u4ed6\u90fd\u6ca1\u6539\u52a8\u3002 \u8bb2\u7684\u662f\u6700\u65b0\u7684Spring\u7248\u672c\uff0c\u6211\u4e4b\u524d\u7528\u7684\u662f2019\u7684\u67d0\u4e2aIDEA\u7248\u672c\uff0c\u4f46\u662f\u6211\u5c1d\u8bd5\u8fc7\u540e\u53d1\u73b0\u7f16\u8bd1\u4e0d\u6210\u529f\uff0c\u6240\u4ee5\u6539\u7528\u4e86\u6700\u65b0\u7248\u672cIDEA\u7248\u672c2021.1.3\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5927\u5bb6\u800c\u8a00\u4e5f\u5c3d\u91cf\u7528\u8fd9\u4e2a\u7248\u672c\uff0c\u7528\u5176\u4ed6IDEA\u7248\u672c\u53ef\u80fd\u4f1a\u9047\u5230\u5404\u79cd\u5404\u6837\u7684\u95ee\u9898\uff0c\u89e3\u51b3\u95ee\u9898\u4f1a\u6bd4\u8f83\u8d39\u65f6\u95f4\uff0c\u6240\u4ee5\u4e3a\u4e86\u8282\u7701\u5927\u5bb6\u548c\u6211\u7684\u65f6\u95f4\uff0c\u8bf7\u5927\u5bb6\u75282021.1.3\u8fd9\u4e2aIDEA\u7248\u672c\u3002 Spring\u5e26\u6ce8\u91ca\u6e90\u7801\u5730\u5740\uff1a git clone\u7684\u5730\u5740\u4e3a\uff1a https://gitee.com/archguide/spring-framework-5.3.10.git \u9644\u4e0a2021.1.3\u7248\u7684\u767e\u5ea6\u7f51\u76d8\u94fe\u63a5\uff1a \u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1X79-2bFGtkL0763QjAya3w \u63d0\u53d6\u7801\uff1auk7w \u6b64\u94fe\u63a5\u4e2d\u8fd8\u6709IDEA\u7834\u89e3\u6240\u9700\u8981\u7684\u5de5\u5177\u5305\uff0c\u548c\u4e00\u4e2a.gradle.zip\u538b\u7f29\u5305\uff08\u540e\u7eed\u4f1a\u7528\u5230\uff0c\u6211\u662f\u7528\u7684360\u538b\u7f29\u8f6f\u4ef6\u8fdb\u884c\u538b\u7f29\u7684\uff0c\u5efa\u8bae\u5927\u5bb6\u4e5f\u7528\u8fd9\u4e2a\u8f6f\u4ef6\u6765\u89e3\u538b\uff0c\u6709\u540c\u5b66\u53cd\u9988\u7528\u5176\u4ed6\u8f6f\u4ef6\u53ef\u80fd\u89e3\u538b\u4f1a\u9047\u5230\u95ee\u9898\uff0c\u4e0a\u9762\u7f51\u76d8\u94fe\u63a5\u91cc\u6709\u4e00\u4e2a.gradle\u7684\u538b\u7f29\u5305\u548c\u4e00\u4e2a\u672a\u538b\u7f29\u7684.gradle\u6587\u4ef6\u5939\uff09\uff0c\u8fd8\u6709\u4e00\u4e2aJDK1.8\u7684\u5b89\u88c5\u5305\uff08\u56e0\u4e3a\u5982\u679c\u7528\u7a0d\u5fae\u8001\u4e00\u70b9\u76841.8\u5c0f\u7248\u672c\uff0c\u4e5f\u4f1a\u51fa\u73b0\u5947\u8469\u95ee\u9898\uff0c\u6240\u4ee5\u4e5f\u5c3d\u91cf\u7528\u6211\u63d0\u4f9b\u7684\u8fd9\u4e2aJDK\uff09 \u9644\u4e0aIDEA\u7834\u89e3\u6559\u7a0b\u94fe\u63a5\uff1a https://www.exception.site/essay/idea-reset-eval 2021.1.3IDEA\u7248\u672c\u622a\u56fe\uff1a \u4e0b\u8f7dSpring\u6e90\u7801\u6240\u9700\u8981\u7684\u4f9d\u8d56 \u767e\u5ea6\u7f51\u76d8\u94fe\u63a5\uff1a https://pan.baidu.com/s/1X79-2bFGtkL0763QjAya3w \u63d0\u53d6\u7801\uff1auk7w \u4e0b\u8f7d\u5f97\u5230.gradle.zip\u538b\u7f29\u5305\uff0c\u5e76\u89e3\u538b\uff0c\u6bd4\u5982\u89e3\u538b\u5230D\u76d8 \u56e0\u4e3aSpring\u6e90\u7801\u5b58\u5728\u5f88\u591a\u4f9d\u8d56\u5305\uff0c\u5982\u679c\u5927\u5bb6\u81ea\u884c\u4e0b\u8f7d\uff0c\u4f1a\u9700\u8981\u4e0b\u5f88\u4e45\uff081\u5c0f\u65f6\u90fd\u6709\u53ef\u80fd\uff09\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u628a\u6211\u7535\u8111\u4e0a\u7684\u4f9d\u8d56\u5305\u7ed9\u5230\u5927\u5bb6\u3002 Spring\u662f\u901a\u8fc7gradle\u6765\u7f16\u8bd1\u6e90\u7801\u4e0b\u8f7d\u4f9d\u8d56\u7684\uff0c.gradle\u6587\u4ef6\u5939\u53ef\u4ee5\u7406\u89e3\u4e3agradle\u7684\u4ed3\u5e93\uff08\u548cmave\u7c7b\u4f3c\uff0c\u4e0d\u61c2gradle\u7684\u5148\u8fd9\u4e48\u7406\u89e3\uff09\uff0c\u800c\u6211\u7ed9\u5927\u5bb6\u7684\u8fd9\u4e2a\u4ed3\u5e93\uff0c\u53ea\u5305\u542b\u4e86Spring\u6e90\u7801\u6240\u9700\u8981\u7684\u4f9d\u8d56\u3002 \u4e0b\u8f7dSpring\u6e90\u7801 git clone\u7684\u5730\u5740\u4e3a\uff1a https://gitee.com/archguide/spring-framework-5.3.10.git \u5efa\u8bae\u76f4\u63a5\u7528IDEA\u7684git\u6765\u4e0b\u8f7d\u6e90\u7801\uff1a \u8f93\u5165\u5730\u5740\uff0c\u70b9\u51fbClone\uff0c\u5c31\u4f1a\u5f00\u59cb\u4e0b\u8f7d\u6e90\u7801\u5de5\u7a0b\uff08\u56e0\u4e3a\u662f\u4ecegitee\u4e0a\u4e0b\u8f7d\uff0c\u6240\u4ee5\u4f1a\u6bd4\u4ecegithub\u4e0a\u4e0b\u8f7d\u5feb\u5f88\u591a\uff09\u3002 \u4e00\u65e6\u4e0b\u8f7d\u5b8c\u6210\uff0cIDEA\u5c31\u4f1a\u81ea\u52a8\u4e0b\u8f7dgradle\uff0c\u4e0b\u8f7d\u5b8cgradle\u5c31\u4f1a\u5f00\u59cb\u4e0b\u8f7dSpring\u6e90\u7801\u4f9d\u8d56\uff0c\u4f46\u662f\u6211\u4eec\u5df2\u7ecf\u6709\u73b0\u6210\u7684\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u53d6\u6d88\u8fd9\u4e2a\u8fc7\u7a0b\u3002 \u4fee\u6539IDEA\u7684gradle\u914d\u7f6e \u9996\u5148\u628agradle user home\u6539\u4e3a .gradle\u538b\u7f29\u5305 \u7684\u89e3\u538b\u4e4b\u540e\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u6bd4\u5982D:.gradle \u7136\u540e\u628aBuild and run suing\u548cRun tests using\u90fd\u6539\u4e3aIntelliJ IDEA\uff0c\u5176\u4ed6\u90fd\u4e0d\u7528\u52a8\uff0c\u6539\u4e3a\u4e4b\u540e\u5982\u4e0b\u56fe\uff1a \u6539\u5b8c\u4e4b\u540e\u70b9\u51fbApply\uff0c\u518d\u70b9\u51fbOK\uff0c\u4f1a\u81ea\u52a8\u89e6\u53d1gradle\u7684\u91cd\u65b0\u7f16\u8bd1\u3002 \u5982\u679c\u6ca1\u6709\u89e6\u53d1\u53ef\u4ee5\uff0c\u70b9\u51fb \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6b64\u65f6gradle\u7f16\u8bd1\u5c06\u6bd4\u8f83\u5feb\uff0c\u4f1a\u6709\u4e00\u4e2a\u7d22\u5f15\u6587\u4ef6\u8fc7\u7a0b\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u989d\u5916\u7684\u4e0b\u8f7dgradle\u548c\u4f9d\u8d56\u4e86\u3002 \u7f16\u8bd1\u6210\u529f\u622a\u56fe\uff1a \u8fd0\u884c\u4ee3\u7801 \u7f16\u8bd1\u6210\u529f\u540e\uff0c\u5728\u5de6\u4fa7\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u6a21\u5757\uff0c\u5176\u4e2d\u6709\u4e00\u4e2atuling\u6a21\u5757\uff0c\u8fd9\u662f\u6211\u5199\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\uff0c\u5728\u5b83\u4e0b\u9762\u6709\u4e00\u4e2aTest\u7c7b\uff0c\u76f4\u63a5\u8fd0\u884cmain\u65b9\u6cd5\u3002 \u95ee\u98981 \u7b2c\u4e00\u6b21\u8fd0\u884c\u53ef\u80fd\u4f1a\u6bd4\u8f83\u6162\uff0c\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e5f\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u6bd4\u5982 \u90a3\u4e48\u8bf7\u8fd0\u884c\u4e00\u4e0b\uff1a \u5982\u679cbuild\u4e4b\u540e\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u6bd4\u5982\uff1a \u6ca1\u5173\u7cfb\uff0c\u8bf7\u5ffd\u7565\uff0c\u7ee7\u7eed\u5f80\u4e0b\u8d70\u3002 \u518d\u6b21\u6267\u884cTest\u7c7b\u4e2d\u7684main\u65b9\u6cd5\uff0c\u53ef\u80fd\u5c31\u76f4\u63a5\u8fd0\u884c\u6210\u529f\u4e86\uff1a \u5230\u6b64\uff0c\u606d\u559c\u4f60\uff0c\u4f60\u5df2\u7ecf\u6210\u529f\u7684\u7f16\u8bd1\u597d\u4e86Spring\u6e90\u7801\uff0c\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u5e76\u8fdb\u884c\u8c03\u8bd5\u4e86\u3002 \u95ee\u98982 \u5982\u679c\u51fa\u73b0\u4e86\uff1a \u62a5\u9519\u7684CoroutinesUtils\u662f\u4e00\u4e2akotlin\u4e2d\u7684\u7c7b\uff0c\u89e3\u51b3\u529e\u6cd5\uff1a \u70b9\u51fbFile -> Project Structure -> Libraries -> \u201c+\u201d -> Java\uff0c\u7136\u540e\u9009\u62e9spring-framework/spring-core/kotlin-coroutines/build/libs/kotlin-coroutines-5.2.4.BUILD-SNAPSHOT.jar\uff0c\u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\u9009\u62e9spring-core.main\uff0c\u5728\u91cd\u65b0\u8fd0\u884cTest\u7c7b\u4e2d\u7684main\u65b9\u6cd5\u5373\u53ef\uff0c\u6ce8\u610f\u6211\u56fe\u4e2d\u662f\u62a5\u9519\u7684\u6a21\u5757spring-core\uff0c\u6240\u4ee5\u64cd\u4f5c\u7684\u662fspring-core.main\uff0c\u5982\u679c\u662f\u5176\u4ed6\u6a21\u5757\u62a5\u7c7b\u4f3c\u7684\u9519\uff0c\u5c31\u505a\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002 \u95ee\u98983 \u9700\u8981\u91cd\u65b0\u5b89\u88c5\u7535\u8111\u4e0a\u7684git\uff0c\u5e76\u4e14\u6700\u597d\u662f\u6309\u7167\u6700\u65b0\u7248\u672c\u7684git\uff08\u4e0a\u9762\u7f51\u76d8\u4e2d\u6709\u6309\u7167\u6587\u4ef6\uff09\uff0c\u5b89\u88c5\u7684\u65f6\u5019\u6ce8\u610f\u4ee5\u4e0b\u9875\u9762\u9009\u62e9\u7b2c\u4e8c\u9879\uff1a \u5982\u679c\u5927\u5bb6\u5728\u7f16\u8bd1\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u5176\u4ed6\u95ee\u9898\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u672c\u6587\u540e\u9762\u8fdb\u884c\u8bc4\u8bba\uff0c\u6700\u597d\u662f\u628a\u89e3\u51b3\u65b9\u6848\u4e5f\u7ed9\u51fa\uff0c\u65b9\u4fbf\u5176\u4ed6\u5c0f\u4f19\u4f34\uff0c\u611f\u8c22\u3002","title":"0.Spring\u6e90\u7801\u7f16\u8bd1\u6559\u7a0b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/00Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#spring","text":"\u4f5c\u8005\uff1a\u5468\u745c \u6b64\u6559\u7a0b\u662f\u57fa\u4e8e\u5468\u745c\u8001\u5e08\u7684Spring5.3.10\u6ce8\u91ca\u7248\u6e90\u7801\u7f16\u8bd1\u7684\uff0c\u5e76\u4e0d\u662fGithub\u539f\u751f\u7684Spring5.3.10\u6e90\u7801\uff0c\u6709\u4e00\u4e9b\u5dee\u522b\uff0c\u4f46\u90fd\u662fgradle\u914d\u7f6e\u6587\u4ef6\u7684\u5fae\u5c0f\u6539\u52a8\uff0c\u6bd4\u5982\u628a\u67d0\u4e9b\u4f9d\u8d56\u4eceoptional\u6539\u6210compile\u7ea7\u522b\uff08\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u7f16\u8bd1\uff09\uff0c\u5176\u4ed6\u90fd\u6ca1\u6539\u52a8\u3002 \u8bb2\u7684\u662f\u6700\u65b0\u7684Spring\u7248\u672c\uff0c\u6211\u4e4b\u524d\u7528\u7684\u662f2019\u7684\u67d0\u4e2aIDEA\u7248\u672c\uff0c\u4f46\u662f\u6211\u5c1d\u8bd5\u8fc7\u540e\u53d1\u73b0\u7f16\u8bd1\u4e0d\u6210\u529f\uff0c\u6240\u4ee5\u6539\u7528\u4e86\u6700\u65b0\u7248\u672cIDEA\u7248\u672c2021.1.3\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5927\u5bb6\u800c\u8a00\u4e5f\u5c3d\u91cf\u7528\u8fd9\u4e2a\u7248\u672c\uff0c\u7528\u5176\u4ed6IDEA\u7248\u672c\u53ef\u80fd\u4f1a\u9047\u5230\u5404\u79cd\u5404\u6837\u7684\u95ee\u9898\uff0c\u89e3\u51b3\u95ee\u9898\u4f1a\u6bd4\u8f83\u8d39\u65f6\u95f4\uff0c\u6240\u4ee5\u4e3a\u4e86\u8282\u7701\u5927\u5bb6\u548c\u6211\u7684\u65f6\u95f4\uff0c\u8bf7\u5927\u5bb6\u75282021.1.3\u8fd9\u4e2aIDEA\u7248\u672c\u3002 Spring\u5e26\u6ce8\u91ca\u6e90\u7801\u5730\u5740\uff1a git clone\u7684\u5730\u5740\u4e3a\uff1a https://gitee.com/archguide/spring-framework-5.3.10.git \u9644\u4e0a2021.1.3\u7248\u7684\u767e\u5ea6\u7f51\u76d8\u94fe\u63a5\uff1a \u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1X79-2bFGtkL0763QjAya3w \u63d0\u53d6\u7801\uff1auk7w \u6b64\u94fe\u63a5\u4e2d\u8fd8\u6709IDEA\u7834\u89e3\u6240\u9700\u8981\u7684\u5de5\u5177\u5305\uff0c\u548c\u4e00\u4e2a.gradle.zip\u538b\u7f29\u5305\uff08\u540e\u7eed\u4f1a\u7528\u5230\uff0c\u6211\u662f\u7528\u7684360\u538b\u7f29\u8f6f\u4ef6\u8fdb\u884c\u538b\u7f29\u7684\uff0c\u5efa\u8bae\u5927\u5bb6\u4e5f\u7528\u8fd9\u4e2a\u8f6f\u4ef6\u6765\u89e3\u538b\uff0c\u6709\u540c\u5b66\u53cd\u9988\u7528\u5176\u4ed6\u8f6f\u4ef6\u53ef\u80fd\u89e3\u538b\u4f1a\u9047\u5230\u95ee\u9898\uff0c\u4e0a\u9762\u7f51\u76d8\u94fe\u63a5\u91cc\u6709\u4e00\u4e2a.gradle\u7684\u538b\u7f29\u5305\u548c\u4e00\u4e2a\u672a\u538b\u7f29\u7684.gradle\u6587\u4ef6\u5939\uff09\uff0c\u8fd8\u6709\u4e00\u4e2aJDK1.8\u7684\u5b89\u88c5\u5305\uff08\u56e0\u4e3a\u5982\u679c\u7528\u7a0d\u5fae\u8001\u4e00\u70b9\u76841.8\u5c0f\u7248\u672c\uff0c\u4e5f\u4f1a\u51fa\u73b0\u5947\u8469\u95ee\u9898\uff0c\u6240\u4ee5\u4e5f\u5c3d\u91cf\u7528\u6211\u63d0\u4f9b\u7684\u8fd9\u4e2aJDK\uff09 \u9644\u4e0aIDEA\u7834\u89e3\u6559\u7a0b\u94fe\u63a5\uff1a https://www.exception.site/essay/idea-reset-eval 2021.1.3IDEA\u7248\u672c\u622a\u56fe\uff1a","title":"Spring\u6e90\u7801\u7f16\u8bd1\u6559\u7a0b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/00Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#spring_1","text":"\u767e\u5ea6\u7f51\u76d8\u94fe\u63a5\uff1a https://pan.baidu.com/s/1X79-2bFGtkL0763QjAya3w \u63d0\u53d6\u7801\uff1auk7w \u4e0b\u8f7d\u5f97\u5230.gradle.zip\u538b\u7f29\u5305\uff0c\u5e76\u89e3\u538b\uff0c\u6bd4\u5982\u89e3\u538b\u5230D\u76d8 \u56e0\u4e3aSpring\u6e90\u7801\u5b58\u5728\u5f88\u591a\u4f9d\u8d56\u5305\uff0c\u5982\u679c\u5927\u5bb6\u81ea\u884c\u4e0b\u8f7d\uff0c\u4f1a\u9700\u8981\u4e0b\u5f88\u4e45\uff081\u5c0f\u65f6\u90fd\u6709\u53ef\u80fd\uff09\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u628a\u6211\u7535\u8111\u4e0a\u7684\u4f9d\u8d56\u5305\u7ed9\u5230\u5927\u5bb6\u3002 Spring\u662f\u901a\u8fc7gradle\u6765\u7f16\u8bd1\u6e90\u7801\u4e0b\u8f7d\u4f9d\u8d56\u7684\uff0c.gradle\u6587\u4ef6\u5939\u53ef\u4ee5\u7406\u89e3\u4e3agradle\u7684\u4ed3\u5e93\uff08\u548cmave\u7c7b\u4f3c\uff0c\u4e0d\u61c2gradle\u7684\u5148\u8fd9\u4e48\u7406\u89e3\uff09\uff0c\u800c\u6211\u7ed9\u5927\u5bb6\u7684\u8fd9\u4e2a\u4ed3\u5e93\uff0c\u53ea\u5305\u542b\u4e86Spring\u6e90\u7801\u6240\u9700\u8981\u7684\u4f9d\u8d56\u3002","title":"\u4e0b\u8f7dSpring\u6e90\u7801\u6240\u9700\u8981\u7684\u4f9d\u8d56"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/00Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#spring_2","text":"git clone\u7684\u5730\u5740\u4e3a\uff1a https://gitee.com/archguide/spring-framework-5.3.10.git \u5efa\u8bae\u76f4\u63a5\u7528IDEA\u7684git\u6765\u4e0b\u8f7d\u6e90\u7801\uff1a \u8f93\u5165\u5730\u5740\uff0c\u70b9\u51fbClone\uff0c\u5c31\u4f1a\u5f00\u59cb\u4e0b\u8f7d\u6e90\u7801\u5de5\u7a0b\uff08\u56e0\u4e3a\u662f\u4ecegitee\u4e0a\u4e0b\u8f7d\uff0c\u6240\u4ee5\u4f1a\u6bd4\u4ecegithub\u4e0a\u4e0b\u8f7d\u5feb\u5f88\u591a\uff09\u3002 \u4e00\u65e6\u4e0b\u8f7d\u5b8c\u6210\uff0cIDEA\u5c31\u4f1a\u81ea\u52a8\u4e0b\u8f7dgradle\uff0c\u4e0b\u8f7d\u5b8cgradle\u5c31\u4f1a\u5f00\u59cb\u4e0b\u8f7dSpring\u6e90\u7801\u4f9d\u8d56\uff0c\u4f46\u662f\u6211\u4eec\u5df2\u7ecf\u6709\u73b0\u6210\u7684\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u53d6\u6d88\u8fd9\u4e2a\u8fc7\u7a0b\u3002","title":"\u4e0b\u8f7dSpring\u6e90\u7801"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/00Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#ideagradle","text":"\u9996\u5148\u628agradle user home\u6539\u4e3a .gradle\u538b\u7f29\u5305 \u7684\u89e3\u538b\u4e4b\u540e\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u6bd4\u5982D:.gradle \u7136\u540e\u628aBuild and run suing\u548cRun tests using\u90fd\u6539\u4e3aIntelliJ IDEA\uff0c\u5176\u4ed6\u90fd\u4e0d\u7528\u52a8\uff0c\u6539\u4e3a\u4e4b\u540e\u5982\u4e0b\u56fe\uff1a \u6539\u5b8c\u4e4b\u540e\u70b9\u51fbApply\uff0c\u518d\u70b9\u51fbOK\uff0c\u4f1a\u81ea\u52a8\u89e6\u53d1gradle\u7684\u91cd\u65b0\u7f16\u8bd1\u3002 \u5982\u679c\u6ca1\u6709\u89e6\u53d1\u53ef\u4ee5\uff0c\u70b9\u51fb \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6b64\u65f6gradle\u7f16\u8bd1\u5c06\u6bd4\u8f83\u5feb\uff0c\u4f1a\u6709\u4e00\u4e2a\u7d22\u5f15\u6587\u4ef6\u8fc7\u7a0b\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u989d\u5916\u7684\u4e0b\u8f7dgradle\u548c\u4f9d\u8d56\u4e86\u3002 \u7f16\u8bd1\u6210\u529f\u622a\u56fe\uff1a","title":"\u4fee\u6539IDEA\u7684gradle\u914d\u7f6e"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/00Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#_1","text":"\u7f16\u8bd1\u6210\u529f\u540e\uff0c\u5728\u5de6\u4fa7\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u6a21\u5757\uff0c\u5176\u4e2d\u6709\u4e00\u4e2atuling\u6a21\u5757\uff0c\u8fd9\u662f\u6211\u5199\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\uff0c\u5728\u5b83\u4e0b\u9762\u6709\u4e00\u4e2aTest\u7c7b\uff0c\u76f4\u63a5\u8fd0\u884cmain\u65b9\u6cd5\u3002","title":"\u8fd0\u884c\u4ee3\u7801"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/00Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#1","text":"\u7b2c\u4e00\u6b21\u8fd0\u884c\u53ef\u80fd\u4f1a\u6bd4\u8f83\u6162\uff0c\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e5f\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u6bd4\u5982 \u90a3\u4e48\u8bf7\u8fd0\u884c\u4e00\u4e0b\uff1a \u5982\u679cbuild\u4e4b\u540e\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u6bd4\u5982\uff1a \u6ca1\u5173\u7cfb\uff0c\u8bf7\u5ffd\u7565\uff0c\u7ee7\u7eed\u5f80\u4e0b\u8d70\u3002 \u518d\u6b21\u6267\u884cTest\u7c7b\u4e2d\u7684main\u65b9\u6cd5\uff0c\u53ef\u80fd\u5c31\u76f4\u63a5\u8fd0\u884c\u6210\u529f\u4e86\uff1a \u5230\u6b64\uff0c\u606d\u559c\u4f60\uff0c\u4f60\u5df2\u7ecf\u6210\u529f\u7684\u7f16\u8bd1\u597d\u4e86Spring\u6e90\u7801\uff0c\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u5e76\u8fdb\u884c\u8c03\u8bd5\u4e86\u3002","title":"\u95ee\u98981"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/00Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#2","text":"\u5982\u679c\u51fa\u73b0\u4e86\uff1a \u62a5\u9519\u7684CoroutinesUtils\u662f\u4e00\u4e2akotlin\u4e2d\u7684\u7c7b\uff0c\u89e3\u51b3\u529e\u6cd5\uff1a \u70b9\u51fbFile -> Project Structure -> Libraries -> \u201c+\u201d -> Java\uff0c\u7136\u540e\u9009\u62e9spring-framework/spring-core/kotlin-coroutines/build/libs/kotlin-coroutines-5.2.4.BUILD-SNAPSHOT.jar\uff0c\u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\u9009\u62e9spring-core.main\uff0c\u5728\u91cd\u65b0\u8fd0\u884cTest\u7c7b\u4e2d\u7684main\u65b9\u6cd5\u5373\u53ef\uff0c\u6ce8\u610f\u6211\u56fe\u4e2d\u662f\u62a5\u9519\u7684\u6a21\u5757spring-core\uff0c\u6240\u4ee5\u64cd\u4f5c\u7684\u662fspring-core.main\uff0c\u5982\u679c\u662f\u5176\u4ed6\u6a21\u5757\u62a5\u7c7b\u4f3c\u7684\u9519\uff0c\u5c31\u505a\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002","title":"\u95ee\u98982"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/00Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#3","text":"\u9700\u8981\u91cd\u65b0\u5b89\u88c5\u7535\u8111\u4e0a\u7684git\uff0c\u5e76\u4e14\u6700\u597d\u662f\u6309\u7167\u6700\u65b0\u7248\u672c\u7684git\uff08\u4e0a\u9762\u7f51\u76d8\u4e2d\u6709\u6309\u7167\u6587\u4ef6\uff09\uff0c\u5b89\u88c5\u7684\u65f6\u5019\u6ce8\u610f\u4ee5\u4e0b\u9875\u9762\u9009\u62e9\u7b2c\u4e8c\u9879\uff1a \u5982\u679c\u5927\u5bb6\u5728\u7f16\u8bd1\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u5176\u4ed6\u95ee\u9898\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u672c\u6587\u540e\u9762\u8fdb\u884c\u8bc4\u8bba\uff0c\u6700\u597d\u662f\u628a\u89e3\u51b3\u65b9\u6848\u4e5f\u7ed9\u51fa\uff0c\u65b9\u4fbf\u5176\u4ed6\u5c0f\u4f19\u4f34\uff0c\u611f\u8c22\u3002","title":"\u95ee\u98983"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/01Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/","text":"\u672c\u8282\u8bfe\u4f1a\u628aSpring\u4e2d\u6838\u5fc3\u77e5\u8bc6\u70b9\u90fd\u7ed9\u5927\u5bb6\u8fdb\u884c\u4e32\u8bb2\uff0c\u8ba9\u5927\u5bb6\u5bf9Spring\u7684\u5e95\u5c42\u6709\u4e00\u4e2a\u6574\u4f53\u7684\u5927\u81f4\u4e86\u89e3 \uff0c\u6bd4\u5982\uff1a Bean\u7684\u751f\u547d\u5468\u671f\u5e95\u5c42\u539f\u7406 \u4f9d\u8d56\u6ce8\u5165\u5e95\u5c42\u539f\u7406 \u521d\u59cb\u5316\u5e95\u5c42\u539f\u7406 \u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u5e95\u5c42\u539f\u7406 AOP\u5e95\u5c42\u539f\u7406 Spring\u4e8b\u52a1\u5e95\u5c42\u539f\u7406 \u4f46\u90fd\u53ea\u662f\u5927\u81f4\u6d41\u7a0b\uff0c \u540e\u7eed\u4f1a\u9488\u5bf9\u6bcf\u4e2a\u6d41\u7a0b\u8be6\u7ec6\u6df1\u5165\u7684\u8bb2\u89e3\u5e76\u5206\u6790\u6e90\u7801\u5b9e\u73b0 \u3002 \u5148\u6765\u770b\u770b\u5165\u95e8\u4f7f\u7528Spring\u7684\u4ee3\u7801\uff1a 1 2 3 ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext ( \"spring.xml\" ); UserService userService = ( UserService ) context . getBean ( \"userService\" ); userService . test (); \u5bf9\u4e8e\u8fd9\u4e09\u884c\u4ee3\u7801\u5e94\u8be5\uff0c\u5927\u90e8\u5206\u540c\u5b66\u5e94\u8be5\u90fd\u662f\u6bd4\u8f83\u719f\u6089\uff0c\u8fd9\u662f\u5b66\u4e60Spring\u7684hello world\u3002\u53ef\u662f\uff0c\u8fd9\u4e09\u884c\u4ee3\u7801\u5e95\u5c42\u90fd\u505a\u4e86\u4ec0\u4e48\uff0c\u6bd4\u5982\uff1a \u7b2c\u4e00\u884c\u4ee3\u7801\uff0c\u4f1a\u6784\u9020\u4e00\u4e2aClassPathXmlApplicationContext\u5bf9\u8c61\uff0cClassPathXmlApplicationContext\u8be5\u5982\u4f55\u7406\u89e3\uff0c\u8c03\u7528\u8be5\u6784\u9020\u65b9\u6cd5\u9664\u5f00\u4f1a\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd8\u4f1a\u505a\u54ea\u4e9b\u4e8b\u60c5\uff1f \u7b2c\u4e8c\u884c\u4ee3\u7801\uff0c\u4f1a\u8c03\u7528ClassPathXmlApplicationContext\u7684getBean\u65b9\u6cd5\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2aUserService\u5bf9\u8c61\uff0cgetBean()\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\u8fd4\u56de\u7684UserService\u5bf9\u8c61\u548c\u6211\u4eec\u81ea\u5df1\u76f4\u63a5new\u7684UserService\u5bf9\u8c61\u6709\u533a\u522b\u5417\uff1f \u7b2c\u4e09\u884c\u4ee3\u7801\uff0c\u5c31\u662f\u7b80\u5355\u7684\u8c03\u7528UserService\u7684test()\u65b9\u6cd5\uff0c\u4e0d\u96be\u7406\u89e3\u3002 \u5149\u770b\u8fd9\u4e09\u884c\u4ee3\u7801\uff0c\u5176\u5b9e \u5e76\u4e0d\u80fd\u4f53\u73b0\u51fa\u6765Spring\u7684\u5f3a\u5927\u4e4b\u5904 \uff0c\u4e5f\u4e0d\u80fd\u7406\u89e3\u4e3a\u4ec0\u4e48\u9700\u8981ClassPathXmlApplicationContext\u548cgetBean()\u65b9\u6cd5\uff0c\u968f\u7740\u8bfe\u7a0b\u7684\u6df1\u5165\u5c06\u4f1a\u6539\u53d8\u4f60\u6b64\u65f6\u7684\u89c2\u5ff5\uff0c\u800c\u5bf9\u4e8e\u4e0a\u9762\u7684\u8fd9\u4e9b\u7591\u95ee\uff0c\u4e5f\u4f1a\u968f\u7740\u8bfe\u7a0b\u6df1\u5165\u9010\u6b65\u5f97\u5230\u89e3\u51b3\u3002\u5bf9\u4e8e\u8fd9\u4e09\u884c\u4ee3\u7801\uff0c\u4f60\u73b0\u5728\u53ef\u4ee5\u8ba4\u4e3a\uff1a\u5982\u679c\u4f60\u8981\u7528Spring\uff0c\u4f60\u5c31\u5f97\u8fd9\u4e48\u5199\u3002\u5c31\u50cf\u4f60\u8981\u7528Mybatis\uff0c\u4f60\u5c31\u5f97\u5199\u5404\u79cdMapper\u63a5\u53e3\u3002 \u200b \u4f46\u662f\u7528ClassPathXmlApplicationContext\u5176\u5b9e\u5df2\u7ecf\u8fc7\u65f6\u4e86\uff0c\u5728\u65b0\u7248\u7684Spring MVC\u548cSpring Boot\u7684\u5e95\u5c42\u4e3b\u8981\u7528\u7684\u90fd\u662f AnnotationConfigApplicationContext \uff0c\u6bd4\u5982\uff1a 1 2 3 4 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); //ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring.xml\"); UserService userService = ( UserService ) context . getBean ( \"userService\" ); userService . test (); \u53ef\u4ee5\u770b\u5230AnnotationConfigApplicationContext\u7684\u7528\u6cd5\u548cClassPathXmlApplicationContext\u662f\u975e\u5e38\u7c7b\u4f3c\u7684\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981\u4f20\u5165\u7684\u662f\u4e00\u4e2aclass\uff0c\u800c\u4e0d\u662f\u4e00\u4e2axml\u6587\u4ef6\u3002 \u800cAppConfig.class\u548cspring.xml\u4e00\u6837\uff0c\u8868\u793aSpring\u7684\u914d\u7f6e\uff0c\u6bd4\u5982\u53ef\u4ee5\u6307\u5b9a\u626b\u63cf\u8def\u5f84\uff0c\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4e49Bean\uff0c\u6bd4\u5982\uff1a \u200b spring.xml\u4e2d\u7684\u5185\u5bb9\u4e3a\uff1a 1 2 < context : component - scan base - package = \"com.zhouyu\" /> < bean id = \"userService\" class =\" com . zhouyu . service . UserService \"/> AppConfig\u4e2d\u7684\u5185\u5bb9\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 @ComponentScan ( \"com.zhouyu\" ) public class AppConfig { @Bean public UserService userService (){ return new UserService (); } } \u6240\u4ee5spring.xml\u548cAppConfig.class\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\u3002 \u200b \u76ee\u524d\uff0c\u6211\u4eec\u57fa\u672c\u5f88\u5c11\u76f4\u63a5\u4f7f\u7528\u4e0a\u9762\u8fd9\u79cd\u65b9\u5f0f\u6765\u7528Spring\uff0c\u800c\u662f\u4f7f\u7528Spring MVC\uff0c\u6216\u8005Spring Boot\uff0c\u4f46\u662f\u5b83\u4eec\u90fd\u662f\u57fa\u4e8e\u4e0a\u9762\u8fd9\u79cd\u65b9\u5f0f\u7684\uff0c\u90fd\u9700\u8981\u5728\u5185\u90e8\u53bb\u521b\u5efa\u4e00\u4e2aApplicationContext\u7684\uff0c\u53ea\u4e0d\u8fc7\uff1a Spring MVC\u521b\u5efa\u7684\u662f XmlWebApplicationContext \uff0c\u548c ClassPathXmlApplicationContext \u7c7b\u4f3c\uff0c\u90fd\u662f\u57fa\u4e8eXML\u914d\u7f6e\u7684 Spring Boot\u521b\u5efa\u7684\u662f AnnotationConfigApplicationContext \u56e0\u4e3aAnnotationConfigApplicationContext\u662f\u6bd4\u8f83\u91cd\u8981\u7684\uff0c\u5e76\u4e14AnnotationConfigApplicationContext\u548cClassPathXmlApplicationContext\u5927\u90e8\u5206\u5e95\u5c42\u90fd\u662f\u5171\u540c\u7684\uff0c\u540e\u7eed\u8bfe\u7a0b\u6211\u4eec\u4f1a\u7740\u91cd\u5c06AnnotationConfigApplicationContext\u7684\u5e95\u5c42\u5b9e\u73b0\uff0c\u5bf9\u4e8eClassPathXmlApplicationContext\uff0c\u540c\u5b66\u4eec\u53ef\u4ee5\u5728\u8bfe\u7a0b\u7ed3\u675f\u540e\u4f5c\u4e3a\u4f5c\u4e1a\uff0c\u4e1a\u4f59\u65f6\u95f4\u770b\u770b\u76f8\u5173\u6e90\u7801\u5373\u53ef\u3002 Spring\u4e2d\u662f\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff1f \u5176\u5b9e\u4e0d\u7ba1\u662fAnnotationConfigApplicationContext\u8fd8\u662fClassPathXmlApplicationContext\uff0c\u76ee\u524d\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u7b80\u5355\u7684\u5c06\u5b83\u4eec\u7406\u89e3\u4e3a\u5c31\u662f\u7528\u6765\u521b\u5efaJava\u5bf9\u8c61\u7684\uff0c\u6bd4\u5982\u8c03\u7528getBean()\u5c31\u4f1a\u53bb\u521b\u5efa\u5bf9\u8c61\uff08\u6b64\u5904\u4e0d\u4e25\u8c28\uff0cgetBean\u53ef\u80fd\u4e5f\u4e0d\u4f1a\u53bb\u521b\u5efa\u5bf9\u8c61\uff0c\u540e\u7eed\u8bfe\u7a0b\u8be6\u89e3\uff09\u3002 \u200b \u5728Java\u8bed\u8a00\u4e2d\uff0c\u80af\u5b9a\u662f\u6839\u636e\u67d0\u4e2a\u7c7b\u6765\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u7684\u3002\u6211\u4eec\u5728\u770b\u4e00\u4e0b\u5b9e\u4f8b\u4ee3\u7801\uff1a 1 2 3 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); UserService userService = ( UserService ) context . getBean ( \"userService\" ); userService . test (); \u5f53\u6211\u4eec\u8c03\u7528context.getBean(\"userService\")\u65f6\uff0c\u5c31\u4f1a\u53bb\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662fgetBean\u65b9\u6cd5\u5185\u90e8\u600e\u4e48\u77e5\u9053\"userService\"\u5bf9\u5e94\u7684\u662fUserService\u7c7b\u5462\uff1f \u200b \u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5206\u6790\u51fa\u6765\uff0c\u5728\u8c03\u7528AnnotationConfigApplicationContext\u7684\u6784\u9020\u65b9\u6cd5\u65f6\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u884c\u4ee3\u7801\uff0c\u4f1a\u53bb\u505a\u4e00\u4e9b\u4e8b\u60c5\uff1a \u89e3\u6790AppConfig.class\uff0c\u5f97\u5230\u626b\u63cf\u8def\u5f84 \u904d\u5386\u626b\u63cf\u8def\u5f84\u4e0b\u7684\u6240\u6709Java\u7c7b\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u7c7b\u4e0a\u5b58\u5728@Component\u3001@Service\u7b49\u6ce8\u89e3\uff0c\u90a3\u4e48Spring\u5c31\u628a\u8fd9\u4e2a\u7c7b\u8bb0\u5f55\u4e0b\u6765\uff0c\u5b58\u5728\u4e00\u4e2aMap\u4e2d\uff0c\u6bd4\u5982Map \u3002\uff08 \u5b9e\u9645\u4e0a\uff0cSpring\u6e90\u7801\u4e2d\u786e\u5b9e\u5b58\u5728\u7c7b\u4f3c\u7684\u8fd9\u4e48\u4e00\u4e2aMap\uff0c\u53eb\u505aBeanDefinitionMap\uff0c\u540e\u7eed\u8bfe\u7a0b\u4f1a\u8bb2\u5230 \uff09 Spring\u4f1a\u6839\u636e\u67d0\u4e2a\u89c4\u5219\u751f\u6210\u5f53\u524d\u7c7b\u5bf9\u5e94\u7684beanName\uff0c\u4f5c\u4e3akey\u5b58\u5165Map\uff0c\u5f53\u524d\u7c7b\u4f5c\u4e3avalue \u8fd9\u6837\uff0c\u4f46\u8c03\u7528context.getBean(\"userService\")\u65f6\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\"userService\"\u627e\u5230UserService\u7c7b\uff0c\u4ece\u800c\u5c31\u53ef\u4ee5\u53bb\u521b\u5efa\u5bf9\u8c61\u4e86\u3002 \u200b Bean\u7684\u521b\u5efa\u8fc7\u7a0b \u90a3\u4e48Spring\u5230\u5e95\u662f\u5982\u4f55\u6765\u521b\u5efa\u4e00\u4e2aBean\u7684\u5462\uff0c\u8fd9\u4e2a\u5c31\u662fBean\u521b\u5efa\u7684\u751f\u547d\u5468\u671f\uff0c\u5927\u81f4\u8fc7\u7a0b\u5982\u4e0b \u5229\u7528\u8be5\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6765\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff08\u4f46\u662f\u5982\u4f55\u4e00\u4e2a\u7c7b\u4e2d\u6709\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u5219\u4f1a\u8fdb\u884c\u9009\u62e9\uff0c\u8fd9\u4e2a\u53eb\u505a \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \uff09 \u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u4e2d\u662f\u5426\u5b58\u5728\u88ab@Autowired\u6ce8\u89e3\u4e86\u7684\u5c5e\u6027\uff0c\u628a\u8fd9\u4e9b\u5c5e\u6027\u627e\u51fa\u6765\u5e76\u7531Spring\u8fdb\u884c\u8d4b\u503c\uff08 \u4f9d\u8d56\u6ce8\u5165 \uff09 \u4f9d\u8d56\u6ce8\u5165\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86BeanNameAware\u63a5\u53e3\u3001BeanClassLoaderAware\u63a5\u53e3\u3001BeanFactoryAware\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\uff0c\u5c31\u8868\u793a\u5f53\u524d\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u8be5\u63a5\u53e3\u4e2d\u6240\u5b9a\u4e49\u7684setBeanName()\u3001setBeanClassLoader()\u3001setBeanFactory()\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\u5e76\u4f20\u5165\u76f8\u5e94\u7684\u53c2\u6570\uff08 Aware\u56de\u8c03 \uff09 Aware\u56de\u8c03\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u65b9\u6cd5\u88ab@PostConstruct\u6ce8\u89e3\u4e86\uff0c\u5982\u679c\u5b58\u5728\uff0cSpring\u4f1a\u8c03\u7528\u5f53\u524d\u5bf9\u8c61\u7684\u6b64\u65b9\u6cd5\uff08 \u521d\u59cb\u5316\u524d \uff09 \u7d27\u63a5\u7740\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86InitializingBean\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\uff0c\u5c31\u8868\u793a\u5f53\u524d\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u8be5\u63a5\u53e3\u4e2d\u7684afterPropertiesSet()\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u8c03\u7528\u5f53\u524d\u5bf9\u8c61\u4e2d\u7684afterPropertiesSet()\u65b9\u6cd5\uff08 \u521d\u59cb\u5316 \uff09 \u6700\u540e\uff0cSpring\u4f1a\u5224\u65ad\u5f53\u524d\u5bf9\u8c61\u9700\u4e0d\u9700\u8981\u8fdb\u884cAOP\uff0c\u5982\u679c\u4e0d\u9700\u8981\u90a3\u4e48Bean\u5c31\u521b\u5efa\u5b8c\u4e86\uff0c\u5982\u679c\u9700\u8981\u8fdb\u884cAOP\uff0c\u5219\u4f1a\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\u5e76\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u505a\u4e3aBean\uff08 \u521d\u59cb\u5316\u540e \uff09 \u901a\u8fc7\u6700\u540e\u4e00\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53Spring\u6839\u636eUserService\u7c7b\u6765\u521b\u5efa\u4e00\u4e2aBean\u65f6\uff1a \u5982\u679c\u4e0d\u7528\u8fdb\u884cAOP\uff0c\u90a3\u4e48Bean\u5c31\u662fUserService\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6240\u5f97\u5230\u7684\u5bf9\u8c61\u3002 \u5982\u679c\u9700\u8981\u8fdb\u884cAOP\uff0c\u90a3\u4e48Bean\u5c31\u662fUserService\u7684\u4ee3\u7406\u7c7b\u6240\u5b9e\u4f8b\u5316\u5f97\u5230\u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u662fUserService\u672c\u8eab\u6240\u5f97\u5230\u7684\u5bf9\u8c61\u3002 Bean\u5bf9\u8c61\u521b\u5efa\u51fa\u6765\u540e\uff1a \u5982\u679c\u5f53\u524dBean\u662f\u5355\u4f8bBean\uff0c\u90a3\u4e48\u4f1a\u628a\u8be5Bean\u5bf9\u8c61\u5b58\u5165\u4e00\u4e2aMap \uff0cMap\u7684key\u4e3abeanName\uff0cvalue\u4e3aBean\u5bf9\u8c61\u3002\u8fd9\u6837\u4e0b\u6b21getBean\u65f6\u5c31\u53ef\u4ee5\u76f4\u63a5\u4eceMap\u4e2d\u62ff\u5230\u5bf9\u5e94\u7684Bean\u5bf9\u8c61\u4e86\u3002\uff08\u5b9e\u9645\u4e0a\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u8fd9\u4e2aMap\u5c31\u662f \u5355\u4f8b\u6c60 \uff09 \u5982\u679c\u5f53\u524dBean\u662f\u539f\u578bBean\uff0c\u90a3\u4e48\u540e\u7eed\u6ca1\u6709\u5176\u4ed6\u52a8\u4f5c\uff0c\u4e0d\u4f1a\u5b58\u5165\u4e00\u4e2aMap\uff0c\u4e0b\u6b21getBean\u65f6\u4f1a\u518d\u6b21\u6267\u884c\u4e0a\u8ff0\u521b\u5efa\u8fc7\u7a0b\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u7684Bean\u5bf9\u8c61\u3002 \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 Spring\u5728\u57fa\u4e8e\u67d0\u4e2a\u7c7b\u751f\u6210Bean\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5229\u7528\u8be5\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6765\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662f \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u4f1a\u4f7f\u7528\u54ea\u4e2a\u5462\uff1f \u200b Spring\u7684\u5224\u65ad\u903b\u8f91\u5982\u4e0b\uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u53ea\u5b58\u5728\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u4e0d\u7ba1\u8be5\u6784\u9020\u65b9\u6cd5\u662f\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u8fd8\u662f\u6709\u53c2\u6784\u9020\u65b9\u6cd5\uff0cSpring\u90fd\u4f1a\u7528\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5 \u8fd9\u4e9b\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u5b58\u5728\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48Spring\u5c31\u4f1a\u7528\u8fd9\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5 \u8fd9\u4e9b\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u4e0d\u5b58\u5728\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48Spring\u5c31\u4f1a \u62a5\u9519 Spring\u7684\u8bbe\u8ba1\u601d\u60f3\u662f\u8fd9\u6837\u7684\uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u6ca1\u5f97\u9009\u62e9\uff0c\u53ea\u80fd\u7528\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u4e0d\u77e5\u9053\u5982\u4f55\u9009\u62e9\uff0c\u5c31\u4f1a\u770b\u662f\u5426\u6709\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u56e0\u4e3a\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u672c\u8eab\u8868\u793a\u4e86\u4e00\u79cd\u9ed8\u8ba4\u7684\u610f\u4e49 \u4e0d\u8fc7\u5982\u679c\u67d0\u4e2a\u6784\u9020\u65b9\u6cd5\u4e0a\u52a0\u4e86@Autowired\u6ce8\u89e3\uff0c\u90a3\u5c31\u8868\u793a\u7a0b\u5e8f\u5458\u544a\u8bc9Spring\u5c31\u7528\u8fd9\u4e2a\u52a0\u4e86\u6ce8\u89e3\u7684\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u7528\u8fd9\u4e2a\u52a0\u4e86@Autowired\u6ce8\u89e3\u6784\u9020\u65b9\u6cd5\u4e86 \u9700\u8981\u91cd\u89c6\u7684\u662f\uff0c\u5982\u679cSpring\u9009\u62e9\u4e86\u4e00\u4e2a\u6709\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0cSpring\u5728\u8c03\u7528\u8fd9\u4e2a\u6709\u53c2\u6784\u9020\u65b9\u6cd5\u65f6\uff0c\u9700\u8981\u4f20\u5165\u53c2\u6570\uff0c\u90a3\u8fd9\u4e2a\u53c2\u6570\u662f\u600e\u4e48\u6765\u7684\u5462\uff1f \u200b Spring\u4f1a\u6839\u636e\u5165\u53c2\u7684\u7c7b\u578b\u548c\u5165\u53c2\u7684\u540d\u5b57\u53bbSpring\u4e2d\u627eBean\u5bf9\u8c61\uff08\u4ee5\u5355\u4f8bBean\u4e3a\u4f8b\uff0cSpring\u4f1a\u4ece\u5355\u4f8b\u6c60\u90a3\u4e2aMap\u4e2d\u53bb\u627e\uff09\uff1a \u5148\u6839\u636e\u5165\u53c2\u7c7b\u578b\u627e\uff0c\u5982\u679c\u53ea\u627e\u5230\u4e00\u4e2a\uff0c\u90a3\u5c31\u76f4\u63a5\u7528\u6765\u4f5c\u4e3a\u5165\u53c2 \u5982\u679c\u6839\u636e\u7c7b\u578b\u627e\u5230\u591a\u4e2a\uff0c\u5219\u518d\u6839\u636e\u5165\u53c2\u540d\u5b57\u6765\u786e\u5b9a\u552f\u4e00\u4e00\u4e2a \u6700\u7ec8\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5219\u4f1a\u62a5\u9519\uff0c\u65e0\u6cd5\u521b\u5efa\u5f53\u524dBean\u5bf9\u8c61 \u786e\u5b9a\u7528\u54ea\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u786e\u5b9a\u5165\u53c2\u7684Bean\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u53eb\u505a \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \u3002 \u200b AOP\u5927\u81f4\u6d41\u7a0b AOP\u5c31\u662f\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\uff0c\u5728\u521b\u5efa\u4e00\u4e2aBean\u7684\u8fc7\u7a0b\u4e2d\uff0cSpring\u5728\u6700\u540e\u4e00\u6b65\u4f1a\u53bb\u5224\u65ad\u5f53\u524d\u6b63\u5728\u521b\u5efa\u7684\u8fd9\u4e2aBean\u662f\u4e0d\u662f\u9700\u8981\u8fdb\u884cAOP\uff0c\u5982\u679c\u9700\u8981\u5219\u4f1a\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\u3002 \u200b \u5982\u4f55\u5224\u65ad\u5f53\u524dBean\u5bf9\u8c61\u9700\u4e0d\u9700\u8981\u8fdb\u884cAOP: \u627e\u51fa\u6240\u6709\u7684\u5207\u9762Bean \u904d\u5386\u5207\u9762\u4e2d\u7684\u6bcf\u4e2a\u65b9\u6cd5\uff0c\u770b\u662f\u5426\u5199\u4e86@Before\u3001@After\u7b49\u6ce8\u89e3 \u5982\u679c\u5199\u4e86\uff0c\u5219\u5224\u65ad\u6240\u5bf9\u5e94\u7684Pointcut\u662f\u5426\u548c\u5f53\u524dBean\u5bf9\u8c61\u7684\u7c7b\u662f\u5426\u5339\u914d \u5982\u679c\u5339\u914d\u5219\u8868\u793a\u5f53\u524dBean\u5bf9\u8c61\u6709\u5339\u914d\u7684\u7684Pointcut\uff0c\u8868\u793a\u9700\u8981\u8fdb\u884cAOP \u5229\u7528cglib\u8fdb\u884cAOP\u7684\u5927\u81f4\u6d41\u7a0b\uff1a \u751f\u6210\u4ee3\u7406\u7c7bUserServiceProxy\uff0c\u4ee3\u7406\u7c7b\u7ee7\u627fUserService \u4ee3\u7406\u7c7b\u4e2d\u91cd\u5199\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982UserService\u4e2d\u7684test()\u65b9\u6cd5 \u4ee3\u7406\u7c7b\u4e2d\u8fd8\u4f1a\u6709\u4e00\u4e2atarget\u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u7684\u503c\u4e3a\u88ab\u4ee3\u7406\u5bf9\u8c61\uff08\u4e5f\u5c31\u662f\u901a\u8fc7UserService\u7c7b\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316\u51fa\u6765\u7684\u5bf9\u8c61\uff0c\u8fdb\u884c\u4e86\u4f9d\u8d56\u6ce8\u5165\u3001\u521d\u59cb\u5316\u7b49\u6b65\u9aa4\u7684\u5bf9\u8c61\uff09 \u4ee3\u7406\u7c7b\u4e2d\u7684test()\u65b9\u6cd5\u88ab\u6267\u884c\u65f6\u7684\u903b\u8f91\u5982\u4e0b\uff1a \u6267\u884c\u5207\u9762\u903b\u8f91\uff08@Before\uff09 \u8c03\u7528target.test() \u5f53\u6211\u4eec\u4eceSpring\u5bb9\u5668\u5f97\u5230UserService\u7684Bean\u5bf9\u8c61\u65f6\uff0c\u62ff\u5230\u7684\u5c31\u662fUserServiceProxy\u6240\u751f\u6210\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b UserService\u4ee3\u7406\u5bf9\u8c61.test()--->\u6267\u884c\u5207\u9762\u903b\u8f91--->target.test()\uff0c\u6ce8\u610ftarget\u5bf9\u8c61\u4e0d\u662f\u4ee3\u7406\u5bf9\u8c61\uff0c\u800c\u662f\u88ab\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b Spring\u4e8b\u52a1 \u5f53\u6211\u4eec\u5728\u67d0\u4e2a\u65b9\u6cd5\u4e0a\u52a0\u4e86@Transactional\u6ce8\u89e3\u540e\uff0c\u5c31\u8868\u793a\u8be5\u65b9\u6cd5\u5728\u8c03\u7528\u65f6\u4f1a\u5f00\u542fSpring\u4e8b\u52a1\uff0c\u800c\u8fd9\u4e2a\u65b9\u6cd5\u6240\u5728\u7684\u7c7b\u6240\u5bf9\u5e94\u7684Bean\u5bf9\u8c61\u4f1a\u662f\u8be5\u7c7b\u7684\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b Spring\u4e8b\u52a1\u7684\u4ee3\u7406\u5bf9\u8c61\u6267\u884c\u67d0\u4e2a\u65b9\u6cd5\u65f6\u7684\u6b65\u9aa4\uff1a \u5224\u65ad\u5f53\u524d\u6267\u884c\u7684\u65b9\u6cd5\u662f\u5426\u5b58\u5728@Transactional\u6ce8\u89e3 \u5982\u679c\u5b58\u5728\uff0c\u5219\u5229\u7528\u4e8b\u52a1\u7ba1\u7406\u5668\uff08TransactionMananger\uff09\u65b0\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5 \u4fee\u6539\u6570\u636e\u5e93\u8fde\u63a5\u7684autocommit\u4e3afalse \u6267\u884ctarget.test()\uff0c\u6267\u884c\u7a0b\u5e8f\u5458\u6240\u5199\u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u6267\u884csql \u6267\u884c\u5b8c\u4e86\u4e4b\u540e\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u5f02\u5e38\uff0c\u5219\u63d0\u4ea4\uff0c\u5426\u5219\u56de\u6eda Spring\u4e8b\u52a1\u662f\u5426\u4f1a\u5931\u6548\u7684\u5224\u65ad\u6807\u51c6\uff1a \u67d0\u4e2a\u52a0\u4e86@Transactional\u6ce8\u89e3\u7684\u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\uff0c\u8981\u5224\u65ad\u5230\u5e95\u662f\u4e0d\u662f\u76f4\u63a5\u88ab\u4ee3\u7406\u5bf9\u8c61\u8c03\u7528\u7684\uff0c\u5982\u679c\u662f\u5219\u4e8b\u52a1\u4f1a\u751f\u6548\uff0c\u5982\u679c\u4e0d\u662f\u5219\u5931\u6548\u3002","title":"1.Spring\u6838\u5fc3\u77e5\u8bc6\u70b9"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/01Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/#spring","text":"\u5176\u5b9e\u4e0d\u7ba1\u662fAnnotationConfigApplicationContext\u8fd8\u662fClassPathXmlApplicationContext\uff0c\u76ee\u524d\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u7b80\u5355\u7684\u5c06\u5b83\u4eec\u7406\u89e3\u4e3a\u5c31\u662f\u7528\u6765\u521b\u5efaJava\u5bf9\u8c61\u7684\uff0c\u6bd4\u5982\u8c03\u7528getBean()\u5c31\u4f1a\u53bb\u521b\u5efa\u5bf9\u8c61\uff08\u6b64\u5904\u4e0d\u4e25\u8c28\uff0cgetBean\u53ef\u80fd\u4e5f\u4e0d\u4f1a\u53bb\u521b\u5efa\u5bf9\u8c61\uff0c\u540e\u7eed\u8bfe\u7a0b\u8be6\u89e3\uff09\u3002 \u200b \u5728Java\u8bed\u8a00\u4e2d\uff0c\u80af\u5b9a\u662f\u6839\u636e\u67d0\u4e2a\u7c7b\u6765\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u7684\u3002\u6211\u4eec\u5728\u770b\u4e00\u4e0b\u5b9e\u4f8b\u4ee3\u7801\uff1a 1 2 3 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); UserService userService = ( UserService ) context . getBean ( \"userService\" ); userService . test (); \u5f53\u6211\u4eec\u8c03\u7528context.getBean(\"userService\")\u65f6\uff0c\u5c31\u4f1a\u53bb\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662fgetBean\u65b9\u6cd5\u5185\u90e8\u600e\u4e48\u77e5\u9053\"userService\"\u5bf9\u5e94\u7684\u662fUserService\u7c7b\u5462\uff1f \u200b \u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5206\u6790\u51fa\u6765\uff0c\u5728\u8c03\u7528AnnotationConfigApplicationContext\u7684\u6784\u9020\u65b9\u6cd5\u65f6\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u884c\u4ee3\u7801\uff0c\u4f1a\u53bb\u505a\u4e00\u4e9b\u4e8b\u60c5\uff1a \u89e3\u6790AppConfig.class\uff0c\u5f97\u5230\u626b\u63cf\u8def\u5f84 \u904d\u5386\u626b\u63cf\u8def\u5f84\u4e0b\u7684\u6240\u6709Java\u7c7b\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u7c7b\u4e0a\u5b58\u5728@Component\u3001@Service\u7b49\u6ce8\u89e3\uff0c\u90a3\u4e48Spring\u5c31\u628a\u8fd9\u4e2a\u7c7b\u8bb0\u5f55\u4e0b\u6765\uff0c\u5b58\u5728\u4e00\u4e2aMap\u4e2d\uff0c\u6bd4\u5982Map \u3002\uff08 \u5b9e\u9645\u4e0a\uff0cSpring\u6e90\u7801\u4e2d\u786e\u5b9e\u5b58\u5728\u7c7b\u4f3c\u7684\u8fd9\u4e48\u4e00\u4e2aMap\uff0c\u53eb\u505aBeanDefinitionMap\uff0c\u540e\u7eed\u8bfe\u7a0b\u4f1a\u8bb2\u5230 \uff09 Spring\u4f1a\u6839\u636e\u67d0\u4e2a\u89c4\u5219\u751f\u6210\u5f53\u524d\u7c7b\u5bf9\u5e94\u7684beanName\uff0c\u4f5c\u4e3akey\u5b58\u5165Map\uff0c\u5f53\u524d\u7c7b\u4f5c\u4e3avalue \u8fd9\u6837\uff0c\u4f46\u8c03\u7528context.getBean(\"userService\")\u65f6\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\"userService\"\u627e\u5230UserService\u7c7b\uff0c\u4ece\u800c\u5c31\u53ef\u4ee5\u53bb\u521b\u5efa\u5bf9\u8c61\u4e86\u3002 \u200b","title":"Spring\u4e2d\u662f\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff1f"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/01Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/#bean","text":"\u90a3\u4e48Spring\u5230\u5e95\u662f\u5982\u4f55\u6765\u521b\u5efa\u4e00\u4e2aBean\u7684\u5462\uff0c\u8fd9\u4e2a\u5c31\u662fBean\u521b\u5efa\u7684\u751f\u547d\u5468\u671f\uff0c\u5927\u81f4\u8fc7\u7a0b\u5982\u4e0b \u5229\u7528\u8be5\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6765\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff08\u4f46\u662f\u5982\u4f55\u4e00\u4e2a\u7c7b\u4e2d\u6709\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u5219\u4f1a\u8fdb\u884c\u9009\u62e9\uff0c\u8fd9\u4e2a\u53eb\u505a \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \uff09 \u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u4e2d\u662f\u5426\u5b58\u5728\u88ab@Autowired\u6ce8\u89e3\u4e86\u7684\u5c5e\u6027\uff0c\u628a\u8fd9\u4e9b\u5c5e\u6027\u627e\u51fa\u6765\u5e76\u7531Spring\u8fdb\u884c\u8d4b\u503c\uff08 \u4f9d\u8d56\u6ce8\u5165 \uff09 \u4f9d\u8d56\u6ce8\u5165\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86BeanNameAware\u63a5\u53e3\u3001BeanClassLoaderAware\u63a5\u53e3\u3001BeanFactoryAware\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\uff0c\u5c31\u8868\u793a\u5f53\u524d\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u8be5\u63a5\u53e3\u4e2d\u6240\u5b9a\u4e49\u7684setBeanName()\u3001setBeanClassLoader()\u3001setBeanFactory()\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\u5e76\u4f20\u5165\u76f8\u5e94\u7684\u53c2\u6570\uff08 Aware\u56de\u8c03 \uff09 Aware\u56de\u8c03\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u65b9\u6cd5\u88ab@PostConstruct\u6ce8\u89e3\u4e86\uff0c\u5982\u679c\u5b58\u5728\uff0cSpring\u4f1a\u8c03\u7528\u5f53\u524d\u5bf9\u8c61\u7684\u6b64\u65b9\u6cd5\uff08 \u521d\u59cb\u5316\u524d \uff09 \u7d27\u63a5\u7740\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86InitializingBean\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\uff0c\u5c31\u8868\u793a\u5f53\u524d\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u8be5\u63a5\u53e3\u4e2d\u7684afterPropertiesSet()\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u8c03\u7528\u5f53\u524d\u5bf9\u8c61\u4e2d\u7684afterPropertiesSet()\u65b9\u6cd5\uff08 \u521d\u59cb\u5316 \uff09 \u6700\u540e\uff0cSpring\u4f1a\u5224\u65ad\u5f53\u524d\u5bf9\u8c61\u9700\u4e0d\u9700\u8981\u8fdb\u884cAOP\uff0c\u5982\u679c\u4e0d\u9700\u8981\u90a3\u4e48Bean\u5c31\u521b\u5efa\u5b8c\u4e86\uff0c\u5982\u679c\u9700\u8981\u8fdb\u884cAOP\uff0c\u5219\u4f1a\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\u5e76\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u505a\u4e3aBean\uff08 \u521d\u59cb\u5316\u540e \uff09 \u901a\u8fc7\u6700\u540e\u4e00\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53Spring\u6839\u636eUserService\u7c7b\u6765\u521b\u5efa\u4e00\u4e2aBean\u65f6\uff1a \u5982\u679c\u4e0d\u7528\u8fdb\u884cAOP\uff0c\u90a3\u4e48Bean\u5c31\u662fUserService\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6240\u5f97\u5230\u7684\u5bf9\u8c61\u3002 \u5982\u679c\u9700\u8981\u8fdb\u884cAOP\uff0c\u90a3\u4e48Bean\u5c31\u662fUserService\u7684\u4ee3\u7406\u7c7b\u6240\u5b9e\u4f8b\u5316\u5f97\u5230\u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u662fUserService\u672c\u8eab\u6240\u5f97\u5230\u7684\u5bf9\u8c61\u3002 Bean\u5bf9\u8c61\u521b\u5efa\u51fa\u6765\u540e\uff1a \u5982\u679c\u5f53\u524dBean\u662f\u5355\u4f8bBean\uff0c\u90a3\u4e48\u4f1a\u628a\u8be5Bean\u5bf9\u8c61\u5b58\u5165\u4e00\u4e2aMap \uff0cMap\u7684key\u4e3abeanName\uff0cvalue\u4e3aBean\u5bf9\u8c61\u3002\u8fd9\u6837\u4e0b\u6b21getBean\u65f6\u5c31\u53ef\u4ee5\u76f4\u63a5\u4eceMap\u4e2d\u62ff\u5230\u5bf9\u5e94\u7684Bean\u5bf9\u8c61\u4e86\u3002\uff08\u5b9e\u9645\u4e0a\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u8fd9\u4e2aMap\u5c31\u662f \u5355\u4f8b\u6c60 \uff09 \u5982\u679c\u5f53\u524dBean\u662f\u539f\u578bBean\uff0c\u90a3\u4e48\u540e\u7eed\u6ca1\u6709\u5176\u4ed6\u52a8\u4f5c\uff0c\u4e0d\u4f1a\u5b58\u5165\u4e00\u4e2aMap\uff0c\u4e0b\u6b21getBean\u65f6\u4f1a\u518d\u6b21\u6267\u884c\u4e0a\u8ff0\u521b\u5efa\u8fc7\u7a0b\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u7684Bean\u5bf9\u8c61\u3002","title":"Bean\u7684\u521b\u5efa\u8fc7\u7a0b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/01Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/#_1","text":"Spring\u5728\u57fa\u4e8e\u67d0\u4e2a\u7c7b\u751f\u6210Bean\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5229\u7528\u8be5\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6765\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662f \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u4f1a\u4f7f\u7528\u54ea\u4e2a\u5462\uff1f \u200b Spring\u7684\u5224\u65ad\u903b\u8f91\u5982\u4e0b\uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u53ea\u5b58\u5728\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u4e0d\u7ba1\u8be5\u6784\u9020\u65b9\u6cd5\u662f\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u8fd8\u662f\u6709\u53c2\u6784\u9020\u65b9\u6cd5\uff0cSpring\u90fd\u4f1a\u7528\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5 \u8fd9\u4e9b\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u5b58\u5728\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48Spring\u5c31\u4f1a\u7528\u8fd9\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5 \u8fd9\u4e9b\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u4e0d\u5b58\u5728\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48Spring\u5c31\u4f1a \u62a5\u9519 Spring\u7684\u8bbe\u8ba1\u601d\u60f3\u662f\u8fd9\u6837\u7684\uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u6ca1\u5f97\u9009\u62e9\uff0c\u53ea\u80fd\u7528\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u4e0d\u77e5\u9053\u5982\u4f55\u9009\u62e9\uff0c\u5c31\u4f1a\u770b\u662f\u5426\u6709\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u56e0\u4e3a\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u672c\u8eab\u8868\u793a\u4e86\u4e00\u79cd\u9ed8\u8ba4\u7684\u610f\u4e49 \u4e0d\u8fc7\u5982\u679c\u67d0\u4e2a\u6784\u9020\u65b9\u6cd5\u4e0a\u52a0\u4e86@Autowired\u6ce8\u89e3\uff0c\u90a3\u5c31\u8868\u793a\u7a0b\u5e8f\u5458\u544a\u8bc9Spring\u5c31\u7528\u8fd9\u4e2a\u52a0\u4e86\u6ce8\u89e3\u7684\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u7528\u8fd9\u4e2a\u52a0\u4e86@Autowired\u6ce8\u89e3\u6784\u9020\u65b9\u6cd5\u4e86 \u9700\u8981\u91cd\u89c6\u7684\u662f\uff0c\u5982\u679cSpring\u9009\u62e9\u4e86\u4e00\u4e2a\u6709\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0cSpring\u5728\u8c03\u7528\u8fd9\u4e2a\u6709\u53c2\u6784\u9020\u65b9\u6cd5\u65f6\uff0c\u9700\u8981\u4f20\u5165\u53c2\u6570\uff0c\u90a3\u8fd9\u4e2a\u53c2\u6570\u662f\u600e\u4e48\u6765\u7684\u5462\uff1f \u200b Spring\u4f1a\u6839\u636e\u5165\u53c2\u7684\u7c7b\u578b\u548c\u5165\u53c2\u7684\u540d\u5b57\u53bbSpring\u4e2d\u627eBean\u5bf9\u8c61\uff08\u4ee5\u5355\u4f8bBean\u4e3a\u4f8b\uff0cSpring\u4f1a\u4ece\u5355\u4f8b\u6c60\u90a3\u4e2aMap\u4e2d\u53bb\u627e\uff09\uff1a \u5148\u6839\u636e\u5165\u53c2\u7c7b\u578b\u627e\uff0c\u5982\u679c\u53ea\u627e\u5230\u4e00\u4e2a\uff0c\u90a3\u5c31\u76f4\u63a5\u7528\u6765\u4f5c\u4e3a\u5165\u53c2 \u5982\u679c\u6839\u636e\u7c7b\u578b\u627e\u5230\u591a\u4e2a\uff0c\u5219\u518d\u6839\u636e\u5165\u53c2\u540d\u5b57\u6765\u786e\u5b9a\u552f\u4e00\u4e00\u4e2a \u6700\u7ec8\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5219\u4f1a\u62a5\u9519\uff0c\u65e0\u6cd5\u521b\u5efa\u5f53\u524dBean\u5bf9\u8c61 \u786e\u5b9a\u7528\u54ea\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u786e\u5b9a\u5165\u53c2\u7684Bean\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u53eb\u505a \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \u3002 \u200b","title":"\u63a8\u65ad\u6784\u9020\u65b9\u6cd5"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/01Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/#aop","text":"AOP\u5c31\u662f\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\uff0c\u5728\u521b\u5efa\u4e00\u4e2aBean\u7684\u8fc7\u7a0b\u4e2d\uff0cSpring\u5728\u6700\u540e\u4e00\u6b65\u4f1a\u53bb\u5224\u65ad\u5f53\u524d\u6b63\u5728\u521b\u5efa\u7684\u8fd9\u4e2aBean\u662f\u4e0d\u662f\u9700\u8981\u8fdb\u884cAOP\uff0c\u5982\u679c\u9700\u8981\u5219\u4f1a\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\u3002 \u200b \u5982\u4f55\u5224\u65ad\u5f53\u524dBean\u5bf9\u8c61\u9700\u4e0d\u9700\u8981\u8fdb\u884cAOP: \u627e\u51fa\u6240\u6709\u7684\u5207\u9762Bean \u904d\u5386\u5207\u9762\u4e2d\u7684\u6bcf\u4e2a\u65b9\u6cd5\uff0c\u770b\u662f\u5426\u5199\u4e86@Before\u3001@After\u7b49\u6ce8\u89e3 \u5982\u679c\u5199\u4e86\uff0c\u5219\u5224\u65ad\u6240\u5bf9\u5e94\u7684Pointcut\u662f\u5426\u548c\u5f53\u524dBean\u5bf9\u8c61\u7684\u7c7b\u662f\u5426\u5339\u914d \u5982\u679c\u5339\u914d\u5219\u8868\u793a\u5f53\u524dBean\u5bf9\u8c61\u6709\u5339\u914d\u7684\u7684Pointcut\uff0c\u8868\u793a\u9700\u8981\u8fdb\u884cAOP \u5229\u7528cglib\u8fdb\u884cAOP\u7684\u5927\u81f4\u6d41\u7a0b\uff1a \u751f\u6210\u4ee3\u7406\u7c7bUserServiceProxy\uff0c\u4ee3\u7406\u7c7b\u7ee7\u627fUserService \u4ee3\u7406\u7c7b\u4e2d\u91cd\u5199\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982UserService\u4e2d\u7684test()\u65b9\u6cd5 \u4ee3\u7406\u7c7b\u4e2d\u8fd8\u4f1a\u6709\u4e00\u4e2atarget\u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u7684\u503c\u4e3a\u88ab\u4ee3\u7406\u5bf9\u8c61\uff08\u4e5f\u5c31\u662f\u901a\u8fc7UserService\u7c7b\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316\u51fa\u6765\u7684\u5bf9\u8c61\uff0c\u8fdb\u884c\u4e86\u4f9d\u8d56\u6ce8\u5165\u3001\u521d\u59cb\u5316\u7b49\u6b65\u9aa4\u7684\u5bf9\u8c61\uff09 \u4ee3\u7406\u7c7b\u4e2d\u7684test()\u65b9\u6cd5\u88ab\u6267\u884c\u65f6\u7684\u903b\u8f91\u5982\u4e0b\uff1a \u6267\u884c\u5207\u9762\u903b\u8f91\uff08@Before\uff09 \u8c03\u7528target.test() \u5f53\u6211\u4eec\u4eceSpring\u5bb9\u5668\u5f97\u5230UserService\u7684Bean\u5bf9\u8c61\u65f6\uff0c\u62ff\u5230\u7684\u5c31\u662fUserServiceProxy\u6240\u751f\u6210\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b UserService\u4ee3\u7406\u5bf9\u8c61.test()--->\u6267\u884c\u5207\u9762\u903b\u8f91--->target.test()\uff0c\u6ce8\u610ftarget\u5bf9\u8c61\u4e0d\u662f\u4ee3\u7406\u5bf9\u8c61\uff0c\u800c\u662f\u88ab\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b","title":"AOP\u5927\u81f4\u6d41\u7a0b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/01Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/#spring_1","text":"\u5f53\u6211\u4eec\u5728\u67d0\u4e2a\u65b9\u6cd5\u4e0a\u52a0\u4e86@Transactional\u6ce8\u89e3\u540e\uff0c\u5c31\u8868\u793a\u8be5\u65b9\u6cd5\u5728\u8c03\u7528\u65f6\u4f1a\u5f00\u542fSpring\u4e8b\u52a1\uff0c\u800c\u8fd9\u4e2a\u65b9\u6cd5\u6240\u5728\u7684\u7c7b\u6240\u5bf9\u5e94\u7684Bean\u5bf9\u8c61\u4f1a\u662f\u8be5\u7c7b\u7684\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b Spring\u4e8b\u52a1\u7684\u4ee3\u7406\u5bf9\u8c61\u6267\u884c\u67d0\u4e2a\u65b9\u6cd5\u65f6\u7684\u6b65\u9aa4\uff1a \u5224\u65ad\u5f53\u524d\u6267\u884c\u7684\u65b9\u6cd5\u662f\u5426\u5b58\u5728@Transactional\u6ce8\u89e3 \u5982\u679c\u5b58\u5728\uff0c\u5219\u5229\u7528\u4e8b\u52a1\u7ba1\u7406\u5668\uff08TransactionMananger\uff09\u65b0\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5 \u4fee\u6539\u6570\u636e\u5e93\u8fde\u63a5\u7684autocommit\u4e3afalse \u6267\u884ctarget.test()\uff0c\u6267\u884c\u7a0b\u5e8f\u5458\u6240\u5199\u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u6267\u884csql \u6267\u884c\u5b8c\u4e86\u4e4b\u540e\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u5f02\u5e38\uff0c\u5219\u63d0\u4ea4\uff0c\u5426\u5219\u56de\u6eda Spring\u4e8b\u52a1\u662f\u5426\u4f1a\u5931\u6548\u7684\u5224\u65ad\u6807\u51c6\uff1a \u67d0\u4e2a\u52a0\u4e86@Transactional\u6ce8\u89e3\u7684\u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\uff0c\u8981\u5224\u65ad\u5230\u5e95\u662f\u4e0d\u662f\u76f4\u63a5\u88ab\u4ee3\u7406\u5bf9\u8c61\u8c03\u7528\u7684\uff0c\u5982\u679c\u662f\u5219\u4e8b\u52a1\u4f1a\u751f\u6548\uff0c\u5982\u679c\u4e0d\u662f\u5219\u5931\u6548\u3002","title":"Spring\u4e8b\u52a1"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/02%E6%89%8B%E5%86%99%E6%A8%A1%E6%8B%9FSpring%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86/","text":"\u56e0\u4e3a\u662f\u624b\u5199\u6a21\u62dfSpring\u4ee3\u7801\uff0c\u6240\u4ee5\u6ca1\u6709\u7279\u6b8a\u7684\u7b14\u8bb0\uff0c\u8bf7\u76f4\u63a5\u770b\u89c6\u9891\uff0c\u5efa\u8bae\u540c\u5b66\u4eec\u62bd\u7a7a\u81ea\u5df1\u4e5f\u5199\u4e00\u4e2aSpring\u51fa\u6765\uff0c\u52a0\u6df1\u7406\u89e3\u3002 git clone\u5730\u5740\uff1a https://gitee.com/archguide/zhouyu-spring.git \u8bfe\u7a0b\u5185\u5bb9\uff1a \u901a\u8fc7\u624b\u5199\u6a21\u62df\uff0c\u4e86\u89e3Spring\u7684\u5e95\u5c42\u6e90\u7801\u542f\u52a8\u8fc7\u7a0b \u901a\u8fc7\u624b\u5199\u6a21\u62df\uff0c\u4e86\u89e3BeanDefinition\u3001BeanPostProcessor\u7684\u6982\u5ff5 \u901a\u8fc7\u624b\u5199\u6a21\u62df\uff0c\u4e86\u89e3Spring\u89e3\u6790\u914d\u7f6e\u7c7b\u7b49\u5e95\u5c42\u6e90\u7801\u5de5\u4f5c\u6d41\u7a0b \u901a\u8fc7\u624b\u5199\u6a21\u62df\uff0c\u4e86\u89e3\u4f9d\u8d56\u6ce8\u5165\uff0cAware\u56de\u8c03\u7b49\u5e95\u5c42\u6e90\u7801\u5de5\u4f5c\u6d41\u7a0b \u901a\u8fc7\u624b\u5199\u6a21\u62df\uff0c\u4e86\u89e3Spring AOP\u7684\u5e95\u5c42\u6e90\u7801\u5de5\u4f5c\u6d41\u7a0b","title":"2.\u624b\u5199\u6a21\u62dfSpring\u5e95\u5c42\u539f\u7406"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/","text":"\u524d\u9762\u4e24\u8282\u8bfe\uff0c\u6211\u4eec\u5927\u6982\u4e86\u89e3\u4e86Spring\u4e2d\u7684\u4e00\u4e9b\u6982\u5ff5\u548c\u5e95\u5c42\u5de5\u4f5c\u6d41\u7a0b\uff0c\u672c\u8282\u8bfe\u5f00\u59cb\u5c06\u771f\u6b63\u8bb2\u4e00\u4e9bSpring\u4e2d\u7684\u6982\u5ff5\u548c\u5de5\u4f5c\u6d41\u7a0b\u3002 \u672c\u8282\u8bfe\u7684\u5185\u5bb9\uff0c\u662f\u540e\u7eed\u770bSpring\u6e90\u7801\u6240\u5fc5\u5907\u7684\uff0c\u9632\u6b62\u540e\u7eed\u770b\u6e90\u7801\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9047\u5230\u4e0d\u4f1a\u7684\u6982\u5ff5\u5f97\u5355\u72ec\u8df3\u51fa\u6765\u5b66\u4e60\u3002 BeanDefinition BeanDefinition\u8868\u793aBean\u5b9a\u4e49\uff0cBeanDefinition\u4e2d\u5b58\u5728\u5f88\u591a\u5c5e\u6027\u7528\u6765\u63cf\u8ff0\u4e00\u4e2aBean\u7684\u7279\u70b9\u3002\u6bd4\u5982\uff1a \u25cfclass\uff0c\u8868\u793aBean\u7c7b\u578b \u25cfscope\uff0c\u8868\u793aBean\u4f5c\u7528\u57df\uff0c\u5355\u4f8b\u6216\u539f\u578b\u7b49 \u25cflazyInit\uff1a\u8868\u793aBean\u662f\u5426\u662f\u61d2\u52a0\u8f7d \u25cfinitMethodName\uff1a\u8868\u793aBean\u521d\u59cb\u5316\u65f6\u8981\u6267\u884c\u7684\u65b9\u6cd5 \u25cfdestroyMethodName\uff1a\u8868\u793aBean\u9500\u6bc1\u65f6\u8981\u6267\u884c\u7684\u65b9\u6cd5 \u25cf\u8fd8\u6709\u5f88\u591a... \u5728Spring\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u901a\u8fc7\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u6765\u5b9a\u4e49Bean\uff1a ' ' @Bean @Component(@Service,@Controller) \u8fd9\u4e9b\uff0c\u6211\u4eec\u53ef\u4ee5\u79f0\u4e4b\u7533\u660e\u5f0f\u5b9a\u4e49Bean\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u7f16\u7a0b\u5f0f\u5b9a\u4e49Bean\uff0c\u90a3\u5c31\u662f\u76f4\u63a5\u901a\u8fc7BeanDefinition\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); // \u751f\u6210\u4e00\u4e2aBeanDefinition\u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6ebeanClass\u4e3aUser.class\uff0c\u5e76\u6ce8\u518c\u5230ApplicationContext\u4e2d AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder . genericBeanDefinition (). getBeanDefinition (); beanDefinition . setBeanClass ( User . class ); context . registerBeanDefinition ( \"user\" , beanDefinition ); System . out . println ( context . getBean ( \"user\" )); \u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7BeanDefinition\u8bbe\u7f6e\u4e00\u4e2aBean\u7684\u5176\u4ed6\u5c5e\u6027 1 2 3 beanDefinition . setScope ( \"prototype\" ); // \u8bbe\u7f6e\u4f5c\u7528\u57df beanDefinition . setInitMethodName ( \"init\" ); // \u8bbe\u7f6e\u521d\u59cb\u5316\u65b9\u6cd5 beanDefinition . setLazyInit ( true ); // \u8bbe\u7f6e\u61d2\u52a0\u8f7d \u548c\u7533\u660e\u5f0f\u4e8b\u52a1\u3001\u7f16\u7a0b\u5f0f\u4e8b\u52a1\u7c7b\u4f3c\uff0c\u901a\u8fc7 \uff0c@Bean\uff0c@Component\u7b49\u7533\u660e\u5f0f\u65b9\u5f0f\u6240\u5b9a\u4e49\u7684Bean\uff0c\u6700\u7ec8\u90fd\u4f1a\u88abSpring\u89e3\u6790\u4e3a\u5bf9\u5e94\u7684BeanDefinition\u5bf9\u8c61\uff0c\u5e76\u653e\u5165Spring\u5bb9\u5668\u4e2d\u3002 BeanDefinitionReader \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u4ecb\u7ecd\u51e0\u79cd\u5728Spring\u6e90\u7801\u4e2d\u6240\u63d0\u4f9b\u7684BeanDefinition\u8bfb\u53d6\u5668\uff08BeanDefinitionReader\uff09\uff0c\u8fd9\u4e9bBeanDefinitionReader\u5728\u6211\u4eec\u4f7f\u7528Spring\u65f6\u7528\u5f97\u5c11\uff0c\u4f46\u5728Spring\u6e90\u7801\u4e2d\u7528\u5f97\u591a\uff0c\u76f8\u5f53\u4e8eSpring\u6e90\u7801\u7684\u57fa\u7840\u8bbe\u65bd\u3002 AnnotatedBeanDefinitionReader \u53ef\u4ee5\u76f4\u63a5\u628a\u67d0\u4e2a\u7c7b\u8f6c\u6362\u4e3aBeanDefinition\uff0c\u5e76\u4e14\u4f1a\u89e3\u6790\u8be5\u7c7b\u4e0a\u7684\u6ce8\u89e3\uff0c\u6bd4\u5982 1 2 3 4 5 6 7 8 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); AnnotatedBeanDefinitionReader annotatedBeanDefinitionReader = new AnnotatedBeanDefinitionReader ( context ); // \u5c06User.class\u89e3\u6790\u4e3aBeanDefinition annotatedBeanDefinitionReader . register ( User . class ); System . out . println ( context . getBean ( \"user\" )); \u6ce8\u610f\uff1a\u5b83\u80fd\u89e3\u6790\u7684\u6ce8\u89e3\u662f\uff1a@Conditional\uff0c@Scope\u3001@Lazy\u3001@Primary\u3001@DependsOn\u3001@Role\u3001@Description XmlBeanDefinitionReader \u53ef\u4ee5\u89e3\u6790 \u6807\u7b7e 1 2 3 4 5 6 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); XmlBeanDefinitionReader xmlBeanDefinitionReader = new XmlBeanDefinitionReader ( context ); int i = xmlBeanDefinitionReader . loadBeanDefinitions ( \"spring.xml\" ); System . out . println ( context . getBean ( \"user\" )); ClassPathBeanDefinitionScanner ClassPathBeanDefinitionScanner\u662f\u626b\u63cf\u5668\uff0c\u4f46\u662f\u5b83\u7684\u4f5c\u7528\u548cBeanDefinitionReader\u7c7b\u4f3c\uff0c\u5b83\u53ef\u4ee5\u8fdb\u884c\u626b\u63cf\uff0c\u626b\u63cf\u67d0\u4e2a\u5305\u8def\u5f84\uff0c\u5bf9\u626b\u63cf\u5230\u7684\u7c7b\u8fdb\u884c\u89e3\u6790\uff0c\u6bd4\u5982\uff0c\u626b\u63cf\u5230\u7684\u7c7b\u4e0a\u5982\u679c\u5b58\u5728@Component\u6ce8\u89e3\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u8fd9\u4e2a\u7c7b\u89e3\u6790\u4e3a\u4e00\u4e2aBeanDefinition\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext (); context . refresh (); ClassPathBeanDefinitionScanner scanner = new ClassPathBeanDefinitionScanner ( context ); scanner . scan ( \"com.zhouyu\" ); System . out . println ( context . getBean ( \"userService\" )); BeanFactory BeanFactory\u8868\u793aBean \u5de5\u5382 \uff0c\u6240\u4ee5\u5f88\u660e\u663e\uff0cBeanFactory\u4f1a\u8d1f\u8d23\u521b\u5efaBean\uff0c\u5e76\u4e14\u63d0\u4f9b\u83b7\u53d6Bean\u7684API\u3002 \u800cApplicationContext\u662fBeanFactory\u7684\u4e00\u79cd\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u662f\u8fd9\u4e48\u5b9a\u4e49\u7684\uff1a 1 2 3 4 5 public interface ApplicationContext extends EnvironmentCapable , ListableBeanFactory , HierarchicalBeanFactory , MessageSource , ApplicationEventPublisher , ResourcePatternResolver { ... } \u9996\u5148\uff0c\u5728Java\u4e2d\uff0c\u63a5\u53e3\u662f\u53ef\u4ee5\u591a\u7ee7\u627f\u7684\uff0c\u6211\u4eec\u53d1\u73b0ApplicationContext\u7ee7\u627f\u4e86ListableBeanFactory\u548cHierarchicalBeanFactory\uff0c\u800cListableBeanFactory\u548cHierarchicalBeanFactory\u90fd\u7ee7\u627f\u81f3BeanFactory\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3aApplicationContext\u7ee7\u627f\u4e86BeanFactory\uff0c\u76f8\u5f53\u4e8e\u82f9\u679c\u7ee7\u627f\u6c34\u679c\uff0c\u5b9d\u9a6c\u7ee7\u627f\u6c7d\u8f66\u4e00\u6837\uff0cApplicationContext\u4e5f\u662fBeanFactory\u7684\u4e00\u79cd\uff0c\u62e5\u6709BeanFactory\u652f\u6301\u7684\u6240\u6709\u529f\u80fd\uff0c\u4e0d\u8fc7ApplicationContext\u6bd4BeanFactory\u66f4\u52a0\u5f3a\u5927\uff0cApplicationContext\u8fd8\u57fa\u7840\u4e86\u5176\u4ed6\u63a5\u53e3\uff0c\u4e5f\u5c31\u8868\u793aApplicationContext\u8fd8\u62e5\u6709\u5176\u4ed6\u529f\u80fd\uff0c\u6bd4\u5982MessageSource\u8868\u793a\u56fd\u9645\u5316\uff0cApplicationEventPublisher\u8868\u793a\u4e8b\u4ef6\u53d1\u5e03\uff0cEnvironmentCapable\u8868\u793a\u83b7\u53d6\u73af\u5883\u53d8\u91cf\uff0c\u7b49\u7b49\uff0c\u5173\u4e8eApplicationContext\u540e\u9762\u518d\u8be6\u7ec6\u8ba8\u8bba\u3002 \u5728Spring\u7684\u6e90\u7801\u5b9e\u73b0\u4e2d\uff0c\u5f53\u6211\u4eecnew\u4e00\u4e2aApplicationContext\u65f6\uff0c\u5176\u5e95\u5c42\u4f1anew\u4e00\u4e2aBeanFactory\u51fa\u6765\uff0c\u5f53\u4f7f\u7528ApplicationContext\u7684\u67d0\u4e9b\u65b9\u6cd5\u65f6\uff0c\u6bd4\u5982getBean()\uff0c\u5e95\u5c42\u8c03\u7528\u7684\u662fBeanFactory\u7684getBean()\u65b9\u6cd5\u3002 \u5728Spring\u6e90\u7801\u4e2d\uff0cBeanFactory\u63a5\u53e3\u5b58\u5728\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5b9e\u73b0\u7c7b\u662f\uff1a DefaultListableBeanFactory \uff0c \u4e5f\u662f\u975e\u5e38\u6838\u5fc3\u7684 \u3002\u5177\u4f53\u91cd\u8981\u6027\uff0c\u968f\u7740\u540e\u7eed\u8bfe\u7a0b\u4f1a\u611f\u53d7\u66f4\u6df1\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6765\u4f7f\u7528 DefaultListableBeanFactory \uff0c\u800c\u4e0d\u7528\u4f7f\u7528ApplicationContext\u7684\u67d0\u4e2a\u5b9e\u73b0\u7c7b\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 DefaultListableBeanFactory beanFactory = new DefaultListableBeanFactory (); AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder . genericBeanDefinition (). getBeanDefinition (); beanDefinition . setBeanClass ( User . class ); beanFactory . registerBeanDefinition ( \"user\" , beanDefinition ); System . out . println ( beanFactory . getBean ( \"user\" )); DefaultListableBeanFactory\u662f\u975e\u5e38\u5f3a\u5927\u7684\uff0c\u652f\u6301\u5f88\u591a\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7\u67e5\u770bDefaultListableBeanFactory\u7684\u7c7b\u7ee7\u627f\u5b9e\u73b0\u7ed3\u6784\u6765\u770b \u8fd9\u90e8\u5206\u73b0\u5728\u770b\u4e0d\u61c2\u6ca1\u5173\u7cfb\uff0c\u6e90\u7801\u719f\u6089\u4e00\u70b9\u540e\u56de\u6765\u518d\u6765\u770b\u90fd\u53ef\u4ee5\u3002 \u5b83\u5b9e\u73b0\u4e86\u5f88\u591a\u63a5\u53e3\uff0c\u8868\u793a\uff0c\u5b83\u62e5\u6709\u5f88\u591a\u529f\u80fd\uff1a AliasRegistry\uff1a\u652f\u6301\u522b\u540d\u529f\u80fd\uff0c\u4e00\u4e2a\u540d\u5b57\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a\u522b\u540d BeanDefinitionRegistry\uff1a\u53ef\u4ee5\u6ce8\u518c\u3001\u4fdd\u5b58\u3001\u79fb\u9664\u3001\u83b7\u53d6\u67d0\u4e2aBeanDefinition BeanFactory\uff1aBean\u5de5\u5382\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2abean\u7684\u540d\u5b57\u3001\u6216\u7c7b\u578b\u3001\u6216\u522b\u540d\u83b7\u53d6\u67d0\u4e2aBean\u5bf9\u8c61 SingletonBeanRegistry\uff1a\u53ef\u4ee5\u76f4\u63a5\u6ce8\u518c\u3001\u83b7\u53d6\u67d0\u4e2a\u5355\u4f8bBean SimpleAliasRegistry\uff1a\u5b83\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0\u4e86AliasRegistry\u63a5\u53e3\u4e2d\u6240\u5b9a\u4e49\u7684\u529f\u80fd\uff0c\u652f\u6301\u522b\u540d\u529f\u80fd ListableBeanFactory\uff1a\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e86\u5176\u4ed6\u529f\u80fd\uff0c\u53ef\u4ee5\u83b7\u53d6\u6240\u6709BeanDefinition\u7684beanNames\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2a\u7c7b\u578b\u83b7\u53d6\u5bf9\u5e94\u7684beanNames\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2a\u7c7b\u578b\u83b7\u53d6{\u7c7b\u578b\uff1a\u5bf9\u5e94\u7684Bean}\u7684\u6620\u5c04\u5173\u7cfb HierarchicalBeanFactory\uff1a\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u4e86\u83b7\u53d6\u7236BeanFactory\u7684\u529f\u80fd DefaultSingletonBeanRegistry\uff1a\u5b83\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0\u4e86SingletonBeanRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u76f4\u63a5\u6ce8\u518c\u3001\u83b7\u53d6\u67d0\u4e2a\u5355\u4f8bBean\u7684\u529f\u80fd ConfigurableBeanFactory\uff1a\u5728HierarchicalBeanFactory\u548cSingletonBeanRegistry\u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u4e86\u8bbe\u7f6e\u7236BeanFactory\u3001\u7c7b\u52a0\u8f7d\u5668\uff08\u8868\u793a\u53ef\u4ee5\u6307\u5b9a\u67d0\u4e2a\u7c7b\u52a0\u8f7d\u5668\u8fdb\u884c\u7c7b\u7684\u52a0\u8f7d\uff09\u3001\u8bbe\u7f6eSpring EL\u8868\u8fbe\u5f0f\u89e3\u6790\u5668\uff08\u8868\u793a\u8be5BeanFactory\u53ef\u4ee5\u89e3\u6790EL\u8868\u8fbe\u5f0f\uff09\u3001\u8bbe\u7f6e\u7c7b\u578b\u8f6c\u5316\u670d\u52a1\uff08\u8868\u793a\u8be5BeanFactory\u53ef\u4ee5\u8fdb\u884c\u7c7b\u578b\u8f6c\u5316\uff09\u3001\u53ef\u4ee5\u6dfb\u52a0BeanPostProcessor\uff08\u8868\u793a\u8be5BeanFactory\u652f\u6301Bean\u7684\u540e\u7f6e\u5904\u7406\u5668\uff09\uff0c\u53ef\u4ee5\u5408\u5e76BeanDefinition\uff0c\u53ef\u4ee5\u9500\u6bc1\u67d0\u4e2aBean\u7b49\u7b49\u529f\u80fd FactoryBeanRegistrySupport\uff1a\u652f\u6301\u4e86FactoryBean\u7684\u529f\u80fd AutowireCapableBeanFactory\uff1a\u662f\u76f4\u63a5\u7ee7\u627f\u4e86BeanFactory\uff0c\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u652f\u6301\u5728\u521b\u5efaBean\u7684\u8fc7\u7a0b\u4e2d\u80fd\u5bf9Bean\u8fdb\u884c\u81ea\u52a8\u88c5\u914d AbstractBeanFactory\uff1a\u5b9e\u73b0\u4e86ConfigurableBeanFactory\u63a5\u53e3\uff0c\u7ee7\u627f\u4e86FactoryBeanRegistrySupport\uff0c\u8fd9\u4e2aBeanFactory\u7684\u529f\u80fd\u5df2\u7ecf\u5f88\u5168\u9762\u4e86\uff0c\u4f46\u662f\u4e0d\u80fd\u81ea\u52a8\u88c5\u914d\u548c\u83b7\u53d6beanNames ConfigurableListableBeanFactory\uff1a\u7ee7\u627f\u4e86ListableBeanFactory\u3001AutowireCapableBeanFactory\u3001ConfigurableBeanFactory AbstractAutowireCapableBeanFactory\uff1a\u7ee7\u627f\u4e86AbstractBeanFactory\uff0c\u5b9e\u73b0\u4e86AutowireCapableBeanFactory\uff0c\u62e5\u6709\u4e86\u81ea\u52a8\u88c5\u914d\u7684\u529f\u80fd DefaultListableBeanFactory\uff1a\u7ee7\u627f\u4e86AbstractAutowireCapableBeanFactory\uff0c\u5b9e\u73b0\u4e86ConfigurableListableBeanFactory\u63a5\u53e3\u548cBeanDefinitionRegistry\u63a5\u53e3\uff0c\u6240\u4ee5DefaultListableBeanFactory\u7684\u529f\u80fd\u5f88\u5f3a\u5927 ApplicationContext \u4e0a\u9762\u6709\u5206\u6790\u5230\uff0cApplicationContext\u662f\u4e2a\u63a5\u53e3\uff0c\u5b9e\u9645\u4e0a\u4e5f\u662f\u4e00\u4e2aBeanFactory\uff0c\u4e0d\u8fc7\u6bd4BeanFactory\u66f4\u52a0\u5f3a\u5927\uff0c\u6bd4\u5982\uff1a HierarchicalBeanFactory\uff1a\u62e5\u6709\u83b7\u53d6\u7236BeanFactory\u7684\u529f\u80fd ListableBeanFactory\uff1a\u62e5\u6709\u83b7\u53d6beanNames\u7684\u529f\u80fd ResourcePatternResolver\uff1a\u8d44\u6e90\u52a0\u8f7d\u5668\uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u83b7\u53d6\u591a\u4e2a\u8d44\u6e90\uff08\u6587\u4ef6\u8d44\u6e90\u7b49\u7b49\uff09 EnvironmentCapable\uff1a\u53ef\u4ee5\u83b7\u53d6\u8fd0\u884c\u65f6\u73af\u5883\uff08\u6ca1\u6709\u8bbe\u7f6e\u8fd0\u884c\u65f6\u73af\u5883\u529f\u80fd\uff09 ApplicationEventPublisher\uff1a\u62e5\u6709\u5e7f\u64ad\u4e8b\u4ef6\u7684\u529f\u80fd\uff08\u6ca1\u6709\u6dfb\u52a0\u4e8b\u4ef6\u76d1\u542c\u5668\u7684\u529f\u80fd\uff09 MessageSource\uff1a\u62e5\u6709\u56fd\u9645\u5316\u529f\u80fd \u5177\u4f53\u7684\u529f\u80fd\u6f14\u793a\uff0c\u540e\u9762\u4f1a\u6709\u3002 \u6211\u4eec\u5148\u6765\u770bApplicationContext\u4e24\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u5b9e\u73b0\u7c7b\uff1a AnnotationConfigApplicationContext ClassPathXmlApplicationContext AnnotationConfigApplicationContext \u8fd9\u90e8\u5206\u73b0\u5728\u770b\u4e0d\u61c2\u6ca1\u5173\u7cfb\uff0c\u6e90\u7801\u719f\u6089\u4e00\u70b9\u540e\u56de\u6765\u518d\u6765\u770b\u90fd\u53ef\u4ee5\u3002 ConfigurableApplicationContext\uff1a\u7ee7\u627f\u4e86ApplicationContext\u63a5\u53e3\uff0c\u589e\u52a0\u4e86\uff0c\u6dfb\u52a0\u4e8b\u4ef6\u76d1\u542c\u5668\u3001\u6dfb\u52a0BeanFactoryPostProcessor\u3001\u8bbe\u7f6eEnvironment\uff0c\u83b7\u53d6ConfigurableListableBeanFactory\u7b49\u529f\u80fd AbstractApplicationContext\uff1a\u5b9e\u73b0\u4e86ConfigurableApplicationContext\u63a5\u53e3 GenericApplicationContext\uff1a\u7ee7\u627f\u4e86AbstractApplicationContext\uff0c\u5b9e\u73b0\u4e86BeanDefinitionRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u6240\u6709ApplicationContext\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u53ef\u4ee5\u6ce8\u518cBeanDefinition\uff0c\u6ce8\u610f\u8fd9\u4e2a\u7c7b\u4e2d\u6709\u4e00\u4e2a\u5c5e\u6027(DefaultListableBeanFactory beanFactory) AnnotationConfigRegistry\uff1a\u53ef\u4ee5\u5355\u72ec\u6ce8\u518c\u67d0\u4e2a\u4e3a\u7c7b\u4e3aBeanDefinition\uff08\u53ef\u4ee5\u5904\u7406\u8be5\u7c7b\u4e0a\u7684@Configuration\u6ce8\u89e3\uff0c\u5df2\u7ecf\u53ef\u4ee5\u5904\u7406@Bean\u6ce8\u89e3\uff09\uff0c\u540c\u65f6\u53ef\u4ee5\u626b\u63cf AnnotationConfigApplicationContext\uff1a\u7ee7\u627f\u4e86GenericApplicationContext\uff0c\u5b9e\u73b0\u4e86AnnotationConfigRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u4ee5\u4e0a\u6240\u6709\u7684\u529f\u80fd ClassPathXmlApplicationContext \u5b83\u4e5f\u662f\u7ee7\u627f\u4e86AbstractApplicationContext\uff0c\u4f46\u662f\u76f8\u5bf9\u4e8eAnnotationConfigApplicationContext\u800c\u8a00\uff0c\u529f\u80fd\u6ca1\u6709AnnotationConfigApplicationContext\u5f3a\u5927\uff0c\u6bd4\u5982\u4e0d\u80fd\u6ce8\u518cBeanDefinition \u56fd\u9645\u5316 \u5148\u5b9a\u4e49\u4e00\u4e2aMessageSource: \u6709\u4e86\u8fd9\u4e2aBean\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u4efb\u610f\u60f3\u8981\u8fdb\u884c\u56fd\u9645\u5316\u7684\u5730\u65b9\u4f7f\u7528\u8be5MessageSource\u3002 \u540c\u65f6\uff0c\u56e0\u4e3aApplicationContext\u4e5f\u62e5\u6709\u56fd\u5bb6\u5316\u7684\u529f\u80fd\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8fd9\u4e48\u7528\uff1a 1 2 3 4 5 6 @Bean public MessageSource messageSource () { ResourceBundleMessageSource messageSource = new ResourceBundleMessageSource (); messageSource . setBasename ( \"messages\" ); return messageSource ; } \u8d44\u6e90\u52a0\u8f7d ApplicationContext\u8fd8\u62e5\u6709\u8d44\u6e90\u52a0\u8f7d\u7684\u529f\u80fd\uff0c\u6bd4\u5982\uff0c\u53ef\u4ee5\u76f4\u63a5\u5229\u7528ApplicationContext\u83b7\u53d6\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff1a 1 2 3 4 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); Resource resource = context . getResource ( \"file://D:\\\\IdeaProjects\\\\spring-framework-5.3.10\\\\tuling\\\\src\\\\main\\\\java\\\\com\\\\zhouyu\\\\service\\\\UserService.java\" ); System . out . println ( resource . contentLength ()); \u4f60\u53ef\u4ee5\u60f3\u60f3\uff0c\u5982\u679c\u4f60\u4e0d\u4f7f\u7528ApplicationContext\uff0c\u800c\u662f\u81ea\u5df1\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u5c31\u6bd4\u8f83\u8d39\u65f6\u95f4\u4e86\u3002 \u8fd8\u6bd4\u5982\u4f60\u53ef\u4ee5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); Resource resource = context . getResource ( \"file://D:\\\\IdeaProjects\\\\spring-framework-5.3.10\\\\tuling\\\\src\\\\main\\\\java\\\\com\\\\zhouyu\\\\service\\\\UserService.java\" ); System . out . println ( resource . contentLength ()); System . out . println ( resource . getFilename ()); Resource resource1 = context . getResource ( \"https://www.baidu.com\" ); System . out . println ( resource1 . contentLength ()); System . out . println ( resource1 . getURL ()); Resource resource2 = context . getResource ( \"classpath:spring.xml\" ); System . out . println ( resource2 . contentLength ()); System . out . println ( resource2 . getURL ()); \u8fd8\u53ef\u4ee5\u4e00\u6b21\u6027\u83b7\u53d6\u591a\u4e2a\uff1a 1 2 3 4 5 Resource [] resources = context . getResources ( \"classpath:com/zhouyu/*.class\" ); for ( Resource resource : resources ) { System . out . println ( resource . contentLength ()); System . out . println ( resource . getFilename ()); } \u83b7\u53d6\u8fd0\u884c\u65f6\u73af\u5883 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); Map < String , Object > systemEnvironment = context . getEnvironment (). getSystemEnvironment (); System . out . println ( systemEnvironment ); System . out . println ( \"=======\" ); Map < String , Object > systemProperties = context . getEnvironment (). getSystemProperties (); System . out . println ( systemProperties ); System . out . println ( \"=======\" ); MutablePropertySources propertySources = context . getEnvironment (). getPropertySources (); System . out . println ( propertySources ); System . out . println ( \"=======\" ); System . out . println ( context . getEnvironment (). getProperty ( \"NO_PROXY\" )); System . out . println ( context . getEnvironment (). getProperty ( \"sun.jnu.encoding\" )); System . out . println ( context . getEnvironment (). getProperty ( \"zhouyu\" )); \u6ce8\u610f\uff0c\u53ef\u4ee5\u5229\u7528 1 @PropertySource ( \"classpath:spring.properties\" ) \u6765\u4f7f\u5f97\u67d0\u4e2aproperties\u6587\u4ef6\u4e2d\u7684\u53c2\u6570\u6dfb\u52a0\u5230\u8fd0\u884c\u65f6\u73af\u5883\u4e2d \u4e8b\u4ef6\u53d1\u5e03 \u5148\u5b9a\u4e49\u4e00\u4e2a\u4e8b\u4ef6\u76d1\u542c\u5668 1 2 3 4 5 6 7 8 9 @Bean public ApplicationListener applicationListener () { return new ApplicationListener () { @Override public void onApplicationEvent ( ApplicationEvent event ) { System . out . println ( \"\u63a5\u6536\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\" ); } }; } \u7136\u540e\u53d1\u5e03\u4e00\u4e2a\u4e8b\u4ef6\uff1a 1 context . publishEvent ( \"kkk\" ); \u7c7b\u578b\u8f6c\u5316 \u5728Spring\u6e90\u7801\u4e2d\uff0c\u6709\u53ef\u80fd\u9700\u8981\u628aString\u8f6c\u6210\u5176\u4ed6\u7c7b\u578b\uff0c\u6240\u4ee5\u5728Spring\u6e90\u7801\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6280\u672f\u6765\u66f4\u65b9\u4fbf\u7684\u505a\u5bf9\u8c61\u7684\u7c7b\u578b\u8f6c\u5316\uff0c\u5173\u4e8e\u7c7b\u578b\u8f6c\u5316\u7684\u5e94\u7528\u573a\u666f\uff0c \u540e\u7eed\u770b\u6e90\u7801\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u9047\u5230\u5f88\u591a\u3002 PropertyEditor \u8fd9\u5176\u5b9e\u662fJDK\u4e2d\u63d0\u4f9b\u7684\u7c7b\u578b\u8f6c\u5316\u5de5\u5177\u7c7b 1 2 3 4 5 6 7 8 9 public class StringToUserPropertyEditor extends PropertyEditorSupport implements PropertyEditor { @Override public void setAsText ( String text ) throws IllegalArgumentException { User user = new User (); user . setName ( text ); this . setValue ( user ); } } 1 2 3 4 StringToUserPropertyEditor propertyEditor = new StringToUserPropertyEditor (); propertyEditor . setAsText ( \"1\" ); User value = ( User ) propertyEditor . getValue (); System . out . println ( value ); \u5982\u4f55\u5411Spring\u4e2d\u6ce8\u518cPropertyEditor\uff1a 1 2 3 4 5 6 7 8 9 10 @Bean public CustomEditorConfigurer customEditorConfigurer () { CustomEditorConfigurer customEditorConfigurer = new CustomEditorConfigurer (); Map < Class <?> , Class <? extends PropertyEditor >> propertyEditorMap = new HashMap <> (); // \u8868\u793aStringToUserPropertyEditor\u53ef\u4ee5\u5c06String\u8f6c\u5316\u6210User\u7c7b\u578b\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u5982\u679c\u53d1\u73b0\u5f53\u524d\u5bf9\u8c61\u662fString\uff0c\u800c\u9700\u8981\u7684\u7c7b\u578b\u662fUser\uff0c\u5c31\u4f1a\u4f7f\u7528\u8be5PropertyEditor\u6765\u505a\u7c7b\u578b\u8f6c\u5316 propertyEditorMap . put ( User . class , StringToUserPropertyEditor . class ); customEditorConfigurer . setCustomEditors ( propertyEditorMap ); return customEditorConfigurer ; } \u5047\u8bbe\u73b0\u5728\u6709\u5982\u4e0bBean: 1 2 3 4 5 6 7 8 9 10 11 @Component public class UserService { @Value ( \"xxx\" ) private User user ; public void test () { System . out . println ( user ); } } \u90a3\u4e48test\u5c5e\u6027\u5c31\u80fd\u6b63\u5e38\u7684\u5b8c\u6210\u5c5e\u6027\u8d4b\u503c ConversionService Spring\u4e2d\u63d0\u4f9b\u7684\u7c7b\u578b\u8f6c\u5316\u670d\u52a1\uff0c\u5b83\u6bd4PropertyEditor\u66f4\u5f3a\u5927 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class StringToUserConverter implements ConditionalGenericConverter { @Override public boolean matches ( TypeDescriptor sourceType , TypeDescriptor targetType ) { return sourceType . getType (). equals ( String . class ) && targetType . getType (). equals ( User . class ); } @Override public Set < ConvertiblePair > getConvertibleTypes () { return Collections . singleton ( new ConvertiblePair ( String . class , User . class )); } @Override public Object convert ( Object source , TypeDescriptor sourceType , TypeDescriptor targetType ) { User user = new User (); user . setName (( String ) source ); return user ; } } 1 2 3 4 DefaultConversionService conversionService = new DefaultConversionService (); conversionService . addConverter ( new StringToUserConverter ()); User value = conversionService . convert ( \"1\" , User . class ); System . out . println ( value ); \u5982\u4f55\u5411Spring\u4e2d\u6ce8\u518cConversionService\uff1a 1 2 3 4 5 6 7 @Bean public ConversionServiceFactoryBean conversionService () { ConversionServiceFactoryBean conversionServiceFactoryBean = new ConversionServiceFactoryBean (); conversionServiceFactoryBean . setConverters ( Collections . singleton ( new StringToUserConverter ())); return conversionServiceFactoryBean ; } TypeConverter \u6574\u5408\u4e86PropertyEditor\u548cConversionService\u7684\u529f\u80fd\uff0c\u662fSpring\u5185\u90e8\u7528\u7684 1 2 3 4 5 SimpleTypeConverter typeConverter = new SimpleTypeConverter (); typeConverter . registerCustomEditor ( User . class , new StringToUserPropertyEditor ()); //typeConverter.setConversionService(conversionService); User value = typeConverter . convertIfNecessary ( \"1\" , User . class ); System . out . println ( value ); OrderComparator OrderComparator\u662fSpring\u6240\u63d0\u4f9b\u7684\u4e00\u79cd\u6bd4\u8f83\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u6839\u636e@Order\u6ce8\u89e3\u6216\u5b9e\u73b0Ordered\u63a5\u53e3\u6765\u6267\u884c\u503c\u8fdb\u884c\u7b14\u8bb0\uff0c\u4ece\u800c\u53ef\u4ee5\u8fdb\u884c\u6392\u5e8f\u3002 \u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public class A implements Ordered { @Override public int getOrder () { return 3 ; } @Override public String toString () { return this . getClass (). getSimpleName (); } } 1 2 3 4 5 6 7 8 9 10 11 12 public class B implements Ordered { @Override public int getOrder () { return 2 ; } @Override public String toString () { return this . getClass (). getSimpleName (); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class Main { public static void main ( String [] args ) { A a = new A (); // order=3 B b = new B (); // order=2 OrderComparator comparator = new OrderComparator (); System . out . println ( comparator . compare ( a , b )); // 1 List list = new ArrayList <> (); list . add ( a ); list . add ( b ); // \u6309order\u503c\u5347\u5e8f\u6392\u5e8f list . sort ( comparator ); System . out . println ( list ); // B\uff0cA } } \u53e6\u5916\uff0cSpring\u4e2d\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2aOrderComparator\u7684\u5b50\u7c7b\uff1aAnnotationAwareOrderComparator\uff0c\u5b83\u652f\u6301\u7528@Order\u6765\u6307\u5b9aorder\u503c\u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 @Order ( 3 ) public class A { @Override public String toString () { return this . getClass (). getSimpleName (); } } 1 2 3 4 5 6 7 8 9 @Order ( 2 ) public class B { @Override public String toString () { return this . getClass (). getSimpleName (); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class Main { public static void main ( String [] args ) { A a = new A (); // order=3 B b = new B (); // order=2 AnnotationAwareOrderComparator comparator = new AnnotationAwareOrderComparator (); System . out . println ( comparator . compare ( a , b )); // 1 List list = new ArrayList <> (); list . add ( a ); list . add ( b ); // \u6309order\u503c\u5347\u5e8f\u6392\u5e8f list . sort ( comparator ); System . out . println ( list ); // B\uff0cA } } BeanPostProcessor BeanPostProcess\u8868\u793aBena\u7684\u540e\u7f6e\u5904\u7406\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u6216\u591a\u4e2aBeanPostProcessor\uff0c\u6bd4\u5982\u901a\u8fc7\u4e00\u4e0b\u4ee3\u7801\u5b9a\u4e49\u4e00\u4e2aBeanPostProcessor\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 @Component public class ZhouyuBeanPostProcessor implements BeanPostProcessor { @Override public Object postProcessBeforeInitialization ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u521d\u59cb\u5316\u524d\" ); } return bean ; } @Override public Object postProcessAfterInitialization ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u521d\u59cb\u5316\u540e\" ); } return bean ; } } \u4e00\u4e2aBeanPostProcessor\u53ef\u4ee5\u5728\u4efb\u610f\u4e00\u4e2aBean\u7684\u521d\u59cb\u5316\u4e4b\u524d\u4ee5\u53ca\u521d\u59cb\u5316\u4e4b\u540e\u53bb\u989d\u5916\u7684\u505a\u4e00\u4e9b\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u903b\u8f91\uff0c\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5224\u65adbeanName\u6765\u8fdb\u884c\u9488\u5bf9\u6027\u5904\u7406\uff08\u9488\u5bf9\u67d0\u4e2aBean\uff0c\u6216\u67d0\u90e8\u5206Bean\uff09\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49BeanPostProcessor\u6765\u5e72\u6d89Spring\u521b\u5efaBean\u7684\u8fc7\u7a0b\u3002 BeanFactoryPostProcessor BeanFactoryPostProcessor\u8868\u793aBean\u5de5\u5382\u7684\u540e\u7f6e\u5904\u7406\u5668\uff0c\u5176\u5b9e\u548cBeanPostProcessor\u7c7b\u4f3c\uff0cBeanPostProcessor\u662f\u5e72\u6d89Bean\u7684\u521b\u5efa\u8fc7\u7a0b\uff0cBeanFactoryPostProcessor\u662f\u5e72\u6d89BeanFactory\u7684\u521b\u5efa\u8fc7\u7a0b\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\u4e00\u4e2aBeanFactoryPostProcessor\uff1a 1 2 3 4 5 6 7 8 @Component public class ZhouyuBeanFactoryPostProcessor implements BeanFactoryPostProcessor { @Override public void postProcessBeanFactory ( ConfigurableListableBeanFactory beanFactory ) throws BeansException { System . out . println ( \"\u52a0\u5de5beanFactory\" ); } } \u6211\u4eec\u53ef\u4ee5\u5728postProcessBeanFactory()\u65b9\u6cd5\u4e2d\u5bf9BeanFactory\u8fdb\u884c\u52a0\u5de5\u3002 FactoryBean \u4e0a\u9762\u63d0\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7BeanPostPorcessor\u6765\u5e72\u6d89Spring\u521b\u5efaBean\u7684\u8fc7\u7a0b\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u60f3\u4e00\u4e2aBean\u5b8c\u5b8c\u5168\u5168\u7531\u6211\u4eec\u6765\u521b\u9020\uff0c\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u6bd4\u5982\u901a\u8fc7FactoryBean\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 @Component public class ZhouyuFactoryBean implements FactoryBean { @Override public Object getObject () throws Exception { UserService userService = new UserService (); return userService ; } @Override public Class <?> getObjectType () { return UserService . class ; } } \u901a\u8fc7\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u6211\u4eec\u81ea\u5df1\u521b\u9020\u4e86\u4e00\u4e2aUserService\u5bf9\u8c61\uff0c\u5e76\u4e14\u5b83\u5c06\u6210\u4e3aBean\u3002\u4f46\u662f\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u521b\u9020\u51fa\u6765\u7684UserService\u7684Bean\uff0c\u53ea\u4f1a\u7ecf\u8fc7\u521d\u59cb\u5316\u540e\uff0c\u5176\u4ed6Spring\u7684\u751f\u547d\u5468\u671f\u6b65\u9aa4\u662f\u4e0d\u4f1a\u7ecf\u8fc7\u7684\uff0c\u6bd4\u5982\u4f9d\u8d56\u6ce8\u5165\u3002 \u6709\u540c\u5b66\u53ef\u80fd\u4f1a\u60f3\u5230\uff0c\u901a\u8fc7@Bean\u4e5f\u53ef\u4ee5\u81ea\u5df1\u751f\u6210\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3aBean\uff0c\u90a3\u4e48\u548cFactoryBean\u7684\u533a\u522b\u662f\u4ec0\u4e48\u5462\uff1f\u5176\u5b9e\u5728\u5f88\u591a\u573a\u666f\u4e0b\u4ed6\u4fe9\u662f\u53ef\u4ee5\u66ff\u6362\u7684\uff0c\u4f46\u662f\u7ad9\u5728\u539f\u7406\u5c42\u9762\u6765\u8bf4\u7684\uff0c\u533a\u522b\u5f88\u660e\u663e\uff0c@Bean\u5b9a\u4e49\u7684Bean\u662f\u4f1a\u7ecf\u8fc7\u5b8c\u6574\u7684Bean\u751f\u547d\u5468\u671f\u7684\u3002 ExcludeFilter\u548cIncludeFilter \u8fd9\u4e24\u4e2aFilter\u662fSpring\u626b\u63cf\u8fc7\u7a0b\u4e2d\u7528\u6765\u8fc7\u6ee4\u7684\u3002ExcludeFilter\u8868\u793a\u6392\u9664\u8fc7\u6ee4\u5668\uff0cIncludeFilter\u8868\u793a\u5305\u542b\u8fc7\u6ee4\u5668\u3002 \u6bd4\u5982\u4ee5\u4e0b\u914d\u7f6e\uff0c\u8868\u793a\u626b\u63cfcom.zhouyu\u8fd9\u4e2a\u5305\u4e0b\u9762\u7684\u6240\u6709\u7c7b\uff0c\u4f46\u662f\u6392\u9664UserService\u7c7b\uff0c\u4e5f\u5c31\u662f\u5c31\u7b97\u5b83\u4e0a\u9762\u6709@Component\u6ce8\u89e3\u4e5f\u4e0d\u4f1a\u6210\u4e3aBean\u3002 1 2 3 4 5 6 @ComponentScan ( value = \"com.zhouyu\" , excludeFilters = { @ComponentScan.Filter ( type = FilterType . ASSIGNABLE_TYPE , classes = UserService . class )}.) public class AppConfig { } \u518d\u6bd4\u5982\u4ee5\u4e0b\u914d\u7f6e\uff0c\u5c31\u7b97UserService\u7c7b\u4e0a\u6ca1\u6709@Component\u6ce8\u89e3\uff0c\u5b83\u4e5f\u4f1a\u88ab\u626b\u63cf\u6210\u4e3a\u4e00\u4e2aBean\u3002 1 2 3 4 5 6 @ComponentScan ( value = \"com.zhouyu\" , includeFilters = { @ComponentScan.Filter ( type = FilterType . ASSIGNABLE_TYPE , classes = UserService . class )}) public class AppConfig { } FilterType\u5206\u4e3a\uff1a ANNOTATION\uff1a\u8868\u793a\u662f\u5426\u5305\u542b\u67d0\u4e2a\u6ce8\u89e3 ASSIGNABLE_TYPE\uff1a\u8868\u793a\u662f\u5426\u662f\u67d0\u4e2a\u7c7b ASPECTJ\uff1a\u8868\u793a\u5426\u662f\u7b26\u5408\u67d0\u4e2aAspectj\u8868\u8fbe\u5f0f REGEX\uff1a\u8868\u793a\u662f\u5426\u7b26\u5408\u67d0\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f CUSTOM\uff1a\u81ea\u5b9a\u4e49 \u5728Spring\u7684\u626b\u63cf\u903b\u8f91\u4e2d\uff0c\u9ed8\u8ba4\u4f1a\u6dfb\u52a0\u4e00\u4e2aAnnotationTypeFilter\u7ed9includeFilters\uff0c\u8868\u793a\u9ed8\u8ba4\u60c5\u51b5\u4e0bSpring\u626b\u63cf\u8fc7\u7a0b\u4e2d\u4f1a\u8ba4\u4e3a\u7c7b\u4e0a\u6709@Component\u6ce8\u89e3\u7684\u5c31\u662fBean\u3002 MetadataReader\u3001ClassMetadata\u3001AnnotationMetadata \u5728Spring\u4e2d\u9700\u8981\u53bb\u89e3\u6790\u7c7b\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u7c7b\u540d\u3001\u7c7b\u4e2d\u7684\u65b9\u6cd5\u3001\u7c7b\u4e0a\u7684\u6ce8\u89e3\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u7c7b\u7684\u5143\u6570\u636e\uff0c\u6240\u4ee5Spring\u4e2d\u5bf9\u7c7b\u7684\u5143\u6570\u636e\u505a\u4e86\u62bd\u8c61\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5de5\u5177\u7c7b\u3002 MetadataReader\u8868\u793a\u7c7b\u7684\u5143\u6570\u636e\u8bfb\u53d6\u5668\uff0c\u9ed8\u8ba4\u5b9e\u73b0\u7c7b\u4e3a SimpleMetadataReader \u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class Test { public static void main ( String [] args ) throws IOException { SimpleMetadataReaderFactory simpleMetadataReaderFactory = new SimpleMetadataReaderFactory (); // \u6784\u9020\u4e00\u4e2aMetadataReader MetadataReader metadataReader = simpleMetadataReaderFactory . getMetadataReader ( \"com.zhouyu.service.UserService\" ); // \u5f97\u5230\u4e00\u4e2aClassMetadata\uff0c\u5e76\u83b7\u53d6\u4e86\u7c7b\u540d ClassMetadata classMetadata = metadataReader . getClassMetadata (); System . out . println ( classMetadata . getClassName ()); // \u83b7\u53d6\u4e00\u4e2aAnnotationMetadata\uff0c\u5e76\u83b7\u53d6\u7c7b\u4e0a\u7684\u6ce8\u89e3\u4fe1\u606f AnnotationMetadata annotationMetadata = metadataReader . getAnnotationMetadata (); for ( String annotationType : annotationMetadata . getAnnotationTypes ()) { System . out . println ( annotationType ); } } } \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cSimpleMetadataReader\u53bb\u89e3\u6790\u7c7b\u65f6\uff0c\u4f7f\u7528\u7684 ASM\u6280\u672f \u3002 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528ASM\u6280\u672f\uff0cSpring\u542f\u52a8\u7684\u65f6\u5019\u9700\u8981\u53bb\u626b\u63cf\uff0c\u5982\u679c\u6307\u5b9a\u7684\u5305\u8def\u5f84\u6bd4\u8f83\u5bbd\u6cdb\uff0c\u90a3\u4e48\u626b\u63cf\u7684\u7c7b\u662f\u975e\u5e38\u591a\u7684\uff0c\u90a3\u5982\u679c\u5728Spring\u542f\u52a8\u65f6\u5c31\u628a\u8fd9\u4e9b\u7c7b\u5168\u90e8\u52a0\u8f7d\u8fdbJVM\u4e86\uff0c\u8fd9\u6837\u4e0d\u592a\u597d\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86ASM\u6280\u672f\u3002","title":"3.Spring\u4e4b\u5e95\u5c42\u67b6\u6784\u6838\u5fc3\u6982\u5ff5\u89e3\u6790"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#beandefinition","text":"BeanDefinition\u8868\u793aBean\u5b9a\u4e49\uff0cBeanDefinition\u4e2d\u5b58\u5728\u5f88\u591a\u5c5e\u6027\u7528\u6765\u63cf\u8ff0\u4e00\u4e2aBean\u7684\u7279\u70b9\u3002\u6bd4\u5982\uff1a \u25cfclass\uff0c\u8868\u793aBean\u7c7b\u578b \u25cfscope\uff0c\u8868\u793aBean\u4f5c\u7528\u57df\uff0c\u5355\u4f8b\u6216\u539f\u578b\u7b49 \u25cflazyInit\uff1a\u8868\u793aBean\u662f\u5426\u662f\u61d2\u52a0\u8f7d \u25cfinitMethodName\uff1a\u8868\u793aBean\u521d\u59cb\u5316\u65f6\u8981\u6267\u884c\u7684\u65b9\u6cd5 \u25cfdestroyMethodName\uff1a\u8868\u793aBean\u9500\u6bc1\u65f6\u8981\u6267\u884c\u7684\u65b9\u6cd5 \u25cf\u8fd8\u6709\u5f88\u591a... \u5728Spring\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u901a\u8fc7\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u6765\u5b9a\u4e49Bean\uff1a ' ' @Bean @Component(@Service,@Controller) \u8fd9\u4e9b\uff0c\u6211\u4eec\u53ef\u4ee5\u79f0\u4e4b\u7533\u660e\u5f0f\u5b9a\u4e49Bean\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u7f16\u7a0b\u5f0f\u5b9a\u4e49Bean\uff0c\u90a3\u5c31\u662f\u76f4\u63a5\u901a\u8fc7BeanDefinition\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); // \u751f\u6210\u4e00\u4e2aBeanDefinition\u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6ebeanClass\u4e3aUser.class\uff0c\u5e76\u6ce8\u518c\u5230ApplicationContext\u4e2d AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder . genericBeanDefinition (). getBeanDefinition (); beanDefinition . setBeanClass ( User . class ); context . registerBeanDefinition ( \"user\" , beanDefinition ); System . out . println ( context . getBean ( \"user\" )); \u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7BeanDefinition\u8bbe\u7f6e\u4e00\u4e2aBean\u7684\u5176\u4ed6\u5c5e\u6027 1 2 3 beanDefinition . setScope ( \"prototype\" ); // \u8bbe\u7f6e\u4f5c\u7528\u57df beanDefinition . setInitMethodName ( \"init\" ); // \u8bbe\u7f6e\u521d\u59cb\u5316\u65b9\u6cd5 beanDefinition . setLazyInit ( true ); // \u8bbe\u7f6e\u61d2\u52a0\u8f7d \u548c\u7533\u660e\u5f0f\u4e8b\u52a1\u3001\u7f16\u7a0b\u5f0f\u4e8b\u52a1\u7c7b\u4f3c\uff0c\u901a\u8fc7 \uff0c@Bean\uff0c@Component\u7b49\u7533\u660e\u5f0f\u65b9\u5f0f\u6240\u5b9a\u4e49\u7684Bean\uff0c\u6700\u7ec8\u90fd\u4f1a\u88abSpring\u89e3\u6790\u4e3a\u5bf9\u5e94\u7684BeanDefinition\u5bf9\u8c61\uff0c\u5e76\u653e\u5165Spring\u5bb9\u5668\u4e2d\u3002","title":"BeanDefinition"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#beandefinitionreader","text":"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u4ecb\u7ecd\u51e0\u79cd\u5728Spring\u6e90\u7801\u4e2d\u6240\u63d0\u4f9b\u7684BeanDefinition\u8bfb\u53d6\u5668\uff08BeanDefinitionReader\uff09\uff0c\u8fd9\u4e9bBeanDefinitionReader\u5728\u6211\u4eec\u4f7f\u7528Spring\u65f6\u7528\u5f97\u5c11\uff0c\u4f46\u5728Spring\u6e90\u7801\u4e2d\u7528\u5f97\u591a\uff0c\u76f8\u5f53\u4e8eSpring\u6e90\u7801\u7684\u57fa\u7840\u8bbe\u65bd\u3002","title":"BeanDefinitionReader"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#annotatedbeandefinitionreader","text":"\u53ef\u4ee5\u76f4\u63a5\u628a\u67d0\u4e2a\u7c7b\u8f6c\u6362\u4e3aBeanDefinition\uff0c\u5e76\u4e14\u4f1a\u89e3\u6790\u8be5\u7c7b\u4e0a\u7684\u6ce8\u89e3\uff0c\u6bd4\u5982 1 2 3 4 5 6 7 8 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); AnnotatedBeanDefinitionReader annotatedBeanDefinitionReader = new AnnotatedBeanDefinitionReader ( context ); // \u5c06User.class\u89e3\u6790\u4e3aBeanDefinition annotatedBeanDefinitionReader . register ( User . class ); System . out . println ( context . getBean ( \"user\" )); \u6ce8\u610f\uff1a\u5b83\u80fd\u89e3\u6790\u7684\u6ce8\u89e3\u662f\uff1a@Conditional\uff0c@Scope\u3001@Lazy\u3001@Primary\u3001@DependsOn\u3001@Role\u3001@Description","title":"AnnotatedBeanDefinitionReader"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#xmlbeandefinitionreader","text":"\u53ef\u4ee5\u89e3\u6790 \u6807\u7b7e 1 2 3 4 5 6 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); XmlBeanDefinitionReader xmlBeanDefinitionReader = new XmlBeanDefinitionReader ( context ); int i = xmlBeanDefinitionReader . loadBeanDefinitions ( \"spring.xml\" ); System . out . println ( context . getBean ( \"user\" ));","title":"XmlBeanDefinitionReader"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#classpathbeandefinitionscanner","text":"ClassPathBeanDefinitionScanner\u662f\u626b\u63cf\u5668\uff0c\u4f46\u662f\u5b83\u7684\u4f5c\u7528\u548cBeanDefinitionReader\u7c7b\u4f3c\uff0c\u5b83\u53ef\u4ee5\u8fdb\u884c\u626b\u63cf\uff0c\u626b\u63cf\u67d0\u4e2a\u5305\u8def\u5f84\uff0c\u5bf9\u626b\u63cf\u5230\u7684\u7c7b\u8fdb\u884c\u89e3\u6790\uff0c\u6bd4\u5982\uff0c\u626b\u63cf\u5230\u7684\u7c7b\u4e0a\u5982\u679c\u5b58\u5728@Component\u6ce8\u89e3\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u8fd9\u4e2a\u7c7b\u89e3\u6790\u4e3a\u4e00\u4e2aBeanDefinition\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext (); context . refresh (); ClassPathBeanDefinitionScanner scanner = new ClassPathBeanDefinitionScanner ( context ); scanner . scan ( \"com.zhouyu\" ); System . out . println ( context . getBean ( \"userService\" ));","title":"ClassPathBeanDefinitionScanner"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#beanfactory","text":"BeanFactory\u8868\u793aBean \u5de5\u5382 \uff0c\u6240\u4ee5\u5f88\u660e\u663e\uff0cBeanFactory\u4f1a\u8d1f\u8d23\u521b\u5efaBean\uff0c\u5e76\u4e14\u63d0\u4f9b\u83b7\u53d6Bean\u7684API\u3002 \u800cApplicationContext\u662fBeanFactory\u7684\u4e00\u79cd\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u662f\u8fd9\u4e48\u5b9a\u4e49\u7684\uff1a 1 2 3 4 5 public interface ApplicationContext extends EnvironmentCapable , ListableBeanFactory , HierarchicalBeanFactory , MessageSource , ApplicationEventPublisher , ResourcePatternResolver { ... } \u9996\u5148\uff0c\u5728Java\u4e2d\uff0c\u63a5\u53e3\u662f\u53ef\u4ee5\u591a\u7ee7\u627f\u7684\uff0c\u6211\u4eec\u53d1\u73b0ApplicationContext\u7ee7\u627f\u4e86ListableBeanFactory\u548cHierarchicalBeanFactory\uff0c\u800cListableBeanFactory\u548cHierarchicalBeanFactory\u90fd\u7ee7\u627f\u81f3BeanFactory\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3aApplicationContext\u7ee7\u627f\u4e86BeanFactory\uff0c\u76f8\u5f53\u4e8e\u82f9\u679c\u7ee7\u627f\u6c34\u679c\uff0c\u5b9d\u9a6c\u7ee7\u627f\u6c7d\u8f66\u4e00\u6837\uff0cApplicationContext\u4e5f\u662fBeanFactory\u7684\u4e00\u79cd\uff0c\u62e5\u6709BeanFactory\u652f\u6301\u7684\u6240\u6709\u529f\u80fd\uff0c\u4e0d\u8fc7ApplicationContext\u6bd4BeanFactory\u66f4\u52a0\u5f3a\u5927\uff0cApplicationContext\u8fd8\u57fa\u7840\u4e86\u5176\u4ed6\u63a5\u53e3\uff0c\u4e5f\u5c31\u8868\u793aApplicationContext\u8fd8\u62e5\u6709\u5176\u4ed6\u529f\u80fd\uff0c\u6bd4\u5982MessageSource\u8868\u793a\u56fd\u9645\u5316\uff0cApplicationEventPublisher\u8868\u793a\u4e8b\u4ef6\u53d1\u5e03\uff0cEnvironmentCapable\u8868\u793a\u83b7\u53d6\u73af\u5883\u53d8\u91cf\uff0c\u7b49\u7b49\uff0c\u5173\u4e8eApplicationContext\u540e\u9762\u518d\u8be6\u7ec6\u8ba8\u8bba\u3002 \u5728Spring\u7684\u6e90\u7801\u5b9e\u73b0\u4e2d\uff0c\u5f53\u6211\u4eecnew\u4e00\u4e2aApplicationContext\u65f6\uff0c\u5176\u5e95\u5c42\u4f1anew\u4e00\u4e2aBeanFactory\u51fa\u6765\uff0c\u5f53\u4f7f\u7528ApplicationContext\u7684\u67d0\u4e9b\u65b9\u6cd5\u65f6\uff0c\u6bd4\u5982getBean()\uff0c\u5e95\u5c42\u8c03\u7528\u7684\u662fBeanFactory\u7684getBean()\u65b9\u6cd5\u3002 \u5728Spring\u6e90\u7801\u4e2d\uff0cBeanFactory\u63a5\u53e3\u5b58\u5728\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5b9e\u73b0\u7c7b\u662f\uff1a DefaultListableBeanFactory \uff0c \u4e5f\u662f\u975e\u5e38\u6838\u5fc3\u7684 \u3002\u5177\u4f53\u91cd\u8981\u6027\uff0c\u968f\u7740\u540e\u7eed\u8bfe\u7a0b\u4f1a\u611f\u53d7\u66f4\u6df1\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6765\u4f7f\u7528 DefaultListableBeanFactory \uff0c\u800c\u4e0d\u7528\u4f7f\u7528ApplicationContext\u7684\u67d0\u4e2a\u5b9e\u73b0\u7c7b\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 DefaultListableBeanFactory beanFactory = new DefaultListableBeanFactory (); AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder . genericBeanDefinition (). getBeanDefinition (); beanDefinition . setBeanClass ( User . class ); beanFactory . registerBeanDefinition ( \"user\" , beanDefinition ); System . out . println ( beanFactory . getBean ( \"user\" )); DefaultListableBeanFactory\u662f\u975e\u5e38\u5f3a\u5927\u7684\uff0c\u652f\u6301\u5f88\u591a\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7\u67e5\u770bDefaultListableBeanFactory\u7684\u7c7b\u7ee7\u627f\u5b9e\u73b0\u7ed3\u6784\u6765\u770b \u8fd9\u90e8\u5206\u73b0\u5728\u770b\u4e0d\u61c2\u6ca1\u5173\u7cfb\uff0c\u6e90\u7801\u719f\u6089\u4e00\u70b9\u540e\u56de\u6765\u518d\u6765\u770b\u90fd\u53ef\u4ee5\u3002 \u5b83\u5b9e\u73b0\u4e86\u5f88\u591a\u63a5\u53e3\uff0c\u8868\u793a\uff0c\u5b83\u62e5\u6709\u5f88\u591a\u529f\u80fd\uff1a AliasRegistry\uff1a\u652f\u6301\u522b\u540d\u529f\u80fd\uff0c\u4e00\u4e2a\u540d\u5b57\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a\u522b\u540d BeanDefinitionRegistry\uff1a\u53ef\u4ee5\u6ce8\u518c\u3001\u4fdd\u5b58\u3001\u79fb\u9664\u3001\u83b7\u53d6\u67d0\u4e2aBeanDefinition BeanFactory\uff1aBean\u5de5\u5382\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2abean\u7684\u540d\u5b57\u3001\u6216\u7c7b\u578b\u3001\u6216\u522b\u540d\u83b7\u53d6\u67d0\u4e2aBean\u5bf9\u8c61 SingletonBeanRegistry\uff1a\u53ef\u4ee5\u76f4\u63a5\u6ce8\u518c\u3001\u83b7\u53d6\u67d0\u4e2a\u5355\u4f8bBean SimpleAliasRegistry\uff1a\u5b83\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0\u4e86AliasRegistry\u63a5\u53e3\u4e2d\u6240\u5b9a\u4e49\u7684\u529f\u80fd\uff0c\u652f\u6301\u522b\u540d\u529f\u80fd ListableBeanFactory\uff1a\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e86\u5176\u4ed6\u529f\u80fd\uff0c\u53ef\u4ee5\u83b7\u53d6\u6240\u6709BeanDefinition\u7684beanNames\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2a\u7c7b\u578b\u83b7\u53d6\u5bf9\u5e94\u7684beanNames\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2a\u7c7b\u578b\u83b7\u53d6{\u7c7b\u578b\uff1a\u5bf9\u5e94\u7684Bean}\u7684\u6620\u5c04\u5173\u7cfb HierarchicalBeanFactory\uff1a\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u4e86\u83b7\u53d6\u7236BeanFactory\u7684\u529f\u80fd DefaultSingletonBeanRegistry\uff1a\u5b83\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0\u4e86SingletonBeanRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u76f4\u63a5\u6ce8\u518c\u3001\u83b7\u53d6\u67d0\u4e2a\u5355\u4f8bBean\u7684\u529f\u80fd ConfigurableBeanFactory\uff1a\u5728HierarchicalBeanFactory\u548cSingletonBeanRegistry\u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u4e86\u8bbe\u7f6e\u7236BeanFactory\u3001\u7c7b\u52a0\u8f7d\u5668\uff08\u8868\u793a\u53ef\u4ee5\u6307\u5b9a\u67d0\u4e2a\u7c7b\u52a0\u8f7d\u5668\u8fdb\u884c\u7c7b\u7684\u52a0\u8f7d\uff09\u3001\u8bbe\u7f6eSpring EL\u8868\u8fbe\u5f0f\u89e3\u6790\u5668\uff08\u8868\u793a\u8be5BeanFactory\u53ef\u4ee5\u89e3\u6790EL\u8868\u8fbe\u5f0f\uff09\u3001\u8bbe\u7f6e\u7c7b\u578b\u8f6c\u5316\u670d\u52a1\uff08\u8868\u793a\u8be5BeanFactory\u53ef\u4ee5\u8fdb\u884c\u7c7b\u578b\u8f6c\u5316\uff09\u3001\u53ef\u4ee5\u6dfb\u52a0BeanPostProcessor\uff08\u8868\u793a\u8be5BeanFactory\u652f\u6301Bean\u7684\u540e\u7f6e\u5904\u7406\u5668\uff09\uff0c\u53ef\u4ee5\u5408\u5e76BeanDefinition\uff0c\u53ef\u4ee5\u9500\u6bc1\u67d0\u4e2aBean\u7b49\u7b49\u529f\u80fd FactoryBeanRegistrySupport\uff1a\u652f\u6301\u4e86FactoryBean\u7684\u529f\u80fd AutowireCapableBeanFactory\uff1a\u662f\u76f4\u63a5\u7ee7\u627f\u4e86BeanFactory\uff0c\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u652f\u6301\u5728\u521b\u5efaBean\u7684\u8fc7\u7a0b\u4e2d\u80fd\u5bf9Bean\u8fdb\u884c\u81ea\u52a8\u88c5\u914d AbstractBeanFactory\uff1a\u5b9e\u73b0\u4e86ConfigurableBeanFactory\u63a5\u53e3\uff0c\u7ee7\u627f\u4e86FactoryBeanRegistrySupport\uff0c\u8fd9\u4e2aBeanFactory\u7684\u529f\u80fd\u5df2\u7ecf\u5f88\u5168\u9762\u4e86\uff0c\u4f46\u662f\u4e0d\u80fd\u81ea\u52a8\u88c5\u914d\u548c\u83b7\u53d6beanNames ConfigurableListableBeanFactory\uff1a\u7ee7\u627f\u4e86ListableBeanFactory\u3001AutowireCapableBeanFactory\u3001ConfigurableBeanFactory AbstractAutowireCapableBeanFactory\uff1a\u7ee7\u627f\u4e86AbstractBeanFactory\uff0c\u5b9e\u73b0\u4e86AutowireCapableBeanFactory\uff0c\u62e5\u6709\u4e86\u81ea\u52a8\u88c5\u914d\u7684\u529f\u80fd DefaultListableBeanFactory\uff1a\u7ee7\u627f\u4e86AbstractAutowireCapableBeanFactory\uff0c\u5b9e\u73b0\u4e86ConfigurableListableBeanFactory\u63a5\u53e3\u548cBeanDefinitionRegistry\u63a5\u53e3\uff0c\u6240\u4ee5DefaultListableBeanFactory\u7684\u529f\u80fd\u5f88\u5f3a\u5927","title":"BeanFactory"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#applicationcontext","text":"\u4e0a\u9762\u6709\u5206\u6790\u5230\uff0cApplicationContext\u662f\u4e2a\u63a5\u53e3\uff0c\u5b9e\u9645\u4e0a\u4e5f\u662f\u4e00\u4e2aBeanFactory\uff0c\u4e0d\u8fc7\u6bd4BeanFactory\u66f4\u52a0\u5f3a\u5927\uff0c\u6bd4\u5982\uff1a HierarchicalBeanFactory\uff1a\u62e5\u6709\u83b7\u53d6\u7236BeanFactory\u7684\u529f\u80fd ListableBeanFactory\uff1a\u62e5\u6709\u83b7\u53d6beanNames\u7684\u529f\u80fd ResourcePatternResolver\uff1a\u8d44\u6e90\u52a0\u8f7d\u5668\uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u83b7\u53d6\u591a\u4e2a\u8d44\u6e90\uff08\u6587\u4ef6\u8d44\u6e90\u7b49\u7b49\uff09 EnvironmentCapable\uff1a\u53ef\u4ee5\u83b7\u53d6\u8fd0\u884c\u65f6\u73af\u5883\uff08\u6ca1\u6709\u8bbe\u7f6e\u8fd0\u884c\u65f6\u73af\u5883\u529f\u80fd\uff09 ApplicationEventPublisher\uff1a\u62e5\u6709\u5e7f\u64ad\u4e8b\u4ef6\u7684\u529f\u80fd\uff08\u6ca1\u6709\u6dfb\u52a0\u4e8b\u4ef6\u76d1\u542c\u5668\u7684\u529f\u80fd\uff09 MessageSource\uff1a\u62e5\u6709\u56fd\u9645\u5316\u529f\u80fd \u5177\u4f53\u7684\u529f\u80fd\u6f14\u793a\uff0c\u540e\u9762\u4f1a\u6709\u3002 \u6211\u4eec\u5148\u6765\u770bApplicationContext\u4e24\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u5b9e\u73b0\u7c7b\uff1a AnnotationConfigApplicationContext ClassPathXmlApplicationContext","title":"ApplicationContext"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#annotationconfigapplicationcontext","text":"\u8fd9\u90e8\u5206\u73b0\u5728\u770b\u4e0d\u61c2\u6ca1\u5173\u7cfb\uff0c\u6e90\u7801\u719f\u6089\u4e00\u70b9\u540e\u56de\u6765\u518d\u6765\u770b\u90fd\u53ef\u4ee5\u3002 ConfigurableApplicationContext\uff1a\u7ee7\u627f\u4e86ApplicationContext\u63a5\u53e3\uff0c\u589e\u52a0\u4e86\uff0c\u6dfb\u52a0\u4e8b\u4ef6\u76d1\u542c\u5668\u3001\u6dfb\u52a0BeanFactoryPostProcessor\u3001\u8bbe\u7f6eEnvironment\uff0c\u83b7\u53d6ConfigurableListableBeanFactory\u7b49\u529f\u80fd AbstractApplicationContext\uff1a\u5b9e\u73b0\u4e86ConfigurableApplicationContext\u63a5\u53e3 GenericApplicationContext\uff1a\u7ee7\u627f\u4e86AbstractApplicationContext\uff0c\u5b9e\u73b0\u4e86BeanDefinitionRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u6240\u6709ApplicationContext\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u53ef\u4ee5\u6ce8\u518cBeanDefinition\uff0c\u6ce8\u610f\u8fd9\u4e2a\u7c7b\u4e2d\u6709\u4e00\u4e2a\u5c5e\u6027(DefaultListableBeanFactory beanFactory) AnnotationConfigRegistry\uff1a\u53ef\u4ee5\u5355\u72ec\u6ce8\u518c\u67d0\u4e2a\u4e3a\u7c7b\u4e3aBeanDefinition\uff08\u53ef\u4ee5\u5904\u7406\u8be5\u7c7b\u4e0a\u7684@Configuration\u6ce8\u89e3\uff0c\u5df2\u7ecf\u53ef\u4ee5\u5904\u7406@Bean\u6ce8\u89e3\uff09\uff0c\u540c\u65f6\u53ef\u4ee5\u626b\u63cf AnnotationConfigApplicationContext\uff1a\u7ee7\u627f\u4e86GenericApplicationContext\uff0c\u5b9e\u73b0\u4e86AnnotationConfigRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u4ee5\u4e0a\u6240\u6709\u7684\u529f\u80fd","title":"AnnotationConfigApplicationContext"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#classpathxmlapplicationcontext","text":"\u5b83\u4e5f\u662f\u7ee7\u627f\u4e86AbstractApplicationContext\uff0c\u4f46\u662f\u76f8\u5bf9\u4e8eAnnotationConfigApplicationContext\u800c\u8a00\uff0c\u529f\u80fd\u6ca1\u6709AnnotationConfigApplicationContext\u5f3a\u5927\uff0c\u6bd4\u5982\u4e0d\u80fd\u6ce8\u518cBeanDefinition","title":"ClassPathXmlApplicationContext"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#_1","text":"\u5148\u5b9a\u4e49\u4e00\u4e2aMessageSource: \u6709\u4e86\u8fd9\u4e2aBean\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u4efb\u610f\u60f3\u8981\u8fdb\u884c\u56fd\u9645\u5316\u7684\u5730\u65b9\u4f7f\u7528\u8be5MessageSource\u3002 \u540c\u65f6\uff0c\u56e0\u4e3aApplicationContext\u4e5f\u62e5\u6709\u56fd\u5bb6\u5316\u7684\u529f\u80fd\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8fd9\u4e48\u7528\uff1a 1 2 3 4 5 6 @Bean public MessageSource messageSource () { ResourceBundleMessageSource messageSource = new ResourceBundleMessageSource (); messageSource . setBasename ( \"messages\" ); return messageSource ; }","title":"\u56fd\u9645\u5316"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#_2","text":"ApplicationContext\u8fd8\u62e5\u6709\u8d44\u6e90\u52a0\u8f7d\u7684\u529f\u80fd\uff0c\u6bd4\u5982\uff0c\u53ef\u4ee5\u76f4\u63a5\u5229\u7528ApplicationContext\u83b7\u53d6\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff1a 1 2 3 4 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); Resource resource = context . getResource ( \"file://D:\\\\IdeaProjects\\\\spring-framework-5.3.10\\\\tuling\\\\src\\\\main\\\\java\\\\com\\\\zhouyu\\\\service\\\\UserService.java\" ); System . out . println ( resource . contentLength ()); \u4f60\u53ef\u4ee5\u60f3\u60f3\uff0c\u5982\u679c\u4f60\u4e0d\u4f7f\u7528ApplicationContext\uff0c\u800c\u662f\u81ea\u5df1\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u5c31\u6bd4\u8f83\u8d39\u65f6\u95f4\u4e86\u3002 \u8fd8\u6bd4\u5982\u4f60\u53ef\u4ee5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); Resource resource = context . getResource ( \"file://D:\\\\IdeaProjects\\\\spring-framework-5.3.10\\\\tuling\\\\src\\\\main\\\\java\\\\com\\\\zhouyu\\\\service\\\\UserService.java\" ); System . out . println ( resource . contentLength ()); System . out . println ( resource . getFilename ()); Resource resource1 = context . getResource ( \"https://www.baidu.com\" ); System . out . println ( resource1 . contentLength ()); System . out . println ( resource1 . getURL ()); Resource resource2 = context . getResource ( \"classpath:spring.xml\" ); System . out . println ( resource2 . contentLength ()); System . out . println ( resource2 . getURL ()); \u8fd8\u53ef\u4ee5\u4e00\u6b21\u6027\u83b7\u53d6\u591a\u4e2a\uff1a 1 2 3 4 5 Resource [] resources = context . getResources ( \"classpath:com/zhouyu/*.class\" ); for ( Resource resource : resources ) { System . out . println ( resource . contentLength ()); System . out . println ( resource . getFilename ()); }","title":"\u8d44\u6e90\u52a0\u8f7d"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); Map < String , Object > systemEnvironment = context . getEnvironment (). getSystemEnvironment (); System . out . println ( systemEnvironment ); System . out . println ( \"=======\" ); Map < String , Object > systemProperties = context . getEnvironment (). getSystemProperties (); System . out . println ( systemProperties ); System . out . println ( \"=======\" ); MutablePropertySources propertySources = context . getEnvironment (). getPropertySources (); System . out . println ( propertySources ); System . out . println ( \"=======\" ); System . out . println ( context . getEnvironment (). getProperty ( \"NO_PROXY\" )); System . out . println ( context . getEnvironment (). getProperty ( \"sun.jnu.encoding\" )); System . out . println ( context . getEnvironment (). getProperty ( \"zhouyu\" )); \u6ce8\u610f\uff0c\u53ef\u4ee5\u5229\u7528 1 @PropertySource ( \"classpath:spring.properties\" ) \u6765\u4f7f\u5f97\u67d0\u4e2aproperties\u6587\u4ef6\u4e2d\u7684\u53c2\u6570\u6dfb\u52a0\u5230\u8fd0\u884c\u65f6\u73af\u5883\u4e2d","title":"\u83b7\u53d6\u8fd0\u884c\u65f6\u73af\u5883"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#_4","text":"\u5148\u5b9a\u4e49\u4e00\u4e2a\u4e8b\u4ef6\u76d1\u542c\u5668 1 2 3 4 5 6 7 8 9 @Bean public ApplicationListener applicationListener () { return new ApplicationListener () { @Override public void onApplicationEvent ( ApplicationEvent event ) { System . out . println ( \"\u63a5\u6536\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\" ); } }; } \u7136\u540e\u53d1\u5e03\u4e00\u4e2a\u4e8b\u4ef6\uff1a 1 context . publishEvent ( \"kkk\" );","title":"\u4e8b\u4ef6\u53d1\u5e03"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#_5","text":"\u5728Spring\u6e90\u7801\u4e2d\uff0c\u6709\u53ef\u80fd\u9700\u8981\u628aString\u8f6c\u6210\u5176\u4ed6\u7c7b\u578b\uff0c\u6240\u4ee5\u5728Spring\u6e90\u7801\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6280\u672f\u6765\u66f4\u65b9\u4fbf\u7684\u505a\u5bf9\u8c61\u7684\u7c7b\u578b\u8f6c\u5316\uff0c\u5173\u4e8e\u7c7b\u578b\u8f6c\u5316\u7684\u5e94\u7528\u573a\u666f\uff0c \u540e\u7eed\u770b\u6e90\u7801\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u9047\u5230\u5f88\u591a\u3002","title":"\u7c7b\u578b\u8f6c\u5316"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#propertyeditor","text":"\u8fd9\u5176\u5b9e\u662fJDK\u4e2d\u63d0\u4f9b\u7684\u7c7b\u578b\u8f6c\u5316\u5de5\u5177\u7c7b 1 2 3 4 5 6 7 8 9 public class StringToUserPropertyEditor extends PropertyEditorSupport implements PropertyEditor { @Override public void setAsText ( String text ) throws IllegalArgumentException { User user = new User (); user . setName ( text ); this . setValue ( user ); } } 1 2 3 4 StringToUserPropertyEditor propertyEditor = new StringToUserPropertyEditor (); propertyEditor . setAsText ( \"1\" ); User value = ( User ) propertyEditor . getValue (); System . out . println ( value ); \u5982\u4f55\u5411Spring\u4e2d\u6ce8\u518cPropertyEditor\uff1a 1 2 3 4 5 6 7 8 9 10 @Bean public CustomEditorConfigurer customEditorConfigurer () { CustomEditorConfigurer customEditorConfigurer = new CustomEditorConfigurer (); Map < Class <?> , Class <? extends PropertyEditor >> propertyEditorMap = new HashMap <> (); // \u8868\u793aStringToUserPropertyEditor\u53ef\u4ee5\u5c06String\u8f6c\u5316\u6210User\u7c7b\u578b\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u5982\u679c\u53d1\u73b0\u5f53\u524d\u5bf9\u8c61\u662fString\uff0c\u800c\u9700\u8981\u7684\u7c7b\u578b\u662fUser\uff0c\u5c31\u4f1a\u4f7f\u7528\u8be5PropertyEditor\u6765\u505a\u7c7b\u578b\u8f6c\u5316 propertyEditorMap . put ( User . class , StringToUserPropertyEditor . class ); customEditorConfigurer . setCustomEditors ( propertyEditorMap ); return customEditorConfigurer ; } \u5047\u8bbe\u73b0\u5728\u6709\u5982\u4e0bBean: 1 2 3 4 5 6 7 8 9 10 11 @Component public class UserService { @Value ( \"xxx\" ) private User user ; public void test () { System . out . println ( user ); } } \u90a3\u4e48test\u5c5e\u6027\u5c31\u80fd\u6b63\u5e38\u7684\u5b8c\u6210\u5c5e\u6027\u8d4b\u503c","title":"PropertyEditor"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#conversionservice","text":"Spring\u4e2d\u63d0\u4f9b\u7684\u7c7b\u578b\u8f6c\u5316\u670d\u52a1\uff0c\u5b83\u6bd4PropertyEditor\u66f4\u5f3a\u5927 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class StringToUserConverter implements ConditionalGenericConverter { @Override public boolean matches ( TypeDescriptor sourceType , TypeDescriptor targetType ) { return sourceType . getType (). equals ( String . class ) && targetType . getType (). equals ( User . class ); } @Override public Set < ConvertiblePair > getConvertibleTypes () { return Collections . singleton ( new ConvertiblePair ( String . class , User . class )); } @Override public Object convert ( Object source , TypeDescriptor sourceType , TypeDescriptor targetType ) { User user = new User (); user . setName (( String ) source ); return user ; } } 1 2 3 4 DefaultConversionService conversionService = new DefaultConversionService (); conversionService . addConverter ( new StringToUserConverter ()); User value = conversionService . convert ( \"1\" , User . class ); System . out . println ( value ); \u5982\u4f55\u5411Spring\u4e2d\u6ce8\u518cConversionService\uff1a 1 2 3 4 5 6 7 @Bean public ConversionServiceFactoryBean conversionService () { ConversionServiceFactoryBean conversionServiceFactoryBean = new ConversionServiceFactoryBean (); conversionServiceFactoryBean . setConverters ( Collections . singleton ( new StringToUserConverter ())); return conversionServiceFactoryBean ; }","title":"ConversionService"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#typeconverter","text":"\u6574\u5408\u4e86PropertyEditor\u548cConversionService\u7684\u529f\u80fd\uff0c\u662fSpring\u5185\u90e8\u7528\u7684 1 2 3 4 5 SimpleTypeConverter typeConverter = new SimpleTypeConverter (); typeConverter . registerCustomEditor ( User . class , new StringToUserPropertyEditor ()); //typeConverter.setConversionService(conversionService); User value = typeConverter . convertIfNecessary ( \"1\" , User . class ); System . out . println ( value );","title":"TypeConverter"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#ordercomparator","text":"OrderComparator\u662fSpring\u6240\u63d0\u4f9b\u7684\u4e00\u79cd\u6bd4\u8f83\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u6839\u636e@Order\u6ce8\u89e3\u6216\u5b9e\u73b0Ordered\u63a5\u53e3\u6765\u6267\u884c\u503c\u8fdb\u884c\u7b14\u8bb0\uff0c\u4ece\u800c\u53ef\u4ee5\u8fdb\u884c\u6392\u5e8f\u3002 \u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public class A implements Ordered { @Override public int getOrder () { return 3 ; } @Override public String toString () { return this . getClass (). getSimpleName (); } } 1 2 3 4 5 6 7 8 9 10 11 12 public class B implements Ordered { @Override public int getOrder () { return 2 ; } @Override public String toString () { return this . getClass (). getSimpleName (); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class Main { public static void main ( String [] args ) { A a = new A (); // order=3 B b = new B (); // order=2 OrderComparator comparator = new OrderComparator (); System . out . println ( comparator . compare ( a , b )); // 1 List list = new ArrayList <> (); list . add ( a ); list . add ( b ); // \u6309order\u503c\u5347\u5e8f\u6392\u5e8f list . sort ( comparator ); System . out . println ( list ); // B\uff0cA } } \u53e6\u5916\uff0cSpring\u4e2d\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2aOrderComparator\u7684\u5b50\u7c7b\uff1aAnnotationAwareOrderComparator\uff0c\u5b83\u652f\u6301\u7528@Order\u6765\u6307\u5b9aorder\u503c\u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 @Order ( 3 ) public class A { @Override public String toString () { return this . getClass (). getSimpleName (); } } 1 2 3 4 5 6 7 8 9 @Order ( 2 ) public class B { @Override public String toString () { return this . getClass (). getSimpleName (); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class Main { public static void main ( String [] args ) { A a = new A (); // order=3 B b = new B (); // order=2 AnnotationAwareOrderComparator comparator = new AnnotationAwareOrderComparator (); System . out . println ( comparator . compare ( a , b )); // 1 List list = new ArrayList <> (); list . add ( a ); list . add ( b ); // \u6309order\u503c\u5347\u5e8f\u6392\u5e8f list . sort ( comparator ); System . out . println ( list ); // B\uff0cA } }","title":"OrderComparator"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#beanpostprocessor","text":"BeanPostProcess\u8868\u793aBena\u7684\u540e\u7f6e\u5904\u7406\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u6216\u591a\u4e2aBeanPostProcessor\uff0c\u6bd4\u5982\u901a\u8fc7\u4e00\u4e0b\u4ee3\u7801\u5b9a\u4e49\u4e00\u4e2aBeanPostProcessor\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 @Component public class ZhouyuBeanPostProcessor implements BeanPostProcessor { @Override public Object postProcessBeforeInitialization ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u521d\u59cb\u5316\u524d\" ); } return bean ; } @Override public Object postProcessAfterInitialization ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u521d\u59cb\u5316\u540e\" ); } return bean ; } } \u4e00\u4e2aBeanPostProcessor\u53ef\u4ee5\u5728\u4efb\u610f\u4e00\u4e2aBean\u7684\u521d\u59cb\u5316\u4e4b\u524d\u4ee5\u53ca\u521d\u59cb\u5316\u4e4b\u540e\u53bb\u989d\u5916\u7684\u505a\u4e00\u4e9b\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u903b\u8f91\uff0c\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5224\u65adbeanName\u6765\u8fdb\u884c\u9488\u5bf9\u6027\u5904\u7406\uff08\u9488\u5bf9\u67d0\u4e2aBean\uff0c\u6216\u67d0\u90e8\u5206Bean\uff09\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49BeanPostProcessor\u6765\u5e72\u6d89Spring\u521b\u5efaBean\u7684\u8fc7\u7a0b\u3002","title":"BeanPostProcessor"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#beanfactorypostprocessor","text":"BeanFactoryPostProcessor\u8868\u793aBean\u5de5\u5382\u7684\u540e\u7f6e\u5904\u7406\u5668\uff0c\u5176\u5b9e\u548cBeanPostProcessor\u7c7b\u4f3c\uff0cBeanPostProcessor\u662f\u5e72\u6d89Bean\u7684\u521b\u5efa\u8fc7\u7a0b\uff0cBeanFactoryPostProcessor\u662f\u5e72\u6d89BeanFactory\u7684\u521b\u5efa\u8fc7\u7a0b\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\u4e00\u4e2aBeanFactoryPostProcessor\uff1a 1 2 3 4 5 6 7 8 @Component public class ZhouyuBeanFactoryPostProcessor implements BeanFactoryPostProcessor { @Override public void postProcessBeanFactory ( ConfigurableListableBeanFactory beanFactory ) throws BeansException { System . out . println ( \"\u52a0\u5de5beanFactory\" ); } } \u6211\u4eec\u53ef\u4ee5\u5728postProcessBeanFactory()\u65b9\u6cd5\u4e2d\u5bf9BeanFactory\u8fdb\u884c\u52a0\u5de5\u3002","title":"BeanFactoryPostProcessor"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#factorybean","text":"\u4e0a\u9762\u63d0\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7BeanPostPorcessor\u6765\u5e72\u6d89Spring\u521b\u5efaBean\u7684\u8fc7\u7a0b\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u60f3\u4e00\u4e2aBean\u5b8c\u5b8c\u5168\u5168\u7531\u6211\u4eec\u6765\u521b\u9020\uff0c\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u6bd4\u5982\u901a\u8fc7FactoryBean\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 @Component public class ZhouyuFactoryBean implements FactoryBean { @Override public Object getObject () throws Exception { UserService userService = new UserService (); return userService ; } @Override public Class <?> getObjectType () { return UserService . class ; } } \u901a\u8fc7\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u6211\u4eec\u81ea\u5df1\u521b\u9020\u4e86\u4e00\u4e2aUserService\u5bf9\u8c61\uff0c\u5e76\u4e14\u5b83\u5c06\u6210\u4e3aBean\u3002\u4f46\u662f\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u521b\u9020\u51fa\u6765\u7684UserService\u7684Bean\uff0c\u53ea\u4f1a\u7ecf\u8fc7\u521d\u59cb\u5316\u540e\uff0c\u5176\u4ed6Spring\u7684\u751f\u547d\u5468\u671f\u6b65\u9aa4\u662f\u4e0d\u4f1a\u7ecf\u8fc7\u7684\uff0c\u6bd4\u5982\u4f9d\u8d56\u6ce8\u5165\u3002 \u6709\u540c\u5b66\u53ef\u80fd\u4f1a\u60f3\u5230\uff0c\u901a\u8fc7@Bean\u4e5f\u53ef\u4ee5\u81ea\u5df1\u751f\u6210\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3aBean\uff0c\u90a3\u4e48\u548cFactoryBean\u7684\u533a\u522b\u662f\u4ec0\u4e48\u5462\uff1f\u5176\u5b9e\u5728\u5f88\u591a\u573a\u666f\u4e0b\u4ed6\u4fe9\u662f\u53ef\u4ee5\u66ff\u6362\u7684\uff0c\u4f46\u662f\u7ad9\u5728\u539f\u7406\u5c42\u9762\u6765\u8bf4\u7684\uff0c\u533a\u522b\u5f88\u660e\u663e\uff0c@Bean\u5b9a\u4e49\u7684Bean\u662f\u4f1a\u7ecf\u8fc7\u5b8c\u6574\u7684Bean\u751f\u547d\u5468\u671f\u7684\u3002","title":"FactoryBean"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#excludefilterincludefilter","text":"\u8fd9\u4e24\u4e2aFilter\u662fSpring\u626b\u63cf\u8fc7\u7a0b\u4e2d\u7528\u6765\u8fc7\u6ee4\u7684\u3002ExcludeFilter\u8868\u793a\u6392\u9664\u8fc7\u6ee4\u5668\uff0cIncludeFilter\u8868\u793a\u5305\u542b\u8fc7\u6ee4\u5668\u3002 \u6bd4\u5982\u4ee5\u4e0b\u914d\u7f6e\uff0c\u8868\u793a\u626b\u63cfcom.zhouyu\u8fd9\u4e2a\u5305\u4e0b\u9762\u7684\u6240\u6709\u7c7b\uff0c\u4f46\u662f\u6392\u9664UserService\u7c7b\uff0c\u4e5f\u5c31\u662f\u5c31\u7b97\u5b83\u4e0a\u9762\u6709@Component\u6ce8\u89e3\u4e5f\u4e0d\u4f1a\u6210\u4e3aBean\u3002 1 2 3 4 5 6 @ComponentScan ( value = \"com.zhouyu\" , excludeFilters = { @ComponentScan.Filter ( type = FilterType . ASSIGNABLE_TYPE , classes = UserService . class )}.) public class AppConfig { } \u518d\u6bd4\u5982\u4ee5\u4e0b\u914d\u7f6e\uff0c\u5c31\u7b97UserService\u7c7b\u4e0a\u6ca1\u6709@Component\u6ce8\u89e3\uff0c\u5b83\u4e5f\u4f1a\u88ab\u626b\u63cf\u6210\u4e3a\u4e00\u4e2aBean\u3002 1 2 3 4 5 6 @ComponentScan ( value = \"com.zhouyu\" , includeFilters = { @ComponentScan.Filter ( type = FilterType . ASSIGNABLE_TYPE , classes = UserService . class )}) public class AppConfig { } FilterType\u5206\u4e3a\uff1a ANNOTATION\uff1a\u8868\u793a\u662f\u5426\u5305\u542b\u67d0\u4e2a\u6ce8\u89e3 ASSIGNABLE_TYPE\uff1a\u8868\u793a\u662f\u5426\u662f\u67d0\u4e2a\u7c7b ASPECTJ\uff1a\u8868\u793a\u5426\u662f\u7b26\u5408\u67d0\u4e2aAspectj\u8868\u8fbe\u5f0f REGEX\uff1a\u8868\u793a\u662f\u5426\u7b26\u5408\u67d0\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f CUSTOM\uff1a\u81ea\u5b9a\u4e49 \u5728Spring\u7684\u626b\u63cf\u903b\u8f91\u4e2d\uff0c\u9ed8\u8ba4\u4f1a\u6dfb\u52a0\u4e00\u4e2aAnnotationTypeFilter\u7ed9includeFilters\uff0c\u8868\u793a\u9ed8\u8ba4\u60c5\u51b5\u4e0bSpring\u626b\u63cf\u8fc7\u7a0b\u4e2d\u4f1a\u8ba4\u4e3a\u7c7b\u4e0a\u6709@Component\u6ce8\u89e3\u7684\u5c31\u662fBean\u3002","title":"ExcludeFilter\u548cIncludeFilter"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/03Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#metadatareaderclassmetadataannotationmetadata","text":"\u5728Spring\u4e2d\u9700\u8981\u53bb\u89e3\u6790\u7c7b\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u7c7b\u540d\u3001\u7c7b\u4e2d\u7684\u65b9\u6cd5\u3001\u7c7b\u4e0a\u7684\u6ce8\u89e3\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u7c7b\u7684\u5143\u6570\u636e\uff0c\u6240\u4ee5Spring\u4e2d\u5bf9\u7c7b\u7684\u5143\u6570\u636e\u505a\u4e86\u62bd\u8c61\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5de5\u5177\u7c7b\u3002 MetadataReader\u8868\u793a\u7c7b\u7684\u5143\u6570\u636e\u8bfb\u53d6\u5668\uff0c\u9ed8\u8ba4\u5b9e\u73b0\u7c7b\u4e3a SimpleMetadataReader \u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class Test { public static void main ( String [] args ) throws IOException { SimpleMetadataReaderFactory simpleMetadataReaderFactory = new SimpleMetadataReaderFactory (); // \u6784\u9020\u4e00\u4e2aMetadataReader MetadataReader metadataReader = simpleMetadataReaderFactory . getMetadataReader ( \"com.zhouyu.service.UserService\" ); // \u5f97\u5230\u4e00\u4e2aClassMetadata\uff0c\u5e76\u83b7\u53d6\u4e86\u7c7b\u540d ClassMetadata classMetadata = metadataReader . getClassMetadata (); System . out . println ( classMetadata . getClassName ()); // \u83b7\u53d6\u4e00\u4e2aAnnotationMetadata\uff0c\u5e76\u83b7\u53d6\u7c7b\u4e0a\u7684\u6ce8\u89e3\u4fe1\u606f AnnotationMetadata annotationMetadata = metadataReader . getAnnotationMetadata (); for ( String annotationType : annotationMetadata . getAnnotationTypes ()) { System . out . println ( annotationType ); } } } \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cSimpleMetadataReader\u53bb\u89e3\u6790\u7c7b\u65f6\uff0c\u4f7f\u7528\u7684 ASM\u6280\u672f \u3002 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528ASM\u6280\u672f\uff0cSpring\u542f\u52a8\u7684\u65f6\u5019\u9700\u8981\u53bb\u626b\u63cf\uff0c\u5982\u679c\u6307\u5b9a\u7684\u5305\u8def\u5f84\u6bd4\u8f83\u5bbd\u6cdb\uff0c\u90a3\u4e48\u626b\u63cf\u7684\u7c7b\u662f\u975e\u5e38\u591a\u7684\uff0c\u90a3\u5982\u679c\u5728Spring\u542f\u52a8\u65f6\u5c31\u628a\u8fd9\u4e9b\u7c7b\u5168\u90e8\u52a0\u8f7d\u8fdbJVM\u4e86\uff0c\u8fd9\u6837\u4e0d\u592a\u597d\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86ASM\u6280\u672f\u3002","title":"MetadataReader\u3001ClassMetadata\u3001AnnotationMetadata"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/","text":"Spring\u6700\u91cd\u8981\u7684\u529f\u80fd\u5c31\u662f\u5e2e\u52a9\u7a0b\u5e8f\u5458\u521b\u5efa\u5bf9\u8c61\uff08\u4e5f\u5c31\u662fIOC\uff09\uff0c\u800c\u542f\u52a8Spring\u5c31\u662f\u4e3a\u521b\u5efaBean\u5bf9\u8c61 \u505a\u51c6\u5907\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u660e\u767dSpring\u5230\u5e95\u662f\u600e\u4e48\u53bb\u521b\u5efaBean\u7684\uff0c\u4e5f\u5c31\u662f\u5148\u5f04\u660e\u767dBean\u7684\u751f\u547d\u5468\u671f\u3002 Bean\u7684\u751f\u547d\u5468\u671f\u5c31\u662f\u6307\uff1a\u5728Spring\u4e2d\uff0c\u4e00\u4e2aBean\u662f\u5982\u4f55\u751f\u6210\u7684\uff0c\u5982\u4f55\u9500\u6bc1\u7684 Bean\u751f\u547d\u5468\u671f\u6d41\u7a0b\u56fe\uff1a https://www.processon.com/view/link/5f8588c87d9c0806f27358c1 \u9644\u5e26\u8d44\u6599JFR\u4ecb\u7ecd\uff1a https://zhuanlan.zhihu.com/p/122247741 Bean\u7684\u751f\u6210\u8fc7\u7a0b 1. \u751f\u6210BeanDefinition Spring\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u8fdb\u884c\u626b\u63cf\uff0c\u4f1a\u5148\u8c03\u7528 org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider#scanCandidateComponents(String basePackage) \u626b\u63cf\u67d0\u4e2a\u5305\u8def\u5f84\uff0c\u5e76\u5f97\u5230BeanDefinition\u7684Set\u96c6\u5408\u3002 \u200b \u5173\u4e8eSpring\u542f\u52a8\u6d41\u7a0b\uff0c\u540e\u7eed\u4f1a\u5355\u72ec\u7684\u8bfe\u8be6\u7ec6\u8bb2\uff0c\u8fd9\u91cc\u5148\u8bb2\u4e00\u4e0bSpring\u626b\u63cf\u7684\u5e95\u5c42\u5b9e\u73b0\uff1a \u200b Spring\u626b\u63cf\u5e95\u5c42\u6d41\u7a0b\uff1a https://www.processon.com/view/link/61370ee60e3e7412ecd95d43 \u200b \u9996\u5148\uff0c\u901a\u8fc7ResourcePatternResolver\u83b7\u5f97\u6307\u5b9a\u5305\u8def\u5f84\u4e0b\u7684\u6240\u6709 .class \u6587\u4ef6\uff08Spring\u6e90\u7801\u4e2d\u5c06\u6b64\u6587\u4ef6\u5305\u88c5\u6210\u4e86Resource\u5bf9\u8c61\uff09 \u904d\u5386\u6bcf\u4e2aResource\u5bf9\u8c61 \u5229\u7528MetadataReaderFactory\u89e3\u6790Resource\u5bf9\u8c61\u5f97\u5230MetadataReader\uff08\u5728Spring\u6e90\u7801\u4e2dMetadataReaderFactory\u5177\u4f53\u7684\u5b9e\u73b0\u7c7b\u4e3aCachingMetadataReaderFactory\uff0cMetadataReader\u7684\u5177\u4f53\u5b9e\u73b0\u7c7b\u4e3aSimpleMetadataReader\uff09 \u5229\u7528MetadataReader\u8fdb\u884cexcludeFilters\u548cincludeFilters\uff0c\u4ee5\u53ca\u6761\u4ef6\u6ce8\u89e3@Conditional\u7684\u7b5b\u9009\uff08\u6761\u4ef6\u6ce8\u89e3\u5e76\u4e0d\u80fd\u7406\u89e3\uff1a\u67d0\u4e2a\u7c7b\u4e0a\u662f\u5426\u5b58\u5728@Conditional\u6ce8\u89e3\uff0c\u5982\u679c\u5b58\u5728\u5219\u8c03\u7528\u6ce8\u89e3\u4e2d\u6240\u6307\u5b9a\u7684\u7c7b\u7684match\u65b9\u6cd5\u8fdb\u884c\u5339\u914d\uff0c\u5339\u914d\u6210\u529f\u5219\u901a\u8fc7\u7b5b\u9009\uff0c\u5339\u914d\u5931\u8d25\u5219pass\u6389\u3002\uff09 \u7b5b\u9009\u901a\u8fc7\u540e\uff0c\u57fa\u4e8emetadataReader\u751f\u6210ScannedGenericBeanDefinition \u518d\u57fa\u4e8emetadataReader\u5224\u65ad\u662f\u4e0d\u662f\u5bf9\u5e94\u7684\u7c7b\u662f\u4e0d\u662f\u63a5\u53e3\u6216\u62bd\u8c61\u7c7b \u5982\u679c\u7b5b\u9009\u901a\u8fc7\uff0c\u90a3\u4e48\u5c31\u8868\u793a\u626b\u63cf\u5230\u4e86\u4e00\u4e2aBean\uff0c\u5c06ScannedGenericBeanDefinition\u52a0\u5165\u7ed3\u679c\u96c6 MetadataReader\u8868\u793a\u7c7b\u7684\u5143\u6570\u636e\u8bfb\u53d6\u5668\uff0c\u4e3b\u8981\u5305\u542b\u4e86\u4e00\u4e2aAnnotationMetadata\uff0c\u529f\u80fd\u6709 \u83b7\u53d6\u7c7b\u7684\u540d\u5b57\u3001 \u83b7\u53d6\u7236\u7c7b\u7684\u540d\u5b57 \u83b7\u53d6\u6240\u5b9e\u73b0\u7684\u6240\u6709\u63a5\u53e3\u540d \u83b7\u53d6\u6240\u6709\u5185\u90e8\u7c7b\u7684\u540d\u5b57 \u5224\u65ad\u662f\u4e0d\u662f\u62bd\u8c61\u7c7b \u5224\u65ad\u662f\u4e0d\u662f\u63a5\u53e3 \u5224\u65ad\u662f\u4e0d\u662f\u4e00\u4e2a\u6ce8\u89e3 \u83b7\u53d6\u62e5\u6709\u67d0\u4e2a\u6ce8\u89e3\u7684\u65b9\u6cd5\u96c6\u5408 \u83b7\u53d6\u7c7b\u4e0a\u6dfb\u52a0\u7684\u6240\u6709\u6ce8\u89e3\u4fe1\u606f \u83b7\u53d6\u7c7b\u4e0a\u6dfb\u52a0\u7684\u6240\u6709\u6ce8\u89e3\u7c7b\u578b\u96c6\u5408 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cCachingMetadataReaderFactory\u89e3\u6790\u67d0\u4e2a.class\u6587\u4ef6\u5f97\u5230MetadataReader\u5bf9\u8c61\u662f\u5229\u7528\u7684 ASM \u6280\u672f\uff0c\u5e76\u6ca1\u6709\u52a0\u8f7d\u8fd9\u4e2a\u7c7b\u5230JVM\u3002\u5e76\u4e14\uff0c\u6700\u7ec8\u5f97\u5230\u7684ScannedGenericBeanDefinition\u5bf9\u8c61\uff0c beanClass\u5c5e\u6027\u5b58\u50a8\u7684\u662f\u5f53\u524d\u7c7b\u7684\u540d\u5b57\uff0c\u800c\u4e0d\u662fclass\u5bf9\u8c61 \u3002\uff08beanClass\u5c5e\u6027\u7684\u7c7b\u578b\u662fObject\uff0c\u5b83\u5373\u53ef\u4ee5\u5b58\u50a8\u7c7b\u7684\u540d\u5b57\uff0c\u4e5f\u53ef\u4ee5\u5b58\u50a8class\u5bf9\u8c61\uff09 \u200b \u6700\u540e\uff0c\u4e0a\u9762\u662f\u8bf4\u7684\u901a\u8fc7\u626b\u63cf\u5f97\u5230BeanDefinition\u5bf9\u8c61\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u5b9a\u4e49BeanDefinition\uff0c\u6216\u89e3\u6790spring.xml\u6587\u4ef6\u7684 \uff0c\u6216\u8005@Bean\u6ce8\u89e3\u5f97\u5230BeanDefinition\u5bf9\u8c61\u3002\uff08\u540e\u7eed\u8bfe\u7a0b\u4f1a\u5206\u6790@Bean\u6ce8\u89e3\u662f\u600e\u4e48\u751f\u6210BeanDefinition\u7684\uff09\u3002 2. \u5408\u5e76BeanDefinition \u901a\u8fc7\u626b\u63cf\u5f97\u5230\u6240\u6709BeanDefinition\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u6839\u636eBeanDefinition\u521b\u5efaBean\u5bf9\u8c61\u4e86\uff0c\u4f46\u662f\u5728Spring\u4e2d\u652f\u6301\u7236\u5b50BeanDefinition\uff0c\u548cJava\u7236\u5b50\u7c7b\u7c7b\u4f3c\uff0c\u4f46\u662f\u5b8c\u5168\u4e0d\u662f\u4e00\u56de\u4e8b\u3002 \u7236\u5b50BeanDefinition\u5b9e\u9645\u7528\u7684\u6bd4\u8f83\u5c11\uff0c\u4f7f\u7528\u662f\u8fd9\u6837\u7684\uff0c\u6bd4\u5982\uff1a 1 2 < bean id = \"parent\" class =\" com . zhouyu . service . Parent \" scope=\" prototype \"/> <bean id=\" child \" class=\" com . zhouyu . service . Child \"/> \u8fd9\u4e48\u5b9a\u4e49\u7684\u60c5\u51b5\u4e0b\uff0cchild\u662f\u5355\u4f8bBean\u3002 1 2 < bean id = \"parent\" class =\" com . zhouyu . service . Parent \" scope=\" prototype \"/> <bean id=\" child \" class=\" com . zhouyu . service . Child \" parent=\" parent \"/> \u4f46\u662f\u8fd9\u4e48\u5b9a\u4e49\u7684\u60c5\u51b5\u4e0b\uff0cchild\u5c31\u662f\u539f\u578bBean\u4e86\u3002 \u200b \u56e0\u4e3achild\u7684\u7236BeanDefinition\u662fparent\uff0c\u6240\u4ee5\u4f1a\u7ee7\u627fparent\u4e0a\u6240\u5b9a\u4e49\u7684scope\u5c5e\u6027\u3002 \u200b \u800c\u5728\u6839\u636echild\u6765\u751f\u6210Bean\u5bf9\u8c61\u4e4b\u524d\uff0c\u9700\u8981\u8fdb\u884cBeanDefinition\u7684\u5408\u5e76\uff0c\u5f97\u5230\u5b8c\u6574\u7684child\u7684BeanDefinition\u3002 \u200b 3. \u52a0\u8f7d\u7c7b BeanDefinition\u5408\u5e76\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u53bb\u521b\u5efaBean\u5bf9\u8c61\u4e86\uff0c\u800c\u521b\u5efaBean\u5c31\u5fc5\u987b\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u800c\u5b9e\u4f8b\u5316\u5c31\u5fc5\u987b\u5148\u52a0\u8f7d\u5f53\u524dBeanDefinition\u6240\u5bf9\u5e94\u7684class\uff0c\u5728AbstractAutowireCapableBeanFactory\u7c7b\u7684createBean()\u65b9\u6cd5\u4e2d\uff0c\u4e00\u5f00\u59cb\u5c31\u4f1a\u8c03\u7528\uff1a 1 Class <?> resolvedClass = resolveBeanClass ( mbd , beanName ); \u8fd9\u884c\u4ee3\u7801\u5c31\u662f\u53bb\u52a0\u8f7d\u7c7b\uff0c\u8be5\u65b9\u6cd5\u662f\u8fd9\u4e48\u5b9e\u73b0\u7684\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 if ( mbd . hasBeanClass ()) { return mbd . getBeanClass (); } if ( System . getSecurityManager () != null ) { return AccessController . doPrivileged (( PrivilegedExceptionAction < Class <?>> ) () -> doResolveBeanClass ( mbd , typesToMatch ), getAccessControlContext ()); } else { return doResolveBeanClass ( mbd , typesToMatch ); } public boolean hasBeanClass () { return ( this . beanClass instanceof Class ); } \u5982\u679cbeanClass\u5c5e\u6027\u7684\u7c7b\u578b\u662fClass\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u8fd4\u56de\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5219\u4f1a\u6839\u636e\u7c7b\u540d\u8fdb\u884c\u52a0\u8f7d\uff08doResolveBeanClass\u65b9\u6cd5\u6240\u505a\u7684\u4e8b\u60c5\uff09 \u4f1a\u5229\u7528BeanFactory\u6240\u8bbe\u7f6e\u7684\u7c7b\u52a0\u8f7d\u5668\u6765\u52a0\u8f7d\u7c7b\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u9ed8\u8ba4\u4f7f\u7528 ClassUtils.getDefaultClassLoader() \u6240\u8fd4\u56de\u7684\u7c7b\u52a0\u8f7d\u5668\u6765\u52a0\u8f7d\u3002 ClassUtils.getDefaultClassLoader() \u4f18\u5148\u8fd4\u56de\u5f53\u524d\u7ebf\u7a0b\u4e2d\u7684ClassLoader \u7ebf\u7a0b\u4e2d\u7c7b\u52a0\u8f7d\u5668\u4e3anull\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56deClassUtils\u7c7b\u7684\u7c7b\u52a0\u8f7d\u5668 \u5982\u679cClassUtils\u7c7b\u7684\u7c7b\u52a0\u8f7d\u5668\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5219\u8868\u793a\u662fBootstrap\u7c7b\u52a0\u8f7d\u5668\u52a0\u8f7d\u7684ClassUtils\u7c7b\uff0c\u90a3\u4e48\u5219\u8fd4\u56de\u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668 4. \u5b9e\u4f8b\u5316\u524d \u5f53\u524dBeanDefinition\u5bf9\u5e94\u7684\u7c7b\u6210\u529f\u52a0\u8f7d\u540e\uff0c\u5c31\u53ef\u4ee5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u4e86\uff0c\u4f46\u662f... \u200b \u5728Spring\u4e2d\uff0c\u5b9e\u4f8b\u5316\u5bf9\u8c61\u4e4b\u524d\uff0cSpring\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6269\u5c55\u70b9\uff0c\u5141\u8bb8\u7528\u6237\u6765\u63a7\u5236\u662f\u5426\u5728\u67d0\u4e2a\u6216\u67d0\u4e9bBean\u5b9e\u4f8b\u5316\u4e4b\u524d\u505a\u4e00\u4e9b\u542f\u52a8\u52a8\u4f5c\u3002\u8fd9\u4e2a\u6269\u5c55\u70b9\u53eb InstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation() \u3002\u6bd4\u5982\uff1a \u200b 1 2 3 4 5 6 7 8 9 10 11 @Component public class ZhouyuBeanPostProcessor implements InstantiationAwareBeanPostProcessor { @Override public Object postProcessBeforeInstantiation ( Class <?> beanClass , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u5b9e\u4f8b\u5316\u524d\" ); } return null ; } } \u5982\u4e0a\u4ee3\u7801\u4f1a\u5bfc\u81f4\uff0c\u5728userService\u8fd9\u4e2aBean\u5b9e\u4f8b\u5316\u524d\uff0c\u4f1a\u8fdb\u884c\u6253\u5370\u3002 \u200b \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cpostProcessBeforeInstantiation()\u662f\u6709\u8fd4\u56de\u503c\u7684\uff0c\u5982\u679c\u8fd9\u4e48\u5b9e\u73b0\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 @Component public class ZhouyuBeanPostProcessor implements InstantiationAwareBeanPostProcessor { @Override public Object postProcessBeforeInstantiation ( Class <?> beanClass , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u5b9e\u4f8b\u5316\u524d\" ); return new UserService (); } return null ; } } userService\u8fd9\u4e2aBean\uff0c\u5728\u5b9e\u4f8b\u5316\u524d\u4f1a\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u7531\u6211\u4eec\u6240\u5b9a\u4e49\u7684UserService\u5bf9\u8c61\u3002\u5982\u679c\u662f\u8fd9\u6837\uff0c\u8868\u793a\u4e0d\u9700\u8981Spring\u6765\u5b9e\u4f8b\u5316\u4e86\uff0c\u5e76\u4e14\u540e\u7eed\u7684Spring\u4f9d\u8d56\u6ce8\u5165\u4e5f\u4e0d\u4f1a\u8fdb\u884c\u4e86\uff0c\u4f1a\u8df3\u8fc7\u4e00\u4e9b\u6b65\u9aa4\uff0c\u76f4\u63a5\u6267\u884c\u521d\u59cb\u5316\u540e\u8fd9\u4e00\u6b65\u3002 5. \u5b9e\u4f8b\u5316 \u5728\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\u5c31\u4f1a\u6839\u636eBeanDefinition\u53bb\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u4e86\u3002 5.1 Supplier\u521b\u5efa\u5bf9\u8c61 \u9996\u5148\u5224\u65adBeanDefinition\u4e2d\u662f\u5426\u8bbe\u7f6e\u4e86Supplier\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\u5219\u8c03\u7528Supplier\u7684get()\u5f97\u5230\u5bf9\u8c61\u3002 \u200b \u5f97\u76f4\u63a5\u4f7f\u7528BeanDefinition\u5bf9\u8c61\u6765\u8bbe\u7f6eSupplier\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder . genericBeanDefinition (). getBeanDefinition (); beanDefinition . setInstanceSupplier ( new Supplier < Object > () { @Override public Object get () { return new UserService (); } }); context . registerBeanDefinition ( \"userService\" , beanDefinition ); 5.2 \u5de5\u5382\u65b9\u6cd5\u521b\u5efa\u5bf9\u8c61 \u5982\u679c\u6ca1\u6709\u8bbe\u7f6eSupplier\uff0c\u5219\u68c0\u67e5BeanDefinition\u4e2d\u662f\u5426\u8bbe\u7f6e\u4e86factoryMethod\uff0c\u4e5f\u5c31\u662f\u5de5\u5382\u65b9\u6cd5\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8bbe\u7f6efactoryMethod\uff0c\u6bd4\u5982\uff1a \u200b \u65b9\u5f0f\u4e00\uff1a 1 < bean id = \"userService\" class =\" com . zhouyu . service . UserService \" factory-method=\" createUserService \" /> \u5bf9\u5e94\u7684UserService\u7c7b\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 public class UserService { public static UserService createUserService () { System . out . println ( \"\u6267\u884ccreateUserService()\" ); UserService userService = new UserService (); return userService ; } public void test () { System . out . println ( \"test\" ); } } \u65b9\u5f0f\u4e8c\uff1a 1 2 < bean id = \"commonService\" class =\" com . zhouyu . service . CommonService \"/> <bean id=\" userService1 \" factory-bean=\" commonService \" factory-method=\" createUserService \" /> \u5bf9\u5e94\u7684CommonService\u7684\u7c7b\u4e3a\uff1a 1 2 3 4 5 6 public class CommonService { public UserService createUserService () { return new UserService (); } } Spring\u53d1\u73b0\u5f53\u524dBeanDefinition\u65b9\u6cd5\u8bbe\u7f6e\u4e86\u5de5\u5382\u65b9\u6cd5\u540e\uff0c\u5c31\u4f1a\u533a\u5206\u8fd9\u4e24\u79cd\u65b9\u5f0f\uff0c\u7136\u540e\u8c03\u7528\u5de5\u5382\u65b9\u6cd5\u5f97\u5230\u5bf9\u8c61\u3002 \u200b \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u901a\u8fc7@Bean\u6240\u5b9a\u4e49\u7684BeanDefinition\uff0c\u662f\u5b58\u5728factoryMethod\u548cfactoryBean\u7684\uff0c\u4e5f\u5c31\u662f\u548c\u4e0a\u9762\u7684\u65b9\u5f0f\u4e8c\u975e\u5e38\u7c7b\u4f3c\uff0c@Bean\u6240\u6ce8\u89e3\u7684\u65b9\u6cd5\u5c31\u662ffactoryMethod\uff0cAppConfig\u5bf9\u8c61\u5c31\u662ffactoryBean\u3002\u5982\u679c@Bean\u6240\u6240\u6ce8\u89e3\u7684\u65b9\u6cd5\u662fstatic\u7684\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u5c31\u662f\u65b9\u5f0f\u4e00\u3002 5.3 \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \u7b2c\u4e00\u8282\u5df2\u7ecf\u8bb2\u8fc7\u4e00\u904d\u5927\u6982\u539f\u7406\u4e86\uff0c\u540e\u9762\u6709\u4e00\u8282\u8bfe\u5355\u72ec\u5206\u6790\u6e90\u7801\u5b9e\u73b0\u3002\u63a8\u65ad\u5b8c\u6784\u9020\u65b9\u6cd5\u540e\uff0c\u5c31\u4f1a\u4f7f\u7528\u6784\u9020\u65b9\u6cd5\u6765\u8fdb\u884c\u5b9e\u4f8b\u5316\u4e86\u3002 \u200b \u989d\u5916\u7684\uff0c\u5728\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u903b\u8f91\u4e2d\u9664\u5f00\u4f1a\u53bb\u9009\u62e9\u6784\u9020\u65b9\u6cd5\u4ee5\u53ca\u67e5\u627e\u5165\u53c2\u5bf9\u8c61\u610f\u5916\uff0c\u4f1a\u8fd8\u5224\u65ad\u662f\u5426\u5728\u5bf9\u5e94\u7684\u7c7b\u4e2d\u662f\u5426\u5b58\u5728\u4f7f\u7528 @Lookup\u6ce8\u89e3 \u4e86\u65b9\u6cd5\u3002\u5982\u679c\u5b58\u5728\u5219\u628a\u8be5\u65b9\u6cd5\u5c01\u88c5\u4e3aLookupOverride\u5bf9\u8c61\u5e76\u6dfb\u52a0\u5230BeanDefinition\u4e2d\u3002 \u200b \u5728\u5b9e\u4f8b\u5316\u65f6\uff0c\u5982\u679c\u5224\u65ad\u51fa\u6765\u5f53\u524dBeanDefinition\u4e2d\u6ca1\u6709LookupOverride\uff0c\u90a3\u5c31\u76f4\u63a5\u7528\u6784\u9020\u65b9\u6cd5\u53cd\u5c04\u5f97\u5230\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u3002\u5982\u679c\u5b58\u5728LookupOverride\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u7c7b\u4e2d\u5b58\u5728@Lookup\u6ce8\u89e3\u4e86\u7684\u65b9\u6cd5\uff0c\u90a3\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b @Lookup\u6ce8\u89e3\u5c31\u662f \u65b9\u6cd5\u6ce8\u5165 \uff0c\u4f7f\u7528demo\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @Component public class UserService { private OrderService orderService ; public void test () { OrderService orderService = createOrderService (); System . out . println ( orderService ); } @Lookup ( \"orderService\" ) public OrderService createOrderService () { return null ; } } 6. BeanDefinition\u7684\u540e\u7f6e\u5904\u7406 Bean\u5bf9\u8c61\u5b9e\u4f8b\u5316\u51fa\u6765\u4e4b\u540e\uff0c\u63a5\u4e0b\u6765\u5c31\u5e94\u8be5\u7ed9\u5bf9\u8c61\u7684\u5c5e\u6027\u8d4b\u503c\u4e86\u3002\u5728\u771f\u6b63\u7ed9\u5c5e\u6027\u8d4b\u503c\u4e4b\u524d\uff0cSpring\u53c8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6269\u5c55\u70b9 MergedBeanDefinitionPostProcessor.postProcessMergedBeanDefinition() \uff0c\u53ef\u4ee5\u5bf9\u6b64\u65f6\u7684BeanDefinition\u8fdb\u884c\u52a0\u5de5\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 @Component public class ZhouyuMergedBeanDefinitionPostProcessor implements MergedBeanDefinitionPostProcessor { @Override public void postProcessMergedBeanDefinition ( RootBeanDefinition beanDefinition , Class <?> beanType , String beanName ) { if ( \"userService\" . equals ( beanName )) { beanDefinition . getPropertyValues (). add ( \"orderService\" , new OrderService ()); } } } \u5728Spring\u6e90\u7801\u4e2d\uff0cAutowiredAnnotationBeanPostProcessor\u5c31\u662f\u4e00\u4e2aMergedBeanDefinitionPostProcessor\uff0c\u5b83\u7684postProcessMergedBeanDefinition()\u4e2d\u4f1a\u53bb\u67e5\u627e\u6ce8\u5165\u70b9\uff0c\u5e76\u7f13\u5b58\u5728AutowiredAnnotationBeanPostProcessor\u5bf9\u8c61\u7684\u4e00\u4e2aMap\u4e2d\uff08injectionMetadataCache\uff09\u3002 7. \u5b9e\u4f8b\u5316\u540e \u5728\u5904\u7406\u5b8cBeanDefinition\u540e\uff0cSpring\u53c8\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u6269\u5c55\u70b9\uff1a InstantiationAwareBeanPostProcessor.postProcessAfterInstantiation() \uff0c\u6bd4\u5982\uff1a \u200b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 @Component public class ZhouyuInstantiationAwareBeanPostProcessor implements InstantiationAwareBeanPostProcessor { @Override public boolean postProcessAfterInstantiation ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { UserService userService = ( UserService ) bean ; userService . test (); } return true ; } } \u4e0a\u8ff0\u4ee3\u7801\u5c31\u662f\u5bf9userService\u6240\u5b9e\u4f8b\u5316\u51fa\u6765\u7684\u5bf9\u8c61\u8fdb\u884c\u5904\u7406\u3002 \u200b \u8fd9\u4e2a\u6269\u5c55\u70b9\uff0c\u5728Spring\u6e90\u7801\u4e2d\u57fa\u672c\u6ca1\u6709\u600e\u4e48\u4f7f\u7528\u3002 8. \u81ea\u52a8\u6ce8\u5165 \u8fd9\u91cc\u7684\u81ea\u52a8\u6ce8\u5165\u6307\u7684\u662fSpring\u7684\u81ea\u52a8\u6ce8\u5165\uff0c\u540e\u7eed\u4f9d\u8d56\u6ce8\u5165\u8bfe\u7a0b\u4e2d\u5355\u72ec\u8bb2 \u200b 9. \u5904\u7406\u5c5e\u6027 \u8fd9\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u5c31\u4f1a\u5904\u7406@Autowired\u3001@Resource\u3001@Value\u7b49\u6ce8\u89e3\uff0c\u4e5f\u662f\u901a\u8fc7 InstantiationAwareBeanPostProcessor.postProcessProperties() \u6269\u5c55\u70b9\u6765\u5b9e\u73b0\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5df1\u7684\u81ea\u52a8\u6ce8\u5165\u529f\u80fd\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 @Component public class ZhouyuInstantiationAwareBeanPostProcessor implements InstantiationAwareBeanPostProcessor { @Override public PropertyValues postProcessProperties ( PropertyValues pvs , Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { for ( Field field : bean . getClass (). getFields ()) { if ( field . isAnnotationPresent ( ZhouyuInject . class )) { field . setAccessible ( true ); try { field . set ( bean , \"123\" ); } catch ( IllegalAccessException e ) { e . printStackTrace (); } } } } return pvs ; } } \u5173\u4e8e@Autowired\u3001@Resource\u3001@Value\u7684\u5e95\u5c42\u6e90\u7801\uff0c\u4f1a\u5728\u540e\u7eed\u7684\u4f9d\u8d56\u6ce8\u5165\u8bfe\u7a0b\u4e2d\u8be6\u89e3\u3002 10. \u6267\u884cAware \u5b8c\u6210\u4e86\u5c5e\u6027\u8d4b\u503c\u4e4b\u540e\uff0cSpring\u4f1a\u6267\u884c\u4e00\u4e9b\u56de\u8c03\uff0c\u5305\u62ec\uff1a BeanNameAware\uff1a\u56de\u4f20beanName\u7ed9bean\u5bf9\u8c61\u3002 BeanClassLoaderAware\uff1a\u56de\u4f20classLoader\u7ed9bean\u5bf9\u8c61\u3002 BeanFactoryAware\uff1a\u56de\u4f20beanFactory\u7ed9\u5bf9\u8c61\u3002 11. \u521d\u59cb\u5316\u524d \u521d\u59cb\u5316\u524d\uff0c\u4e5f\u662fSpring\u63d0\u4f9b\u7684\u4e00\u4e2a\u6269\u5c55\u70b9\uff1a BeanPostProcessor.postProcessBeforeInitialization() \uff0c\u6bd4\u5982 1 2 3 4 5 6 7 8 9 10 11 12 @Component public class ZhouyuBeanPostProcessor implements BeanPostProcessor { @Override public Object postProcessBeforeInitialization ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u521d\u59cb\u5316\u524d\" ); } return bean ; } } \u5229\u7528\u521d\u59cb\u5316\u524d\uff0c\u53ef\u4ee5\u5bf9\u8fdb\u884c\u4e86\u4f9d\u8d56\u6ce8\u5165\u7684Bean\u8fdb\u884c\u5904\u7406\u3002 \u200b \u5728Spring\u6e90\u7801\u4e2d\uff1a InitDestroyAnnotationBeanPostProcessor\u4f1a\u5728\u521d\u59cb\u5316\u524d\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\u6267\u884c@PostConstruct\u7684\u65b9\u6cd5\uff0c ApplicationContextAwareProcessor\u4f1a\u5728\u521d\u59cb\u5316\u524d\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\u8fdb\u884c\u5176\u4ed6Aware\u7684\u56de\u8c03\uff1a EnvironmentAware\uff1a\u56de\u4f20\u73af\u5883\u53d8\u91cf EmbeddedValueResolverAware\uff1a\u56de\u4f20\u5360\u4f4d\u7b26\u89e3\u6790\u5668 ResourceLoaderAware\uff1a\u56de\u4f20\u8d44\u6e90\u52a0\u8f7d\u5668 ApplicationEventPublisherAware\uff1a\u56de\u4f20\u4e8b\u4ef6\u53d1\u5e03\u5668 MessageSourceAware\uff1a\u56de\u4f20\u56fd\u9645\u5316\u8d44\u6e90 ApplicationStartupAware\uff1a\u56de\u4f20\u5e94\u7528\u5176\u4ed6\u76d1\u542c\u5bf9\u8c61\uff0c\u53ef\u5ffd\u7565 ApplicationContextAware\uff1a\u56de\u4f20Spring\u5bb9\u5668ApplicationContext 12. \u521d\u59cb\u5316 \u67e5\u770b\u5f53\u524dBean\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86InitializingBean\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\u5c31\u8c03\u7528\u5176afterPropertiesSet()\u65b9\u6cd5 \u6267\u884cBeanDefinition\u4e2d\u6307\u5b9a\u7684\u521d\u59cb\u5316\u65b9\u6cd5 13. \u521d\u59cb\u5316\u540e \u8fd9\u662fBean\u521b\u5efa\u751f\u547d\u5468\u671f\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u6b65\u9aa4\uff0c\u4e5f\u662fSpring\u63d0\u4f9b\u7684\u4e00\u4e2a\u6269\u5c55\u70b9\uff1a BeanPostProcessor.postProcessAfterInitialization() \uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 @Component public class ZhouyuBeanPostProcessor implements BeanPostProcessor { @Override public Object postProcessAfterInitialization ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u521d\u59cb\u5316\u540e\" ); } return bean ; } } \u53ef\u4ee5\u5728\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u5bf9Bean\u6700\u7ec8\u8fdb\u884c\u5904\u7406\uff0cSpring\u4e2d\u7684 AOP\u5c31\u662f\u57fa\u4e8e\u521d\u59cb\u5316\u540e\u5b9e\u73b0 \u7684\uff0c \u521d\u59cb\u5316\u540e\u8fd4\u56de\u7684\u5bf9\u8c61\u624d\u662f\u6700\u7ec8\u7684Bean\u5bf9\u8c61 \u3002 \u603b\u7ed3BeanPostProcessor InstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation() \u5b9e\u4f8b\u5316 MergedBeanDefinitionPostProcessor.postProcessMergedBeanDefinition() InstantiationAwareBeanPostProcessor.postProcessAfterInstantiation() \u81ea\u52a8\u6ce8\u5165 InstantiationAwareBeanPostProcessor.postProcessProperties() Aware\u5bf9\u8c61 BeanPostProcessor.postProcessBeforeInitialization() \u521d\u59cb\u5316 BeanPostProcessor.postProcessAfterInitialization()","title":"4.Spring\u4e4bBean\u751f\u547d\u5468\u671f\u6e90\u7801\u89e3\u6790\u4e0a"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#bean","text":"","title":"Bean\u7684\u751f\u6210\u8fc7\u7a0b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#1-beandefinition","text":"Spring\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u8fdb\u884c\u626b\u63cf\uff0c\u4f1a\u5148\u8c03\u7528 org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider#scanCandidateComponents(String basePackage) \u626b\u63cf\u67d0\u4e2a\u5305\u8def\u5f84\uff0c\u5e76\u5f97\u5230BeanDefinition\u7684Set\u96c6\u5408\u3002 \u200b \u5173\u4e8eSpring\u542f\u52a8\u6d41\u7a0b\uff0c\u540e\u7eed\u4f1a\u5355\u72ec\u7684\u8bfe\u8be6\u7ec6\u8bb2\uff0c\u8fd9\u91cc\u5148\u8bb2\u4e00\u4e0bSpring\u626b\u63cf\u7684\u5e95\u5c42\u5b9e\u73b0\uff1a \u200b Spring\u626b\u63cf\u5e95\u5c42\u6d41\u7a0b\uff1a https://www.processon.com/view/link/61370ee60e3e7412ecd95d43 \u200b \u9996\u5148\uff0c\u901a\u8fc7ResourcePatternResolver\u83b7\u5f97\u6307\u5b9a\u5305\u8def\u5f84\u4e0b\u7684\u6240\u6709 .class \u6587\u4ef6\uff08Spring\u6e90\u7801\u4e2d\u5c06\u6b64\u6587\u4ef6\u5305\u88c5\u6210\u4e86Resource\u5bf9\u8c61\uff09 \u904d\u5386\u6bcf\u4e2aResource\u5bf9\u8c61 \u5229\u7528MetadataReaderFactory\u89e3\u6790Resource\u5bf9\u8c61\u5f97\u5230MetadataReader\uff08\u5728Spring\u6e90\u7801\u4e2dMetadataReaderFactory\u5177\u4f53\u7684\u5b9e\u73b0\u7c7b\u4e3aCachingMetadataReaderFactory\uff0cMetadataReader\u7684\u5177\u4f53\u5b9e\u73b0\u7c7b\u4e3aSimpleMetadataReader\uff09 \u5229\u7528MetadataReader\u8fdb\u884cexcludeFilters\u548cincludeFilters\uff0c\u4ee5\u53ca\u6761\u4ef6\u6ce8\u89e3@Conditional\u7684\u7b5b\u9009\uff08\u6761\u4ef6\u6ce8\u89e3\u5e76\u4e0d\u80fd\u7406\u89e3\uff1a\u67d0\u4e2a\u7c7b\u4e0a\u662f\u5426\u5b58\u5728@Conditional\u6ce8\u89e3\uff0c\u5982\u679c\u5b58\u5728\u5219\u8c03\u7528\u6ce8\u89e3\u4e2d\u6240\u6307\u5b9a\u7684\u7c7b\u7684match\u65b9\u6cd5\u8fdb\u884c\u5339\u914d\uff0c\u5339\u914d\u6210\u529f\u5219\u901a\u8fc7\u7b5b\u9009\uff0c\u5339\u914d\u5931\u8d25\u5219pass\u6389\u3002\uff09 \u7b5b\u9009\u901a\u8fc7\u540e\uff0c\u57fa\u4e8emetadataReader\u751f\u6210ScannedGenericBeanDefinition \u518d\u57fa\u4e8emetadataReader\u5224\u65ad\u662f\u4e0d\u662f\u5bf9\u5e94\u7684\u7c7b\u662f\u4e0d\u662f\u63a5\u53e3\u6216\u62bd\u8c61\u7c7b \u5982\u679c\u7b5b\u9009\u901a\u8fc7\uff0c\u90a3\u4e48\u5c31\u8868\u793a\u626b\u63cf\u5230\u4e86\u4e00\u4e2aBean\uff0c\u5c06ScannedGenericBeanDefinition\u52a0\u5165\u7ed3\u679c\u96c6 MetadataReader\u8868\u793a\u7c7b\u7684\u5143\u6570\u636e\u8bfb\u53d6\u5668\uff0c\u4e3b\u8981\u5305\u542b\u4e86\u4e00\u4e2aAnnotationMetadata\uff0c\u529f\u80fd\u6709 \u83b7\u53d6\u7c7b\u7684\u540d\u5b57\u3001 \u83b7\u53d6\u7236\u7c7b\u7684\u540d\u5b57 \u83b7\u53d6\u6240\u5b9e\u73b0\u7684\u6240\u6709\u63a5\u53e3\u540d \u83b7\u53d6\u6240\u6709\u5185\u90e8\u7c7b\u7684\u540d\u5b57 \u5224\u65ad\u662f\u4e0d\u662f\u62bd\u8c61\u7c7b \u5224\u65ad\u662f\u4e0d\u662f\u63a5\u53e3 \u5224\u65ad\u662f\u4e0d\u662f\u4e00\u4e2a\u6ce8\u89e3 \u83b7\u53d6\u62e5\u6709\u67d0\u4e2a\u6ce8\u89e3\u7684\u65b9\u6cd5\u96c6\u5408 \u83b7\u53d6\u7c7b\u4e0a\u6dfb\u52a0\u7684\u6240\u6709\u6ce8\u89e3\u4fe1\u606f \u83b7\u53d6\u7c7b\u4e0a\u6dfb\u52a0\u7684\u6240\u6709\u6ce8\u89e3\u7c7b\u578b\u96c6\u5408 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cCachingMetadataReaderFactory\u89e3\u6790\u67d0\u4e2a.class\u6587\u4ef6\u5f97\u5230MetadataReader\u5bf9\u8c61\u662f\u5229\u7528\u7684 ASM \u6280\u672f\uff0c\u5e76\u6ca1\u6709\u52a0\u8f7d\u8fd9\u4e2a\u7c7b\u5230JVM\u3002\u5e76\u4e14\uff0c\u6700\u7ec8\u5f97\u5230\u7684ScannedGenericBeanDefinition\u5bf9\u8c61\uff0c beanClass\u5c5e\u6027\u5b58\u50a8\u7684\u662f\u5f53\u524d\u7c7b\u7684\u540d\u5b57\uff0c\u800c\u4e0d\u662fclass\u5bf9\u8c61 \u3002\uff08beanClass\u5c5e\u6027\u7684\u7c7b\u578b\u662fObject\uff0c\u5b83\u5373\u53ef\u4ee5\u5b58\u50a8\u7c7b\u7684\u540d\u5b57\uff0c\u4e5f\u53ef\u4ee5\u5b58\u50a8class\u5bf9\u8c61\uff09 \u200b \u6700\u540e\uff0c\u4e0a\u9762\u662f\u8bf4\u7684\u901a\u8fc7\u626b\u63cf\u5f97\u5230BeanDefinition\u5bf9\u8c61\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u5b9a\u4e49BeanDefinition\uff0c\u6216\u89e3\u6790spring.xml\u6587\u4ef6\u7684 \uff0c\u6216\u8005@Bean\u6ce8\u89e3\u5f97\u5230BeanDefinition\u5bf9\u8c61\u3002\uff08\u540e\u7eed\u8bfe\u7a0b\u4f1a\u5206\u6790@Bean\u6ce8\u89e3\u662f\u600e\u4e48\u751f\u6210BeanDefinition\u7684\uff09\u3002","title":"1. \u751f\u6210BeanDefinition"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#2-beandefinition","text":"\u901a\u8fc7\u626b\u63cf\u5f97\u5230\u6240\u6709BeanDefinition\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u6839\u636eBeanDefinition\u521b\u5efaBean\u5bf9\u8c61\u4e86\uff0c\u4f46\u662f\u5728Spring\u4e2d\u652f\u6301\u7236\u5b50BeanDefinition\uff0c\u548cJava\u7236\u5b50\u7c7b\u7c7b\u4f3c\uff0c\u4f46\u662f\u5b8c\u5168\u4e0d\u662f\u4e00\u56de\u4e8b\u3002 \u7236\u5b50BeanDefinition\u5b9e\u9645\u7528\u7684\u6bd4\u8f83\u5c11\uff0c\u4f7f\u7528\u662f\u8fd9\u6837\u7684\uff0c\u6bd4\u5982\uff1a 1 2 < bean id = \"parent\" class =\" com . zhouyu . service . Parent \" scope=\" prototype \"/> <bean id=\" child \" class=\" com . zhouyu . service . Child \"/> \u8fd9\u4e48\u5b9a\u4e49\u7684\u60c5\u51b5\u4e0b\uff0cchild\u662f\u5355\u4f8bBean\u3002 1 2 < bean id = \"parent\" class =\" com . zhouyu . service . Parent \" scope=\" prototype \"/> <bean id=\" child \" class=\" com . zhouyu . service . Child \" parent=\" parent \"/> \u4f46\u662f\u8fd9\u4e48\u5b9a\u4e49\u7684\u60c5\u51b5\u4e0b\uff0cchild\u5c31\u662f\u539f\u578bBean\u4e86\u3002 \u200b \u56e0\u4e3achild\u7684\u7236BeanDefinition\u662fparent\uff0c\u6240\u4ee5\u4f1a\u7ee7\u627fparent\u4e0a\u6240\u5b9a\u4e49\u7684scope\u5c5e\u6027\u3002 \u200b \u800c\u5728\u6839\u636echild\u6765\u751f\u6210Bean\u5bf9\u8c61\u4e4b\u524d\uff0c\u9700\u8981\u8fdb\u884cBeanDefinition\u7684\u5408\u5e76\uff0c\u5f97\u5230\u5b8c\u6574\u7684child\u7684BeanDefinition\u3002 \u200b","title":"2. \u5408\u5e76BeanDefinition"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#3","text":"BeanDefinition\u5408\u5e76\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u53bb\u521b\u5efaBean\u5bf9\u8c61\u4e86\uff0c\u800c\u521b\u5efaBean\u5c31\u5fc5\u987b\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u800c\u5b9e\u4f8b\u5316\u5c31\u5fc5\u987b\u5148\u52a0\u8f7d\u5f53\u524dBeanDefinition\u6240\u5bf9\u5e94\u7684class\uff0c\u5728AbstractAutowireCapableBeanFactory\u7c7b\u7684createBean()\u65b9\u6cd5\u4e2d\uff0c\u4e00\u5f00\u59cb\u5c31\u4f1a\u8c03\u7528\uff1a 1 Class <?> resolvedClass = resolveBeanClass ( mbd , beanName ); \u8fd9\u884c\u4ee3\u7801\u5c31\u662f\u53bb\u52a0\u8f7d\u7c7b\uff0c\u8be5\u65b9\u6cd5\u662f\u8fd9\u4e48\u5b9e\u73b0\u7684\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 if ( mbd . hasBeanClass ()) { return mbd . getBeanClass (); } if ( System . getSecurityManager () != null ) { return AccessController . doPrivileged (( PrivilegedExceptionAction < Class <?>> ) () -> doResolveBeanClass ( mbd , typesToMatch ), getAccessControlContext ()); } else { return doResolveBeanClass ( mbd , typesToMatch ); } public boolean hasBeanClass () { return ( this . beanClass instanceof Class ); } \u5982\u679cbeanClass\u5c5e\u6027\u7684\u7c7b\u578b\u662fClass\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u8fd4\u56de\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5219\u4f1a\u6839\u636e\u7c7b\u540d\u8fdb\u884c\u52a0\u8f7d\uff08doResolveBeanClass\u65b9\u6cd5\u6240\u505a\u7684\u4e8b\u60c5\uff09 \u4f1a\u5229\u7528BeanFactory\u6240\u8bbe\u7f6e\u7684\u7c7b\u52a0\u8f7d\u5668\u6765\u52a0\u8f7d\u7c7b\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u9ed8\u8ba4\u4f7f\u7528 ClassUtils.getDefaultClassLoader() \u6240\u8fd4\u56de\u7684\u7c7b\u52a0\u8f7d\u5668\u6765\u52a0\u8f7d\u3002 ClassUtils.getDefaultClassLoader() \u4f18\u5148\u8fd4\u56de\u5f53\u524d\u7ebf\u7a0b\u4e2d\u7684ClassLoader \u7ebf\u7a0b\u4e2d\u7c7b\u52a0\u8f7d\u5668\u4e3anull\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56deClassUtils\u7c7b\u7684\u7c7b\u52a0\u8f7d\u5668 \u5982\u679cClassUtils\u7c7b\u7684\u7c7b\u52a0\u8f7d\u5668\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5219\u8868\u793a\u662fBootstrap\u7c7b\u52a0\u8f7d\u5668\u52a0\u8f7d\u7684ClassUtils\u7c7b\uff0c\u90a3\u4e48\u5219\u8fd4\u56de\u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668","title":"3. \u52a0\u8f7d\u7c7b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#4","text":"\u5f53\u524dBeanDefinition\u5bf9\u5e94\u7684\u7c7b\u6210\u529f\u52a0\u8f7d\u540e\uff0c\u5c31\u53ef\u4ee5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u4e86\uff0c\u4f46\u662f... \u200b \u5728Spring\u4e2d\uff0c\u5b9e\u4f8b\u5316\u5bf9\u8c61\u4e4b\u524d\uff0cSpring\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6269\u5c55\u70b9\uff0c\u5141\u8bb8\u7528\u6237\u6765\u63a7\u5236\u662f\u5426\u5728\u67d0\u4e2a\u6216\u67d0\u4e9bBean\u5b9e\u4f8b\u5316\u4e4b\u524d\u505a\u4e00\u4e9b\u542f\u52a8\u52a8\u4f5c\u3002\u8fd9\u4e2a\u6269\u5c55\u70b9\u53eb InstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation() \u3002\u6bd4\u5982\uff1a \u200b 1 2 3 4 5 6 7 8 9 10 11 @Component public class ZhouyuBeanPostProcessor implements InstantiationAwareBeanPostProcessor { @Override public Object postProcessBeforeInstantiation ( Class <?> beanClass , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u5b9e\u4f8b\u5316\u524d\" ); } return null ; } } \u5982\u4e0a\u4ee3\u7801\u4f1a\u5bfc\u81f4\uff0c\u5728userService\u8fd9\u4e2aBean\u5b9e\u4f8b\u5316\u524d\uff0c\u4f1a\u8fdb\u884c\u6253\u5370\u3002 \u200b \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cpostProcessBeforeInstantiation()\u662f\u6709\u8fd4\u56de\u503c\u7684\uff0c\u5982\u679c\u8fd9\u4e48\u5b9e\u73b0\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 @Component public class ZhouyuBeanPostProcessor implements InstantiationAwareBeanPostProcessor { @Override public Object postProcessBeforeInstantiation ( Class <?> beanClass , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u5b9e\u4f8b\u5316\u524d\" ); return new UserService (); } return null ; } } userService\u8fd9\u4e2aBean\uff0c\u5728\u5b9e\u4f8b\u5316\u524d\u4f1a\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u7531\u6211\u4eec\u6240\u5b9a\u4e49\u7684UserService\u5bf9\u8c61\u3002\u5982\u679c\u662f\u8fd9\u6837\uff0c\u8868\u793a\u4e0d\u9700\u8981Spring\u6765\u5b9e\u4f8b\u5316\u4e86\uff0c\u5e76\u4e14\u540e\u7eed\u7684Spring\u4f9d\u8d56\u6ce8\u5165\u4e5f\u4e0d\u4f1a\u8fdb\u884c\u4e86\uff0c\u4f1a\u8df3\u8fc7\u4e00\u4e9b\u6b65\u9aa4\uff0c\u76f4\u63a5\u6267\u884c\u521d\u59cb\u5316\u540e\u8fd9\u4e00\u6b65\u3002","title":"4. \u5b9e\u4f8b\u5316\u524d"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#5","text":"\u5728\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\u5c31\u4f1a\u6839\u636eBeanDefinition\u53bb\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u4e86\u3002","title":"5. \u5b9e\u4f8b\u5316"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#51-supplier","text":"\u9996\u5148\u5224\u65adBeanDefinition\u4e2d\u662f\u5426\u8bbe\u7f6e\u4e86Supplier\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\u5219\u8c03\u7528Supplier\u7684get()\u5f97\u5230\u5bf9\u8c61\u3002 \u200b \u5f97\u76f4\u63a5\u4f7f\u7528BeanDefinition\u5bf9\u8c61\u6765\u8bbe\u7f6eSupplier\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder . genericBeanDefinition (). getBeanDefinition (); beanDefinition . setInstanceSupplier ( new Supplier < Object > () { @Override public Object get () { return new UserService (); } }); context . registerBeanDefinition ( \"userService\" , beanDefinition );","title":"5.1 Supplier\u521b\u5efa\u5bf9\u8c61"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#52","text":"\u5982\u679c\u6ca1\u6709\u8bbe\u7f6eSupplier\uff0c\u5219\u68c0\u67e5BeanDefinition\u4e2d\u662f\u5426\u8bbe\u7f6e\u4e86factoryMethod\uff0c\u4e5f\u5c31\u662f\u5de5\u5382\u65b9\u6cd5\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8bbe\u7f6efactoryMethod\uff0c\u6bd4\u5982\uff1a \u200b \u65b9\u5f0f\u4e00\uff1a 1 < bean id = \"userService\" class =\" com . zhouyu . service . UserService \" factory-method=\" createUserService \" /> \u5bf9\u5e94\u7684UserService\u7c7b\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 public class UserService { public static UserService createUserService () { System . out . println ( \"\u6267\u884ccreateUserService()\" ); UserService userService = new UserService (); return userService ; } public void test () { System . out . println ( \"test\" ); } } \u65b9\u5f0f\u4e8c\uff1a 1 2 < bean id = \"commonService\" class =\" com . zhouyu . service . CommonService \"/> <bean id=\" userService1 \" factory-bean=\" commonService \" factory-method=\" createUserService \" /> \u5bf9\u5e94\u7684CommonService\u7684\u7c7b\u4e3a\uff1a 1 2 3 4 5 6 public class CommonService { public UserService createUserService () { return new UserService (); } } Spring\u53d1\u73b0\u5f53\u524dBeanDefinition\u65b9\u6cd5\u8bbe\u7f6e\u4e86\u5de5\u5382\u65b9\u6cd5\u540e\uff0c\u5c31\u4f1a\u533a\u5206\u8fd9\u4e24\u79cd\u65b9\u5f0f\uff0c\u7136\u540e\u8c03\u7528\u5de5\u5382\u65b9\u6cd5\u5f97\u5230\u5bf9\u8c61\u3002 \u200b \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u901a\u8fc7@Bean\u6240\u5b9a\u4e49\u7684BeanDefinition\uff0c\u662f\u5b58\u5728factoryMethod\u548cfactoryBean\u7684\uff0c\u4e5f\u5c31\u662f\u548c\u4e0a\u9762\u7684\u65b9\u5f0f\u4e8c\u975e\u5e38\u7c7b\u4f3c\uff0c@Bean\u6240\u6ce8\u89e3\u7684\u65b9\u6cd5\u5c31\u662ffactoryMethod\uff0cAppConfig\u5bf9\u8c61\u5c31\u662ffactoryBean\u3002\u5982\u679c@Bean\u6240\u6240\u6ce8\u89e3\u7684\u65b9\u6cd5\u662fstatic\u7684\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u5c31\u662f\u65b9\u5f0f\u4e00\u3002","title":"5.2 \u5de5\u5382\u65b9\u6cd5\u521b\u5efa\u5bf9\u8c61"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#53","text":"\u7b2c\u4e00\u8282\u5df2\u7ecf\u8bb2\u8fc7\u4e00\u904d\u5927\u6982\u539f\u7406\u4e86\uff0c\u540e\u9762\u6709\u4e00\u8282\u8bfe\u5355\u72ec\u5206\u6790\u6e90\u7801\u5b9e\u73b0\u3002\u63a8\u65ad\u5b8c\u6784\u9020\u65b9\u6cd5\u540e\uff0c\u5c31\u4f1a\u4f7f\u7528\u6784\u9020\u65b9\u6cd5\u6765\u8fdb\u884c\u5b9e\u4f8b\u5316\u4e86\u3002 \u200b \u989d\u5916\u7684\uff0c\u5728\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u903b\u8f91\u4e2d\u9664\u5f00\u4f1a\u53bb\u9009\u62e9\u6784\u9020\u65b9\u6cd5\u4ee5\u53ca\u67e5\u627e\u5165\u53c2\u5bf9\u8c61\u610f\u5916\uff0c\u4f1a\u8fd8\u5224\u65ad\u662f\u5426\u5728\u5bf9\u5e94\u7684\u7c7b\u4e2d\u662f\u5426\u5b58\u5728\u4f7f\u7528 @Lookup\u6ce8\u89e3 \u4e86\u65b9\u6cd5\u3002\u5982\u679c\u5b58\u5728\u5219\u628a\u8be5\u65b9\u6cd5\u5c01\u88c5\u4e3aLookupOverride\u5bf9\u8c61\u5e76\u6dfb\u52a0\u5230BeanDefinition\u4e2d\u3002 \u200b \u5728\u5b9e\u4f8b\u5316\u65f6\uff0c\u5982\u679c\u5224\u65ad\u51fa\u6765\u5f53\u524dBeanDefinition\u4e2d\u6ca1\u6709LookupOverride\uff0c\u90a3\u5c31\u76f4\u63a5\u7528\u6784\u9020\u65b9\u6cd5\u53cd\u5c04\u5f97\u5230\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u3002\u5982\u679c\u5b58\u5728LookupOverride\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u7c7b\u4e2d\u5b58\u5728@Lookup\u6ce8\u89e3\u4e86\u7684\u65b9\u6cd5\uff0c\u90a3\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b @Lookup\u6ce8\u89e3\u5c31\u662f \u65b9\u6cd5\u6ce8\u5165 \uff0c\u4f7f\u7528demo\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @Component public class UserService { private OrderService orderService ; public void test () { OrderService orderService = createOrderService (); System . out . println ( orderService ); } @Lookup ( \"orderService\" ) public OrderService createOrderService () { return null ; } }","title":"5.3 \u63a8\u65ad\u6784\u9020\u65b9\u6cd5"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#6-beandefinition","text":"Bean\u5bf9\u8c61\u5b9e\u4f8b\u5316\u51fa\u6765\u4e4b\u540e\uff0c\u63a5\u4e0b\u6765\u5c31\u5e94\u8be5\u7ed9\u5bf9\u8c61\u7684\u5c5e\u6027\u8d4b\u503c\u4e86\u3002\u5728\u771f\u6b63\u7ed9\u5c5e\u6027\u8d4b\u503c\u4e4b\u524d\uff0cSpring\u53c8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6269\u5c55\u70b9 MergedBeanDefinitionPostProcessor.postProcessMergedBeanDefinition() \uff0c\u53ef\u4ee5\u5bf9\u6b64\u65f6\u7684BeanDefinition\u8fdb\u884c\u52a0\u5de5\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 @Component public class ZhouyuMergedBeanDefinitionPostProcessor implements MergedBeanDefinitionPostProcessor { @Override public void postProcessMergedBeanDefinition ( RootBeanDefinition beanDefinition , Class <?> beanType , String beanName ) { if ( \"userService\" . equals ( beanName )) { beanDefinition . getPropertyValues (). add ( \"orderService\" , new OrderService ()); } } } \u5728Spring\u6e90\u7801\u4e2d\uff0cAutowiredAnnotationBeanPostProcessor\u5c31\u662f\u4e00\u4e2aMergedBeanDefinitionPostProcessor\uff0c\u5b83\u7684postProcessMergedBeanDefinition()\u4e2d\u4f1a\u53bb\u67e5\u627e\u6ce8\u5165\u70b9\uff0c\u5e76\u7f13\u5b58\u5728AutowiredAnnotationBeanPostProcessor\u5bf9\u8c61\u7684\u4e00\u4e2aMap\u4e2d\uff08injectionMetadataCache\uff09\u3002","title":"6. BeanDefinition\u7684\u540e\u7f6e\u5904\u7406"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#7","text":"\u5728\u5904\u7406\u5b8cBeanDefinition\u540e\uff0cSpring\u53c8\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u6269\u5c55\u70b9\uff1a InstantiationAwareBeanPostProcessor.postProcessAfterInstantiation() \uff0c\u6bd4\u5982\uff1a \u200b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 @Component public class ZhouyuInstantiationAwareBeanPostProcessor implements InstantiationAwareBeanPostProcessor { @Override public boolean postProcessAfterInstantiation ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { UserService userService = ( UserService ) bean ; userService . test (); } return true ; } } \u4e0a\u8ff0\u4ee3\u7801\u5c31\u662f\u5bf9userService\u6240\u5b9e\u4f8b\u5316\u51fa\u6765\u7684\u5bf9\u8c61\u8fdb\u884c\u5904\u7406\u3002 \u200b \u8fd9\u4e2a\u6269\u5c55\u70b9\uff0c\u5728Spring\u6e90\u7801\u4e2d\u57fa\u672c\u6ca1\u6709\u600e\u4e48\u4f7f\u7528\u3002","title":"7. \u5b9e\u4f8b\u5316\u540e"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#8","text":"\u8fd9\u91cc\u7684\u81ea\u52a8\u6ce8\u5165\u6307\u7684\u662fSpring\u7684\u81ea\u52a8\u6ce8\u5165\uff0c\u540e\u7eed\u4f9d\u8d56\u6ce8\u5165\u8bfe\u7a0b\u4e2d\u5355\u72ec\u8bb2 \u200b","title":"8. \u81ea\u52a8\u6ce8\u5165"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#9","text":"\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u5c31\u4f1a\u5904\u7406@Autowired\u3001@Resource\u3001@Value\u7b49\u6ce8\u89e3\uff0c\u4e5f\u662f\u901a\u8fc7 InstantiationAwareBeanPostProcessor.postProcessProperties() \u6269\u5c55\u70b9\u6765\u5b9e\u73b0\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5df1\u7684\u81ea\u52a8\u6ce8\u5165\u529f\u80fd\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 @Component public class ZhouyuInstantiationAwareBeanPostProcessor implements InstantiationAwareBeanPostProcessor { @Override public PropertyValues postProcessProperties ( PropertyValues pvs , Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { for ( Field field : bean . getClass (). getFields ()) { if ( field . isAnnotationPresent ( ZhouyuInject . class )) { field . setAccessible ( true ); try { field . set ( bean , \"123\" ); } catch ( IllegalAccessException e ) { e . printStackTrace (); } } } } return pvs ; } } \u5173\u4e8e@Autowired\u3001@Resource\u3001@Value\u7684\u5e95\u5c42\u6e90\u7801\uff0c\u4f1a\u5728\u540e\u7eed\u7684\u4f9d\u8d56\u6ce8\u5165\u8bfe\u7a0b\u4e2d\u8be6\u89e3\u3002","title":"9. \u5904\u7406\u5c5e\u6027"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#10-aware","text":"\u5b8c\u6210\u4e86\u5c5e\u6027\u8d4b\u503c\u4e4b\u540e\uff0cSpring\u4f1a\u6267\u884c\u4e00\u4e9b\u56de\u8c03\uff0c\u5305\u62ec\uff1a BeanNameAware\uff1a\u56de\u4f20beanName\u7ed9bean\u5bf9\u8c61\u3002 BeanClassLoaderAware\uff1a\u56de\u4f20classLoader\u7ed9bean\u5bf9\u8c61\u3002 BeanFactoryAware\uff1a\u56de\u4f20beanFactory\u7ed9\u5bf9\u8c61\u3002","title":"10. \u6267\u884cAware"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#11","text":"\u521d\u59cb\u5316\u524d\uff0c\u4e5f\u662fSpring\u63d0\u4f9b\u7684\u4e00\u4e2a\u6269\u5c55\u70b9\uff1a BeanPostProcessor.postProcessBeforeInitialization() \uff0c\u6bd4\u5982 1 2 3 4 5 6 7 8 9 10 11 12 @Component public class ZhouyuBeanPostProcessor implements BeanPostProcessor { @Override public Object postProcessBeforeInitialization ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u521d\u59cb\u5316\u524d\" ); } return bean ; } } \u5229\u7528\u521d\u59cb\u5316\u524d\uff0c\u53ef\u4ee5\u5bf9\u8fdb\u884c\u4e86\u4f9d\u8d56\u6ce8\u5165\u7684Bean\u8fdb\u884c\u5904\u7406\u3002 \u200b \u5728Spring\u6e90\u7801\u4e2d\uff1a InitDestroyAnnotationBeanPostProcessor\u4f1a\u5728\u521d\u59cb\u5316\u524d\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\u6267\u884c@PostConstruct\u7684\u65b9\u6cd5\uff0c ApplicationContextAwareProcessor\u4f1a\u5728\u521d\u59cb\u5316\u524d\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\u8fdb\u884c\u5176\u4ed6Aware\u7684\u56de\u8c03\uff1a EnvironmentAware\uff1a\u56de\u4f20\u73af\u5883\u53d8\u91cf EmbeddedValueResolverAware\uff1a\u56de\u4f20\u5360\u4f4d\u7b26\u89e3\u6790\u5668 ResourceLoaderAware\uff1a\u56de\u4f20\u8d44\u6e90\u52a0\u8f7d\u5668 ApplicationEventPublisherAware\uff1a\u56de\u4f20\u4e8b\u4ef6\u53d1\u5e03\u5668 MessageSourceAware\uff1a\u56de\u4f20\u56fd\u9645\u5316\u8d44\u6e90 ApplicationStartupAware\uff1a\u56de\u4f20\u5e94\u7528\u5176\u4ed6\u76d1\u542c\u5bf9\u8c61\uff0c\u53ef\u5ffd\u7565 ApplicationContextAware\uff1a\u56de\u4f20Spring\u5bb9\u5668ApplicationContext","title":"11. \u521d\u59cb\u5316\u524d"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#12","text":"\u67e5\u770b\u5f53\u524dBean\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86InitializingBean\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\u5c31\u8c03\u7528\u5176afterPropertiesSet()\u65b9\u6cd5 \u6267\u884cBeanDefinition\u4e2d\u6307\u5b9a\u7684\u521d\u59cb\u5316\u65b9\u6cd5","title":"12. \u521d\u59cb\u5316"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#13","text":"\u8fd9\u662fBean\u521b\u5efa\u751f\u547d\u5468\u671f\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u6b65\u9aa4\uff0c\u4e5f\u662fSpring\u63d0\u4f9b\u7684\u4e00\u4e2a\u6269\u5c55\u70b9\uff1a BeanPostProcessor.postProcessAfterInitialization() \uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 @Component public class ZhouyuBeanPostProcessor implements BeanPostProcessor { @Override public Object postProcessAfterInitialization ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u521d\u59cb\u5316\u540e\" ); } return bean ; } } \u53ef\u4ee5\u5728\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u5bf9Bean\u6700\u7ec8\u8fdb\u884c\u5904\u7406\uff0cSpring\u4e2d\u7684 AOP\u5c31\u662f\u57fa\u4e8e\u521d\u59cb\u5316\u540e\u5b9e\u73b0 \u7684\uff0c \u521d\u59cb\u5316\u540e\u8fd4\u56de\u7684\u5bf9\u8c61\u624d\u662f\u6700\u7ec8\u7684Bean\u5bf9\u8c61 \u3002","title":"13. \u521d\u59cb\u5316\u540e"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/04Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#beanpostprocessor","text":"InstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation() \u5b9e\u4f8b\u5316 MergedBeanDefinitionPostProcessor.postProcessMergedBeanDefinition() InstantiationAwareBeanPostProcessor.postProcessAfterInstantiation() \u81ea\u52a8\u6ce8\u5165 InstantiationAwareBeanPostProcessor.postProcessProperties() Aware\u5bf9\u8c61 BeanPostProcessor.postProcessBeforeInitialization() \u521d\u59cb\u5316 BeanPostProcessor.postProcessAfterInitialization()","title":"\u603b\u7ed3BeanPostProcessor"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/05Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8B/","text":"Bean\u7684\u9500\u6bc1\u8fc7\u7a0b Bean\u9500\u6bc1\u662f\u53d1\u9001\u5728Spring\u5bb9\u5668\u5173\u95ed\u8fc7\u7a0b\u4e2d\u7684\u3002 \u200b \u5728Spring\u5bb9\u5668\u5173\u95ed\u65f6\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); UserService userService = ( UserService ) context . getBean ( \"userService\" ); userService . test (); // \u5bb9\u5668\u5173\u95ed context . close (); \u5728Bean\u521b\u5efa\u8fc7\u7a0b\u4e2d\uff0c\u5728\u6700\u540e\uff08\u521d\u59cb\u5316\u4e4b\u540e\uff09\uff0c\u6709\u4e00\u4e2a\u6b65\u9aa4\u4f1a\u53bb\u5224\u65ad\u5f53\u524d\u521b\u5efa\u7684Bean\u662f\u4e0d\u662fDisposableBean\uff1a \u5f53\u524dBean\u662f\u5426\u5b9e\u73b0\u4e86DisposableBean\u63a5\u53e3 \u6216\u8005\uff0c\u5f53\u524dBean\u662f\u5426\u5b9e\u73b0\u4e86AutoCloseable\u63a5\u53e3 BeanDefinition\u4e2d\u662f\u5426\u6307\u5b9a\u4e86destroyMethod \u8c03\u7528DestructionAwareBeanPostProcessor.requiresDestruction(bean)\u8fdb\u884c\u5224\u65ad ApplicationListenerDetector\u4e2d\u76f4\u63a5\u4f7f\u5f97ApplicationListener\u662fDisposableBean InitDestroyAnnotationBeanPostProcessor\u4e2d\u4f7f\u5f97\u62e5\u6709@PreDestroy\u6ce8\u89e3\u4e86\u7684\u65b9\u6cd5\u5c31\u662fDisposableBean \u628a\u7b26\u5408\u4e0a\u8ff0\u4efb\u610f\u4e00\u4e2a\u6761\u4ef6\u7684Bean\u9002\u914d\u6210DisposableBeanAdapter\u5bf9\u8c61\uff0c\u5e76\u5b58\u5165disposableBeans\u4e2d\uff08\u4e00\u4e2aLinkedHashMap\uff09 \u5728Spring\u5bb9\u5668\u5173\u95ed\u8fc7\u7a0b\u65f6\uff1a \u9996\u5148\u53d1\u5e03ContextClosedEvent\u4e8b\u4ef6 \u8c03\u7528lifecycleProcessor\u7684onCloese()\u65b9\u6cd5 \u9500\u6bc1\u5355\u4f8bBean \u904d\u5386disposableBeans \u628a\u6bcf\u4e2adisposableBean\u4ece\u5355\u4f8b\u6c60\u4e2d\u79fb\u9664 \u8c03\u7528disposableBean\u7684destroy() \u5982\u679c\u8fd9\u4e2adisposableBean\u8fd8\u88ab\u5176\u4ed6Bean\u4f9d\u8d56\u4e86\uff0c\u90a3\u4e48\u4e5f\u5f97\u9500\u6bc1\u5176\u4ed6Bean \u5982\u679c\u8fd9\u4e2adisposableBean\u8fd8\u5305\u542b\u4e86inner beans\uff0c\u5c06\u8fd9\u4e9bBean\u4ece\u5355\u4f8b\u6c60\u4e2d\u79fb\u9664\u6389 (inner bean\u53c2\u8003https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-inner-beans) \u6e05\u7a7amanualSingletonNames\uff0c\u662f\u4e00\u4e2aSet\uff0c\u5b58\u7684\u662f\u7528\u6237\u624b\u52a8\u6ce8\u518c\u7684\u5355\u4f8bBean\u7684beanName \u6e05\u7a7aallBeanNamesByType\uff0c\u662f\u4e00\u4e2aMap\uff0ckey\u662fbean\u7c7b\u578b\uff0cvalue\u662f\u8be5\u7c7b\u578b\u6240\u6709\u7684beanName\u6570\u7ec4 \u6e05\u7a7asingletonBeanNamesByType\uff0c\u548callBeanNamesByType\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u53ea\u5b58\u4e86\u5355\u4f8bBean \u8fd9\u91cc\u6d89\u53ca\u5230\u4e00\u4e2a\u8bbe\u8ba1\u6a21\u5f0f\uff1a \u9002\u914d\u5668\u6a21\u5f0f \u5728\u9500\u6bc1\u65f6\uff0cSpring\u4f1a\u627e\u51fa\u5b9e\u73b0\u4e86DisposableBean\u63a5\u53e3\u7684Bean\u3002 \u200b \u4f46\u662f\u6211\u4eec\u5728\u5b9a\u4e49\u4e00\u4e2aBean\u65f6\uff0c\u5982\u679c\u8fd9\u4e2aBean\u5b9e\u73b0\u4e86DisposableBean\u63a5\u53e3\uff0c\u6216\u8005\u5b9e\u73b0\u4e86AutoCloseable\u63a5\u53e3\uff0c\u6216\u8005\u5728BeanDefinition\u4e2d\u6307\u5b9a\u4e86destroyMethodName\uff0c\u90a3\u4e48\u8fd9\u4e2aBean\u90fd\u5c5e\u4e8e\u201cDisposableBean\u201d\uff0c\u8fd9\u4e9bBean\u5728\u5bb9\u5668\u5173\u95ed\u65f6\u90fd\u8981\u8c03\u7528\u76f8\u5e94\u7684\u9500\u6bc1\u65b9\u6cd5\u3002 \u6240\u4ee5\uff0c\u8fd9\u91cc\u5c31\u9700\u8981\u8fdb\u884c\u9002\u914d\uff0c\u5c06\u5b9e\u73b0\u4e86DisposableBean\u63a5\u53e3\u3001\u6216\u8005AutoCloseable\u63a5\u53e3\u7b49\u9002\u914d\u6210\u5b9e\u73b0\u4e86DisposableBean\u63a5\u53e3\uff0c\u6240\u4ee5\u5c31\u7528\u5230\u4e86DisposableBeanAdapter\u3002 \u4f1a\u628a\u5b9e\u73b0\u4e86AutoCloseable\u63a5\u53e3\u7684\u7c7b\u5c01\u88c5\u6210DisposableBeanAdapter\uff0c\u800cDisposableBeanAdapter\u5b9e\u73b0\u4e86DisposableBean\u63a5\u53e3\u3002","title":"5.Spring\u4e4bBean\u751f\u547d\u5468\u671f\u6e90\u7801\u89e3\u6790\u4e0b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/05Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8B/#bean","text":"Bean\u9500\u6bc1\u662f\u53d1\u9001\u5728Spring\u5bb9\u5668\u5173\u95ed\u8fc7\u7a0b\u4e2d\u7684\u3002 \u200b \u5728Spring\u5bb9\u5668\u5173\u95ed\u65f6\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); UserService userService = ( UserService ) context . getBean ( \"userService\" ); userService . test (); // \u5bb9\u5668\u5173\u95ed context . close (); \u5728Bean\u521b\u5efa\u8fc7\u7a0b\u4e2d\uff0c\u5728\u6700\u540e\uff08\u521d\u59cb\u5316\u4e4b\u540e\uff09\uff0c\u6709\u4e00\u4e2a\u6b65\u9aa4\u4f1a\u53bb\u5224\u65ad\u5f53\u524d\u521b\u5efa\u7684Bean\u662f\u4e0d\u662fDisposableBean\uff1a \u5f53\u524dBean\u662f\u5426\u5b9e\u73b0\u4e86DisposableBean\u63a5\u53e3 \u6216\u8005\uff0c\u5f53\u524dBean\u662f\u5426\u5b9e\u73b0\u4e86AutoCloseable\u63a5\u53e3 BeanDefinition\u4e2d\u662f\u5426\u6307\u5b9a\u4e86destroyMethod \u8c03\u7528DestructionAwareBeanPostProcessor.requiresDestruction(bean)\u8fdb\u884c\u5224\u65ad ApplicationListenerDetector\u4e2d\u76f4\u63a5\u4f7f\u5f97ApplicationListener\u662fDisposableBean InitDestroyAnnotationBeanPostProcessor\u4e2d\u4f7f\u5f97\u62e5\u6709@PreDestroy\u6ce8\u89e3\u4e86\u7684\u65b9\u6cd5\u5c31\u662fDisposableBean \u628a\u7b26\u5408\u4e0a\u8ff0\u4efb\u610f\u4e00\u4e2a\u6761\u4ef6\u7684Bean\u9002\u914d\u6210DisposableBeanAdapter\u5bf9\u8c61\uff0c\u5e76\u5b58\u5165disposableBeans\u4e2d\uff08\u4e00\u4e2aLinkedHashMap\uff09 \u5728Spring\u5bb9\u5668\u5173\u95ed\u8fc7\u7a0b\u65f6\uff1a \u9996\u5148\u53d1\u5e03ContextClosedEvent\u4e8b\u4ef6 \u8c03\u7528lifecycleProcessor\u7684onCloese()\u65b9\u6cd5 \u9500\u6bc1\u5355\u4f8bBean \u904d\u5386disposableBeans \u628a\u6bcf\u4e2adisposableBean\u4ece\u5355\u4f8b\u6c60\u4e2d\u79fb\u9664 \u8c03\u7528disposableBean\u7684destroy() \u5982\u679c\u8fd9\u4e2adisposableBean\u8fd8\u88ab\u5176\u4ed6Bean\u4f9d\u8d56\u4e86\uff0c\u90a3\u4e48\u4e5f\u5f97\u9500\u6bc1\u5176\u4ed6Bean \u5982\u679c\u8fd9\u4e2adisposableBean\u8fd8\u5305\u542b\u4e86inner beans\uff0c\u5c06\u8fd9\u4e9bBean\u4ece\u5355\u4f8b\u6c60\u4e2d\u79fb\u9664\u6389 (inner bean\u53c2\u8003https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-inner-beans) \u6e05\u7a7amanualSingletonNames\uff0c\u662f\u4e00\u4e2aSet\uff0c\u5b58\u7684\u662f\u7528\u6237\u624b\u52a8\u6ce8\u518c\u7684\u5355\u4f8bBean\u7684beanName \u6e05\u7a7aallBeanNamesByType\uff0c\u662f\u4e00\u4e2aMap\uff0ckey\u662fbean\u7c7b\u578b\uff0cvalue\u662f\u8be5\u7c7b\u578b\u6240\u6709\u7684beanName\u6570\u7ec4 \u6e05\u7a7asingletonBeanNamesByType\uff0c\u548callBeanNamesByType\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u53ea\u5b58\u4e86\u5355\u4f8bBean \u8fd9\u91cc\u6d89\u53ca\u5230\u4e00\u4e2a\u8bbe\u8ba1\u6a21\u5f0f\uff1a \u9002\u914d\u5668\u6a21\u5f0f \u5728\u9500\u6bc1\u65f6\uff0cSpring\u4f1a\u627e\u51fa\u5b9e\u73b0\u4e86DisposableBean\u63a5\u53e3\u7684Bean\u3002 \u200b \u4f46\u662f\u6211\u4eec\u5728\u5b9a\u4e49\u4e00\u4e2aBean\u65f6\uff0c\u5982\u679c\u8fd9\u4e2aBean\u5b9e\u73b0\u4e86DisposableBean\u63a5\u53e3\uff0c\u6216\u8005\u5b9e\u73b0\u4e86AutoCloseable\u63a5\u53e3\uff0c\u6216\u8005\u5728BeanDefinition\u4e2d\u6307\u5b9a\u4e86destroyMethodName\uff0c\u90a3\u4e48\u8fd9\u4e2aBean\u90fd\u5c5e\u4e8e\u201cDisposableBean\u201d\uff0c\u8fd9\u4e9bBean\u5728\u5bb9\u5668\u5173\u95ed\u65f6\u90fd\u8981\u8c03\u7528\u76f8\u5e94\u7684\u9500\u6bc1\u65b9\u6cd5\u3002 \u6240\u4ee5\uff0c\u8fd9\u91cc\u5c31\u9700\u8981\u8fdb\u884c\u9002\u914d\uff0c\u5c06\u5b9e\u73b0\u4e86DisposableBean\u63a5\u53e3\u3001\u6216\u8005AutoCloseable\u63a5\u53e3\u7b49\u9002\u914d\u6210\u5b9e\u73b0\u4e86DisposableBean\u63a5\u53e3\uff0c\u6240\u4ee5\u5c31\u7528\u5230\u4e86DisposableBeanAdapter\u3002 \u4f1a\u628a\u5b9e\u73b0\u4e86AutoCloseable\u63a5\u53e3\u7684\u7c7b\u5c01\u88c5\u6210DisposableBeanAdapter\uff0c\u800cDisposableBeanAdapter\u5b9e\u73b0\u4e86DisposableBean\u63a5\u53e3\u3002","title":"Bean\u7684\u9500\u6bc1\u8fc7\u7a0b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/06Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/","text":"\u6709\u9053\u4e91\u94fe\u63a5\uff1a http://note.youdao.com/noteshare?id=bb7e5f810ade4bab72d7af5b9d6c1e97&sub=B26AAB65D991490D9C547529F6AED86B \u200b\uff08\u590d\u5236\u94fe\u63a5\u5230\u6d4f\u89c8\u5668\u7684\u65f6\u5019\u6ce8\u610f\u8f6c\u884c\u7684\u7a7a\u683c\uff09 \u4f9d\u8d56\u6ce8\u5165\u5e95\u5c42\u539f\u7406\u6d41\u7a0b\u56fe\uff1a https://www.processon.com/view/link/5f899fa5f346fb06e1d8f570 Spring\u4e2d\u5230\u5e95\u6709\u51e0\u79cd\u4f9d\u8d56\u6ce8\u5165\u7684\u65b9\u5f0f\uff1f \u9996\u5148\u5206\u4e24\u79cd\uff1a \u624b\u52a8\u6ce8\u5165 \u81ea\u52a8\u6ce8\u5165 \u624b\u52a8\u6ce8\u5165 \u5728XML\u4e2d\u5b9a\u4e49Bean\u65f6\uff0c\u5c31\u662f\u624b\u52a8\u6ce8\u5165\uff0c\u56e0\u4e3a\u662f \u7a0b\u5e8f\u5458\u624b\u52a8\u7ed9\u67d0\u4e2a\u5c5e\u6027\u6307\u5b9a\u4e86\u503c \u3002 1 2 3 < bean name = \"userService\" class =\" com . luban . service . UserService \"> <property name=\" orderService \" ref=\" orderService \"/> </bean> \u4e0a\u9762\u8fd9\u79cd\u5e95\u5c42\u662f\u901a\u8fc7 set\u65b9\u6cd5 \u8fdb\u884c\u6ce8\u5165\u3002 1 2 3 < bean name = \"userService\" class =\" com . luban . service . UserService \"> <constructor-arg index=\" 0 \" ref=\" orderService \"/> </bean> \u4e0a\u9762\u8fd9\u79cd\u5e95\u5c42\u662f\u901a\u8fc7 \u6784\u9020\u65b9\u6cd5 \u8fdb\u884c\u6ce8\u5165\u3002 \u6240\u4ee5\u624b\u52a8\u6ce8\u5165\u7684\u5e95\u5c42\u4e5f\u5c31\u662f\u5206\u4e3a\u4e24\u79cd\uff1a set\u65b9\u6cd5\u6ce8\u5165 \u6784\u9020\u65b9\u6cd5\u6ce8\u5165 \u81ea\u52a8\u6ce8\u5165 \u81ea\u52a8\u6ce8\u5165\u53c8\u5206\u4e3a\u4e24\u79cd\uff1a XML\u7684autowire\u81ea\u52a8\u6ce8\u5165 @Autowired\u6ce8\u89e3\u7684\u81ea\u52a8\u6ce8\u5165 XML\u7684autowire\u81ea\u52a8\u6ce8\u5165 \u5728XML\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5b9a\u4e49\u4e00\u4e2aBean\u65f6\u53bb\u6307\u5b9a\u8fd9\u4e2aBean\u7684\u81ea\u52a8\u6ce8\u5165\u6a21\u5f0f\uff1a byType byName constructor default no \u6bd4\u5982\uff1a 1 < bean id = \"userService\" class =\" com . luban . service . UserService \" autowire=\" byType \"/> \u8fd9\u4e48\u5199\uff0c\u8868\u793aSpring\u4f1a\u81ea\u52a8\u7684\u7ed9userService\u4e2d\u6240\u6709\u7684\u5c5e\u6027\u81ea\u52a8\u8d4b\u503c\uff08 \u4e0d\u9700\u8981 \u8fd9\u4e2a\u5c5e\u6027\u4e0a\u6709@Autowired\u6ce8\u89e3\uff0c\u4f46\u9700\u8981\u8fd9\u4e2a\u5c5e\u6027\u6709\u5bf9\u5e94\u7684 set\u65b9\u6cd5 \uff09\u3002 \u5728\u521b\u5efaBean\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5728\u586b\u5145\u5c5e\u6027\u65f6\uff0cSpring\u4f1a\u53bb\u89e3\u6790\u5f53\u524d\u7c7b\uff0c\u628a \u5f53\u524d\u7c7b\u7684\u6240\u6709\u65b9\u6cd5 \u90fd\u89e3\u6790\u51fa\u6765\uff0cSpring\u4f1a\u53bb\u89e3\u6790\u6bcf\u4e2a\u65b9\u6cd5\u5f97\u5230\u5bf9\u5e94\u7684PropertyDescriptor\u5bf9\u8c61\uff0cPropertyDescriptor\u4e2d\u6709\u51e0\u4e2a\u5c5e\u6027\uff1a name\uff1a\u8fd9\u4e2aname\u5e76\u4e0d\u662f\u65b9\u6cd5\u7684\u540d\u5b57\uff0c\u800c\u662f\u62ff\u65b9\u6cd5\u540d\u5b57\u8fdb\u8fc7\u5904\u7406\u540e\u7684\u540d\u5b57 \u5982\u679c\u65b9\u6cd5\u540d\u5b57\u4ee5\u201cget\u201d\u5f00\u5934\uff0c\u6bd4\u5982\u201cgetXXX\u201d,\u90a3\u4e48name=XXX \u5982\u679c\u65b9\u6cd5\u540d\u5b57\u4ee5\u201cis\u201d\u5f00\u5934\uff0c\u6bd4\u5982\u201cisXXX\u201d,\u90a3\u4e48name=XXX \u5982\u679c\u65b9\u6cd5\u540d\u5b57\u4ee5\u201cset\u201d\u5f00\u5934\uff0c\u6bd4\u5982\u201csetXXX\u201d,\u90a3\u4e48name=XXX readMethodRef\uff1a\u8868\u793aget\u65b9\u6cd5\u7684Method\u5bf9\u8c61\u7684\u5f15\u7528 readMethodName\uff1a\u8868\u793aget\u65b9\u6cd5\u7684\u540d\u5b57 writeMethodRef\uff1a\u8868\u793aset\u65b9\u6cd5\u7684Method\u5bf9\u8c61\u7684\u5f15\u7528 writeMethodName\uff1a\u8868\u793aset\u65b9\u6cd5\u7684\u540d\u5b57 propertyTypeRef\uff1a\u5982\u679c\u6709get\u65b9\u6cd5\u90a3\u4e48\u5bf9\u5e94\u7684\u5c31\u662f\u8fd4\u56de\u503c\u7684\u7c7b\u578b\uff0c\u5982\u679c\u662fset\u65b9\u6cd5\u90a3\u4e48\u5bf9\u5e94\u7684\u5c31\u662fset\u65b9\u6cd5\u4e2d\u552f\u4e00\u53c2\u6570\u7684\u7c7b\u578b get\u65b9\u6cd5\u7684\u5b9a\u4e49\u662f\uff1a \u65b9\u6cd5\u53c2\u6570\u4e2a\u6570\u4e3a0\u4e2a\uff0c\u5e76\u4e14 \uff08\u65b9\u6cd5\u540d\u5b57\u4ee5\"get\"\u5f00\u5934 \u6216\u8005 \u65b9\u6cd5\u540d\u5b57\u4ee5\"is\"\u5f00\u5934\u5e76\u4e14\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\u4e3aboolean\uff09 set\u65b9\u6cd5\u7684\u5b9a\u4e49\u662f\uff1a \u65b9\u6cd5\u53c2\u6570\u4e2a\u6570\u4e3a1\u4e2a\uff0c\u5e76\u4e14 \uff08\u65b9\u6cd5\u540d\u5b57\u4ee5\"set\"\u5f00\u5934\u5e76\u4e14\u65b9\u6cd5\u8fd4\u56de\u7c7b\u578b\u4e3avoid\uff09 \u6240\u4ee5\uff0cSpring\u5728\u901a\u8fc7byName\u7684\u81ea\u52a8\u586b\u5145\u5c5e\u6027\u65f6\u6d41\u7a0b\u662f\uff1a \u627e\u5230\u6240\u6709set\u65b9\u6cd5\u6240\u5bf9\u5e94\u7684XXX\u90e8\u5206\u7684\u540d\u5b57 \u6839\u636eXXX\u90e8\u5206\u7684\u540d\u5b57\u53bb\u83b7\u53d6bean Spring\u5728\u901a\u8fc7byType\u7684\u81ea\u52a8\u586b\u5145\u5c5e\u6027\u65f6\u6d41\u7a0b\u662f\uff1a \u83b7\u53d6\u5230set\u65b9\u6cd5\u4e2d\u7684\u552f\u4e00\u53c2\u6570\u7684\u53c2\u6570\u7c7b\u578b\uff0c\u5e76\u4e14\u6839\u636e\u8be5\u7c7b\u578b\u53bb\u5bb9\u5668\u4e2d\u83b7\u53d6bean \u5982\u679c\u627e\u5230\u591a\u4e2a\uff0c\u4f1a\u62a5\u9519\u3002 \u4ee5\u4e0a\uff0c\u5206\u6790\u4e86autowire\u7684byType\u548cbyName\u60c5\u51b5\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u5206\u6790constructor\uff0cconstructor\u8868\u793a\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u6ce8\u5165\uff0c\u5176\u5b9e\u8fd9\u79cd\u60c5\u51b5\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff0c\u6ca1\u6709byType\u548cbyName\u90a3\u4e48\u590d\u6742\u3002 \u200b \u5982\u679c\u662fconstructor\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4e0d\u5199set\u65b9\u6cd5\u4e86\uff0c\u5f53\u67d0\u4e2abean\u662f\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u6765\u6ce8\u5165\u65f6\uff0cspring\u5229\u7528\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\u4fe1\u606f\u4eceSpring\u5bb9\u5668\u4e2d\u53bb\u627ebean\uff0c\u627e\u5230bean\u4e4b\u540e\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9\u6784\u9020\u65b9\u6cd5\uff0c\u4ece\u800c\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2abean\u5bf9\u8c61\uff0c\u5e76\u5b8c\u6210\u5c5e\u6027\u8d4b\u503c\uff08\u5c5e\u6027\u8d4b\u503c\u7684\u4ee3\u7801\u5f97\u7a0b\u5e8f\u5458\u6765\u5199\uff09\u3002 \u6211\u4eec\u8fd9\u91cc\u5148\u4e0d\u8003\u8651\u4e00\u4e2a\u7c7b\u6709\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\u7684\u60c5\u51b5\uff0c\u540e\u9762\u5355\u72ec\u8bb2 \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \u3002\u6211\u4eec\u8fd9\u91cc\u53ea\u8003\u8651\u53ea\u6709\u4e00\u4e2a\u6709\u53c2\u6784\u9020\u65b9\u6cd5\u3002 \u5176\u5b9e\u6784\u9020\u65b9\u6cd5\u6ce8\u5165\u76f8\u5f53\u4e8ebyType+byName\uff0c\u666e\u901a\u7684byType\u662f\u6839\u636eset\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570\u7c7b\u578b\u53bb\u627ebean\uff0c\u627e\u5230\u591a\u4e2a\u4f1a\u62a5\u9519\uff0c\u800cconstructor\u5c31\u662f\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570\u7c7b\u578b\u53bb\u627ebean\uff0c\u5982\u679c\u627e\u5230\u591a\u4e2a\u4f1a\u6839\u636e\u53c2\u6570\u540d\u786e\u5b9a\u3002 \u53e6\u5916\u4e24\u4e2a\uff1a no\uff0c\u8868\u793a\u5173\u95edautowire default\uff0c\u8868\u793a\u9ed8\u8ba4\u503c\uff0c\u6211\u4eec\u4e00\u76f4\u6f14\u793a\u7684\u67d0\u4e2abean\u7684autowire\uff0c\u800c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728 \u6807\u7b7e\u4e2d\u8bbe\u7f6eautowire\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\uff0c\u90a3\u4e48 \u6807\u7b7e\u4e2d\u8bbe\u7f6e\u7684autowire\u5982\u679c\u4e3adefault\uff0c\u90a3\u4e48\u5219\u4f1a\u7528 \u6807\u7b7e\u4e2d\u8bbe\u7f6e\u7684autowire\u3002 \u53ef\u4ee5\u53d1\u73b0XML\u4e2d\u7684\u81ea\u52a8\u6ce8\u5165\u662f\u633a\u5f3a\u5927\u7684\uff0c\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c \u4e3a\u4ec0\u4e48\u6211\u4eec\u5e73\u65f6\u90fd\u662f\u7528\u7684@Autowired\u6ce8\u89e3\u5462\uff1f\u800c\u6ca1\u6709\u7528\u4e0a\u6587\u8bf4\u7684\u8fd9\u79cd\u81ea\u52a8\u6ce8\u5165\u65b9\u5f0f\u5462\uff1f @Autowired\u6ce8\u89e3\u76f8\u5f53\u4e8eXML\u4e2d\u7684autowire\u5c5e\u6027\u7684 \u6ce8\u89e3\u65b9\u5f0f\u7684\u66ff\u4ee3 \u3002\u8fd9\u662f\u5728\u5b98\u7f51\u4e0a\u6709\u63d0\u5230\u7684\u3002 1 Essentially , the @Autowired annotation provides the same capabilities as described in Autowiring Collaborators but with more fine - grained control and wider applicability \u7ffb\u8bd1\u4e00\u4e0b\uff1a \u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c@Autowired\u6ce8\u89e3\u63d0\u4f9b\u4e86\u4e0eautowire\u76f8\u540c\u7684\u529f\u80fd\uff0c\u4f46\u662f\u62e5\u6709\u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\u548c\u66f4\u5e7f\u6cdb\u7684\u9002\u7528\u6027\u3002 \u6ce8\u610f\uff1a \u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236 \u3002 XML\u4e2d\u7684autowire\u63a7\u5236\u7684\u662f\u6574\u4e2abean\u7684\u6240\u6709\u5c5e\u6027\uff0c\u800c@Autowired\u6ce8\u89e3\u662f\u76f4\u63a5\u5199\u5728\u67d0\u4e2a\u5c5e\u6027\u3001\u67d0\u4e2aset\u65b9\u6cd5\u3001\u67d0\u4e2a\u6784\u9020\u65b9\u6cd5\u4e0a\u7684\u3002 \u518d\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4e00\u4e2a\u7c7b\u6709\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u5982\u679c\u7528XML\u7684autowire=constructor\uff0c\u4f60\u65e0\u6cd5\u63a7\u5236\u5230\u5e95\u7528\u54ea\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u800c\u4f60\u53ef\u4ee5\u7528@Autowired\u6ce8\u89e3\u6765\u76f4\u63a5\u6307\u5b9a\u4f60\u60f3\u7528\u54ea\u4e2a\u6784\u9020\u65b9\u6cd5\u3002 \u540c\u65f6\uff0c\u7528@Autowired\u6ce8\u89e3\uff0c\u8fd8\u53ef\u4ee5\u63a7\u5236\uff0c\u54ea\u4e9b\u5c5e\u6027\u60f3\u88ab\u81ea\u52a8\u6ce8\u5165\uff0c\u54ea\u4e9b\u5c5e\u6027\u4e0d\u60f3\uff0c\u8fd9\u4e5f\u662f\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\u3002 \u4f46\u662f@Autowired\u65e0\u6cd5\u533a\u5206byType\u548cbyName\uff0c@Autowired\u662f\u5148byType\uff0c\u5982\u679c\u627e\u5230\u591a\u4e2a\u5219byName\u3002 \u90a3\u4e48XML\u7684\u81ea\u52a8\u6ce8\u5165\u5e95\u5c42\u5176\u5b9e\u4e5f\u5c31\u662f: set\u65b9\u6cd5\u6ce8\u5165 \u6784\u9020\u65b9\u6cd5\u6ce8\u5165 @Autowired\u6ce8\u89e3\u7684\u81ea\u52a8\u6ce8\u5165 \u4e0a\u6587\u8bf4\u4e86@Autowired\u6ce8\u89e3\uff0c\u662fbyType\u548cbyName\u7684\u7ed3\u5408\u3002 @Autowired\u6ce8\u89e3\u53ef\u4ee5\u5199\u5728\uff1a \u5c5e\u6027\u4e0a\uff1a\u5148\u6839\u636e \u5c5e\u6027\u7c7b\u578b \u53bb\u627eBean\uff0c\u5982\u679c\u627e\u5230\u591a\u4e2a\u518d\u6839\u636e \u5c5e\u6027\u540d \u786e\u5b9a\u4e00\u4e2a \u6784\u9020\u65b9\u6cd5\u4e0a\uff1a\u5148\u6839\u636e\u65b9\u6cd5 \u53c2\u6570\u7c7b\u578b \u53bb\u627eBean\uff0c\u5982\u679c\u627e\u5230\u591a\u4e2a\u518d\u6839\u636e \u53c2\u6570\u540d \u786e\u5b9a\u4e00\u4e2a set\u65b9\u6cd5\u4e0a\uff1a\u5148\u6839\u636e\u65b9\u6cd5 \u53c2\u6570\u7c7b\u578b \u53bb\u627eBean\uff0c\u5982\u679c\u627e\u5230\u591a\u4e2a\u518d\u6839\u636e \u53c2\u6570\u540d \u786e\u5b9a\u4e00\u4e2a \u800c\u8fd9\u79cd\u5e95\u5c42\u5230\u4e86\uff1a \u5c5e\u6027\u6ce8\u5165 set\u65b9\u6cd5\u6ce8\u5165 \u6784\u9020\u65b9\u6cd5\u6ce8\u5165 \u5bfb\u627e\u6ce8\u5165\u70b9 \u5728\u521b\u5efa\u4e00\u4e2aBean\u7684\u8fc7\u7a0b\u4e2d\uff0cSpring\u4f1a\u5229\u7528AutowiredAnnotationBeanPostProcessor\u7684 postProcessMergedBeanDefinition() \u627e\u51fa\u6ce8\u5165\u70b9\u5e76\u7f13\u5b58\uff0c\u627e\u6ce8\u5165\u70b9\u7684\u6d41\u7a0b\u4e3a\uff1a \u904d\u5386\u5f53\u524d\u7c7b\u7684\u6240\u6709\u7684\u5c5e\u6027\u5b57\u6bb5Field \u67e5\u770b\u5b57\u6bb5\u4e0a\u662f\u5426\u5b58\u5728@Autowired\u3001@Value\u3001@Inject\u4e2d\u7684\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\uff0c\u5b58\u5728\u5219\u8ba4\u4e3a\u8be5\u5b57\u6bb5\u662f\u4e00\u4e2a\u6ce8\u5165\u70b9 \u5982\u679c\u5b57\u6bb5\u662fstatic\u7684\uff0c\u5219\u4e0d\u8fdb\u884c\u6ce8\u5165 \u83b7\u53d6@Autowired\u4e2d\u7684required\u5c5e\u6027\u7684\u503c \u5c06\u5b57\u6bb5\u4fe1\u606f\u6784\u9020\u6210\u4e00\u4e2a AutowiredFieldElement\u5bf9\u8c61 \uff0c\u4f5c\u4e3a\u4e00\u4e2a \u6ce8\u5165\u70b9\u5bf9\u8c61 \u6dfb\u52a0\u5230currElements\u96c6\u5408\u4e2d\u3002 \u904d\u5386\u5f53\u524d\u7c7b\u7684\u6240\u6709\u65b9\u6cd5Method \u5224\u65ad\u5f53\u524dMethod\u662f\u5426\u662f \u6865\u63a5\u65b9\u6cd5 \uff0c\u5982\u679c\u662f\u627e\u5230\u539f\u65b9\u6cd5 \u67e5\u770b\u65b9\u6cd5\u4e0a\u662f\u5426\u5b58\u5728@Autowired\u3001@Value\u3001@Inject\u4e2d\u7684\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\uff0c\u5b58\u5728\u5219\u8ba4\u4e3a\u8be5\u65b9\u6cd5\u662f\u4e00\u4e2a\u6ce8\u5165\u70b9 \u5982\u679c\u65b9\u6cd5\u662fstatic\u7684\uff0c\u5219\u4e0d\u8fdb\u884c\u6ce8\u5165 \u83b7\u53d6@Autowired\u4e2d\u7684required\u5c5e\u6027\u7684\u503c \u5c06\u65b9\u6cd5\u4fe1\u606f\u6784\u9020\u6210\u4e00\u4e2a AutowiredMethodElement\u5bf9\u8c61 \uff0c\u4f5c\u4e3a\u4e00\u4e2a \u6ce8\u5165\u70b9\u5bf9\u8c61 \u6dfb\u52a0\u5230currElements\u96c6\u5408\u4e2d\u3002 \u904d\u5386\u5b8c\u5f53\u524d\u7c7b\u7684\u5b57\u6bb5\u548c\u65b9\u6cd5\u540e\uff0c\u5c06 \u904d\u5386\u7236\u7c7b \u7684\uff0c\u76f4\u5230\u6ca1\u6709\u7236\u7c7b\u3002 \u6700\u540e\u5c06currElements\u96c6\u5408\u5c01\u88c5\u6210\u4e00\u4e2aInjectionMetadata\u5bf9\u8c61\uff0c\u4f5c\u4e3a\u5f53\u524dBean\u5bf9\u4e8e\u7684\u6ce8\u5165\u70b9\u96c6\u5408\u5bf9\u8c61\uff0c\u5e76\u7f13\u5b58\u3002 static\u7684\u5b57\u6bb5\u6216\u65b9\u6cd5\u4e3a\u4ec0\u4e48\u4e0d\u652f\u6301 1 2 3 4 5 6 @Component @Scope ( \"prototype\" ) public class OrderService { } 1 2 3 4 5 6 7 8 9 10 11 12 @Component @Scope ( \"prototype\" ) public class UserService { @Autowired private static OrderService orderService ; public void test () { System . out . println ( \"test123\" ); } } \u770b\u4e0a\u9762\u4ee3\u7801\uff0cUserService\u548cOrderService\u90fd\u662f\u539f\u578bBean\uff0c\u5047\u8bbeSpring\u652f\u6301static\u5b57\u6bb5\u8fdb\u884c\u81ea\u52a8\u6ce8\u5165\uff0c\u90a3\u4e48\u73b0\u5728\u8c03\u7528\u4e24\u6b21 UserService userService1 = context.getBean(\"userService\") UserService userService2 = context.getBean(\"userService\") \u95ee\u6b64\u65f6\uff0cuserService1\u7684orderService\u503c\u662f\u4ec0\u4e48\uff1f\u8fd8\u662f\u5b83\u81ea\u5df1\u6ce8\u5165\u7684\u503c\u5417\uff1f \u200b \u7b54\u6848\u662f\u4e0d\u662f\uff0c\u4e00\u65e6userService2 \u521b\u5efa\u597d\u4e86\u4e4b\u540e\uff0cstatic orderService\u5b57\u6bb5\u7684\u503c\u5c31\u53d1\u751f\u4e86\u4fee\u6539\u4e86\uff0c\u4ece\u800c\u51fa\u73b0bug\u3002 \u6865\u63a5\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public interface UserInterface < T > { void setOrderService ( T t ); } @Component public class UserService implements UserInterface < OrderService > { private OrderService orderService ; @Override @Autowired public void setOrderService ( OrderService orderService ) { this . orderService = orderService ; } public void test () { System . out . println ( \"test123\" ); } } UserService\u5bf9\u5e94\u7684\u5b57\u8282\u7801\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 // class version 52.0 (52) // access flags 0x21 // signature Ljava/lang/Object;Lcom/zhouyu/service/UserInterface<Lcom/zhouyu/service/OrderService;>; // declaration: com/zhouyu/service/UserService implements com.zhouyu.service.UserInterface<com.zhouyu.service.OrderService> public class com / zhouyu / service / UserService implements com / zhouyu / service / UserInterface { // compiled from: UserService.java @Lorg / springframework / stereotype / Component ;() // access flags 0x2 private Lcom / zhouyu / service / OrderService ; orderService // access flags 0x1 public < init > () V L0 LINENUMBER 12 L0 ALOAD 0 INVOKESPECIAL java / lang / Object . < init > () V RETURN L1 LOCALVARIABLE this Lcom / zhouyu / service / UserService ; L0 L1 0 MAXSTACK = 1 MAXLOCALS = 1 // access flags 0x1 public setOrderService ( Lcom / zhouyu / service / OrderService ;) V @Lorg / springframework / beans / factory / annotation / Autowired ;() L0 LINENUMBER 19 L0 ALOAD 0 ALOAD 1 PUTFIELD com / zhouyu / service / UserService . orderService : Lcom / zhouyu / service / OrderService ; L1 LINENUMBER 20 L1 RETURN L2 LOCALVARIABLE this Lcom / zhouyu / service / UserService ; L0 L2 0 LOCALVARIABLE orderService Lcom / zhouyu / service / OrderService ; L0 L2 1 MAXSTACK = 2 MAXLOCALS = 2 // access flags 0x1 public test () V L0 LINENUMBER 23 L0 GETSTATIC java / lang / System . out : Ljava / io / PrintStream ; LDC \"test123\" INVOKEVIRTUAL java / io / PrintStream . println ( Ljava / lang / String ;) V L1 LINENUMBER 24 L1 RETURN L2 LOCALVARIABLE this Lcom / zhouyu / service / UserService ; L0 L2 0 MAXSTACK = 2 MAXLOCALS = 1 // access flags 0x1041 public synthetic bridge setOrderService ( Ljava / lang / Object ;) V @Lorg / springframework / beans / factory / annotation / Autowired ;() L0 LINENUMBER 11 L0 ALOAD 0 ALOAD 1 CHECKCAST com / zhouyu / service / OrderService INVOKEVIRTUAL com / zhouyu / service / UserService . setOrderService ( Lcom / zhouyu / service / OrderService ;) V RETURN L1 LOCALVARIABLE this Lcom / zhouyu / service / UserService ; L0 L1 0 MAXSTACK = 2 MAXLOCALS = 2 } \u53ef\u4ee5\u770b\u5230\u5728UserSerivce\u7684\u5b57\u8282\u7801\u4e2d\u6709\u4e24\u4e2asetOrderService\u65b9\u6cd5\uff1a public setOrderService(Lcom/zhouyu/service/OrderService;)V public synthetic bridge setOrderService(Ljava/lang/Object;)V \u5e76\u4e14\u90fd\u662f\u5b58\u5728@Autowired\u6ce8\u89e3\u7684\u3002 \u200b \u6240\u4ee5\u5728Spring\u4e2d\u9700\u8981\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\uff0c\u5f53\u904d\u5386\u5230\u6865\u63a5\u65b9\u6cd5\u65f6\uff0c\u5f97\u627e\u5230\u539f\u65b9\u6cd5\u3002 \u6ce8\u5165\u70b9\u8fdb\u884c\u6ce8\u5165 Spring\u5728AutowiredAnnotationBeanPostProcessor\u7684 postProcessProperties() \u65b9\u6cd5\u4e2d\uff0c\u4f1a\u904d\u5386\u6240\u627e\u5230\u7684\u6ce8\u5165\u70b9\u4f9d\u6b21\u8fdb\u884c\u6ce8\u5165\u3002 \u200b \u5b57\u6bb5\u6ce8\u5165 \u904d\u5386\u6240\u6709\u7684 AutowiredFieldElement\u5bf9\u8c61\u3002 \u5c06\u5bf9\u5e94\u7684\u5b57\u6bb5\u5c01\u88c5\u4e3a DependencyDescriptor\u5bf9\u8c61 \u3002 \u8c03\u7528BeanFactory\u7684resolveDependency()\u65b9\u6cd5\uff0c\u4f20\u5165 DependencyDescriptor\u5bf9\u8c61 \uff0c\u8fdb\u884c\u4f9d\u8d56\u67e5\u627e\uff0c\u627e\u5230\u5f53\u524d\u5b57\u6bb5\u6240\u5339\u914d\u7684Bean\u5bf9\u8c61\u3002 \u5c06 DependencyDescriptor\u5bf9\u8c61 \u548c\u6240\u627e\u5230\u7684 \u7ed3\u679c\u5bf9\u8c61beanName \u5c01\u88c5\u6210\u4e00\u4e2a ShortcutDependencyDescriptor\u5bf9\u8c61 \u4f5c\u4e3a\u7f13\u5b58\uff0c\u6bd4\u5982\u5982\u679c\u5f53\u524dBean\u662f\u539f\u578bBean\uff0c\u90a3\u4e48\u4e0b\u6b21\u518d\u6765\u521b\u5efa\u8be5Bean\u65f6\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u62ff\u7f13\u5b58\u7684\u7ed3\u679c\u5bf9\u8c61beanName\u53bbBeanFactory\u4e2d\u53bb\u90a3bean\u5bf9\u8c61\u4e86\uff0c\u4e0d\u7528\u518d\u6b21\u8fdb\u884c\u67e5\u627e\u4e86 \u5229\u7528\u53cd\u5c04\u5c06\u7ed3\u679c\u5bf9\u8c61\u8d4b\u503c\u7ed9\u5b57\u6bb5\u3002 Set\u65b9\u6cd5\u6ce8\u5165 \u904d\u5386\u6240\u6709\u7684 AutowiredMethodElement\u5bf9\u8c61 \u904d\u5386\u5c06\u5bf9\u5e94\u7684\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5c06\u6bcf\u4e2a\u53c2\u6570\u5c01\u88c5\u6210 MethodParameter\u5bf9\u8c61 \u5c06 MethodParameter\u5bf9\u8c61 \u5c01\u88c5\u4e3a DependencyDescriptor\u5bf9\u8c61 \u8c03\u7528BeanFactory\u7684resolveDependency()\u65b9\u6cd5\uff0c\u4f20\u5165 DependencyDescriptor\u5bf9\u8c61 \uff0c\u8fdb\u884c\u4f9d\u8d56\u67e5\u627e\uff0c\u627e\u5230\u5f53\u524d\u65b9\u6cd5\u53c2\u6570\u6240\u5339\u914d\u7684Bean\u5bf9\u8c61\u3002 \u5c06 DependencyDescriptor\u5bf9\u8c61 \u548c\u6240\u627e\u5230\u7684 \u7ed3\u679c\u5bf9\u8c61beanName \u5c01\u88c5\u6210\u4e00\u4e2a ShortcutDependencyDescriptor\u5bf9\u8c61 \u4f5c\u4e3a\u7f13\u5b58\uff0c\u6bd4\u5982\u5982\u679c\u5f53\u524dBean\u662f\u539f\u578bBean\uff0c\u90a3\u4e48\u4e0b\u6b21\u518d\u6765\u521b\u5efa\u8be5Bean\u65f6\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u62ff\u7f13\u5b58\u7684\u7ed3\u679c\u5bf9\u8c61beanName\u53bbBeanFactory\u4e2d\u53bb\u90a3bean\u5bf9\u8c61\u4e86\uff0c\u4e0d\u7528\u518d\u6b21\u8fdb\u884c\u67e5\u627e\u4e86 \u5229\u7528\u53cd\u5c04\u5c06\u627e\u5230\u7684\u6240\u6709\u7ed3\u679c\u5bf9\u8c61\u4f20\u7ed9\u5f53\u524d\u65b9\u6cd5\uff0c\u5e76\u6267\u884c\u3002","title":"6.Spring\u4f9d\u8d56\u6ce8\u5165\u6e90\u7801\u89e3\u6790\u4e0a.md"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/06Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#spring","text":"\u9996\u5148\u5206\u4e24\u79cd\uff1a \u624b\u52a8\u6ce8\u5165 \u81ea\u52a8\u6ce8\u5165","title":"Spring\u4e2d\u5230\u5e95\u6709\u51e0\u79cd\u4f9d\u8d56\u6ce8\u5165\u7684\u65b9\u5f0f\uff1f"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/06Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#_1","text":"\u5728XML\u4e2d\u5b9a\u4e49Bean\u65f6\uff0c\u5c31\u662f\u624b\u52a8\u6ce8\u5165\uff0c\u56e0\u4e3a\u662f \u7a0b\u5e8f\u5458\u624b\u52a8\u7ed9\u67d0\u4e2a\u5c5e\u6027\u6307\u5b9a\u4e86\u503c \u3002 1 2 3 < bean name = \"userService\" class =\" com . luban . service . UserService \"> <property name=\" orderService \" ref=\" orderService \"/> </bean> \u4e0a\u9762\u8fd9\u79cd\u5e95\u5c42\u662f\u901a\u8fc7 set\u65b9\u6cd5 \u8fdb\u884c\u6ce8\u5165\u3002 1 2 3 < bean name = \"userService\" class =\" com . luban . service . UserService \"> <constructor-arg index=\" 0 \" ref=\" orderService \"/> </bean> \u4e0a\u9762\u8fd9\u79cd\u5e95\u5c42\u662f\u901a\u8fc7 \u6784\u9020\u65b9\u6cd5 \u8fdb\u884c\u6ce8\u5165\u3002 \u6240\u4ee5\u624b\u52a8\u6ce8\u5165\u7684\u5e95\u5c42\u4e5f\u5c31\u662f\u5206\u4e3a\u4e24\u79cd\uff1a set\u65b9\u6cd5\u6ce8\u5165 \u6784\u9020\u65b9\u6cd5\u6ce8\u5165","title":"\u624b\u52a8\u6ce8\u5165"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/06Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#_2","text":"\u81ea\u52a8\u6ce8\u5165\u53c8\u5206\u4e3a\u4e24\u79cd\uff1a XML\u7684autowire\u81ea\u52a8\u6ce8\u5165 @Autowired\u6ce8\u89e3\u7684\u81ea\u52a8\u6ce8\u5165","title":"\u81ea\u52a8\u6ce8\u5165"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/06Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#xmlautowire","text":"\u5728XML\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5b9a\u4e49\u4e00\u4e2aBean\u65f6\u53bb\u6307\u5b9a\u8fd9\u4e2aBean\u7684\u81ea\u52a8\u6ce8\u5165\u6a21\u5f0f\uff1a byType byName constructor default no \u6bd4\u5982\uff1a 1 < bean id = \"userService\" class =\" com . luban . service . UserService \" autowire=\" byType \"/> \u8fd9\u4e48\u5199\uff0c\u8868\u793aSpring\u4f1a\u81ea\u52a8\u7684\u7ed9userService\u4e2d\u6240\u6709\u7684\u5c5e\u6027\u81ea\u52a8\u8d4b\u503c\uff08 \u4e0d\u9700\u8981 \u8fd9\u4e2a\u5c5e\u6027\u4e0a\u6709@Autowired\u6ce8\u89e3\uff0c\u4f46\u9700\u8981\u8fd9\u4e2a\u5c5e\u6027\u6709\u5bf9\u5e94\u7684 set\u65b9\u6cd5 \uff09\u3002 \u5728\u521b\u5efaBean\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5728\u586b\u5145\u5c5e\u6027\u65f6\uff0cSpring\u4f1a\u53bb\u89e3\u6790\u5f53\u524d\u7c7b\uff0c\u628a \u5f53\u524d\u7c7b\u7684\u6240\u6709\u65b9\u6cd5 \u90fd\u89e3\u6790\u51fa\u6765\uff0cSpring\u4f1a\u53bb\u89e3\u6790\u6bcf\u4e2a\u65b9\u6cd5\u5f97\u5230\u5bf9\u5e94\u7684PropertyDescriptor\u5bf9\u8c61\uff0cPropertyDescriptor\u4e2d\u6709\u51e0\u4e2a\u5c5e\u6027\uff1a name\uff1a\u8fd9\u4e2aname\u5e76\u4e0d\u662f\u65b9\u6cd5\u7684\u540d\u5b57\uff0c\u800c\u662f\u62ff\u65b9\u6cd5\u540d\u5b57\u8fdb\u8fc7\u5904\u7406\u540e\u7684\u540d\u5b57 \u5982\u679c\u65b9\u6cd5\u540d\u5b57\u4ee5\u201cget\u201d\u5f00\u5934\uff0c\u6bd4\u5982\u201cgetXXX\u201d,\u90a3\u4e48name=XXX \u5982\u679c\u65b9\u6cd5\u540d\u5b57\u4ee5\u201cis\u201d\u5f00\u5934\uff0c\u6bd4\u5982\u201cisXXX\u201d,\u90a3\u4e48name=XXX \u5982\u679c\u65b9\u6cd5\u540d\u5b57\u4ee5\u201cset\u201d\u5f00\u5934\uff0c\u6bd4\u5982\u201csetXXX\u201d,\u90a3\u4e48name=XXX readMethodRef\uff1a\u8868\u793aget\u65b9\u6cd5\u7684Method\u5bf9\u8c61\u7684\u5f15\u7528 readMethodName\uff1a\u8868\u793aget\u65b9\u6cd5\u7684\u540d\u5b57 writeMethodRef\uff1a\u8868\u793aset\u65b9\u6cd5\u7684Method\u5bf9\u8c61\u7684\u5f15\u7528 writeMethodName\uff1a\u8868\u793aset\u65b9\u6cd5\u7684\u540d\u5b57 propertyTypeRef\uff1a\u5982\u679c\u6709get\u65b9\u6cd5\u90a3\u4e48\u5bf9\u5e94\u7684\u5c31\u662f\u8fd4\u56de\u503c\u7684\u7c7b\u578b\uff0c\u5982\u679c\u662fset\u65b9\u6cd5\u90a3\u4e48\u5bf9\u5e94\u7684\u5c31\u662fset\u65b9\u6cd5\u4e2d\u552f\u4e00\u53c2\u6570\u7684\u7c7b\u578b get\u65b9\u6cd5\u7684\u5b9a\u4e49\u662f\uff1a \u65b9\u6cd5\u53c2\u6570\u4e2a\u6570\u4e3a0\u4e2a\uff0c\u5e76\u4e14 \uff08\u65b9\u6cd5\u540d\u5b57\u4ee5\"get\"\u5f00\u5934 \u6216\u8005 \u65b9\u6cd5\u540d\u5b57\u4ee5\"is\"\u5f00\u5934\u5e76\u4e14\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\u4e3aboolean\uff09 set\u65b9\u6cd5\u7684\u5b9a\u4e49\u662f\uff1a \u65b9\u6cd5\u53c2\u6570\u4e2a\u6570\u4e3a1\u4e2a\uff0c\u5e76\u4e14 \uff08\u65b9\u6cd5\u540d\u5b57\u4ee5\"set\"\u5f00\u5934\u5e76\u4e14\u65b9\u6cd5\u8fd4\u56de\u7c7b\u578b\u4e3avoid\uff09 \u6240\u4ee5\uff0cSpring\u5728\u901a\u8fc7byName\u7684\u81ea\u52a8\u586b\u5145\u5c5e\u6027\u65f6\u6d41\u7a0b\u662f\uff1a \u627e\u5230\u6240\u6709set\u65b9\u6cd5\u6240\u5bf9\u5e94\u7684XXX\u90e8\u5206\u7684\u540d\u5b57 \u6839\u636eXXX\u90e8\u5206\u7684\u540d\u5b57\u53bb\u83b7\u53d6bean Spring\u5728\u901a\u8fc7byType\u7684\u81ea\u52a8\u586b\u5145\u5c5e\u6027\u65f6\u6d41\u7a0b\u662f\uff1a \u83b7\u53d6\u5230set\u65b9\u6cd5\u4e2d\u7684\u552f\u4e00\u53c2\u6570\u7684\u53c2\u6570\u7c7b\u578b\uff0c\u5e76\u4e14\u6839\u636e\u8be5\u7c7b\u578b\u53bb\u5bb9\u5668\u4e2d\u83b7\u53d6bean \u5982\u679c\u627e\u5230\u591a\u4e2a\uff0c\u4f1a\u62a5\u9519\u3002 \u4ee5\u4e0a\uff0c\u5206\u6790\u4e86autowire\u7684byType\u548cbyName\u60c5\u51b5\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u5206\u6790constructor\uff0cconstructor\u8868\u793a\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u6ce8\u5165\uff0c\u5176\u5b9e\u8fd9\u79cd\u60c5\u51b5\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff0c\u6ca1\u6709byType\u548cbyName\u90a3\u4e48\u590d\u6742\u3002 \u200b \u5982\u679c\u662fconstructor\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4e0d\u5199set\u65b9\u6cd5\u4e86\uff0c\u5f53\u67d0\u4e2abean\u662f\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u6765\u6ce8\u5165\u65f6\uff0cspring\u5229\u7528\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\u4fe1\u606f\u4eceSpring\u5bb9\u5668\u4e2d\u53bb\u627ebean\uff0c\u627e\u5230bean\u4e4b\u540e\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9\u6784\u9020\u65b9\u6cd5\uff0c\u4ece\u800c\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2abean\u5bf9\u8c61\uff0c\u5e76\u5b8c\u6210\u5c5e\u6027\u8d4b\u503c\uff08\u5c5e\u6027\u8d4b\u503c\u7684\u4ee3\u7801\u5f97\u7a0b\u5e8f\u5458\u6765\u5199\uff09\u3002 \u6211\u4eec\u8fd9\u91cc\u5148\u4e0d\u8003\u8651\u4e00\u4e2a\u7c7b\u6709\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\u7684\u60c5\u51b5\uff0c\u540e\u9762\u5355\u72ec\u8bb2 \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \u3002\u6211\u4eec\u8fd9\u91cc\u53ea\u8003\u8651\u53ea\u6709\u4e00\u4e2a\u6709\u53c2\u6784\u9020\u65b9\u6cd5\u3002 \u5176\u5b9e\u6784\u9020\u65b9\u6cd5\u6ce8\u5165\u76f8\u5f53\u4e8ebyType+byName\uff0c\u666e\u901a\u7684byType\u662f\u6839\u636eset\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570\u7c7b\u578b\u53bb\u627ebean\uff0c\u627e\u5230\u591a\u4e2a\u4f1a\u62a5\u9519\uff0c\u800cconstructor\u5c31\u662f\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570\u7c7b\u578b\u53bb\u627ebean\uff0c\u5982\u679c\u627e\u5230\u591a\u4e2a\u4f1a\u6839\u636e\u53c2\u6570\u540d\u786e\u5b9a\u3002 \u53e6\u5916\u4e24\u4e2a\uff1a no\uff0c\u8868\u793a\u5173\u95edautowire default\uff0c\u8868\u793a\u9ed8\u8ba4\u503c\uff0c\u6211\u4eec\u4e00\u76f4\u6f14\u793a\u7684\u67d0\u4e2abean\u7684autowire\uff0c\u800c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728 \u6807\u7b7e\u4e2d\u8bbe\u7f6eautowire\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\uff0c\u90a3\u4e48 \u6807\u7b7e\u4e2d\u8bbe\u7f6e\u7684autowire\u5982\u679c\u4e3adefault\uff0c\u90a3\u4e48\u5219\u4f1a\u7528 \u6807\u7b7e\u4e2d\u8bbe\u7f6e\u7684autowire\u3002 \u53ef\u4ee5\u53d1\u73b0XML\u4e2d\u7684\u81ea\u52a8\u6ce8\u5165\u662f\u633a\u5f3a\u5927\u7684\uff0c\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c \u4e3a\u4ec0\u4e48\u6211\u4eec\u5e73\u65f6\u90fd\u662f\u7528\u7684@Autowired\u6ce8\u89e3\u5462\uff1f\u800c\u6ca1\u6709\u7528\u4e0a\u6587\u8bf4\u7684\u8fd9\u79cd\u81ea\u52a8\u6ce8\u5165\u65b9\u5f0f\u5462\uff1f @Autowired\u6ce8\u89e3\u76f8\u5f53\u4e8eXML\u4e2d\u7684autowire\u5c5e\u6027\u7684 \u6ce8\u89e3\u65b9\u5f0f\u7684\u66ff\u4ee3 \u3002\u8fd9\u662f\u5728\u5b98\u7f51\u4e0a\u6709\u63d0\u5230\u7684\u3002 1 Essentially , the @Autowired annotation provides the same capabilities as described in Autowiring Collaborators but with more fine - grained control and wider applicability \u7ffb\u8bd1\u4e00\u4e0b\uff1a \u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c@Autowired\u6ce8\u89e3\u63d0\u4f9b\u4e86\u4e0eautowire\u76f8\u540c\u7684\u529f\u80fd\uff0c\u4f46\u662f\u62e5\u6709\u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\u548c\u66f4\u5e7f\u6cdb\u7684\u9002\u7528\u6027\u3002 \u6ce8\u610f\uff1a \u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236 \u3002 XML\u4e2d\u7684autowire\u63a7\u5236\u7684\u662f\u6574\u4e2abean\u7684\u6240\u6709\u5c5e\u6027\uff0c\u800c@Autowired\u6ce8\u89e3\u662f\u76f4\u63a5\u5199\u5728\u67d0\u4e2a\u5c5e\u6027\u3001\u67d0\u4e2aset\u65b9\u6cd5\u3001\u67d0\u4e2a\u6784\u9020\u65b9\u6cd5\u4e0a\u7684\u3002 \u518d\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4e00\u4e2a\u7c7b\u6709\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u5982\u679c\u7528XML\u7684autowire=constructor\uff0c\u4f60\u65e0\u6cd5\u63a7\u5236\u5230\u5e95\u7528\u54ea\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u800c\u4f60\u53ef\u4ee5\u7528@Autowired\u6ce8\u89e3\u6765\u76f4\u63a5\u6307\u5b9a\u4f60\u60f3\u7528\u54ea\u4e2a\u6784\u9020\u65b9\u6cd5\u3002 \u540c\u65f6\uff0c\u7528@Autowired\u6ce8\u89e3\uff0c\u8fd8\u53ef\u4ee5\u63a7\u5236\uff0c\u54ea\u4e9b\u5c5e\u6027\u60f3\u88ab\u81ea\u52a8\u6ce8\u5165\uff0c\u54ea\u4e9b\u5c5e\u6027\u4e0d\u60f3\uff0c\u8fd9\u4e5f\u662f\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\u3002 \u4f46\u662f@Autowired\u65e0\u6cd5\u533a\u5206byType\u548cbyName\uff0c@Autowired\u662f\u5148byType\uff0c\u5982\u679c\u627e\u5230\u591a\u4e2a\u5219byName\u3002 \u90a3\u4e48XML\u7684\u81ea\u52a8\u6ce8\u5165\u5e95\u5c42\u5176\u5b9e\u4e5f\u5c31\u662f: set\u65b9\u6cd5\u6ce8\u5165 \u6784\u9020\u65b9\u6cd5\u6ce8\u5165","title":"XML\u7684autowire\u81ea\u52a8\u6ce8\u5165"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/06Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#autowired","text":"\u4e0a\u6587\u8bf4\u4e86@Autowired\u6ce8\u89e3\uff0c\u662fbyType\u548cbyName\u7684\u7ed3\u5408\u3002 @Autowired\u6ce8\u89e3\u53ef\u4ee5\u5199\u5728\uff1a \u5c5e\u6027\u4e0a\uff1a\u5148\u6839\u636e \u5c5e\u6027\u7c7b\u578b \u53bb\u627eBean\uff0c\u5982\u679c\u627e\u5230\u591a\u4e2a\u518d\u6839\u636e \u5c5e\u6027\u540d \u786e\u5b9a\u4e00\u4e2a \u6784\u9020\u65b9\u6cd5\u4e0a\uff1a\u5148\u6839\u636e\u65b9\u6cd5 \u53c2\u6570\u7c7b\u578b \u53bb\u627eBean\uff0c\u5982\u679c\u627e\u5230\u591a\u4e2a\u518d\u6839\u636e \u53c2\u6570\u540d \u786e\u5b9a\u4e00\u4e2a set\u65b9\u6cd5\u4e0a\uff1a\u5148\u6839\u636e\u65b9\u6cd5 \u53c2\u6570\u7c7b\u578b \u53bb\u627eBean\uff0c\u5982\u679c\u627e\u5230\u591a\u4e2a\u518d\u6839\u636e \u53c2\u6570\u540d \u786e\u5b9a\u4e00\u4e2a \u800c\u8fd9\u79cd\u5e95\u5c42\u5230\u4e86\uff1a \u5c5e\u6027\u6ce8\u5165 set\u65b9\u6cd5\u6ce8\u5165 \u6784\u9020\u65b9\u6cd5\u6ce8\u5165","title":"@Autowired\u6ce8\u89e3\u7684\u81ea\u52a8\u6ce8\u5165"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/06Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#_3","text":"\u5728\u521b\u5efa\u4e00\u4e2aBean\u7684\u8fc7\u7a0b\u4e2d\uff0cSpring\u4f1a\u5229\u7528AutowiredAnnotationBeanPostProcessor\u7684 postProcessMergedBeanDefinition() \u627e\u51fa\u6ce8\u5165\u70b9\u5e76\u7f13\u5b58\uff0c\u627e\u6ce8\u5165\u70b9\u7684\u6d41\u7a0b\u4e3a\uff1a \u904d\u5386\u5f53\u524d\u7c7b\u7684\u6240\u6709\u7684\u5c5e\u6027\u5b57\u6bb5Field \u67e5\u770b\u5b57\u6bb5\u4e0a\u662f\u5426\u5b58\u5728@Autowired\u3001@Value\u3001@Inject\u4e2d\u7684\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\uff0c\u5b58\u5728\u5219\u8ba4\u4e3a\u8be5\u5b57\u6bb5\u662f\u4e00\u4e2a\u6ce8\u5165\u70b9 \u5982\u679c\u5b57\u6bb5\u662fstatic\u7684\uff0c\u5219\u4e0d\u8fdb\u884c\u6ce8\u5165 \u83b7\u53d6@Autowired\u4e2d\u7684required\u5c5e\u6027\u7684\u503c \u5c06\u5b57\u6bb5\u4fe1\u606f\u6784\u9020\u6210\u4e00\u4e2a AutowiredFieldElement\u5bf9\u8c61 \uff0c\u4f5c\u4e3a\u4e00\u4e2a \u6ce8\u5165\u70b9\u5bf9\u8c61 \u6dfb\u52a0\u5230currElements\u96c6\u5408\u4e2d\u3002 \u904d\u5386\u5f53\u524d\u7c7b\u7684\u6240\u6709\u65b9\u6cd5Method \u5224\u65ad\u5f53\u524dMethod\u662f\u5426\u662f \u6865\u63a5\u65b9\u6cd5 \uff0c\u5982\u679c\u662f\u627e\u5230\u539f\u65b9\u6cd5 \u67e5\u770b\u65b9\u6cd5\u4e0a\u662f\u5426\u5b58\u5728@Autowired\u3001@Value\u3001@Inject\u4e2d\u7684\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\uff0c\u5b58\u5728\u5219\u8ba4\u4e3a\u8be5\u65b9\u6cd5\u662f\u4e00\u4e2a\u6ce8\u5165\u70b9 \u5982\u679c\u65b9\u6cd5\u662fstatic\u7684\uff0c\u5219\u4e0d\u8fdb\u884c\u6ce8\u5165 \u83b7\u53d6@Autowired\u4e2d\u7684required\u5c5e\u6027\u7684\u503c \u5c06\u65b9\u6cd5\u4fe1\u606f\u6784\u9020\u6210\u4e00\u4e2a AutowiredMethodElement\u5bf9\u8c61 \uff0c\u4f5c\u4e3a\u4e00\u4e2a \u6ce8\u5165\u70b9\u5bf9\u8c61 \u6dfb\u52a0\u5230currElements\u96c6\u5408\u4e2d\u3002 \u904d\u5386\u5b8c\u5f53\u524d\u7c7b\u7684\u5b57\u6bb5\u548c\u65b9\u6cd5\u540e\uff0c\u5c06 \u904d\u5386\u7236\u7c7b \u7684\uff0c\u76f4\u5230\u6ca1\u6709\u7236\u7c7b\u3002 \u6700\u540e\u5c06currElements\u96c6\u5408\u5c01\u88c5\u6210\u4e00\u4e2aInjectionMetadata\u5bf9\u8c61\uff0c\u4f5c\u4e3a\u5f53\u524dBean\u5bf9\u4e8e\u7684\u6ce8\u5165\u70b9\u96c6\u5408\u5bf9\u8c61\uff0c\u5e76\u7f13\u5b58\u3002","title":"\u5bfb\u627e\u6ce8\u5165\u70b9"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/06Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#static","text":"1 2 3 4 5 6 @Component @Scope ( \"prototype\" ) public class OrderService { } 1 2 3 4 5 6 7 8 9 10 11 12 @Component @Scope ( \"prototype\" ) public class UserService { @Autowired private static OrderService orderService ; public void test () { System . out . println ( \"test123\" ); } } \u770b\u4e0a\u9762\u4ee3\u7801\uff0cUserService\u548cOrderService\u90fd\u662f\u539f\u578bBean\uff0c\u5047\u8bbeSpring\u652f\u6301static\u5b57\u6bb5\u8fdb\u884c\u81ea\u52a8\u6ce8\u5165\uff0c\u90a3\u4e48\u73b0\u5728\u8c03\u7528\u4e24\u6b21 UserService userService1 = context.getBean(\"userService\") UserService userService2 = context.getBean(\"userService\") \u95ee\u6b64\u65f6\uff0cuserService1\u7684orderService\u503c\u662f\u4ec0\u4e48\uff1f\u8fd8\u662f\u5b83\u81ea\u5df1\u6ce8\u5165\u7684\u503c\u5417\uff1f \u200b \u7b54\u6848\u662f\u4e0d\u662f\uff0c\u4e00\u65e6userService2 \u521b\u5efa\u597d\u4e86\u4e4b\u540e\uff0cstatic orderService\u5b57\u6bb5\u7684\u503c\u5c31\u53d1\u751f\u4e86\u4fee\u6539\u4e86\uff0c\u4ece\u800c\u51fa\u73b0bug\u3002","title":"static\u7684\u5b57\u6bb5\u6216\u65b9\u6cd5\u4e3a\u4ec0\u4e48\u4e0d\u652f\u6301"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/06Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public interface UserInterface < T > { void setOrderService ( T t ); } @Component public class UserService implements UserInterface < OrderService > { private OrderService orderService ; @Override @Autowired public void setOrderService ( OrderService orderService ) { this . orderService = orderService ; } public void test () { System . out . println ( \"test123\" ); } } UserService\u5bf9\u5e94\u7684\u5b57\u8282\u7801\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 // class version 52.0 (52) // access flags 0x21 // signature Ljava/lang/Object;Lcom/zhouyu/service/UserInterface<Lcom/zhouyu/service/OrderService;>; // declaration: com/zhouyu/service/UserService implements com.zhouyu.service.UserInterface<com.zhouyu.service.OrderService> public class com / zhouyu / service / UserService implements com / zhouyu / service / UserInterface { // compiled from: UserService.java @Lorg / springframework / stereotype / Component ;() // access flags 0x2 private Lcom / zhouyu / service / OrderService ; orderService // access flags 0x1 public < init > () V L0 LINENUMBER 12 L0 ALOAD 0 INVOKESPECIAL java / lang / Object . < init > () V RETURN L1 LOCALVARIABLE this Lcom / zhouyu / service / UserService ; L0 L1 0 MAXSTACK = 1 MAXLOCALS = 1 // access flags 0x1 public setOrderService ( Lcom / zhouyu / service / OrderService ;) V @Lorg / springframework / beans / factory / annotation / Autowired ;() L0 LINENUMBER 19 L0 ALOAD 0 ALOAD 1 PUTFIELD com / zhouyu / service / UserService . orderService : Lcom / zhouyu / service / OrderService ; L1 LINENUMBER 20 L1 RETURN L2 LOCALVARIABLE this Lcom / zhouyu / service / UserService ; L0 L2 0 LOCALVARIABLE orderService Lcom / zhouyu / service / OrderService ; L0 L2 1 MAXSTACK = 2 MAXLOCALS = 2 // access flags 0x1 public test () V L0 LINENUMBER 23 L0 GETSTATIC java / lang / System . out : Ljava / io / PrintStream ; LDC \"test123\" INVOKEVIRTUAL java / io / PrintStream . println ( Ljava / lang / String ;) V L1 LINENUMBER 24 L1 RETURN L2 LOCALVARIABLE this Lcom / zhouyu / service / UserService ; L0 L2 0 MAXSTACK = 2 MAXLOCALS = 1 // access flags 0x1041 public synthetic bridge setOrderService ( Ljava / lang / Object ;) V @Lorg / springframework / beans / factory / annotation / Autowired ;() L0 LINENUMBER 11 L0 ALOAD 0 ALOAD 1 CHECKCAST com / zhouyu / service / OrderService INVOKEVIRTUAL com / zhouyu / service / UserService . setOrderService ( Lcom / zhouyu / service / OrderService ;) V RETURN L1 LOCALVARIABLE this Lcom / zhouyu / service / UserService ; L0 L1 0 MAXSTACK = 2 MAXLOCALS = 2 } \u53ef\u4ee5\u770b\u5230\u5728UserSerivce\u7684\u5b57\u8282\u7801\u4e2d\u6709\u4e24\u4e2asetOrderService\u65b9\u6cd5\uff1a public setOrderService(Lcom/zhouyu/service/OrderService;)V public synthetic bridge setOrderService(Ljava/lang/Object;)V \u5e76\u4e14\u90fd\u662f\u5b58\u5728@Autowired\u6ce8\u89e3\u7684\u3002 \u200b \u6240\u4ee5\u5728Spring\u4e2d\u9700\u8981\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\uff0c\u5f53\u904d\u5386\u5230\u6865\u63a5\u65b9\u6cd5\u65f6\uff0c\u5f97\u627e\u5230\u539f\u65b9\u6cd5\u3002","title":"\u6865\u63a5\u65b9\u6cd5"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/06Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#_5","text":"Spring\u5728AutowiredAnnotationBeanPostProcessor\u7684 postProcessProperties() \u65b9\u6cd5\u4e2d\uff0c\u4f1a\u904d\u5386\u6240\u627e\u5230\u7684\u6ce8\u5165\u70b9\u4f9d\u6b21\u8fdb\u884c\u6ce8\u5165\u3002 \u200b","title":"\u6ce8\u5165\u70b9\u8fdb\u884c\u6ce8\u5165"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/06Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#_6","text":"\u904d\u5386\u6240\u6709\u7684 AutowiredFieldElement\u5bf9\u8c61\u3002 \u5c06\u5bf9\u5e94\u7684\u5b57\u6bb5\u5c01\u88c5\u4e3a DependencyDescriptor\u5bf9\u8c61 \u3002 \u8c03\u7528BeanFactory\u7684resolveDependency()\u65b9\u6cd5\uff0c\u4f20\u5165 DependencyDescriptor\u5bf9\u8c61 \uff0c\u8fdb\u884c\u4f9d\u8d56\u67e5\u627e\uff0c\u627e\u5230\u5f53\u524d\u5b57\u6bb5\u6240\u5339\u914d\u7684Bean\u5bf9\u8c61\u3002 \u5c06 DependencyDescriptor\u5bf9\u8c61 \u548c\u6240\u627e\u5230\u7684 \u7ed3\u679c\u5bf9\u8c61beanName \u5c01\u88c5\u6210\u4e00\u4e2a ShortcutDependencyDescriptor\u5bf9\u8c61 \u4f5c\u4e3a\u7f13\u5b58\uff0c\u6bd4\u5982\u5982\u679c\u5f53\u524dBean\u662f\u539f\u578bBean\uff0c\u90a3\u4e48\u4e0b\u6b21\u518d\u6765\u521b\u5efa\u8be5Bean\u65f6\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u62ff\u7f13\u5b58\u7684\u7ed3\u679c\u5bf9\u8c61beanName\u53bbBeanFactory\u4e2d\u53bb\u90a3bean\u5bf9\u8c61\u4e86\uff0c\u4e0d\u7528\u518d\u6b21\u8fdb\u884c\u67e5\u627e\u4e86 \u5229\u7528\u53cd\u5c04\u5c06\u7ed3\u679c\u5bf9\u8c61\u8d4b\u503c\u7ed9\u5b57\u6bb5\u3002","title":"\u5b57\u6bb5\u6ce8\u5165"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/06Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#set","text":"\u904d\u5386\u6240\u6709\u7684 AutowiredMethodElement\u5bf9\u8c61 \u904d\u5386\u5c06\u5bf9\u5e94\u7684\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5c06\u6bcf\u4e2a\u53c2\u6570\u5c01\u88c5\u6210 MethodParameter\u5bf9\u8c61 \u5c06 MethodParameter\u5bf9\u8c61 \u5c01\u88c5\u4e3a DependencyDescriptor\u5bf9\u8c61 \u8c03\u7528BeanFactory\u7684resolveDependency()\u65b9\u6cd5\uff0c\u4f20\u5165 DependencyDescriptor\u5bf9\u8c61 \uff0c\u8fdb\u884c\u4f9d\u8d56\u67e5\u627e\uff0c\u627e\u5230\u5f53\u524d\u65b9\u6cd5\u53c2\u6570\u6240\u5339\u914d\u7684Bean\u5bf9\u8c61\u3002 \u5c06 DependencyDescriptor\u5bf9\u8c61 \u548c\u6240\u627e\u5230\u7684 \u7ed3\u679c\u5bf9\u8c61beanName \u5c01\u88c5\u6210\u4e00\u4e2a ShortcutDependencyDescriptor\u5bf9\u8c61 \u4f5c\u4e3a\u7f13\u5b58\uff0c\u6bd4\u5982\u5982\u679c\u5f53\u524dBean\u662f\u539f\u578bBean\uff0c\u90a3\u4e48\u4e0b\u6b21\u518d\u6765\u521b\u5efa\u8be5Bean\u65f6\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u62ff\u7f13\u5b58\u7684\u7ed3\u679c\u5bf9\u8c61beanName\u53bbBeanFactory\u4e2d\u53bb\u90a3bean\u5bf9\u8c61\u4e86\uff0c\u4e0d\u7528\u518d\u6b21\u8fdb\u884c\u67e5\u627e\u4e86 \u5229\u7528\u53cd\u5c04\u5c06\u627e\u5230\u7684\u6240\u6709\u7ed3\u679c\u5bf9\u8c61\u4f20\u7ed9\u5f53\u524d\u65b9\u6cd5\uff0c\u5e76\u6267\u884c\u3002","title":"Set\u65b9\u6cd5\u6ce8\u5165"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/07Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8B/","text":"\u6709\u9053\u4e91\u94fe\u63a5\uff1ahttp://note.youdao.com/noteshare?id=478b1de14614674acde6e331b09d792b&sub=24A246DE39194295878C28F0F8A3C548\uff08\u590d\u5236\u94fe\u63a5\u5230\u6d4f\u89c8\u5668\u7684\u65f6\u5019\u6ce8\u610f\u8f6c\u884c\u7684\u7a7a\u683c\uff09 \u200b \u4e0a\u8282\u8bfe\u6211\u4eec\u8bb2\u4e86Spring\u4e2d\u7684\u81ea\u52a8\u6ce8\u5165(byName,byType)\u548c@Autowired\u6ce8\u89e3\u7684\u5de5\u4f5c\u539f\u7406\u4ee5\u53ca\u6e90\u7801\u5206\u6790\uff0c\u90a3\u4e48\u4eca\u5929\u8fd9\u8282\u8bfe\uff0c\u6211\u4eec\u6765\u5206\u6790\u8fd8\u6ca1\u8bb2\u5b8c\u7684\uff0c\u5269\u4e0b\u7684\u6838\u5fc3\u7684\u65b9\u6cd5\uff1a 1 2 3 @Nullable Object resolveDependency ( DependencyDescriptor descriptor , @Nullable String requestingBeanName , @Nullable Set < String > autowiredBeanNames , @Nullable TypeConverter typeConverter ) throws BeansException ; \u8be5\u65b9\u6cd5\u8868\u793a\uff0c\u4f20\u5165\u4e00\u4e2a\u4f9d\u8d56\u63cf\u8ff0\uff08DependencyDescriptor\uff09\uff0c\u8be5\u65b9\u6cd5\u4f1a\u6839\u636e\u8be5\u4f9d\u8d56\u63cf\u8ff0\u4eceBeanFactory\u4e2d\u627e\u51fa\u5bf9\u5e94\u7684\u552f\u4e00\u7684\u4e00\u4e2aBean\u5bf9\u8c61\u3002 \u4e0b\u9762\u6765\u5206\u6790\u4e00\u4e0b DefaultListableBeanFactory \u4e2d resolveDependency() \u65b9\u6cd5\u7684\u5177\u4f53\u5b9e\u73b0\uff0c \u5177\u4f53\u6d41\u7a0b\u56fe \uff1a https://www.processon.com/view/link/5f8d3c895653bb06ef076688 findAutowireCandidates()\u5b9e\u73b0 \u6839\u636e\u7c7b\u578b\u627ebeanName\u7684\u5e95\u5c42\u6d41\u7a0b \uff1a https://www.processon.com/view/link/6135bb430e3e7412ecd5d1f2 \u5bf9\u5e94\u6267\u884c\u6d41\u7a0b\u56fe\u4e3a \uff1a https://www.processon.com/view/link/5f8fdfa8e401fd06fd984f20 \u200b \u627e\u51faBeanFactory\u4e2d\u7c7b\u578b\u4e3atype\u7684\u6240\u6709\u7684Bean\u7684\u540d\u5b57\uff0c\u6ce8\u610f\u662f\u540d\u5b57\uff0c\u800c\u4e0d\u662fBean\u5bf9\u8c61\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u6839\u636eBeanDefinition\u5c31\u80fd\u5224\u65ad\u548c\u5f53\u524dtype\u662f\u4e0d\u662f\u5339\u914d\uff0c\u4e0d\u7528\u751f\u6210Bean\u5bf9\u8c61 \u628aresolvableDependencies\u4e2dkey\u4e3atype\u7684\u5bf9\u8c61\u627e\u51fa\u6765\u5e76\u6dfb\u52a0\u5230result\u4e2d \u904d\u5386\u6839\u636etype\u627e\u51fa\u7684beanName\uff0c\u5224\u65ad\u5f53\u524dbeanName\u5bf9\u5e94\u7684Bean\u662f\u4e0d\u662f\u80fd\u591f\u88ab\u81ea\u52a8\u6ce8\u5165 \u5148\u5224\u65adbeanName\u5bf9\u5e94\u7684BeanDefinition\u4e2d\u7684autowireCandidate\u5c5e\u6027\uff0c\u5982\u679c\u4e3afalse\uff0c\u8868\u793a\u4e0d\u80fd\u7528\u6765\u8fdb\u884c\u81ea\u52a8\u6ce8\u5165\uff0c\u5982\u679c\u4e3atrue\u5219\u7ee7\u7eed\u8fdb\u884c\u5224\u65ad \u5224\u65ad\u5f53\u524dtype\u662f\u4e0d\u662f\u6cdb\u578b\uff0c\u5982\u679c\u662f\u6cdb\u578b\u662f\u4f1a\u628a\u5bb9\u5668\u4e2d\u6240\u6709\u7684beanName\u627e\u51fa\u6765\u7684\uff0c\u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u90a3\u4e48\u5728\u8fd9\u4e00\u6b65\u4e2d\u5c31\u8981\u83b7\u53d6\u5230\u6cdb\u578b\u7684\u771f\u6b63\u7c7b\u578b\uff0c\u7136\u540e\u8fdb\u884c\u5339\u914d\uff0c\u5982\u679c\u5f53\u524dbeanName\u548c\u5f53\u524d\u6cdb\u578b\u5bf9\u5e94\u7684\u771f\u5b9e\u7c7b\u578b\u5339\u914d\uff0c\u90a3\u4e48\u5219\u7ee7\u7eed\u5224\u65ad \u5982\u679c\u5f53\u524dDependencyDescriptor\u4e0a\u5b58\u5728@Qualifier\u6ce8\u89e3\uff0c\u90a3\u4e48\u5219\u8981\u5224\u65ad\u5f53\u524dbeanName\u4e0a\u662f\u5426\u5b9a\u4e49\u4e86Qualifier\uff0c\u5e76\u4e14\u662f\u5426\u548c\u5f53\u524dDependencyDescriptor\u4e0a\u7684Qualifier\u76f8\u7b49\uff0c\u76f8\u7b49\u5219\u5339\u914d \u7ecf\u8fc7\u4e0a\u8ff0\u9a8c\u8bc1\u4e4b\u540e\uff0c\u5f53\u524dbeanName\u624d\u80fd\u6210\u4e3a\u4e00\u4e2a\u53ef\u6ce8\u5165\u7684\uff0c\u6dfb\u52a0\u5230result\u4e2d \u5173\u4e8e\u4f9d\u8d56\u6ce8\u5165\u4e2d\u6cdb\u578b\u6ce8\u5165\u7684\u5b9e\u73b0 \u9996\u5148\u5728Java\u53cd\u5c04\u4e2d\uff0c\u6709\u4e00\u4e2aType\u63a5\u53e3\uff0c\u8868\u793a\u7c7b\u578b\uff0c\u5177\u4f53\u5206\u7c7b\u4e3a\uff1a raw types\uff1a\u4e5f\u5c31\u662f\u666e\u901aClass parameterized types\uff1a\u5bf9\u5e94ParameterizedType\u63a5\u53e3\uff0c\u6cdb\u578b\u7c7b\u578b array types\uff1a\u5bf9\u5e94GenericArrayType\uff0c\u6cdb\u578b\u6570\u7ec4 type variables\uff1a\u5bf9\u5e94TypeVariable\u63a5\u53e3\uff0c\u8868\u793a\u7c7b\u578b\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f\u6240\u5b9a\u4e49\u7684\u6cdb\u578b\uff0c\u6bd4\u5982T\u3001K primitive types\uff1a\u57fa\u672c\u7c7b\u578b\uff0cint\u3001boolean \u5927\u5bb6\u53ef\u4ee5\u597d\u597d\u770b\u770b\u4e0b\u9762\u4ee3\u7801\u6240\u6253\u5370\u7684\u7ed3\u679c\uff1a \u200b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 public class TypeTest < T > { private int i ; private Integer it ; private int [] iarray ; private List list ; private List < String > slist ; private List < T > tlist ; private T t ; private T [] tarray ; public static void main ( String [] args ) throws NoSuchFieldException { test ( TypeTest . class . getDeclaredField ( \"i\" )); System . out . println ( \"=======\" ); test ( TypeTest . class . getDeclaredField ( \"it\" )); System . out . println ( \"=======\" ); test ( TypeTest . class . getDeclaredField ( \"iarray\" )); System . out . println ( \"=======\" ); test ( TypeTest . class . getDeclaredField ( \"list\" )); System . out . println ( \"=======\" ); test ( TypeTest . class . getDeclaredField ( \"slist\" )); System . out . println ( \"=======\" ); test ( TypeTest . class . getDeclaredField ( \"tlist\" )); System . out . println ( \"=======\" ); test ( TypeTest . class . getDeclaredField ( \"t\" )); System . out . println ( \"=======\" ); test ( TypeTest . class . getDeclaredField ( \"tarray\" )); } public static void test ( Field field ) { if ( field . getType (). isPrimitive ()) { System . out . println ( field . getName () + \"\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\" ); } else { System . out . println ( field . getName () + \"\u4e0d\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\" ); } if ( field . getGenericType () instanceof ParameterizedType ) { System . out . println ( field . getName () + \"\u662f\u6cdb\u578b\u7c7b\u578b\" ); } else { System . out . println ( field . getName () + \"\u4e0d\u662f\u6cdb\u578b\u7c7b\u578b\" ); } if ( field . getType (). isArray ()) { System . out . println ( field . getName () + \"\u662f\u666e\u901a\u6570\u7ec4\" ); } else { System . out . println ( field . getName () + \"\u4e0d\u662f\u666e\u901a\u6570\u7ec4\" ); } if ( field . getGenericType () instanceof GenericArrayType ) { System . out . println ( field . getName () + \"\u662f\u6cdb\u578b\u6570\u7ec4\" ); } else { System . out . println ( field . getName () + \"\u4e0d\u662f\u6cdb\u578b\u6570\u7ec4\" ); } if ( field . getGenericType () instanceof TypeVariable ) { System . out . println ( field . getName () + \"\u662f\u6cdb\u578b\u53d8\u91cf\" ); } else { System . out . println ( field . getName () + \"\u4e0d\u662f\u6cdb\u578b\u53d8\u91cf\" ); } } } Spring\u4e2d\uff0c\u4f46\u6ce8\u5165\u70b9\u662f\u4e00\u4e2a\u6cdb\u578b\u65f6\uff0c\u4e5f\u662f\u4f1a\u8fdb\u884c\u5904\u7406\u7684\uff0c\u6bd4\u5982\uff1a \u200b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 @Component public class UserService extends BaseService < OrderService , StockService > { public void test () { System . out . println ( o ); } } public class BaseService < O , S > { @Autowired protected O o ; @Autowired protected S s ; } Spring\u626b\u63cf\u65f6\u53d1\u73b0UserService\u662f\u4e00\u4e2aBean \u90a3\u5c31\u53d6\u51fa\u6ce8\u5165\u70b9\uff0c\u4e5f\u5c31\u662fBaseService\u4e2d\u7684\u4e24\u4e2a\u5c5e\u6027o\u3001s \u63a5\u4e0b\u6765\u9700\u8981\u6309\u6ce8\u5165\u70b9\u7c7b\u578b\u8fdb\u884c\u6ce8\u5165\uff0c\u4f46\u662fo\u548cs\u90fd\u662f\u6cdb\u578b\uff0c\u6240\u4ee5Spring\u9700\u8981\u786e\u5b9ao\u548cs\u7684\u5177\u4f53\u7c7b\u578b\u3002 \u56e0\u4e3a\u5f53\u524d\u6b63\u5728\u521b\u5efa\u7684\u662fUserService\u7684Bean\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7 userService.getClass().getGenericSuperclass().getTypeName() \u83b7\u53d6\u5230\u5177\u4f53\u7684\u6cdb\u578b\u4fe1\u606f\uff0c\u6bd4\u5982 com.zhouyu.service.BaseService<com.zhouyu.service.OrderService, com.zhouyu.service.StockService> \u7136\u540e\u518d\u62ff\u5230UserService\u7684\u7236\u7c7bBaseService\u7684\u6cdb\u578b\u53d8\u91cf\uff1a for (TypeVariable<? extends Class<?>> typeParameter : userService.getClass().getSuperclass().getTypeParameters()) { System._out_.println(typeParameter.getName()); } \u901a\u8fc7\u4e0a\u9762\u4e24\u6bb5\u4ee3\u7801\uff0c\u5c31\u80fd\u77e5\u9053\uff0co\u5bf9\u5e94\u7684\u5177\u4f53\u5c31\u662fOrderService\uff0cs\u5bf9\u5e94\u7684\u5177\u4f53\u7c7b\u578b\u5c31\u662fStockService \u7136\u540e\u518d\u8c03\u7528 oField.getGenericType() \u5c31\u77e5\u9053\u5f53\u524dfield\u4f7f\u7528\u7684\u662f\u54ea\u4e2a\u6cdb\u578b\uff0c\u5c31\u80fd\u77e5\u9053\u5177\u4f53\u7c7b\u578b\u4e86 @Qualifier\u7684\u4f7f\u7528 \u5b9a\u4e49\u4e24\u4e2a\u6ce8\u89e3\uff1a 1 2 3 4 5 6 7 8 9 10 @Target ({ ElementType . TYPE , ElementType . FIELD }) @Retention ( RetentionPolicy . RUNTIME ) @Qualifier ( \"random\" ) public @interface Random { } @Target ({ ElementType . TYPE , ElementType . FIELD }) @Retention ( RetentionPolicy . RUNTIME ) @Qualifier ( \"roundRobin\" ) public @interface RoundRobin { } \u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u548c\u4e24\u4e2a\u5b9e\u73b0\u7c7b\uff0c\u8868\u793a\u8d1f\u8f7d\u5747\u8861\uff1a 1 2 3 public interface LoadBalance { String select (); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 @Component @Random public class RandomStrategy implements LoadBalance { @Override public String select () { return null ; } } @Component @RoundRobin public class RoundRobinStrategy implements LoadBalance { @Override public String select () { return null ; } } \u4f7f\u7528\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 @Component public class UserService { @Autowired @RoundRobin private LoadBalance loadBalance ; public void test () { System . out . println ( loadBalance ); } } @Resource @Resource\u6ce8\u89e3\u5e95\u5c42\u5de5\u4f5c\u6d41\u7a0b\u56fe\uff1a https://www.processon.com/view/link/5f91275f07912906db381f6e","title":"7.Spring\u4f9d\u8d56\u6ce8\u5165\u6e90\u7801\u89e3\u6790\u4e0b.md"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/07Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8B/#findautowirecandidates","text":"\u6839\u636e\u7c7b\u578b\u627ebeanName\u7684\u5e95\u5c42\u6d41\u7a0b \uff1a https://www.processon.com/view/link/6135bb430e3e7412ecd5d1f2 \u5bf9\u5e94\u6267\u884c\u6d41\u7a0b\u56fe\u4e3a \uff1a https://www.processon.com/view/link/5f8fdfa8e401fd06fd984f20 \u200b \u627e\u51faBeanFactory\u4e2d\u7c7b\u578b\u4e3atype\u7684\u6240\u6709\u7684Bean\u7684\u540d\u5b57\uff0c\u6ce8\u610f\u662f\u540d\u5b57\uff0c\u800c\u4e0d\u662fBean\u5bf9\u8c61\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u6839\u636eBeanDefinition\u5c31\u80fd\u5224\u65ad\u548c\u5f53\u524dtype\u662f\u4e0d\u662f\u5339\u914d\uff0c\u4e0d\u7528\u751f\u6210Bean\u5bf9\u8c61 \u628aresolvableDependencies\u4e2dkey\u4e3atype\u7684\u5bf9\u8c61\u627e\u51fa\u6765\u5e76\u6dfb\u52a0\u5230result\u4e2d \u904d\u5386\u6839\u636etype\u627e\u51fa\u7684beanName\uff0c\u5224\u65ad\u5f53\u524dbeanName\u5bf9\u5e94\u7684Bean\u662f\u4e0d\u662f\u80fd\u591f\u88ab\u81ea\u52a8\u6ce8\u5165 \u5148\u5224\u65adbeanName\u5bf9\u5e94\u7684BeanDefinition\u4e2d\u7684autowireCandidate\u5c5e\u6027\uff0c\u5982\u679c\u4e3afalse\uff0c\u8868\u793a\u4e0d\u80fd\u7528\u6765\u8fdb\u884c\u81ea\u52a8\u6ce8\u5165\uff0c\u5982\u679c\u4e3atrue\u5219\u7ee7\u7eed\u8fdb\u884c\u5224\u65ad \u5224\u65ad\u5f53\u524dtype\u662f\u4e0d\u662f\u6cdb\u578b\uff0c\u5982\u679c\u662f\u6cdb\u578b\u662f\u4f1a\u628a\u5bb9\u5668\u4e2d\u6240\u6709\u7684beanName\u627e\u51fa\u6765\u7684\uff0c\u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u90a3\u4e48\u5728\u8fd9\u4e00\u6b65\u4e2d\u5c31\u8981\u83b7\u53d6\u5230\u6cdb\u578b\u7684\u771f\u6b63\u7c7b\u578b\uff0c\u7136\u540e\u8fdb\u884c\u5339\u914d\uff0c\u5982\u679c\u5f53\u524dbeanName\u548c\u5f53\u524d\u6cdb\u578b\u5bf9\u5e94\u7684\u771f\u5b9e\u7c7b\u578b\u5339\u914d\uff0c\u90a3\u4e48\u5219\u7ee7\u7eed\u5224\u65ad \u5982\u679c\u5f53\u524dDependencyDescriptor\u4e0a\u5b58\u5728@Qualifier\u6ce8\u89e3\uff0c\u90a3\u4e48\u5219\u8981\u5224\u65ad\u5f53\u524dbeanName\u4e0a\u662f\u5426\u5b9a\u4e49\u4e86Qualifier\uff0c\u5e76\u4e14\u662f\u5426\u548c\u5f53\u524dDependencyDescriptor\u4e0a\u7684Qualifier\u76f8\u7b49\uff0c\u76f8\u7b49\u5219\u5339\u914d \u7ecf\u8fc7\u4e0a\u8ff0\u9a8c\u8bc1\u4e4b\u540e\uff0c\u5f53\u524dbeanName\u624d\u80fd\u6210\u4e3a\u4e00\u4e2a\u53ef\u6ce8\u5165\u7684\uff0c\u6dfb\u52a0\u5230result\u4e2d","title":"findAutowireCandidates()\u5b9e\u73b0"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/07Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8B/#_1","text":"\u9996\u5148\u5728Java\u53cd\u5c04\u4e2d\uff0c\u6709\u4e00\u4e2aType\u63a5\u53e3\uff0c\u8868\u793a\u7c7b\u578b\uff0c\u5177\u4f53\u5206\u7c7b\u4e3a\uff1a raw types\uff1a\u4e5f\u5c31\u662f\u666e\u901aClass parameterized types\uff1a\u5bf9\u5e94ParameterizedType\u63a5\u53e3\uff0c\u6cdb\u578b\u7c7b\u578b array types\uff1a\u5bf9\u5e94GenericArrayType\uff0c\u6cdb\u578b\u6570\u7ec4 type variables\uff1a\u5bf9\u5e94TypeVariable\u63a5\u53e3\uff0c\u8868\u793a\u7c7b\u578b\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f\u6240\u5b9a\u4e49\u7684\u6cdb\u578b\uff0c\u6bd4\u5982T\u3001K primitive types\uff1a\u57fa\u672c\u7c7b\u578b\uff0cint\u3001boolean \u5927\u5bb6\u53ef\u4ee5\u597d\u597d\u770b\u770b\u4e0b\u9762\u4ee3\u7801\u6240\u6253\u5370\u7684\u7ed3\u679c\uff1a \u200b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 public class TypeTest < T > { private int i ; private Integer it ; private int [] iarray ; private List list ; private List < String > slist ; private List < T > tlist ; private T t ; private T [] tarray ; public static void main ( String [] args ) throws NoSuchFieldException { test ( TypeTest . class . getDeclaredField ( \"i\" )); System . out . println ( \"=======\" ); test ( TypeTest . class . getDeclaredField ( \"it\" )); System . out . println ( \"=======\" ); test ( TypeTest . class . getDeclaredField ( \"iarray\" )); System . out . println ( \"=======\" ); test ( TypeTest . class . getDeclaredField ( \"list\" )); System . out . println ( \"=======\" ); test ( TypeTest . class . getDeclaredField ( \"slist\" )); System . out . println ( \"=======\" ); test ( TypeTest . class . getDeclaredField ( \"tlist\" )); System . out . println ( \"=======\" ); test ( TypeTest . class . getDeclaredField ( \"t\" )); System . out . println ( \"=======\" ); test ( TypeTest . class . getDeclaredField ( \"tarray\" )); } public static void test ( Field field ) { if ( field . getType (). isPrimitive ()) { System . out . println ( field . getName () + \"\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\" ); } else { System . out . println ( field . getName () + \"\u4e0d\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\" ); } if ( field . getGenericType () instanceof ParameterizedType ) { System . out . println ( field . getName () + \"\u662f\u6cdb\u578b\u7c7b\u578b\" ); } else { System . out . println ( field . getName () + \"\u4e0d\u662f\u6cdb\u578b\u7c7b\u578b\" ); } if ( field . getType (). isArray ()) { System . out . println ( field . getName () + \"\u662f\u666e\u901a\u6570\u7ec4\" ); } else { System . out . println ( field . getName () + \"\u4e0d\u662f\u666e\u901a\u6570\u7ec4\" ); } if ( field . getGenericType () instanceof GenericArrayType ) { System . out . println ( field . getName () + \"\u662f\u6cdb\u578b\u6570\u7ec4\" ); } else { System . out . println ( field . getName () + \"\u4e0d\u662f\u6cdb\u578b\u6570\u7ec4\" ); } if ( field . getGenericType () instanceof TypeVariable ) { System . out . println ( field . getName () + \"\u662f\u6cdb\u578b\u53d8\u91cf\" ); } else { System . out . println ( field . getName () + \"\u4e0d\u662f\u6cdb\u578b\u53d8\u91cf\" ); } } } Spring\u4e2d\uff0c\u4f46\u6ce8\u5165\u70b9\u662f\u4e00\u4e2a\u6cdb\u578b\u65f6\uff0c\u4e5f\u662f\u4f1a\u8fdb\u884c\u5904\u7406\u7684\uff0c\u6bd4\u5982\uff1a \u200b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 @Component public class UserService extends BaseService < OrderService , StockService > { public void test () { System . out . println ( o ); } } public class BaseService < O , S > { @Autowired protected O o ; @Autowired protected S s ; } Spring\u626b\u63cf\u65f6\u53d1\u73b0UserService\u662f\u4e00\u4e2aBean \u90a3\u5c31\u53d6\u51fa\u6ce8\u5165\u70b9\uff0c\u4e5f\u5c31\u662fBaseService\u4e2d\u7684\u4e24\u4e2a\u5c5e\u6027o\u3001s \u63a5\u4e0b\u6765\u9700\u8981\u6309\u6ce8\u5165\u70b9\u7c7b\u578b\u8fdb\u884c\u6ce8\u5165\uff0c\u4f46\u662fo\u548cs\u90fd\u662f\u6cdb\u578b\uff0c\u6240\u4ee5Spring\u9700\u8981\u786e\u5b9ao\u548cs\u7684\u5177\u4f53\u7c7b\u578b\u3002 \u56e0\u4e3a\u5f53\u524d\u6b63\u5728\u521b\u5efa\u7684\u662fUserService\u7684Bean\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7 userService.getClass().getGenericSuperclass().getTypeName() \u83b7\u53d6\u5230\u5177\u4f53\u7684\u6cdb\u578b\u4fe1\u606f\uff0c\u6bd4\u5982 com.zhouyu.service.BaseService<com.zhouyu.service.OrderService, com.zhouyu.service.StockService> \u7136\u540e\u518d\u62ff\u5230UserService\u7684\u7236\u7c7bBaseService\u7684\u6cdb\u578b\u53d8\u91cf\uff1a for (TypeVariable<? extends Class<?>> typeParameter : userService.getClass().getSuperclass().getTypeParameters()) { System._out_.println(typeParameter.getName()); } \u901a\u8fc7\u4e0a\u9762\u4e24\u6bb5\u4ee3\u7801\uff0c\u5c31\u80fd\u77e5\u9053\uff0co\u5bf9\u5e94\u7684\u5177\u4f53\u5c31\u662fOrderService\uff0cs\u5bf9\u5e94\u7684\u5177\u4f53\u7c7b\u578b\u5c31\u662fStockService \u7136\u540e\u518d\u8c03\u7528 oField.getGenericType() \u5c31\u77e5\u9053\u5f53\u524dfield\u4f7f\u7528\u7684\u662f\u54ea\u4e2a\u6cdb\u578b\uff0c\u5c31\u80fd\u77e5\u9053\u5177\u4f53\u7c7b\u578b\u4e86","title":"\u5173\u4e8e\u4f9d\u8d56\u6ce8\u5165\u4e2d\u6cdb\u578b\u6ce8\u5165\u7684\u5b9e\u73b0"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/07Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8B/#qualifier","text":"\u5b9a\u4e49\u4e24\u4e2a\u6ce8\u89e3\uff1a 1 2 3 4 5 6 7 8 9 10 @Target ({ ElementType . TYPE , ElementType . FIELD }) @Retention ( RetentionPolicy . RUNTIME ) @Qualifier ( \"random\" ) public @interface Random { } @Target ({ ElementType . TYPE , ElementType . FIELD }) @Retention ( RetentionPolicy . RUNTIME ) @Qualifier ( \"roundRobin\" ) public @interface RoundRobin { } \u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u548c\u4e24\u4e2a\u5b9e\u73b0\u7c7b\uff0c\u8868\u793a\u8d1f\u8f7d\u5747\u8861\uff1a 1 2 3 public interface LoadBalance { String select (); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 @Component @Random public class RandomStrategy implements LoadBalance { @Override public String select () { return null ; } } @Component @RoundRobin public class RoundRobinStrategy implements LoadBalance { @Override public String select () { return null ; } } \u4f7f\u7528\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 @Component public class UserService { @Autowired @RoundRobin private LoadBalance loadBalance ; public void test () { System . out . println ( loadBalance ); } }","title":"@Qualifier\u7684\u4f7f\u7528"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/07Spring%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8B/#resource","text":"@Resource\u6ce8\u89e3\u5e95\u5c42\u5de5\u4f5c\u6d41\u7a0b\u56fe\uff1a https://www.processon.com/view/link/5f91275f07912906db381f6e","title":"@Resource"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/08Spring%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E6%BA%90%E7%A0%81/","text":"\u4ec0\u4e48\u662f\u5faa\u73af\u4f9d\u8d56\uff1f \u5f88\u7b80\u5355\uff0c\u5c31\u662fA\u5bf9\u8c61\u4f9d\u8d56\u4e86B\u5bf9\u8c61\uff0cB\u5bf9\u8c61\u4f9d\u8d56\u4e86A\u5bf9\u8c61\u3002 \u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 // A\u4f9d\u8d56\u4e86B class A { public B b ; } // B\u4f9d\u8d56\u4e86A class B { public A a ; } \u90a3\u4e48\u5faa\u73af\u4f9d\u8d56\u662f\u4e2a\u95ee\u9898\u5417\uff1f \u5982\u679c\u4e0d\u8003\u8651Spring\uff0c\u5faa\u73af\u4f9d\u8d56\u5e76\u4e0d\u662f\u95ee\u9898\uff0c\u56e0\u4e3a\u5bf9\u8c61\u4e4b\u95f4\u76f8\u4e92\u4f9d\u8d56\u662f\u5f88\u6b63\u5e38\u7684\u4e8b\u60c5\u3002 \u6bd4\u5982 1 2 3 4 5 A a = new A (); B b = new B (); a . b = b ; b . a = a ; \u8fd9\u6837\uff0cA,B\u5c31\u4f9d\u8d56\u4e0a\u4e86\u3002 \u4f46\u662f\uff0c\u5728Spring\u4e2d\u5faa\u73af\u4f9d\u8d56\u5c31\u662f\u4e00\u4e2a\u95ee\u9898\u4e86\uff0c\u4e3a\u4ec0\u4e48\uff1f \u56e0\u4e3a\uff0c\u5728Spring\u4e2d\uff0c\u4e00\u4e2a\u5bf9\u8c61\u5e76\u4e0d\u662f\u7b80\u5355new\u51fa\u6765\u4e86\uff0c\u800c\u662f\u4f1a\u7ecf\u8fc7\u4e00\u7cfb\u5217\u7684Bean\u7684\u751f\u547d\u5468\u671f\uff0c\u5c31\u662f\u56e0\u4e3aBean\u7684\u751f\u547d\u5468\u671f\u6240\u4ee5\u624d\u4f1a\u51fa\u73b0\u5faa\u73af\u4f9d\u8d56\u95ee\u9898\u3002\u5f53\u7136\uff0c\u5728Spring\u4e2d\uff0c\u51fa\u73b0\u5faa\u73af\u4f9d\u8d56\u7684\u573a\u666f\u5f88\u591a\uff0c\u6709\u7684\u573a\u666fSpring\u81ea\u52a8\u5e2e\u6211\u4eec\u89e3\u51b3\u4e86\uff0c\u800c\u6709\u7684\u573a\u666f\u5219\u9700\u8981\u7a0b\u5e8f\u5458\u6765\u89e3\u51b3\uff0c\u4e0b\u6587\u8be6\u7ec6\u6765\u8bf4\u3002 \u8981\u660e\u767dSpring\u4e2d\u7684\u5faa\u73af\u4f9d\u8d56\uff0c\u5f97\u5148\u660e\u767dSpring\u4e2dBean\u7684\u751f\u547d\u5468\u671f\u3002 Bean\u7684\u751f\u547d\u5468\u671f \u8fd9\u91cc\u4e0d\u4f1a\u5bf9Bean\u7684\u751f\u547d\u5468\u671f\u8fdb\u884c\u8be6\u7ec6\u7684\u63cf\u8ff0\uff0c\u53ea\u63cf\u8ff0\u4e00\u4e0b\u5927\u6982\u7684\u8fc7\u7a0b\u3002 Bean\u7684\u751f\u547d\u5468\u671f\u6307\u7684\u5c31\u662f\uff1a\u5728Spring\u4e2d\uff0cBean\u662f\u5982\u4f55\u751f\u6210\u7684\uff1f \u88abSpring\u7ba1\u7406\u7684\u5bf9\u8c61\u53eb\u505aBean\u3002Bean\u7684\u751f\u6210\u6b65\u9aa4\u5982\u4e0b\uff1a Spring\u626b\u63cfclass\u5f97\u5230BeanDefinition \u6839\u636e\u5f97\u5230\u7684BeanDefinition\u53bb\u751f\u6210bean \u9996\u5148\u6839\u636eclass\u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \u6839\u636e\u63a8\u65ad\u51fa\u6765\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u53cd\u5c04\uff0c\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff08\u6682\u65f6\u53eb\u505a\u539f\u59cb\u5bf9\u8c61\uff09 \u586b\u5145\u539f\u59cb\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\uff08\u4f9d\u8d56\u6ce8\u5165\uff09 \u5982\u679c\u539f\u59cb\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u65b9\u6cd5\u88abAOP\u4e86\uff0c\u90a3\u4e48\u5219\u9700\u8981\u6839\u636e\u539f\u59cb\u5bf9\u8c61\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61 \u628a\u6700\u7ec8\u751f\u6210\u7684\u4ee3\u7406\u5bf9\u8c61\u653e\u5165\u5355\u4f8b\u6c60\uff08\u6e90\u7801\u4e2d\u53eb\u505asingletonObjects\uff09\u4e2d\uff0c\u4e0b\u6b21getBean\u65f6\u5c31\u76f4\u63a5\u4ece\u5355\u4f8b\u6c60\u62ff\u5373\u53ef \u53ef\u4ee5\u770b\u5230\uff0c\u5bf9\u4e8eSpring\u4e2d\u7684Bean\u7684\u751f\u6210\u8fc7\u7a0b\uff0c\u6b65\u9aa4\u8fd8\u662f\u5f88\u591a\u7684\uff0c\u5e76\u4e14\u4e0d\u4ec5\u4ec5\u53ea\u6709\u4e0a\u9762\u76847\u6b65\uff0c\u8fd8\u6709\u5f88\u591a\u5f88\u591a\uff0c\u6bd4\u5982Aware\u56de\u8c03\u3001\u521d\u59cb\u5316\u7b49\u7b49\uff0c\u8fd9\u91cc\u4e0d\u8be6\u7ec6\u8ba8\u8bba\u3002 \u53ef\u4ee5\u53d1\u73b0\uff0c\u5728Spring\u4e2d\uff0c\u6784\u9020\u4e00\u4e2aBean\uff0c\u5305\u62ec\u4e86new\u8fd9\u4e2a\u6b65\u9aa4\uff08\u7b2c4\u6b65\u6784\u9020\u65b9\u6cd5\u53cd\u5c04\uff09\u3002 \u5f97\u5230\u4e00\u4e2a\u539f\u59cb\u5bf9\u8c61\u540e\uff0cSpring\u9700\u8981\u7ed9\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u8fdb\u884c\u4f9d\u8d56\u6ce8\u5165\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6ce8\u5165\u8fc7\u7a0b\u662f\u600e\u6837\u7684\uff1f \u6bd4\u5982\u4e0a\u6587\u8bf4\u7684A\u7c7b\uff0cA\u7c7b\u4e2d\u5b58\u5728\u4e00\u4e2aB\u7c7b\u7684b\u5c5e\u6027\uff0c\u6240\u4ee5\uff0c\u5f53A\u7c7b\u751f\u6210\u4e86\u4e00\u4e2a\u539f\u59cb\u5bf9\u8c61\u4e4b\u540e\uff0c\u5c31\u4f1a\u53bb\u7ed9b\u5c5e\u6027\u53bb\u8d4b\u503c\uff0c\u6b64\u65f6\u5c31\u4f1a\u6839\u636eb\u5c5e\u6027\u7684\u7c7b\u578b\u548c\u5c5e\u6027\u540d\u53bbBeanFactory\u4e2d\u53bb\u83b7\u53d6B\u7c7b\u6240\u5bf9\u5e94\u7684\u5355\u4f8bbean\u3002\u5982\u679c\u6b64\u65f6BeanFactory\u4e2d\u5b58\u5728B\u5bf9\u5e94\u7684Bean\uff0c\u90a3\u4e48\u76f4\u63a5\u62ff\u6765\u8d4b\u503c\u7ed9b\u5c5e\u6027\uff1b\u5982\u679c\u6b64\u65f6BeanFactory\u4e2d\u4e0d\u5b58\u5728B\u5bf9\u5e94\u7684Bean\uff0c\u5219\u9700\u8981\u751f\u6210\u4e00\u4e2aB\u5bf9\u5e94\u7684Bean\uff0c\u7136\u540e\u8d4b\u503c\u7ed9b\u5c5e\u6027\u3002 \u95ee\u9898\u5c31\u51fa\u73b0\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u6b64\u65f6B\u7c7b\u5728BeanFactory\u4e2d\u8fd8\u6ca1\u6709\u751f\u6210\u5bf9\u5e94\u7684Bean\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u53bb\u751f\u6210\uff0c\u5c31\u4f1a\u7ecf\u8fc7B\u7684Bean\u7684\u751f\u547d\u5468\u671f\u3002 \u90a3\u4e48\u5728\u521b\u5efaB\u7c7b\u7684Bean\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679cB\u7c7b\u4e2d\u5b58\u5728\u4e00\u4e2aA\u7c7b\u7684a\u5c5e\u6027\uff0c\u90a3\u4e48\u5728\u521b\u5efaB\u7684Bean\u7684\u8fc7\u7a0b\u4e2d\u5c31\u9700\u8981A\u7c7b\u5bf9\u5e94\u7684Bean\uff0c\u4f46\u662f\uff0c\u89e6\u53d1B\u7c7bBean\u7684\u521b\u5efa\u7684\u6761\u4ef6\u662fA\u7c7bBean\u5728\u521b\u5efa\u8fc7\u7a0b\u4e2d\u7684\u4f9d\u8d56\u6ce8\u5165\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\uff1a ABean\u521b\u5efa-->\u4f9d\u8d56\u4e86B\u5c5e\u6027-->\u89e6\u53d1BBean\u521b\u5efa--->B\u4f9d\u8d56\u4e86A\u5c5e\u6027--->\u9700\u8981ABean\uff08\u4f46ABean\u8fd8\u5728\u521b\u5efa\u8fc7\u7a0b\u4e2d\uff09 \u4ece\u800c\u5bfc\u81f4ABean\u521b\u5efa\u4e0d\u51fa\u6765\uff0cBBean\u4e5f\u521b\u5efa\u4e0d\u51fa\u6765\u3002 \u8fd9\u662f\u5faa\u73af\u4f9d\u8d56\u7684\u573a\u666f\uff0c\u4f46\u662f\u4e0a\u6587\u8bf4\u4e86\uff0c\u5728Spring\u4e2d\uff0c\u901a\u8fc7\u67d0\u4e9b\u673a\u5236\u5e2e\u5f00\u53d1\u8005\u89e3\u51b3\u4e86\u90e8\u5206\u5faa\u73af\u4f9d\u8d56\u7684\u95ee\u9898\uff0c\u8fd9\u4e2a\u673a\u5236\u5c31\u662f \u4e09\u7ea7\u7f13\u5b58 \u3002 \u4e09\u7ea7\u7f13\u5b58 \u4e09\u7ea7\u7f13\u5b58\u662f\u901a\u7528\u7684\u53eb\u6cd5\u3002 \u4e00\u7ea7\u7f13\u5b58\u4e3a\uff1a singletonObjects \u4e8c\u7ea7\u7f13\u5b58\u4e3a\uff1a earlySingletonObjects \u4e09\u7ea7\u7f13\u5b58\u4e3a \uff1asingletonFactories \u200b \u5148\u7a0d\u5fae\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e09\u4e2a\u7f13\u5b58\u7684\u4f5c\u7528\uff0c\u540e\u9762\u8be6\u7ec6\u5206\u6790\uff1a singletonObjects \u4e2d\u7f13\u5b58\u7684\u662f\u5df2\u7ecf\u7ecf\u5386\u4e86\u5b8c\u6574\u751f\u547d\u5468\u671f\u7684bean\u5bf9\u8c61\u3002 earlySingletonObjects \u6bd4singletonObjects\u591a\u4e86\u4e00\u4e2aearly\uff0c\u8868\u793a\u7f13\u5b58\u7684\u662f\u65e9\u671f\u7684bean\u5bf9\u8c61\u3002\u65e9\u671f\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u8868\u793aBean\u7684\u751f\u547d\u5468\u671f\u8fd8\u6ca1\u8d70\u5b8c\u5c31\u628a\u8fd9\u4e2aBean\u653e\u5165\u4e86earlySingletonObjects\u3002 singletonFactories \u4e2d\u7f13\u5b58\u7684\u662fObjectFactory\uff0c\u8868\u793a\u5bf9\u8c61\u5de5\u5382\uff0c\u8868\u793a\u7528\u6765\u521b\u5efa\u65e9\u671fbean\u5bf9\u8c61\u7684\u5de5\u5382\u3002 \u89e3\u51b3\u5faa\u73af\u4f9d\u8d56\u601d\u8def\u5206\u6790 \u5148\u6765\u5206\u6790\u4e3a\u4ec0\u4e48\u7f13\u5b58\u80fd\u89e3\u51b3\u5faa\u73af\u4f9d\u8d56\u3002 \u4e0a\u6587\u5206\u6790\u5f97\u5230\uff0c\u4e4b\u6240\u4ee5\u4ea7\u751f\u5faa\u73af\u4f9d\u8d56\u7684\u95ee\u9898\uff0c\u4e3b\u8981\u662f\uff1a A\u521b\u5efa\u65f6--->\u9700\u8981B---->B\u53bb\u521b\u5efa--->\u9700\u8981A\uff0c\u4ece\u800c\u4ea7\u751f\u4e86\u5faa\u73af \u90a3\u4e48\u5982\u4f55\u6253\u7834\u8fd9\u4e2a\u5faa\u73af\uff0c\u52a0\u4e2a\u4e2d\u95f4\u4eba\uff08\u7f13\u5b58\uff09 A\u7684Bean\u5728\u521b\u5efa\u8fc7\u7a0b\u4e2d\uff0c\u5728\u8fdb\u884c\u4f9d\u8d56\u6ce8\u5165\u4e4b\u524d\uff0c\u5148\u628aA\u7684\u539f\u59cbBean\u653e\u5165\u7f13\u5b58\uff08\u63d0\u65e9\u66b4\u9732\uff0c\u53ea\u8981\u653e\u5230\u7f13\u5b58\u4e86\uff0c\u5176\u4ed6Bean\u9700\u8981\u65f6\u5c31\u53ef\u4ee5\u4ece\u7f13\u5b58\u4e2d\u62ff\u4e86\uff09\uff0c\u653e\u5165\u7f13\u5b58\u540e\uff0c\u518d\u8fdb\u884c\u4f9d\u8d56\u6ce8\u5165\uff0c\u6b64\u65f6A\u7684Bean\u4f9d\u8d56\u4e86B\u7684Bean\uff0c\u5982\u679cB\u7684Bean\u4e0d\u5b58\u5728\uff0c\u5219\u9700\u8981\u521b\u5efaB\u7684Bean\uff0c\u800c\u521b\u5efaB\u7684Bean\u7684\u8fc7\u7a0b\u548cA\u4e00\u6837\uff0c\u4e5f\u662f\u5148\u521b\u5efa\u4e00\u4e2aB\u7684\u539f\u59cb\u5bf9\u8c61\uff0c\u7136\u540e\u628aB\u7684\u539f\u59cb\u5bf9\u8c61\u63d0\u65e9\u66b4\u9732\u51fa\u6765\u653e\u5165\u7f13\u5b58\u4e2d\uff0c\u7136\u540e\u5728\u5bf9B\u7684\u539f\u59cb\u5bf9\u8c61\u8fdb\u884c\u4f9d\u8d56\u6ce8\u5165A\uff0c\u6b64\u65f6\u80fd\u4ece\u7f13\u5b58\u4e2d\u62ff\u5230A\u7684\u539f\u59cb\u5bf9\u8c61\uff08\u867d\u7136\u662fA\u7684\u539f\u59cb\u5bf9\u8c61\uff0c\u8fd8\u4e0d\u662f\u6700\u7ec8\u7684Bean\uff09\uff0cB\u7684\u539f\u59cb\u5bf9\u8c61\u4f9d\u8d56\u6ce8\u5165\u5b8c\u4e86\u4e4b\u540e\uff0cB\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f\uff0c\u90a3\u4e48A\u7684\u751f\u547d\u5468\u671f\u4e5f\u80fd\u7ed3\u675f\u3002 \u56e0\u4e3a\u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u90fd\u53ea\u6709\u4e00\u4e2aA\u539f\u59cb\u5bf9\u8c61\uff0c\u6240\u4ee5\u5bf9\u4e8eB\u800c\u8a00\uff0c\u5c31\u7b97\u5728\u5c5e\u6027\u6ce8\u5165\u65f6\uff0c\u6ce8\u5165\u7684\u662fA\u539f\u59cb\u5bf9\u8c61\uff0c\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u56e0\u4e3aA\u539f\u59cb\u5bf9\u8c61\u5728\u540e\u7eed\u7684\u751f\u547d\u5468\u671f\u4e2d\u5728\u5806\u4e2d\u6ca1\u6709\u53d1\u751f\u53d8\u5316\u3002 \u4ece\u4e0a\u9762\u8fd9\u4e2a\u5206\u6790\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u5f97\u51fa\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u7f13\u5b58\u5c31\u80fd\u89e3\u51b3\u5faa\u73af\u4f9d\u8d56\u4e86\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48Spring\u4e2d\u8fd8\u9700\u8981 singletonFactories \u5462\uff1f \u8fd9\u662f\u96be\u70b9\uff0c\u57fa\u4e8e\u4e0a\u9762\u7684\u573a\u666f\u60f3\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679cA\u7684\u539f\u59cb\u5bf9\u8c61\u6ce8\u5165\u7ed9B\u7684\u5c5e\u6027\u4e4b\u540e\uff0cA\u7684\u539f\u59cb\u5bf9\u8c61\u8fdb\u884c\u4e86AOP\u4ea7\u751f\u4e86\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u6b64\u65f6\u5c31\u4f1a\u51fa\u73b0\uff0c\u5bf9\u4e8eA\u800c\u8a00\uff0c\u5b83\u7684Bean\u5bf9\u8c61\u5176\u5b9e\u5e94\u8be5\u662fAOP\u4e4b\u540e\u7684\u4ee3\u7406\u5bf9\u8c61\uff0c\u800cB\u7684a\u5c5e\u6027\u5bf9\u5e94\u7684\u5e76\u4e0d\u662fAOP\u4e4b\u540e\u7684\u4ee3\u7406\u5bf9\u8c61\uff0c\u8fd9\u5c31\u4ea7\u751f\u4e86\u51b2\u7a81\u3002 B\u4f9d\u8d56\u7684A\u548c\u6700\u7ec8\u7684A\u4e0d\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61 \u3002 AOP\u5c31\u662f\u901a\u8fc7\u4e00\u4e2aBeanPostProcessor\u6765\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e2aBeanPostProcessor\u5c31\u662fAnnotationAwareAspectJAutoProxyCreator\uff0c\u5b83\u7684\u7236\u7c7b\u662fAbstractAutoProxyCreator\uff0c\u800c\u5728Spring\u4e2dAOP\u5229\u7528\u7684\u8981\u4e48\u662fJDK\u52a8\u6001\u4ee3\u7406\uff0c\u8981\u4e48CGLib\u7684\u52a8\u6001\u4ee3\u7406\uff0c\u6240\u4ee5\u5982\u679c\u7ed9\u4e00\u4e2a\u7c7b\u4e2d\u7684\u67d0\u4e2a\u65b9\u6cd5\u8bbe\u7f6e\u4e86\u5207\u9762\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u6700\u7ec8\u5c31\u9700\u8981\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u3002 \u4e00\u822c\u8fc7\u7a0b\u5c31\u662f\uff1aA\u7c7b--->\u751f\u6210\u4e00\u4e2a\u666e\u901a\u5bf9\u8c61-->\u5c5e\u6027\u6ce8\u5165-->\u57fa\u4e8e\u5207\u9762\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61-->\u628a\u4ee3\u7406\u5bf9\u8c61\u653e\u5165singletonObjects\u5355\u4f8b\u6c60\u4e2d\u3002 \u800cAOP\u53ef\u4ee5\u8bf4\u662fSpring\u4e2d\u9664\u5f00IOC\u7684\u53e6\u5916\u4e00\u5927\u529f\u80fd\uff0c\u800c\u5faa\u73af\u4f9d\u8d56\u53c8\u662f\u5c5e\u4e8eIOC\u8303\u7574\u7684\uff0c\u6240\u4ee5\u8fd9\u4e24\u5927\u529f\u80fd\u60f3\u8981\u5e76\u5b58\uff0cSpring\u9700\u8981\u7279\u6b8a\u5904\u7406\u3002 \u5982\u4f55\u5904\u7406\u7684\uff0c\u5c31\u662f\u5229\u7528\u4e86\u7b2c\u4e09\u7ea7\u7f13\u5b58 singletonFactories \u3002 \u9996\u5148\uff0csingletonFactories\u4e2d\u5b58\u7684\u662f\u67d0\u4e2abeanName\u5bf9\u5e94\u7684ObjectFactory\uff0c\u5728bean\u7684\u751f\u547d\u5468\u671f\u4e2d\uff0c\u751f\u6210\u5b8c\u539f\u59cb\u5bf9\u8c61\u4e4b\u540e\uff0c\u5c31\u4f1a\u6784\u9020\u4e00\u4e2aObjectFactory\u5b58\u5165singletonFactories\u4e2d\u3002\u8fd9\u4e2aObjectFactory\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u6240\u4ee5\u652f\u6301Lambda\u8868\u8fbe\u5f0f\uff1a () -> getEarlyBeanReference(beanName, mbd, bean) \u4e0a\u9762\u7684Lambda\u8868\u8fbe\u5f0f\u5c31\u662f\u4e00\u4e2aObjectFactory\uff0c\u6267\u884c\u8be5Lambda\u8868\u8fbe\u5f0f\u5c31\u4f1a\u53bb\u6267\u884cgetEarlyBeanReference\u65b9\u6cd5\uff0c\u800c\u8be5\u65b9\u6cd5\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 protected Object getEarlyBeanReference ( String beanName , RootBeanDefinition mbd , Object bean ) { Object exposedObject = bean ; if ( ! mbd . isSynthetic () && hasInstantiationAwareBeanPostProcessors ()) { for ( BeanPostProcessor bp : getBeanPostProcessors ()) { if ( bp instanceof SmartInstantiationAwareBeanPostProcessor ) { SmartInstantiationAwareBeanPostProcessor ibp = ( SmartInstantiationAwareBeanPostProcessor ) bp ; exposedObject = ibp . getEarlyBeanReference ( exposedObject , beanName ); } } } return exposedObject ; } \u8be5\u65b9\u6cd5\u4f1a\u53bb\u6267\u884cSmartInstantiationAwareBeanPostProcessor\u4e2d\u7684getEarlyBeanReference\u65b9\u6cd5\uff0c\u800c\u8fd9\u4e2a\u63a5\u53e3\u4e0b\u7684\u5b9e\u73b0\u7c7b\u4e2d\u53ea\u6709\u4e24\u4e2a\u7c7b\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4e00\u4e2a\u662fAbstractAutoProxyCreator\uff0c\u4e00\u4e2a\u662fInstantiationAwareBeanPostProcessorAdapter\uff0c\u5b83\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 // InstantiationAwareBeanPostProcessorAdapter @Override public Object getEarlyBeanReference ( Object bean , String beanName ) throws BeansException { return bean ; } // AbstractAutoProxyCreator @Override public Object getEarlyBeanReference ( Object bean , String beanName ) { Object cacheKey = getCacheKey ( bean . getClass (), beanName ); this . earlyProxyReferences . put ( cacheKey , bean ); return wrapIfNecessary ( bean , beanName , cacheKey ); } \u5728\u6574\u4e2aSpring\u4e2d\uff0c\u9ed8\u8ba4\u5c31\u53ea\u6709AbstractAutoProxyCreator\u771f\u6b63\u610f\u4e49\u4e0a\u5b9e\u73b0\u4e86getEarlyBeanReference\u65b9\u6cd5\uff0c\u800c\u8be5\u7c7b\u5c31\u662f\u7528\u6765\u8fdb\u884cAOP\u7684\u3002\u4e0a\u6587\u63d0\u5230\u7684AnnotationAwareAspectJAutoProxyCreator\u7684\u7236\u7c7b\u5c31\u662fAbstractAutoProxyCreator\u3002 \u90a3\u4e48getEarlyBeanReference\u65b9\u6cd5\u5230\u5e95\u5728\u5e72\u4ec0\u4e48\uff1f \u9996\u5148\u5f97\u5230\u4e00\u4e2acachekey\uff0ccachekey\u5c31\u662fbeanName\u3002 \u7136\u540e\u628abeanName\u548cbean\uff08\u8fd9\u662f\u539f\u59cb\u5bf9\u8c61\uff09\u5b58\u5165earlyProxyReferences\u4e2d \u8c03\u7528wrapIfNecessary\u8fdb\u884cAOP\uff0c\u5f97\u5230\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u3002 \u90a3\u4e48\uff0c\u4ec0\u4e48\u65f6\u5019\u4f1a\u8c03\u7528getEarlyBeanReference\u65b9\u6cd5\u5462\uff1f\u56de\u5230\u5faa\u73af\u4f9d\u8d56\u7684\u573a\u666f\u4e2d \u5de6\u8fb9\u6587\u5b57 \uff1a \u8fd9\u4e2aObjectFactory\u5c31\u662f\u4e0a\u6587\u8bf4\u7684labmda\u8868\u8fbe\u5f0f\uff0c\u4e2d\u95f4\u6709getEarlyBeanReference\u65b9\u6cd5\uff0c\u6ce8\u610f\u5b58\u5165singletonFactories\u65f6\u5e76\u4e0d\u4f1a\u6267\u884clambda\u8868\u8fbe\u5f0f\uff0c\u4e5f\u5c31\u662f\u4e0d\u4f1a\u6267\u884cgetEarlyBeanReference\u65b9\u6cd5 \u53f3\u8fb9\u6587\u5b57 \uff1a \u4ecesingletonFactories\u6839\u636ebeanName\u5f97\u5230\u4e00\u4e2aObjectFactory\uff0c\u7136\u540e\u6267\u884cObjectFactory\uff0c\u4e5f\u5c31\u662f\u6267\u884cgetEarlyBeanReference\u65b9\u6cd5\uff0c\u6b64\u65f6\u4f1a\u5f97\u5230\u4e00\u4e2aA\u539f\u59cb\u5bf9\u8c61\u7ecf\u8fc7AOP\u4e4b\u540e\u7684\u4ee3\u7406\u5bf9\u8c61\uff0c\u7136\u540e\u628a\u8be5\u4ee3\u7406\u5bf9\u8c61\u653e\u5165earlySingletonObjects\u4e2d\uff0c\u6ce8\u610f\u6b64\u65f6\u5e76\u6ca1\u6709\u628a\u4ee3\u7406\u5bf9\u8c61\u653e\u5165singletonObjects\u4e2d\uff0c\u90a3\u4ec0\u4e48\u65f6\u5019\u653e\u5165\u5230singletonObjects\u4e2d\u5462\uff1f \u6211\u4eec\u8fd9\u4e2a\u65f6\u5019\u5f97\u6765\u7406\u89e3\u4e00\u4e0bearlySingletonObjects\u7684\u4f5c\u7528\uff0c\u6b64\u65f6\uff0c\u6211\u4eec\u53ea\u5f97\u5230\u4e86A\u539f\u59cb\u5bf9\u8c61\u7684\u4ee3\u7406\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u8fd8\u4e0d\u5b8c\u6574\uff0c\u56e0\u4e3aA\u539f\u59cb\u5bf9\u8c61\u8fd8\u6ca1\u6709\u8fdb\u884c\u5c5e\u6027\u586b\u5145\uff0c\u6240\u4ee5\u6b64\u65f6\u4e0d\u80fd\u76f4\u63a5\u628aA\u7684\u4ee3\u7406\u5bf9\u8c61\u653e\u5165singletonObjects\u4e2d\uff0c\u6240\u4ee5\u53ea\u80fd\u628a\u4ee3\u7406\u5bf9\u8c61\u653e\u5165earlySingletonObjects\uff0c\u5047\u8bbe\u73b0\u5728\u6709\u5176\u4ed6\u5bf9\u8c61\u4f9d\u8d56\u4e86A\uff0c\u90a3\u4e48\u5219\u53ef\u4ee5\u4eceearlySingletonObjects\u4e2d\u5f97\u5230A\u539f\u59cb\u5bf9\u8c61\u7684\u4ee3\u7406\u5bf9\u8c61\u4e86\uff0c\u5e76\u4e14\u662fA\u7684\u540c\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u3002 \u5f53B\u521b\u5efa\u5b8c\u4e86\u4e4b\u540e\uff0cA\u7ee7\u7eed\u8fdb\u884c\u751f\u547d\u5468\u671f\uff0c\u800cA\u5728\u5b8c\u6210\u5c5e\u6027\u6ce8\u5165\u540e\uff0c\u4f1a\u6309\u7167\u5b83\u672c\u8eab\u7684\u903b\u8f91\u53bb\u8fdb\u884cAOP\uff0c\u800c\u6b64\u65f6\u6211\u4eec\u77e5\u9053A\u539f\u59cb\u5bf9\u8c61\u5df2\u7ecf\u7ecf\u5386\u8fc7\u4e86AOP\uff0c\u6240\u4ee5\u5bf9\u4e8eA\u672c\u8eab\u800c\u8a00\uff0c\u4e0d\u4f1a\u518d\u53bb\u8fdb\u884cAOP\u4e86\uff0c\u90a3\u4e48\u600e\u4e48\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u7ecf\u5386\u8fc7\u4e86AOP\u5462\uff1f\u4f1a\u5229\u7528\u4e0a\u6587\u63d0\u5230\u7684earlyProxyReferences\uff0c\u5728AbstractAutoProxyCreator\u7684postProcessAfterInitialization\u65b9\u6cd5\u4e2d\uff0c\u4f1a\u53bb\u5224\u65ad\u5f53\u524dbeanName\u662f\u5426\u5728earlyProxyReferences\uff0c\u5982\u679c\u5728\u5219\u8868\u793a\u5df2\u7ecf\u63d0\u524d\u8fdb\u884c\u8fc7AOP\u4e86\uff0c\u65e0\u9700\u518d\u6b21\u8fdb\u884cAOP\u3002 \u5bf9\u4e8eA\u800c\u8a00\uff0c\u8fdb\u884c\u4e86AOP\u7684\u5224\u65ad\u540e\uff0c\u4ee5\u53caBeanPostProcessor\u7684\u6267\u884c\u4e4b\u540e\uff0c\u5c31\u9700\u8981\u628aA\u5bf9\u5e94\u7684\u5bf9\u8c61\u653e\u5165singletonObjects\u4e2d\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u77e5\u9053\uff0c\u5e94\u8be5\u662f\u8981\u628aA\u7684\u4ee3\u7406\u5bf9\u8c61\u653e\u5165singletonObjects\u4e2d\uff0c\u6240\u4ee5\u6b64\u65f6\u9700\u8981\u4eceearlySingletonObjects\u4e2d\u5f97\u5230\u4ee3\u7406\u5bf9\u8c61\uff0c\u7136\u540e\u5165singletonObjects\u4e2d\u3002 \u6574\u4e2a\u5faa\u73af\u4f9d\u8d56\u89e3\u51b3\u5b8c\u6bd5\u3002 \u603b\u7ed3 \u81f3\u6b64\uff0c\u603b\u7ed3\u4e00\u4e0b\u4e09\u7ea7\u7f13\u5b58\uff1a singletonObjects \uff1a\u7f13\u5b58\u7ecf\u8fc7\u4e86 \u5b8c\u6574\u751f\u547d\u5468\u671f \u7684bean earlySingletonObjects \uff1a\u7f13\u5b58 \u672a\u7ecf\u8fc7\u5b8c\u6574\u751f\u547d\u5468\u671f\u7684bean \uff0c\u5982\u679c\u67d0\u4e2abean\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\uff0c\u5c31\u4f1a \u63d0\u524d \u628a\u8fd9\u4e2a\u6682\u65f6\u672a\u7ecf\u8fc7\u5b8c\u6574\u751f\u547d\u5468\u671f\u7684bean\u653e\u5165earlySingletonObjects\u4e2d\uff0c\u8fd9\u4e2abean\u5982\u679c\u8981\u7ecf\u8fc7AOP\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u4ee3\u7406\u5bf9\u8c61\u653e\u5165earlySingletonObjects\u4e2d\uff0c\u5426\u5219\u5c31\u662f\u628a\u539f\u59cb\u5bf9\u8c61\u653e\u5165earlySingletonObjects\uff0c\u4f46\u662f\u4e0d\u7ba1\u600e\u4e48\u6837\uff0c\u5c31\u662f\u662f\u4ee3\u7406\u5bf9\u8c61\uff0c\u4ee3\u7406\u5bf9\u8c61\u6240\u4ee3\u7406\u7684\u539f\u59cb\u5bf9\u8c61\u4e5f\u662f\u6ca1\u6709\u7ecf\u8fc7\u5b8c\u6574\u751f\u547d\u5468\u671f\u7684\uff0c\u6240\u4ee5\u653e\u5165earlySingletonObjects\u6211\u4eec\u5c31\u53ef\u4ee5\u7edf\u4e00\u8ba4\u4e3a\u662f \u672a\u7ecf\u8fc7\u5b8c\u6574\u751f\u547d\u5468\u671f\u7684bean\u3002 singletonFactories \uff1a\u7f13\u5b58\u7684\u662f\u4e00\u4e2aObjectFactory\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2aLambda\u8868\u8fbe\u5f0f\u3002\u5728\u6bcf\u4e2aBean\u7684\u751f\u6210\u8fc7\u7a0b\u4e2d\uff0c\u7ecf\u8fc7 \u5b9e\u4f8b\u5316 \u5f97\u5230\u4e00\u4e2a\u539f\u59cb\u5bf9\u8c61\u540e\uff0c\u90fd\u4f1a\u63d0\u524d\u57fa\u4e8e\u539f\u59cb\u5bf9\u8c61\u66b4\u9732\u4e00\u4e2aLambda\u8868\u8fbe\u5f0f\uff0c\u5e76\u4fdd\u5b58\u5230\u4e09\u7ea7\u7f13\u5b58\u4e2d\uff0c\u8fd9\u4e2aLambda\u8868\u8fbe\u5f0f \u53ef\u80fd\u7528\u5230\uff0c\u4e5f\u53ef\u80fd\u7528\u4e0d\u5230 \uff0c\u5982\u679c\u5f53\u524dBean\u6ca1\u6709\u51fa\u73b0\u5faa\u73af\u4f9d\u8d56\uff0c\u90a3\u4e48\u8fd9\u4e2aLambda\u8868\u8fbe\u5f0f\u6ca1\u7528\uff0c\u5f53\u524dbean\u6309\u7167\u81ea\u5df1\u7684\u751f\u547d\u5468\u671f\u6b63\u5e38\u6267\u884c\uff0c\u6267\u884c\u5b8c\u540e\u76f4\u63a5\u628a\u5f53\u524dbean\u653e\u5165singletonObjects\u4e2d\uff0c\u5982\u679c\u5f53\u524dbean\u5728\u4f9d\u8d56\u6ce8\u5165\u65f6\u53d1\u73b0\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\uff08\u5f53\u524d\u6b63\u5728\u521b\u5efa\u7684bean\u88ab\u5176\u4ed6bean\u4f9d\u8d56\u4e86\uff09\uff0c\u5219\u4ece\u4e09\u7ea7\u7f13\u5b58\u4e2d\u62ff\u5230Lambda\u8868\u8fbe\u5f0f\uff0c\u5e76\u6267\u884cLambda\u8868\u8fbe\u5f0f\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u628a\u5f97\u5230\u7684\u5bf9\u8c61\u653e\u5165\u4e8c\u7ea7\u7f13\u5b58\uff08(\u5982\u679c\u5f53\u524dBean\u9700\u8981AOP\uff0c\u90a3\u4e48\u6267\u884clambda\u8868\u8fbe\u5f0f\uff0c\u5f97\u5230\u5c31\u662f\u5bf9\u5e94\u7684\u4ee3\u7406\u5bf9\u8c61\uff0c\u5982\u679c\u65e0\u9700AOP\uff0c\u5219\u76f4\u63a5\u5f97\u5230\u4e00\u4e2a\u539f\u59cb\u5bf9\u8c61)\uff09\u3002 \u5176\u5b9e\u8fd8\u8981\u4e00\u4e2a\u7f13\u5b58\uff0c\u5c31\u662f earlyProxyReferences \uff0c\u5b83\u7528\u6765\u8bb0\u5f55\u67d0\u4e2a\u539f\u59cb\u5bf9\u8c61\u662f\u5426\u8fdb\u884c\u8fc7AOP\u4e86\u3002 \u53cd\u5411\u5206\u6790\u4e00\u4e0bsingletonFactories \u4e3a\u4ec0\u4e48\u9700\u8981 singletonFactories \uff1f\u5047\u8bbe\u6ca1\u6709 singletonFactories \uff0c\u53ea\u6709 earlySingletonObjects \uff0cearlySingletonObjects\u662f\u4e8c\u7ea7\u7f13\u5b58\uff0c\u5b83\u5185\u90e8\u5b58\u50a8\u7684\u662f\u4e3a\u7ecf\u8fc7\u5b8c\u6574\u751f\u547d\u5468\u671f\u7684bean\u5bf9\u8c61\uff0cSpring\u539f\u6709\u7684\u6d41\u7a0b\u662f\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\u7684\u60c5\u51b5\u4e0b\uff1a \u5148\u4ecesingletonFactories\u4e2d\u62ff\u5230lambda\u8868\u8fbe\u5f0f\uff0c\u8fd9\u91cc\u80af\u5b9a\u662f\u80fd\u62ff\u5230\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2abean \u5b9e\u4f8b\u5316\u4e4b\u540e \uff0c \u4f9d\u8d56\u6ce8\u5165\u4e4b\u524d \uff0c\u5c31\u4f1a\u751f\u6210\u4e00\u4e2alambda\u8868\u793a\u653e\u5165singletonFactories\u4e2d \u6267\u884clambda\u8868\u8fbe\u5f0f\uff0c\u5f97\u5230\u7ed3\u679c\uff0c\u5c06\u7ed3\u679c\u653e\u5165earlySingletonObjects\u4e2d \u90a3\u5982\u679c\u6ca1\u6709singletonFactories\uff0c\u8be5\u5982\u4f55\u628a\u539f\u59cb\u5bf9\u8c61\u6216AOP\u4e4b\u540e\u7684\u4ee3\u7406\u5bf9\u8c61\u653e\u5165earlySingletonObjects\u4e2d\u5462\uff1f\u4f55\u65f6\u653e\u5165\u5462\uff1f \u200b \u9996\u5148\uff0c\u5c06\u539f\u59cb\u5bf9\u8c61\u6216AOP\u4e4b\u540e\u7684\u4ee3\u7406\u5bf9\u8c61\u653e\u5165earlySingletonObjects\u4e2d\u7684\u6709\u4e24\u79cd\uff1a \u5b9e\u4f8b\u5316\u4e4b\u540e\uff0c\u4f9d\u8d56\u6ce8\u5165\u4e4b\u524d\uff1a\u5982\u679c\u662f\u8fd9\u6837\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2abean\u800c\u8a00\uff0c\u90fd\u662f\u5728\u4f9d\u8d56\u6ce8\u5165\u4e4b\u524d\u4f1a\u53bb\u8fdb\u884cAOP\uff0c\u8fd9\u662f\u4e0d\u7b26\u5408bean\u751f\u547d\u5468\u671f\u6b65\u9aa4\u7684\u8bbe\u8ba1\u7684\u3002 \u771f\u6b63\u53d1\u73b0\u67d0\u4e2abean\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\u65f6\uff1a\u6309\u73b0\u5728Spring\u6e90\u7801\u7684\u6d41\u7a0b\u6765\u8bf4\uff0c\u5c31\u662fgetSingleton(String beanName, boolean allowEarlyReference)\u4e2d\uff0c\u662f\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u5224\u65ad\u51fa\u6765\u4e86\u5f53\u524d\u83b7\u53d6\u7684\u8fd9\u4e2abean\u5728\u521b\u5efa\u4e2d\uff0c\u5c31\u8868\u793a\u83b7\u53d6\u7684\u8fd9\u4e2abean\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\uff0c\u90a3\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u8be5\u5982\u4f55\u62ff\u5230\u539f\u59cb\u5bf9\u8c61\u5462\uff1f\u66f4\u52a0\u91cd\u8981\u7684\u662f\uff0c\u8be5\u5982\u4f55\u62ff\u5230AOP\u4e4b\u540e\u7684\u4ee3\u7406\u5bf9\u8c61\u5462\uff1f\u96be\u9053\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u53bb\u5faa\u73af\u8c03\u7528BeanPostProcessor\u7684\u521d\u59cb\u5316\u540e\u7684\u65b9\u6cd5\u5417\uff1f\u4e0d\u662f\u505a\u4e0d\u5230\uff0c\u4e0d\u592a\u5408\u9002\uff0c\u4ee3\u7801\u592a\u4e11\u3002 \u6700\u5173\u952e\u7684\u662f\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u8be5\u5982\u4f55\u62ff\u5230\u539f\u59cb\u5bf9\u8c61\u5462\uff1f \u8fd8\u662f\u5f97\u9700\u8981\u4e00\u4e2aMap\uff0c\u9884\u4e60\u628a\u8fd9\u4e2aBean\u5b9e\u4f8b\u5316\u540e\u7684\u5bf9\u8c61\u5b58\u5728\u8fd9\u4e2aMap\u4e2d\uff0c\u90a3\u8fd9\u6837\u7684\u8bdd\u8fd8\u4e0d\u5982\u76f4\u63a5\u7528\u7b2c\u4e00\u79cd\u65b9\u6848\uff0c\u4f46\u662f\u7b2c\u4e00\u79cd\u53c8\u76f4\u63a5\u6253\u7834\u4e86Bean\u751f\u547d\u5468\u671f\u7684\u8bbe\u8ba1\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u73b0\u5728Spring\u6240\u7528\u7684singletonFactories\uff0c\u4e3a\u4e86\u8c03\u548c\u4e0d\u540c\u7684\u60c5\u51b5\uff0c\u5728singletonFactories\u4e2d\u5b58\u7684\u662flambda\u8868\u8fbe\u5f0f\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u53ea\u6709\u5728\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\u7684\u60c5\u51b5\uff0c\u624d\u4f1a\u6267\u884clambda\u8868\u8fbe\u5f0f\uff0c\u624d\u4f1a\u8fdb\u884cAOP\uff0c\u4e5f\u5c31\u8bf4\u53ea\u6709\u5728\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u6253\u7834Bean\u751f\u547d\u5468\u671f\u7684\u8bbe\u8ba1\uff0c\u5982\u679c\u4e00\u4e2aBean\u6ca1\u6709\u51fa\u73b0\u5faa\u73af\u4f9d\u8d56\uff0c\u90a3\u4e48\u5b83\u8fd8\u662f\u9075\u5b88\u4e86Bean\u7684\u751f\u547d\u5468\u671f\u7684\u8bbe\u8ba1\u7684\u3002","title":"8.Spring\u5faa\u73af\u4f9d\u8d56\u6e90\u7801"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/08Spring%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E6%BA%90%E7%A0%81/#_1","text":"\u5f88\u7b80\u5355\uff0c\u5c31\u662fA\u5bf9\u8c61\u4f9d\u8d56\u4e86B\u5bf9\u8c61\uff0cB\u5bf9\u8c61\u4f9d\u8d56\u4e86A\u5bf9\u8c61\u3002 \u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 // A\u4f9d\u8d56\u4e86B class A { public B b ; } // B\u4f9d\u8d56\u4e86A class B { public A a ; } \u90a3\u4e48\u5faa\u73af\u4f9d\u8d56\u662f\u4e2a\u95ee\u9898\u5417\uff1f \u5982\u679c\u4e0d\u8003\u8651Spring\uff0c\u5faa\u73af\u4f9d\u8d56\u5e76\u4e0d\u662f\u95ee\u9898\uff0c\u56e0\u4e3a\u5bf9\u8c61\u4e4b\u95f4\u76f8\u4e92\u4f9d\u8d56\u662f\u5f88\u6b63\u5e38\u7684\u4e8b\u60c5\u3002 \u6bd4\u5982 1 2 3 4 5 A a = new A (); B b = new B (); a . b = b ; b . a = a ; \u8fd9\u6837\uff0cA,B\u5c31\u4f9d\u8d56\u4e0a\u4e86\u3002 \u4f46\u662f\uff0c\u5728Spring\u4e2d\u5faa\u73af\u4f9d\u8d56\u5c31\u662f\u4e00\u4e2a\u95ee\u9898\u4e86\uff0c\u4e3a\u4ec0\u4e48\uff1f \u56e0\u4e3a\uff0c\u5728Spring\u4e2d\uff0c\u4e00\u4e2a\u5bf9\u8c61\u5e76\u4e0d\u662f\u7b80\u5355new\u51fa\u6765\u4e86\uff0c\u800c\u662f\u4f1a\u7ecf\u8fc7\u4e00\u7cfb\u5217\u7684Bean\u7684\u751f\u547d\u5468\u671f\uff0c\u5c31\u662f\u56e0\u4e3aBean\u7684\u751f\u547d\u5468\u671f\u6240\u4ee5\u624d\u4f1a\u51fa\u73b0\u5faa\u73af\u4f9d\u8d56\u95ee\u9898\u3002\u5f53\u7136\uff0c\u5728Spring\u4e2d\uff0c\u51fa\u73b0\u5faa\u73af\u4f9d\u8d56\u7684\u573a\u666f\u5f88\u591a\uff0c\u6709\u7684\u573a\u666fSpring\u81ea\u52a8\u5e2e\u6211\u4eec\u89e3\u51b3\u4e86\uff0c\u800c\u6709\u7684\u573a\u666f\u5219\u9700\u8981\u7a0b\u5e8f\u5458\u6765\u89e3\u51b3\uff0c\u4e0b\u6587\u8be6\u7ec6\u6765\u8bf4\u3002 \u8981\u660e\u767dSpring\u4e2d\u7684\u5faa\u73af\u4f9d\u8d56\uff0c\u5f97\u5148\u660e\u767dSpring\u4e2dBean\u7684\u751f\u547d\u5468\u671f\u3002","title":"\u4ec0\u4e48\u662f\u5faa\u73af\u4f9d\u8d56\uff1f"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/08Spring%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E6%BA%90%E7%A0%81/#bean","text":"\u8fd9\u91cc\u4e0d\u4f1a\u5bf9Bean\u7684\u751f\u547d\u5468\u671f\u8fdb\u884c\u8be6\u7ec6\u7684\u63cf\u8ff0\uff0c\u53ea\u63cf\u8ff0\u4e00\u4e0b\u5927\u6982\u7684\u8fc7\u7a0b\u3002 Bean\u7684\u751f\u547d\u5468\u671f\u6307\u7684\u5c31\u662f\uff1a\u5728Spring\u4e2d\uff0cBean\u662f\u5982\u4f55\u751f\u6210\u7684\uff1f \u88abSpring\u7ba1\u7406\u7684\u5bf9\u8c61\u53eb\u505aBean\u3002Bean\u7684\u751f\u6210\u6b65\u9aa4\u5982\u4e0b\uff1a Spring\u626b\u63cfclass\u5f97\u5230BeanDefinition \u6839\u636e\u5f97\u5230\u7684BeanDefinition\u53bb\u751f\u6210bean \u9996\u5148\u6839\u636eclass\u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \u6839\u636e\u63a8\u65ad\u51fa\u6765\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u53cd\u5c04\uff0c\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff08\u6682\u65f6\u53eb\u505a\u539f\u59cb\u5bf9\u8c61\uff09 \u586b\u5145\u539f\u59cb\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\uff08\u4f9d\u8d56\u6ce8\u5165\uff09 \u5982\u679c\u539f\u59cb\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u65b9\u6cd5\u88abAOP\u4e86\uff0c\u90a3\u4e48\u5219\u9700\u8981\u6839\u636e\u539f\u59cb\u5bf9\u8c61\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61 \u628a\u6700\u7ec8\u751f\u6210\u7684\u4ee3\u7406\u5bf9\u8c61\u653e\u5165\u5355\u4f8b\u6c60\uff08\u6e90\u7801\u4e2d\u53eb\u505asingletonObjects\uff09\u4e2d\uff0c\u4e0b\u6b21getBean\u65f6\u5c31\u76f4\u63a5\u4ece\u5355\u4f8b\u6c60\u62ff\u5373\u53ef \u53ef\u4ee5\u770b\u5230\uff0c\u5bf9\u4e8eSpring\u4e2d\u7684Bean\u7684\u751f\u6210\u8fc7\u7a0b\uff0c\u6b65\u9aa4\u8fd8\u662f\u5f88\u591a\u7684\uff0c\u5e76\u4e14\u4e0d\u4ec5\u4ec5\u53ea\u6709\u4e0a\u9762\u76847\u6b65\uff0c\u8fd8\u6709\u5f88\u591a\u5f88\u591a\uff0c\u6bd4\u5982Aware\u56de\u8c03\u3001\u521d\u59cb\u5316\u7b49\u7b49\uff0c\u8fd9\u91cc\u4e0d\u8be6\u7ec6\u8ba8\u8bba\u3002 \u53ef\u4ee5\u53d1\u73b0\uff0c\u5728Spring\u4e2d\uff0c\u6784\u9020\u4e00\u4e2aBean\uff0c\u5305\u62ec\u4e86new\u8fd9\u4e2a\u6b65\u9aa4\uff08\u7b2c4\u6b65\u6784\u9020\u65b9\u6cd5\u53cd\u5c04\uff09\u3002 \u5f97\u5230\u4e00\u4e2a\u539f\u59cb\u5bf9\u8c61\u540e\uff0cSpring\u9700\u8981\u7ed9\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u8fdb\u884c\u4f9d\u8d56\u6ce8\u5165\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6ce8\u5165\u8fc7\u7a0b\u662f\u600e\u6837\u7684\uff1f \u6bd4\u5982\u4e0a\u6587\u8bf4\u7684A\u7c7b\uff0cA\u7c7b\u4e2d\u5b58\u5728\u4e00\u4e2aB\u7c7b\u7684b\u5c5e\u6027\uff0c\u6240\u4ee5\uff0c\u5f53A\u7c7b\u751f\u6210\u4e86\u4e00\u4e2a\u539f\u59cb\u5bf9\u8c61\u4e4b\u540e\uff0c\u5c31\u4f1a\u53bb\u7ed9b\u5c5e\u6027\u53bb\u8d4b\u503c\uff0c\u6b64\u65f6\u5c31\u4f1a\u6839\u636eb\u5c5e\u6027\u7684\u7c7b\u578b\u548c\u5c5e\u6027\u540d\u53bbBeanFactory\u4e2d\u53bb\u83b7\u53d6B\u7c7b\u6240\u5bf9\u5e94\u7684\u5355\u4f8bbean\u3002\u5982\u679c\u6b64\u65f6BeanFactory\u4e2d\u5b58\u5728B\u5bf9\u5e94\u7684Bean\uff0c\u90a3\u4e48\u76f4\u63a5\u62ff\u6765\u8d4b\u503c\u7ed9b\u5c5e\u6027\uff1b\u5982\u679c\u6b64\u65f6BeanFactory\u4e2d\u4e0d\u5b58\u5728B\u5bf9\u5e94\u7684Bean\uff0c\u5219\u9700\u8981\u751f\u6210\u4e00\u4e2aB\u5bf9\u5e94\u7684Bean\uff0c\u7136\u540e\u8d4b\u503c\u7ed9b\u5c5e\u6027\u3002 \u95ee\u9898\u5c31\u51fa\u73b0\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u6b64\u65f6B\u7c7b\u5728BeanFactory\u4e2d\u8fd8\u6ca1\u6709\u751f\u6210\u5bf9\u5e94\u7684Bean\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u53bb\u751f\u6210\uff0c\u5c31\u4f1a\u7ecf\u8fc7B\u7684Bean\u7684\u751f\u547d\u5468\u671f\u3002 \u90a3\u4e48\u5728\u521b\u5efaB\u7c7b\u7684Bean\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679cB\u7c7b\u4e2d\u5b58\u5728\u4e00\u4e2aA\u7c7b\u7684a\u5c5e\u6027\uff0c\u90a3\u4e48\u5728\u521b\u5efaB\u7684Bean\u7684\u8fc7\u7a0b\u4e2d\u5c31\u9700\u8981A\u7c7b\u5bf9\u5e94\u7684Bean\uff0c\u4f46\u662f\uff0c\u89e6\u53d1B\u7c7bBean\u7684\u521b\u5efa\u7684\u6761\u4ef6\u662fA\u7c7bBean\u5728\u521b\u5efa\u8fc7\u7a0b\u4e2d\u7684\u4f9d\u8d56\u6ce8\u5165\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\uff1a ABean\u521b\u5efa-->\u4f9d\u8d56\u4e86B\u5c5e\u6027-->\u89e6\u53d1BBean\u521b\u5efa--->B\u4f9d\u8d56\u4e86A\u5c5e\u6027--->\u9700\u8981ABean\uff08\u4f46ABean\u8fd8\u5728\u521b\u5efa\u8fc7\u7a0b\u4e2d\uff09 \u4ece\u800c\u5bfc\u81f4ABean\u521b\u5efa\u4e0d\u51fa\u6765\uff0cBBean\u4e5f\u521b\u5efa\u4e0d\u51fa\u6765\u3002 \u8fd9\u662f\u5faa\u73af\u4f9d\u8d56\u7684\u573a\u666f\uff0c\u4f46\u662f\u4e0a\u6587\u8bf4\u4e86\uff0c\u5728Spring\u4e2d\uff0c\u901a\u8fc7\u67d0\u4e9b\u673a\u5236\u5e2e\u5f00\u53d1\u8005\u89e3\u51b3\u4e86\u90e8\u5206\u5faa\u73af\u4f9d\u8d56\u7684\u95ee\u9898\uff0c\u8fd9\u4e2a\u673a\u5236\u5c31\u662f \u4e09\u7ea7\u7f13\u5b58 \u3002","title":"Bean\u7684\u751f\u547d\u5468\u671f"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/08Spring%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E6%BA%90%E7%A0%81/#_2","text":"\u4e09\u7ea7\u7f13\u5b58\u662f\u901a\u7528\u7684\u53eb\u6cd5\u3002 \u4e00\u7ea7\u7f13\u5b58\u4e3a\uff1a singletonObjects \u4e8c\u7ea7\u7f13\u5b58\u4e3a\uff1a earlySingletonObjects \u4e09\u7ea7\u7f13\u5b58\u4e3a \uff1asingletonFactories \u200b \u5148\u7a0d\u5fae\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e09\u4e2a\u7f13\u5b58\u7684\u4f5c\u7528\uff0c\u540e\u9762\u8be6\u7ec6\u5206\u6790\uff1a singletonObjects \u4e2d\u7f13\u5b58\u7684\u662f\u5df2\u7ecf\u7ecf\u5386\u4e86\u5b8c\u6574\u751f\u547d\u5468\u671f\u7684bean\u5bf9\u8c61\u3002 earlySingletonObjects \u6bd4singletonObjects\u591a\u4e86\u4e00\u4e2aearly\uff0c\u8868\u793a\u7f13\u5b58\u7684\u662f\u65e9\u671f\u7684bean\u5bf9\u8c61\u3002\u65e9\u671f\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u8868\u793aBean\u7684\u751f\u547d\u5468\u671f\u8fd8\u6ca1\u8d70\u5b8c\u5c31\u628a\u8fd9\u4e2aBean\u653e\u5165\u4e86earlySingletonObjects\u3002 singletonFactories \u4e2d\u7f13\u5b58\u7684\u662fObjectFactory\uff0c\u8868\u793a\u5bf9\u8c61\u5de5\u5382\uff0c\u8868\u793a\u7528\u6765\u521b\u5efa\u65e9\u671fbean\u5bf9\u8c61\u7684\u5de5\u5382\u3002","title":"\u4e09\u7ea7\u7f13\u5b58"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/08Spring%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E6%BA%90%E7%A0%81/#_3","text":"\u5148\u6765\u5206\u6790\u4e3a\u4ec0\u4e48\u7f13\u5b58\u80fd\u89e3\u51b3\u5faa\u73af\u4f9d\u8d56\u3002 \u4e0a\u6587\u5206\u6790\u5f97\u5230\uff0c\u4e4b\u6240\u4ee5\u4ea7\u751f\u5faa\u73af\u4f9d\u8d56\u7684\u95ee\u9898\uff0c\u4e3b\u8981\u662f\uff1a A\u521b\u5efa\u65f6--->\u9700\u8981B---->B\u53bb\u521b\u5efa--->\u9700\u8981A\uff0c\u4ece\u800c\u4ea7\u751f\u4e86\u5faa\u73af \u90a3\u4e48\u5982\u4f55\u6253\u7834\u8fd9\u4e2a\u5faa\u73af\uff0c\u52a0\u4e2a\u4e2d\u95f4\u4eba\uff08\u7f13\u5b58\uff09 A\u7684Bean\u5728\u521b\u5efa\u8fc7\u7a0b\u4e2d\uff0c\u5728\u8fdb\u884c\u4f9d\u8d56\u6ce8\u5165\u4e4b\u524d\uff0c\u5148\u628aA\u7684\u539f\u59cbBean\u653e\u5165\u7f13\u5b58\uff08\u63d0\u65e9\u66b4\u9732\uff0c\u53ea\u8981\u653e\u5230\u7f13\u5b58\u4e86\uff0c\u5176\u4ed6Bean\u9700\u8981\u65f6\u5c31\u53ef\u4ee5\u4ece\u7f13\u5b58\u4e2d\u62ff\u4e86\uff09\uff0c\u653e\u5165\u7f13\u5b58\u540e\uff0c\u518d\u8fdb\u884c\u4f9d\u8d56\u6ce8\u5165\uff0c\u6b64\u65f6A\u7684Bean\u4f9d\u8d56\u4e86B\u7684Bean\uff0c\u5982\u679cB\u7684Bean\u4e0d\u5b58\u5728\uff0c\u5219\u9700\u8981\u521b\u5efaB\u7684Bean\uff0c\u800c\u521b\u5efaB\u7684Bean\u7684\u8fc7\u7a0b\u548cA\u4e00\u6837\uff0c\u4e5f\u662f\u5148\u521b\u5efa\u4e00\u4e2aB\u7684\u539f\u59cb\u5bf9\u8c61\uff0c\u7136\u540e\u628aB\u7684\u539f\u59cb\u5bf9\u8c61\u63d0\u65e9\u66b4\u9732\u51fa\u6765\u653e\u5165\u7f13\u5b58\u4e2d\uff0c\u7136\u540e\u5728\u5bf9B\u7684\u539f\u59cb\u5bf9\u8c61\u8fdb\u884c\u4f9d\u8d56\u6ce8\u5165A\uff0c\u6b64\u65f6\u80fd\u4ece\u7f13\u5b58\u4e2d\u62ff\u5230A\u7684\u539f\u59cb\u5bf9\u8c61\uff08\u867d\u7136\u662fA\u7684\u539f\u59cb\u5bf9\u8c61\uff0c\u8fd8\u4e0d\u662f\u6700\u7ec8\u7684Bean\uff09\uff0cB\u7684\u539f\u59cb\u5bf9\u8c61\u4f9d\u8d56\u6ce8\u5165\u5b8c\u4e86\u4e4b\u540e\uff0cB\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f\uff0c\u90a3\u4e48A\u7684\u751f\u547d\u5468\u671f\u4e5f\u80fd\u7ed3\u675f\u3002 \u56e0\u4e3a\u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u90fd\u53ea\u6709\u4e00\u4e2aA\u539f\u59cb\u5bf9\u8c61\uff0c\u6240\u4ee5\u5bf9\u4e8eB\u800c\u8a00\uff0c\u5c31\u7b97\u5728\u5c5e\u6027\u6ce8\u5165\u65f6\uff0c\u6ce8\u5165\u7684\u662fA\u539f\u59cb\u5bf9\u8c61\uff0c\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u56e0\u4e3aA\u539f\u59cb\u5bf9\u8c61\u5728\u540e\u7eed\u7684\u751f\u547d\u5468\u671f\u4e2d\u5728\u5806\u4e2d\u6ca1\u6709\u53d1\u751f\u53d8\u5316\u3002 \u4ece\u4e0a\u9762\u8fd9\u4e2a\u5206\u6790\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u5f97\u51fa\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u7f13\u5b58\u5c31\u80fd\u89e3\u51b3\u5faa\u73af\u4f9d\u8d56\u4e86\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48Spring\u4e2d\u8fd8\u9700\u8981 singletonFactories \u5462\uff1f \u8fd9\u662f\u96be\u70b9\uff0c\u57fa\u4e8e\u4e0a\u9762\u7684\u573a\u666f\u60f3\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679cA\u7684\u539f\u59cb\u5bf9\u8c61\u6ce8\u5165\u7ed9B\u7684\u5c5e\u6027\u4e4b\u540e\uff0cA\u7684\u539f\u59cb\u5bf9\u8c61\u8fdb\u884c\u4e86AOP\u4ea7\u751f\u4e86\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u6b64\u65f6\u5c31\u4f1a\u51fa\u73b0\uff0c\u5bf9\u4e8eA\u800c\u8a00\uff0c\u5b83\u7684Bean\u5bf9\u8c61\u5176\u5b9e\u5e94\u8be5\u662fAOP\u4e4b\u540e\u7684\u4ee3\u7406\u5bf9\u8c61\uff0c\u800cB\u7684a\u5c5e\u6027\u5bf9\u5e94\u7684\u5e76\u4e0d\u662fAOP\u4e4b\u540e\u7684\u4ee3\u7406\u5bf9\u8c61\uff0c\u8fd9\u5c31\u4ea7\u751f\u4e86\u51b2\u7a81\u3002 B\u4f9d\u8d56\u7684A\u548c\u6700\u7ec8\u7684A\u4e0d\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61 \u3002 AOP\u5c31\u662f\u901a\u8fc7\u4e00\u4e2aBeanPostProcessor\u6765\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e2aBeanPostProcessor\u5c31\u662fAnnotationAwareAspectJAutoProxyCreator\uff0c\u5b83\u7684\u7236\u7c7b\u662fAbstractAutoProxyCreator\uff0c\u800c\u5728Spring\u4e2dAOP\u5229\u7528\u7684\u8981\u4e48\u662fJDK\u52a8\u6001\u4ee3\u7406\uff0c\u8981\u4e48CGLib\u7684\u52a8\u6001\u4ee3\u7406\uff0c\u6240\u4ee5\u5982\u679c\u7ed9\u4e00\u4e2a\u7c7b\u4e2d\u7684\u67d0\u4e2a\u65b9\u6cd5\u8bbe\u7f6e\u4e86\u5207\u9762\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u6700\u7ec8\u5c31\u9700\u8981\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u3002 \u4e00\u822c\u8fc7\u7a0b\u5c31\u662f\uff1aA\u7c7b--->\u751f\u6210\u4e00\u4e2a\u666e\u901a\u5bf9\u8c61-->\u5c5e\u6027\u6ce8\u5165-->\u57fa\u4e8e\u5207\u9762\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61-->\u628a\u4ee3\u7406\u5bf9\u8c61\u653e\u5165singletonObjects\u5355\u4f8b\u6c60\u4e2d\u3002 \u800cAOP\u53ef\u4ee5\u8bf4\u662fSpring\u4e2d\u9664\u5f00IOC\u7684\u53e6\u5916\u4e00\u5927\u529f\u80fd\uff0c\u800c\u5faa\u73af\u4f9d\u8d56\u53c8\u662f\u5c5e\u4e8eIOC\u8303\u7574\u7684\uff0c\u6240\u4ee5\u8fd9\u4e24\u5927\u529f\u80fd\u60f3\u8981\u5e76\u5b58\uff0cSpring\u9700\u8981\u7279\u6b8a\u5904\u7406\u3002 \u5982\u4f55\u5904\u7406\u7684\uff0c\u5c31\u662f\u5229\u7528\u4e86\u7b2c\u4e09\u7ea7\u7f13\u5b58 singletonFactories \u3002 \u9996\u5148\uff0csingletonFactories\u4e2d\u5b58\u7684\u662f\u67d0\u4e2abeanName\u5bf9\u5e94\u7684ObjectFactory\uff0c\u5728bean\u7684\u751f\u547d\u5468\u671f\u4e2d\uff0c\u751f\u6210\u5b8c\u539f\u59cb\u5bf9\u8c61\u4e4b\u540e\uff0c\u5c31\u4f1a\u6784\u9020\u4e00\u4e2aObjectFactory\u5b58\u5165singletonFactories\u4e2d\u3002\u8fd9\u4e2aObjectFactory\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u6240\u4ee5\u652f\u6301Lambda\u8868\u8fbe\u5f0f\uff1a () -> getEarlyBeanReference(beanName, mbd, bean) \u4e0a\u9762\u7684Lambda\u8868\u8fbe\u5f0f\u5c31\u662f\u4e00\u4e2aObjectFactory\uff0c\u6267\u884c\u8be5Lambda\u8868\u8fbe\u5f0f\u5c31\u4f1a\u53bb\u6267\u884cgetEarlyBeanReference\u65b9\u6cd5\uff0c\u800c\u8be5\u65b9\u6cd5\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 protected Object getEarlyBeanReference ( String beanName , RootBeanDefinition mbd , Object bean ) { Object exposedObject = bean ; if ( ! mbd . isSynthetic () && hasInstantiationAwareBeanPostProcessors ()) { for ( BeanPostProcessor bp : getBeanPostProcessors ()) { if ( bp instanceof SmartInstantiationAwareBeanPostProcessor ) { SmartInstantiationAwareBeanPostProcessor ibp = ( SmartInstantiationAwareBeanPostProcessor ) bp ; exposedObject = ibp . getEarlyBeanReference ( exposedObject , beanName ); } } } return exposedObject ; } \u8be5\u65b9\u6cd5\u4f1a\u53bb\u6267\u884cSmartInstantiationAwareBeanPostProcessor\u4e2d\u7684getEarlyBeanReference\u65b9\u6cd5\uff0c\u800c\u8fd9\u4e2a\u63a5\u53e3\u4e0b\u7684\u5b9e\u73b0\u7c7b\u4e2d\u53ea\u6709\u4e24\u4e2a\u7c7b\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4e00\u4e2a\u662fAbstractAutoProxyCreator\uff0c\u4e00\u4e2a\u662fInstantiationAwareBeanPostProcessorAdapter\uff0c\u5b83\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 // InstantiationAwareBeanPostProcessorAdapter @Override public Object getEarlyBeanReference ( Object bean , String beanName ) throws BeansException { return bean ; } // AbstractAutoProxyCreator @Override public Object getEarlyBeanReference ( Object bean , String beanName ) { Object cacheKey = getCacheKey ( bean . getClass (), beanName ); this . earlyProxyReferences . put ( cacheKey , bean ); return wrapIfNecessary ( bean , beanName , cacheKey ); } \u5728\u6574\u4e2aSpring\u4e2d\uff0c\u9ed8\u8ba4\u5c31\u53ea\u6709AbstractAutoProxyCreator\u771f\u6b63\u610f\u4e49\u4e0a\u5b9e\u73b0\u4e86getEarlyBeanReference\u65b9\u6cd5\uff0c\u800c\u8be5\u7c7b\u5c31\u662f\u7528\u6765\u8fdb\u884cAOP\u7684\u3002\u4e0a\u6587\u63d0\u5230\u7684AnnotationAwareAspectJAutoProxyCreator\u7684\u7236\u7c7b\u5c31\u662fAbstractAutoProxyCreator\u3002 \u90a3\u4e48getEarlyBeanReference\u65b9\u6cd5\u5230\u5e95\u5728\u5e72\u4ec0\u4e48\uff1f \u9996\u5148\u5f97\u5230\u4e00\u4e2acachekey\uff0ccachekey\u5c31\u662fbeanName\u3002 \u7136\u540e\u628abeanName\u548cbean\uff08\u8fd9\u662f\u539f\u59cb\u5bf9\u8c61\uff09\u5b58\u5165earlyProxyReferences\u4e2d \u8c03\u7528wrapIfNecessary\u8fdb\u884cAOP\uff0c\u5f97\u5230\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u3002 \u90a3\u4e48\uff0c\u4ec0\u4e48\u65f6\u5019\u4f1a\u8c03\u7528getEarlyBeanReference\u65b9\u6cd5\u5462\uff1f\u56de\u5230\u5faa\u73af\u4f9d\u8d56\u7684\u573a\u666f\u4e2d \u5de6\u8fb9\u6587\u5b57 \uff1a \u8fd9\u4e2aObjectFactory\u5c31\u662f\u4e0a\u6587\u8bf4\u7684labmda\u8868\u8fbe\u5f0f\uff0c\u4e2d\u95f4\u6709getEarlyBeanReference\u65b9\u6cd5\uff0c\u6ce8\u610f\u5b58\u5165singletonFactories\u65f6\u5e76\u4e0d\u4f1a\u6267\u884clambda\u8868\u8fbe\u5f0f\uff0c\u4e5f\u5c31\u662f\u4e0d\u4f1a\u6267\u884cgetEarlyBeanReference\u65b9\u6cd5 \u53f3\u8fb9\u6587\u5b57 \uff1a \u4ecesingletonFactories\u6839\u636ebeanName\u5f97\u5230\u4e00\u4e2aObjectFactory\uff0c\u7136\u540e\u6267\u884cObjectFactory\uff0c\u4e5f\u5c31\u662f\u6267\u884cgetEarlyBeanReference\u65b9\u6cd5\uff0c\u6b64\u65f6\u4f1a\u5f97\u5230\u4e00\u4e2aA\u539f\u59cb\u5bf9\u8c61\u7ecf\u8fc7AOP\u4e4b\u540e\u7684\u4ee3\u7406\u5bf9\u8c61\uff0c\u7136\u540e\u628a\u8be5\u4ee3\u7406\u5bf9\u8c61\u653e\u5165earlySingletonObjects\u4e2d\uff0c\u6ce8\u610f\u6b64\u65f6\u5e76\u6ca1\u6709\u628a\u4ee3\u7406\u5bf9\u8c61\u653e\u5165singletonObjects\u4e2d\uff0c\u90a3\u4ec0\u4e48\u65f6\u5019\u653e\u5165\u5230singletonObjects\u4e2d\u5462\uff1f \u6211\u4eec\u8fd9\u4e2a\u65f6\u5019\u5f97\u6765\u7406\u89e3\u4e00\u4e0bearlySingletonObjects\u7684\u4f5c\u7528\uff0c\u6b64\u65f6\uff0c\u6211\u4eec\u53ea\u5f97\u5230\u4e86A\u539f\u59cb\u5bf9\u8c61\u7684\u4ee3\u7406\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u8fd8\u4e0d\u5b8c\u6574\uff0c\u56e0\u4e3aA\u539f\u59cb\u5bf9\u8c61\u8fd8\u6ca1\u6709\u8fdb\u884c\u5c5e\u6027\u586b\u5145\uff0c\u6240\u4ee5\u6b64\u65f6\u4e0d\u80fd\u76f4\u63a5\u628aA\u7684\u4ee3\u7406\u5bf9\u8c61\u653e\u5165singletonObjects\u4e2d\uff0c\u6240\u4ee5\u53ea\u80fd\u628a\u4ee3\u7406\u5bf9\u8c61\u653e\u5165earlySingletonObjects\uff0c\u5047\u8bbe\u73b0\u5728\u6709\u5176\u4ed6\u5bf9\u8c61\u4f9d\u8d56\u4e86A\uff0c\u90a3\u4e48\u5219\u53ef\u4ee5\u4eceearlySingletonObjects\u4e2d\u5f97\u5230A\u539f\u59cb\u5bf9\u8c61\u7684\u4ee3\u7406\u5bf9\u8c61\u4e86\uff0c\u5e76\u4e14\u662fA\u7684\u540c\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u3002 \u5f53B\u521b\u5efa\u5b8c\u4e86\u4e4b\u540e\uff0cA\u7ee7\u7eed\u8fdb\u884c\u751f\u547d\u5468\u671f\uff0c\u800cA\u5728\u5b8c\u6210\u5c5e\u6027\u6ce8\u5165\u540e\uff0c\u4f1a\u6309\u7167\u5b83\u672c\u8eab\u7684\u903b\u8f91\u53bb\u8fdb\u884cAOP\uff0c\u800c\u6b64\u65f6\u6211\u4eec\u77e5\u9053A\u539f\u59cb\u5bf9\u8c61\u5df2\u7ecf\u7ecf\u5386\u8fc7\u4e86AOP\uff0c\u6240\u4ee5\u5bf9\u4e8eA\u672c\u8eab\u800c\u8a00\uff0c\u4e0d\u4f1a\u518d\u53bb\u8fdb\u884cAOP\u4e86\uff0c\u90a3\u4e48\u600e\u4e48\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u7ecf\u5386\u8fc7\u4e86AOP\u5462\uff1f\u4f1a\u5229\u7528\u4e0a\u6587\u63d0\u5230\u7684earlyProxyReferences\uff0c\u5728AbstractAutoProxyCreator\u7684postProcessAfterInitialization\u65b9\u6cd5\u4e2d\uff0c\u4f1a\u53bb\u5224\u65ad\u5f53\u524dbeanName\u662f\u5426\u5728earlyProxyReferences\uff0c\u5982\u679c\u5728\u5219\u8868\u793a\u5df2\u7ecf\u63d0\u524d\u8fdb\u884c\u8fc7AOP\u4e86\uff0c\u65e0\u9700\u518d\u6b21\u8fdb\u884cAOP\u3002 \u5bf9\u4e8eA\u800c\u8a00\uff0c\u8fdb\u884c\u4e86AOP\u7684\u5224\u65ad\u540e\uff0c\u4ee5\u53caBeanPostProcessor\u7684\u6267\u884c\u4e4b\u540e\uff0c\u5c31\u9700\u8981\u628aA\u5bf9\u5e94\u7684\u5bf9\u8c61\u653e\u5165singletonObjects\u4e2d\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u77e5\u9053\uff0c\u5e94\u8be5\u662f\u8981\u628aA\u7684\u4ee3\u7406\u5bf9\u8c61\u653e\u5165singletonObjects\u4e2d\uff0c\u6240\u4ee5\u6b64\u65f6\u9700\u8981\u4eceearlySingletonObjects\u4e2d\u5f97\u5230\u4ee3\u7406\u5bf9\u8c61\uff0c\u7136\u540e\u5165singletonObjects\u4e2d\u3002 \u6574\u4e2a\u5faa\u73af\u4f9d\u8d56\u89e3\u51b3\u5b8c\u6bd5\u3002","title":"\u89e3\u51b3\u5faa\u73af\u4f9d\u8d56\u601d\u8def\u5206\u6790"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/08Spring%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E6%BA%90%E7%A0%81/#_4","text":"\u81f3\u6b64\uff0c\u603b\u7ed3\u4e00\u4e0b\u4e09\u7ea7\u7f13\u5b58\uff1a singletonObjects \uff1a\u7f13\u5b58\u7ecf\u8fc7\u4e86 \u5b8c\u6574\u751f\u547d\u5468\u671f \u7684bean earlySingletonObjects \uff1a\u7f13\u5b58 \u672a\u7ecf\u8fc7\u5b8c\u6574\u751f\u547d\u5468\u671f\u7684bean \uff0c\u5982\u679c\u67d0\u4e2abean\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\uff0c\u5c31\u4f1a \u63d0\u524d \u628a\u8fd9\u4e2a\u6682\u65f6\u672a\u7ecf\u8fc7\u5b8c\u6574\u751f\u547d\u5468\u671f\u7684bean\u653e\u5165earlySingletonObjects\u4e2d\uff0c\u8fd9\u4e2abean\u5982\u679c\u8981\u7ecf\u8fc7AOP\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u4ee3\u7406\u5bf9\u8c61\u653e\u5165earlySingletonObjects\u4e2d\uff0c\u5426\u5219\u5c31\u662f\u628a\u539f\u59cb\u5bf9\u8c61\u653e\u5165earlySingletonObjects\uff0c\u4f46\u662f\u4e0d\u7ba1\u600e\u4e48\u6837\uff0c\u5c31\u662f\u662f\u4ee3\u7406\u5bf9\u8c61\uff0c\u4ee3\u7406\u5bf9\u8c61\u6240\u4ee3\u7406\u7684\u539f\u59cb\u5bf9\u8c61\u4e5f\u662f\u6ca1\u6709\u7ecf\u8fc7\u5b8c\u6574\u751f\u547d\u5468\u671f\u7684\uff0c\u6240\u4ee5\u653e\u5165earlySingletonObjects\u6211\u4eec\u5c31\u53ef\u4ee5\u7edf\u4e00\u8ba4\u4e3a\u662f \u672a\u7ecf\u8fc7\u5b8c\u6574\u751f\u547d\u5468\u671f\u7684bean\u3002 singletonFactories \uff1a\u7f13\u5b58\u7684\u662f\u4e00\u4e2aObjectFactory\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2aLambda\u8868\u8fbe\u5f0f\u3002\u5728\u6bcf\u4e2aBean\u7684\u751f\u6210\u8fc7\u7a0b\u4e2d\uff0c\u7ecf\u8fc7 \u5b9e\u4f8b\u5316 \u5f97\u5230\u4e00\u4e2a\u539f\u59cb\u5bf9\u8c61\u540e\uff0c\u90fd\u4f1a\u63d0\u524d\u57fa\u4e8e\u539f\u59cb\u5bf9\u8c61\u66b4\u9732\u4e00\u4e2aLambda\u8868\u8fbe\u5f0f\uff0c\u5e76\u4fdd\u5b58\u5230\u4e09\u7ea7\u7f13\u5b58\u4e2d\uff0c\u8fd9\u4e2aLambda\u8868\u8fbe\u5f0f \u53ef\u80fd\u7528\u5230\uff0c\u4e5f\u53ef\u80fd\u7528\u4e0d\u5230 \uff0c\u5982\u679c\u5f53\u524dBean\u6ca1\u6709\u51fa\u73b0\u5faa\u73af\u4f9d\u8d56\uff0c\u90a3\u4e48\u8fd9\u4e2aLambda\u8868\u8fbe\u5f0f\u6ca1\u7528\uff0c\u5f53\u524dbean\u6309\u7167\u81ea\u5df1\u7684\u751f\u547d\u5468\u671f\u6b63\u5e38\u6267\u884c\uff0c\u6267\u884c\u5b8c\u540e\u76f4\u63a5\u628a\u5f53\u524dbean\u653e\u5165singletonObjects\u4e2d\uff0c\u5982\u679c\u5f53\u524dbean\u5728\u4f9d\u8d56\u6ce8\u5165\u65f6\u53d1\u73b0\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\uff08\u5f53\u524d\u6b63\u5728\u521b\u5efa\u7684bean\u88ab\u5176\u4ed6bean\u4f9d\u8d56\u4e86\uff09\uff0c\u5219\u4ece\u4e09\u7ea7\u7f13\u5b58\u4e2d\u62ff\u5230Lambda\u8868\u8fbe\u5f0f\uff0c\u5e76\u6267\u884cLambda\u8868\u8fbe\u5f0f\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u628a\u5f97\u5230\u7684\u5bf9\u8c61\u653e\u5165\u4e8c\u7ea7\u7f13\u5b58\uff08(\u5982\u679c\u5f53\u524dBean\u9700\u8981AOP\uff0c\u90a3\u4e48\u6267\u884clambda\u8868\u8fbe\u5f0f\uff0c\u5f97\u5230\u5c31\u662f\u5bf9\u5e94\u7684\u4ee3\u7406\u5bf9\u8c61\uff0c\u5982\u679c\u65e0\u9700AOP\uff0c\u5219\u76f4\u63a5\u5f97\u5230\u4e00\u4e2a\u539f\u59cb\u5bf9\u8c61)\uff09\u3002 \u5176\u5b9e\u8fd8\u8981\u4e00\u4e2a\u7f13\u5b58\uff0c\u5c31\u662f earlyProxyReferences \uff0c\u5b83\u7528\u6765\u8bb0\u5f55\u67d0\u4e2a\u539f\u59cb\u5bf9\u8c61\u662f\u5426\u8fdb\u884c\u8fc7AOP\u4e86\u3002","title":"\u603b\u7ed3"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/08Spring%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E6%BA%90%E7%A0%81/#singletonfactories","text":"\u4e3a\u4ec0\u4e48\u9700\u8981 singletonFactories \uff1f\u5047\u8bbe\u6ca1\u6709 singletonFactories \uff0c\u53ea\u6709 earlySingletonObjects \uff0cearlySingletonObjects\u662f\u4e8c\u7ea7\u7f13\u5b58\uff0c\u5b83\u5185\u90e8\u5b58\u50a8\u7684\u662f\u4e3a\u7ecf\u8fc7\u5b8c\u6574\u751f\u547d\u5468\u671f\u7684bean\u5bf9\u8c61\uff0cSpring\u539f\u6709\u7684\u6d41\u7a0b\u662f\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\u7684\u60c5\u51b5\u4e0b\uff1a \u5148\u4ecesingletonFactories\u4e2d\u62ff\u5230lambda\u8868\u8fbe\u5f0f\uff0c\u8fd9\u91cc\u80af\u5b9a\u662f\u80fd\u62ff\u5230\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2abean \u5b9e\u4f8b\u5316\u4e4b\u540e \uff0c \u4f9d\u8d56\u6ce8\u5165\u4e4b\u524d \uff0c\u5c31\u4f1a\u751f\u6210\u4e00\u4e2alambda\u8868\u793a\u653e\u5165singletonFactories\u4e2d \u6267\u884clambda\u8868\u8fbe\u5f0f\uff0c\u5f97\u5230\u7ed3\u679c\uff0c\u5c06\u7ed3\u679c\u653e\u5165earlySingletonObjects\u4e2d \u90a3\u5982\u679c\u6ca1\u6709singletonFactories\uff0c\u8be5\u5982\u4f55\u628a\u539f\u59cb\u5bf9\u8c61\u6216AOP\u4e4b\u540e\u7684\u4ee3\u7406\u5bf9\u8c61\u653e\u5165earlySingletonObjects\u4e2d\u5462\uff1f\u4f55\u65f6\u653e\u5165\u5462\uff1f \u200b \u9996\u5148\uff0c\u5c06\u539f\u59cb\u5bf9\u8c61\u6216AOP\u4e4b\u540e\u7684\u4ee3\u7406\u5bf9\u8c61\u653e\u5165earlySingletonObjects\u4e2d\u7684\u6709\u4e24\u79cd\uff1a \u5b9e\u4f8b\u5316\u4e4b\u540e\uff0c\u4f9d\u8d56\u6ce8\u5165\u4e4b\u524d\uff1a\u5982\u679c\u662f\u8fd9\u6837\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2abean\u800c\u8a00\uff0c\u90fd\u662f\u5728\u4f9d\u8d56\u6ce8\u5165\u4e4b\u524d\u4f1a\u53bb\u8fdb\u884cAOP\uff0c\u8fd9\u662f\u4e0d\u7b26\u5408bean\u751f\u547d\u5468\u671f\u6b65\u9aa4\u7684\u8bbe\u8ba1\u7684\u3002 \u771f\u6b63\u53d1\u73b0\u67d0\u4e2abean\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\u65f6\uff1a\u6309\u73b0\u5728Spring\u6e90\u7801\u7684\u6d41\u7a0b\u6765\u8bf4\uff0c\u5c31\u662fgetSingleton(String beanName, boolean allowEarlyReference)\u4e2d\uff0c\u662f\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u5224\u65ad\u51fa\u6765\u4e86\u5f53\u524d\u83b7\u53d6\u7684\u8fd9\u4e2abean\u5728\u521b\u5efa\u4e2d\uff0c\u5c31\u8868\u793a\u83b7\u53d6\u7684\u8fd9\u4e2abean\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\uff0c\u90a3\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u8be5\u5982\u4f55\u62ff\u5230\u539f\u59cb\u5bf9\u8c61\u5462\uff1f\u66f4\u52a0\u91cd\u8981\u7684\u662f\uff0c\u8be5\u5982\u4f55\u62ff\u5230AOP\u4e4b\u540e\u7684\u4ee3\u7406\u5bf9\u8c61\u5462\uff1f\u96be\u9053\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u53bb\u5faa\u73af\u8c03\u7528BeanPostProcessor\u7684\u521d\u59cb\u5316\u540e\u7684\u65b9\u6cd5\u5417\uff1f\u4e0d\u662f\u505a\u4e0d\u5230\uff0c\u4e0d\u592a\u5408\u9002\uff0c\u4ee3\u7801\u592a\u4e11\u3002 \u6700\u5173\u952e\u7684\u662f\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u8be5\u5982\u4f55\u62ff\u5230\u539f\u59cb\u5bf9\u8c61\u5462\uff1f \u8fd8\u662f\u5f97\u9700\u8981\u4e00\u4e2aMap\uff0c\u9884\u4e60\u628a\u8fd9\u4e2aBean\u5b9e\u4f8b\u5316\u540e\u7684\u5bf9\u8c61\u5b58\u5728\u8fd9\u4e2aMap\u4e2d\uff0c\u90a3\u8fd9\u6837\u7684\u8bdd\u8fd8\u4e0d\u5982\u76f4\u63a5\u7528\u7b2c\u4e00\u79cd\u65b9\u6848\uff0c\u4f46\u662f\u7b2c\u4e00\u79cd\u53c8\u76f4\u63a5\u6253\u7834\u4e86Bean\u751f\u547d\u5468\u671f\u7684\u8bbe\u8ba1\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u73b0\u5728Spring\u6240\u7528\u7684singletonFactories\uff0c\u4e3a\u4e86\u8c03\u548c\u4e0d\u540c\u7684\u60c5\u51b5\uff0c\u5728singletonFactories\u4e2d\u5b58\u7684\u662flambda\u8868\u8fbe\u5f0f\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u53ea\u6709\u5728\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\u7684\u60c5\u51b5\uff0c\u624d\u4f1a\u6267\u884clambda\u8868\u8fbe\u5f0f\uff0c\u624d\u4f1a\u8fdb\u884cAOP\uff0c\u4e5f\u5c31\u8bf4\u53ea\u6709\u5728\u51fa\u73b0\u4e86\u5faa\u73af\u4f9d\u8d56\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u6253\u7834Bean\u751f\u547d\u5468\u671f\u7684\u8bbe\u8ba1\uff0c\u5982\u679c\u4e00\u4e2aBean\u6ca1\u6709\u51fa\u73b0\u5faa\u73af\u4f9d\u8d56\uff0c\u90a3\u4e48\u5b83\u8fd8\u662f\u9075\u5b88\u4e86Bean\u7684\u751f\u547d\u5468\u671f\u7684\u8bbe\u8ba1\u7684\u3002","title":"\u53cd\u5411\u5206\u6790\u4e00\u4e0bsingletonFactories"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/09Spring%E4%B9%8B%E6%8E%A8%E6%96%AD%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/","text":"\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u6d41\u7a0b\u56fe \uff1a https://www.processon.com/view/link/5f97bc717d9c0806f291d7eb \u200b AutowiredAnnotationBeanPostProcessor\u4e2d\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u4e0d\u540c\u60c5\u51b5\u601d\u7ef4\u8111\u56fe\uff1a Spring\u4e2d\u7684\u4e00\u4e2abean\uff0c\u9700\u8981\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800c\u5b9e\u4f8b\u5316\u5c31\u9700\u8981\u7528\u5230\u6784\u9020\u65b9\u6cd5\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff1a \u8981\u4e48\u662f\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5 \u8981\u4e48\u662f\u6709\u53c2\u7684\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u53ea\u6709 \u4e00\u4e2a\u65e0\u53c2 \u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u5b9e\u4f8b\u5316\u5c31\u53ea\u80fd\u4f7f\u7528\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5\u4e86\u3002 \u5982\u679c\u53ea\u6709 \u4e00\u4e2a\u6709\u53c2 \u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u5b9e\u4f8b\u5316\u65f6\u80fd\u4f7f\u7528\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5\u5417\uff1f\u8981\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a \u4f7f\u7528AnnotationConfigApplicationContext\uff0c\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5\u8fdb\u884c\u5b9e\u4f8b\u5316\uff0c\u90a3\u4e48Spring\u4f1a\u6839\u636e\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\u4fe1\u606f\u53bb\u5bfb\u627ebean\uff0c\u7136\u540e\u4f20\u7ed9\u6784\u9020\u65b9\u6cd5 \u4f7f\u7528ClassPathXmlApplicationContext\uff0c\u8868\u793a\u4f7f\u7528XML\u7684\u65b9\u5f0f\u6765\u4f7f\u7528bean\uff0c\u8981\u4e48\u5728XML\u4e2d\u6307\u5b9a\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\u503c(\u624b\u52a8\u6307\u5b9a)\uff0c\u8981\u4e48\u914d\u7f6e autowire=constructor \u8ba9Spring \u81ea\u52a8 \u53bb\u5bfb\u627ebean\u505a\u4e3a\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\u3002 \u4e0a\u9762\u662f\u53ea\u6709\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5982\u679c\u6709\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\u5462\uff1f \u53c8\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff0c\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\u4e2d\u5b58\u4e0d\u5b58\u5728\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\u3002 \u5206\u6790\uff1a\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48Spring\u8fdb\u884c\u5b9e\u4f8b\u5316\u4e4b\u524d\uff0c\u8be5\u5982\u4f55\u53bb\u786e\u5b9a\u5230\u5e95\u7528\u54ea\u4e2a\u6784\u9020\u65b9\u6cd5\u5462\uff1f \u5982\u679c\u5f00\u53d1\u8005\u6307\u5b9a\u4e86\u60f3\u8981\u4f7f\u7528\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u5c31\u7528\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u5f00\u53d1\u8005\u6ca1\u6709\u6307\u5b9a\u60f3\u8981\u4f7f\u7528\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5219\u770b\u5f00\u53d1\u8005\u6709\u6ca1\u6709\u8ba9Spring\u81ea\u52a8\u53bb\u9009\u62e9\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u5f00\u53d1\u8005\u4e5f\u6ca1\u6709\u8ba9Spring\u81ea\u52a8\u53bb\u9009\u62e9\u6784\u9020\u65b9\u6cd5\uff0c\u5219Spring\u5229\u7528\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u5982\u679c\u6ca1\u6709\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u5219\u62a5\u9519 \u9488\u5bf9\u7b2c\u4e00\u70b9\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u4ec0\u4e48\u65b9\u5f0f\u6765\u6307\u5b9a\u4f7f\u7528\u54ea\u4e2a\u6784\u9020\u65b9\u6cd5\u5462\uff1f xml\u4e2d\u7684 \u6807\u7b7e\uff0c\u8fd9\u4e2a\u6807\u7b7e\u8868\u793a\u6784\u9020\u65b9\u6cd5\u53c2\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u786e\u5b9a\u60f3\u8981\u4f7f\u7528\u7684\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\u4e2a\u6570\uff0c\u4ece\u800c\u786e\u5b9a\u60f3\u8981\u4f7f\u7528\u7684\u6784\u9020\u65b9\u6cd5 \u901a\u8fc7@Autowired\u6ce8\u89e3\uff0c@Autowired\u6ce8\u89e3\u53ef\u4ee5\u5199\u5728\u6784\u9020\u65b9\u6cd5\u4e0a\uff0c\u6240\u4ee5\u54ea\u4e2a\u6784\u9020\u65b9\u6cd5\u4e0a\u5199\u4e86@Autowired\u6ce8\u89e3\uff0c\u8868\u793a\u5f00\u53d1\u8005\u60f3\u4f7f\u7528\u54ea\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u5f53\u7136\uff0c\u5b83\u548c\u7b2c\u4e00\u4e2a\u65b9\u5f0f\u7684\u4e0d\u540c\u70b9\u662f\uff0c\u901a\u8fc7xml\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u76f4\u63a5\u6307\u5b9a\u4e86\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\u503c\uff0c\u800c\u901a\u8fc7@Autowired\u6ce8\u89e3\u7684\u65b9\u5f0f\uff0c\u9700\u8981Spring\u901a\u8fc7byType+byName\u7684\u65b9\u5f0f\u53bb\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684bean\u4f5c\u4e3a\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\u503c \u518d\u6765\u770b\u7b2c\u4e8c\u70b9\uff0c\u5982\u679c\u5f00\u53d1\u8005\u6ca1\u6709\u6307\u5b9a\u60f3\u8981\u4f7f\u7528\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5219\u770b\u5f00\u53d1\u8005\u6709\u6ca1\u6709\u8ba9Spring\u81ea\u52a8\u53bb\u9009\u62e9\u6784\u9020\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u8fd9\u4e00\u70b9\uff0c\u53ea\u80fd\u7528\u5728ClassPathXmlApplicationContext\uff0c\u56e0\u4e3a\u901a\u8fc7AnnotationConfigApplicationContext\u6ca1\u6709\u529e\u6cd5\u53bb\u6307\u5b9a\u67d0\u4e2abean\u53ef\u4ee5\u81ea\u52a8\u53bb\u9009\u62e9\u6784\u9020\u65b9\u6cd5\uff0c\u800c\u901a\u8fc7ClassPathXmlApplicationContext\u53ef\u4ee5\u5728xml\u4e2d\u6307\u5b9a\u67d0\u4e2abean\u7684autowire\u4e3aconstructor\uff0c\u867d\u7136\u8fd9\u4e2a\u5c5e\u6027\u8868\u793a\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u81ea\u52a8\u6ce8\u5165\uff0c\u6240\u4ee5\u9700\u8981\u81ea\u52a8\u7684\u53bb\u9009\u62e9\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\u8fdb\u884c\u81ea\u52a8\u6ce8\u5165\uff0c\u56e0\u4e3a\u662f\u6784\u9020\u65b9\u6cd5\uff0c\u6240\u4ee5\u987a\u4fbf\u662f\u8fdb\u884c\u5b9e\u4f8b\u5316\u3002 \u5f53\u7136\uff0c\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\uff0c\u5c31\u662f\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\u4e0a\u5199\u4e86@Autowired\u6ce8\u89e3\uff0c\u90a3\u4e48\u6b64\u65f6Spring\u4f1a\u62a5\u9519\u3002 \u4f46\u662f\uff0c\u56e0\u4e3a@Autowired\u8fd8\u6709\u4e00\u4e2a\u5c5e\u6027required\uff0c\u9ed8\u8ba4\u4e3ature\uff0c\u6240\u4ee5\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u53ea\u6709\u80fd\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\u6807\u6ce8\u4e86@Autowired\u6216@Autowired\uff08required=true\uff09\uff0c\u6709\u591a\u4e2a\u4f1a\u62a5\u9519\u3002\u4f46\u662f\u53ef\u4ee5\u6709\u591a\u4e2a@Autowired\uff08required=false\uff09,\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9700\u8981Spring\u4ece\u8fd9\u4e9b\u6784\u9020\u65b9\u6cd5\u4e2d\u53bb\u81ea\u52a8\u9009\u62e9\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\u3002 \u6e90\u7801\u601d\u8def AbstractAutowireCapableBeanFactory\u7c7b\u4e2d\u7684createBeanInstance()\u65b9\u6cd5\u4f1a\u53bb\u521b\u5efa\u4e00\u4e2aBean\u5b9e\u4f8b \u6839\u636eBeanDefinition\u52a0\u8f7d\u7c7b\u5f97\u5230Class\u5bf9\u8c61 \u5982\u679cBeanDefinition\u7ed1\u5b9a\u4e86\u4e00\u4e2aSupplier\uff0c\u90a3\u5c31\u8c03\u7528Supplier\u7684get\u65b9\u6cd5\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\u5e76\u76f4\u63a5\u8fd4\u56de \u5982\u679cBeanDefinition\u4e2d\u5b58\u5728 factoryMethodName \uff0c\u90a3\u4e48\u5c31 \u8c03\u7528\u8be5\u5de5\u5382\u65b9\u6cd5 \u5f97\u5230\u4e00\u4e2abean\u5bf9\u8c61\u5e76\u8fd4\u56de \u5982\u679cBeanDefinition\u5df2\u7ecf\u81ea\u52a8\u6784\u9020\u8fc7\u4e86\uff0c\u90a3\u5c31\u8c03\u7528autowireConstructor()\u81ea\u52a8\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61 \u8c03\u7528SmartInstantiationAwareBeanPostProcessor\u7684determineCandidateConstructors()\u65b9\u6cd5\u5f97\u5230\u54ea\u4e9b\u6784\u9020\u65b9\u6cd5\u662f\u53ef\u4ee5\u7528\u7684 \u5982\u679c\u5b58\u5728\u53ef\u7528\u5f97\u6784\u9020\u65b9\u6cd5\uff0c\u6216\u8005\u5f53\u524dBeanDefinition\u7684autowired\u662fAUTOWIRE_CONSTRUCTOR\uff0c\u6216\u8005BeanDefinition\u4e2d\u6307\u5b9a\u4e86\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u6216\u8005\u521b\u5efaBean\u7684\u65f6\u5019\u6307\u5b9a\u4e86\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u90a3\u4e48\u5c31\u8c03\u7528 autowireConstructor() \u65b9\u6cd5\u81ea\u52a8\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61 \u6700\u540e\uff0c\u5982\u679c\u4e0d\u662f\u4e0a\u8ff0\u60c5\u51b5\uff0c\u5c31\u6839\u636e\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61 autowireConstructor() \u5148\u68c0\u67e5\u662f\u5426\u6307\u5b9a\u4e86\u5177\u4f53\u7684\u6784\u9020\u65b9\u6cd5\u548c\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u6216\u8005\u5728BeanDefinition\u4e2d\u7f13\u5b58\u4e86\u5177\u4f53\u7684\u6784\u9020\u65b9\u6cd5\u6216\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u5982\u679c\u5b58\u5728\u90a3\u4e48\u5219\u76f4\u63a5\u4f7f\u7528\u8be5\u6784\u9020\u65b9\u6cd5\u8fdb\u884c\u5b9e\u4f8b\u5316 \u5982\u679c\u6ca1\u6709\u786e\u5b9a\u7684\u6784\u9020\u65b9\u6cd5\u6216\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u90a3\u4e48 \u5982\u679c\u6ca1\u6709\u786e\u5b9a\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u5219\u627e\u51fa\u7c7b\u4e2d\u6240\u6709\u7684\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u76f4\u63a5\u4f7f\u7528\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\u8fdb\u884c\u5b9e\u4f8b\u5316 \u5982\u679c\u6709\u591a\u4e2a\u53ef\u7528\u7684\u6784\u9020\u65b9\u6cd5\u6216\u8005\u5f53\u524dBean\u9700\u8981\u81ea\u52a8\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u6ce8\u5165 \u6839\u636e\u6240\u6307\u5b9a\u7684\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u786e\u5b9a\u6240\u9700\u8981\u7684\u6700\u5c11\u7684\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\u7684\u4e2a\u6570 \u5bf9\u6240\u6709\u7684\u6784\u9020\u65b9\u6cd5\u8fdb\u884c\u6392\u5e8f\uff0c\u53c2\u6570\u4e2a\u6570\u591a\u7684\u5728\u524d\u9762 \u904d\u5386\u6bcf\u4e2a\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u4e0d\u662f\u8c03\u7528getBean\u65b9\u6cd5\u65f6\u6240\u6307\u5b9a\u7684\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u90a3\u4e48\u5219\u6839\u636e\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u7c7b\u578b\u627e\u503c \u5982\u679c\u65f6\u8c03\u7528getBean\u65b9\u6cd5\u65f6\u6240\u6307\u5b9a\u7684\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u5c31\u76f4\u63a5\u5229\u7528\u8fd9\u4e9b\u503c \u5982\u679c\u6839\u636e\u5f53\u524d\u6784\u9020\u65b9\u6cd5\u627e\u5230\u4e86\u5bf9\u5e94\u7684\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5\u5c31\u662f\u53ef\u7528\u7684\uff0c\u4f46\u662f\u4e0d\u4e00\u5b9a\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5\u5c31\u662f\u6700\u4f73\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u4f1a\u6d89\u53ca\u5230\u662f\u5426\u6709\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\u5339\u914d\u4e86\u540c\u6837\u7684\u503c\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u4f1a\u7528\u503c\u548c\u6784\u9020\u65b9\u6cd5\u7c7b\u578b\u8fdb\u884c\u5339\u914d\u7a0b\u5ea6\u7684\u6253\u5206\uff0c\u627e\u5230\u4e00\u4e2a\u6700\u5339\u914d\u7684 \u4e3a\u4ec0\u4e48\u5206\u8d8a\u5c11\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff1f \u4e3b\u8981\u662f\u8ba1\u7b97\u627e\u5230\u7684bean\u548c\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u7c7b\u578b\u5339\u914d\u7a0b\u5ea6\u6709\u591a\u9ad8\u3002 \u5047\u8bbebean\u7684\u7c7b\u578b\u4e3aA\uff0cA\u7684\u7236\u7c7b\u662fB\uff0cB\u7684\u7236\u7c7b\u662fC\uff0c\u540c\u65f6A\u5b9e\u73b0\u4e86\u63a5\u53e3D \u5982\u679c\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\u7c7b\u578b\u4e3aA\uff0c\u90a3\u4e48\u5b8c\u5168\u5339\u914d\uff0c\u5f97\u5206\u4e3a0 \u5982\u679c\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\u7c7b\u578b\u4e3aB\uff0c\u90a3\u4e48\u5f97\u5206\u4e3a2 \u5982\u679c\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\u7c7b\u578b\u4e3aC\uff0c\u90a3\u4e48\u5f97\u5206\u4e3a4 \u5982\u679c\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\u7c7b\u578b\u4e3aD\uff0c\u90a3\u4e48\u5f97\u5206\u4e3a1 \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\u8fdb\u884c\u6d4b\u8bd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 Object [] objects = new Object [] { new A ()}; // 0 System . out . println ( MethodInvoker . getTypeDifferenceWeight ( new Class [] { A . class }, objects )); // 2 System . out . println ( MethodInvoker . getTypeDifferenceWeight ( new Class [] { B . class }, objects )); // 4 System . out . println ( MethodInvoker . getTypeDifferenceWeight ( new Class [] { C . class }, objects )); // 1 System . out . println ( MethodInvoker . getTypeDifferenceWeight ( new Class [] { D . class }, objects )); \u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u8d8a\u5339\u914d\u5206\u6570\u8d8a\u4f4e\u3002 @Bean\u7684\u60c5\u51b5 \u9996\u5148\uff0cSpring\u4f1a\u628a@Bean\u4fee\u9970\u7684\u65b9\u6cd5\u89e3\u6790\u6210BeanDefinition\uff1a \u5982\u679c\u65b9\u6cd5\u662fstatic\u7684\uff0c\u90a3\u4e48\u89e3\u6790\u51fa\u6765\u7684BeanDefinition\u4e2d\uff1a factoryBeanName\u4e3aAppConfig\u6240\u5bf9\u5e94\u7684beanName\uff0c\u6bd4\u5982\"appConfig\" factoryMethodName\u4e3a\u5bf9\u5e94\u7684\u65b9\u6cd5\u540d\uff0c\u6bd4\u5982\"aService\" factoryClass\u4e3aAppConfig.class \u5982\u679c\u65b9\u6cd5\u4e0d\u662fstatic\u7684\uff0c\u90a3\u4e48\u89e3\u6790\u51fa\u6765\u7684BeanDefinition\u4e2d\uff1a factoryBeanName\u4e3anull factoryMethodName\u4e3a\u5bf9\u5e94\u7684\u65b9\u6cd5\u540d\uff0c\u6bd4\u5982\"aService\" factoryClass\u4e5f\u4e3aAppConfig.class \u5728\u7531@Bean\u751f\u6210\u7684BeanDefinition\u4e2d\uff0c\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u5c5e\u6027isFactoryMethodUnique\uff0c\u8868\u793afactoryMethod\u662f\u4e0d\u662f\u552f\u4e00\u7684\uff0c\u5728\u666e\u901a\u60c5\u51b5\u4e0b@Bean\u751f\u6210\u7684BeanDefinition\u7684isFactoryMethodUnique\u4e3atrue\uff0c\u4f46\u662f\u5982\u679c\u51fa\u73b0\u4e86\u65b9\u6cd5\u91cd\u8f7d\uff0c\u90a3\u4e48\u5c31\u662f\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 @Bean public static AService aService (){ return new AService (); } @Bean public AService aService ( BService bService ){ return new AService (); } \u867d\u7136\u6709\u4e24\u4e2a@Bean\uff0c\u4f46\u662f\u80af\u5b9a\u53ea\u4f1a\u751f\u6210\u4e00\u4e2aaService\u7684Bean\uff0c\u90a3\u4e48Spring\u5728\u5904\u7406@Bean\u65f6\uff0c\u4e5f\u53ea\u4f1a\u751f\u6210\u4e00\u4e2aaService\u7684BeanDefinition\uff0c\u6bd4\u5982Spring\u5148\u89e3\u6790\u5230\u7b2c\u4e00\u4e2a@Bean\uff0c\u4f1a\u751f\u6210\u4e00\u4e2aBeanDefinition\uff0c\u6b64\u65f6isFactoryMethodUnique\u4e3atrue\uff0c\u4f46\u662f\u89e3\u6790\u5230\u7b2c\u4e8c\u4e2a@Bean\u65f6\uff0c\u4f1a\u5224\u65ad\u51fa\u6765beanDefinitionMap\u4e2d\u5df2\u7ecf\u5b58\u5728\u4e00\u4e2aaService\u7684BeanDefinition\u4e86\uff0c\u90a3\u4e48\u4f1a\u628a\u4e4b\u524d\u7684\u8fd9\u4e2aBeanDefinition\u7684isFactoryMethodUnique\u4fee\u6539\u4e3afalse\uff0c\u5e76\u4e14\u4e0d\u4f1a\u751f\u6210\u65b0\u7684BeanDefinition\u4e86\u3002 \u200b \u5e76\u4e14\u540e\u7eed\u5728\u6839\u636eBeanDefinition\u521b\u5efaBean\u65f6\uff0c\u4f1a\u6839\u636eisFactoryMethodUnique\u6765\u64cd\u4f5c\uff0c\u5982\u679c\u4e3atrue\uff0c\u90a3\u5c31\u8868\u793a\u5f53\u524dBeanDefinition\u53ea\u5bf9\u5e94\u4e86\u4e00\u4e2a\u65b9\u6cd5\uff0c\u90a3\u4e5f\u5c31\u662f\u53ea\u80fd\u7528\u8fd9\u4e2a\u65b9\u6cd5\u6765\u521b\u5efaBean\u4e86\uff0c\u4f46\u662f\u5982\u679cisFactoryMethodUnique\u4e3afalse\uff0c\u90a3\u5c31\u8868\u793a\u5f53\u524dBeanDefition\u5bf9\u5e94\u4e86\u591a\u4e2a\u65b9\u6cd5\uff0c\u9700\u8981\u548c\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u7684\u903b\u8f91\u4e00\u6837\uff0c\u53bb\u9009\u62e9\u7528\u54ea\u4e2a\u65b9\u6cd5\u6765\u521b\u5efaBean\u3002","title":"9.Spring\u4e4b\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u6e90\u7801\u89e3\u6790"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/09Spring%E4%B9%8B%E6%8E%A8%E6%96%AD%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/#_1","text":"AbstractAutowireCapableBeanFactory\u7c7b\u4e2d\u7684createBeanInstance()\u65b9\u6cd5\u4f1a\u53bb\u521b\u5efa\u4e00\u4e2aBean\u5b9e\u4f8b \u6839\u636eBeanDefinition\u52a0\u8f7d\u7c7b\u5f97\u5230Class\u5bf9\u8c61 \u5982\u679cBeanDefinition\u7ed1\u5b9a\u4e86\u4e00\u4e2aSupplier\uff0c\u90a3\u5c31\u8c03\u7528Supplier\u7684get\u65b9\u6cd5\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\u5e76\u76f4\u63a5\u8fd4\u56de \u5982\u679cBeanDefinition\u4e2d\u5b58\u5728 factoryMethodName \uff0c\u90a3\u4e48\u5c31 \u8c03\u7528\u8be5\u5de5\u5382\u65b9\u6cd5 \u5f97\u5230\u4e00\u4e2abean\u5bf9\u8c61\u5e76\u8fd4\u56de \u5982\u679cBeanDefinition\u5df2\u7ecf\u81ea\u52a8\u6784\u9020\u8fc7\u4e86\uff0c\u90a3\u5c31\u8c03\u7528autowireConstructor()\u81ea\u52a8\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61 \u8c03\u7528SmartInstantiationAwareBeanPostProcessor\u7684determineCandidateConstructors()\u65b9\u6cd5\u5f97\u5230\u54ea\u4e9b\u6784\u9020\u65b9\u6cd5\u662f\u53ef\u4ee5\u7528\u7684 \u5982\u679c\u5b58\u5728\u53ef\u7528\u5f97\u6784\u9020\u65b9\u6cd5\uff0c\u6216\u8005\u5f53\u524dBeanDefinition\u7684autowired\u662fAUTOWIRE_CONSTRUCTOR\uff0c\u6216\u8005BeanDefinition\u4e2d\u6307\u5b9a\u4e86\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u6216\u8005\u521b\u5efaBean\u7684\u65f6\u5019\u6307\u5b9a\u4e86\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u90a3\u4e48\u5c31\u8c03\u7528 autowireConstructor() \u65b9\u6cd5\u81ea\u52a8\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61 \u6700\u540e\uff0c\u5982\u679c\u4e0d\u662f\u4e0a\u8ff0\u60c5\u51b5\uff0c\u5c31\u6839\u636e\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61","title":"\u6e90\u7801\u601d\u8def"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/09Spring%E4%B9%8B%E6%8E%A8%E6%96%AD%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/#autowireconstructor","text":"\u5148\u68c0\u67e5\u662f\u5426\u6307\u5b9a\u4e86\u5177\u4f53\u7684\u6784\u9020\u65b9\u6cd5\u548c\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u6216\u8005\u5728BeanDefinition\u4e2d\u7f13\u5b58\u4e86\u5177\u4f53\u7684\u6784\u9020\u65b9\u6cd5\u6216\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u5982\u679c\u5b58\u5728\u90a3\u4e48\u5219\u76f4\u63a5\u4f7f\u7528\u8be5\u6784\u9020\u65b9\u6cd5\u8fdb\u884c\u5b9e\u4f8b\u5316 \u5982\u679c\u6ca1\u6709\u786e\u5b9a\u7684\u6784\u9020\u65b9\u6cd5\u6216\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u90a3\u4e48 \u5982\u679c\u6ca1\u6709\u786e\u5b9a\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u5219\u627e\u51fa\u7c7b\u4e2d\u6240\u6709\u7684\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u76f4\u63a5\u4f7f\u7528\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\u8fdb\u884c\u5b9e\u4f8b\u5316 \u5982\u679c\u6709\u591a\u4e2a\u53ef\u7528\u7684\u6784\u9020\u65b9\u6cd5\u6216\u8005\u5f53\u524dBean\u9700\u8981\u81ea\u52a8\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u6ce8\u5165 \u6839\u636e\u6240\u6307\u5b9a\u7684\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u786e\u5b9a\u6240\u9700\u8981\u7684\u6700\u5c11\u7684\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\u7684\u4e2a\u6570 \u5bf9\u6240\u6709\u7684\u6784\u9020\u65b9\u6cd5\u8fdb\u884c\u6392\u5e8f\uff0c\u53c2\u6570\u4e2a\u6570\u591a\u7684\u5728\u524d\u9762 \u904d\u5386\u6bcf\u4e2a\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u4e0d\u662f\u8c03\u7528getBean\u65b9\u6cd5\u65f6\u6240\u6307\u5b9a\u7684\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u90a3\u4e48\u5219\u6839\u636e\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u7c7b\u578b\u627e\u503c \u5982\u679c\u65f6\u8c03\u7528getBean\u65b9\u6cd5\u65f6\u6240\u6307\u5b9a\u7684\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u5c31\u76f4\u63a5\u5229\u7528\u8fd9\u4e9b\u503c \u5982\u679c\u6839\u636e\u5f53\u524d\u6784\u9020\u65b9\u6cd5\u627e\u5230\u4e86\u5bf9\u5e94\u7684\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5\u5c31\u662f\u53ef\u7528\u7684\uff0c\u4f46\u662f\u4e0d\u4e00\u5b9a\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5\u5c31\u662f\u6700\u4f73\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u4f1a\u6d89\u53ca\u5230\u662f\u5426\u6709\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\u5339\u914d\u4e86\u540c\u6837\u7684\u503c\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u4f1a\u7528\u503c\u548c\u6784\u9020\u65b9\u6cd5\u7c7b\u578b\u8fdb\u884c\u5339\u914d\u7a0b\u5ea6\u7684\u6253\u5206\uff0c\u627e\u5230\u4e00\u4e2a\u6700\u5339\u914d\u7684","title":"autowireConstructor()"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/09Spring%E4%B9%8B%E6%8E%A8%E6%96%AD%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/#_2","text":"\u4e3b\u8981\u662f\u8ba1\u7b97\u627e\u5230\u7684bean\u548c\u6784\u9020\u65b9\u6cd5\u53c2\u6570\u7c7b\u578b\u5339\u914d\u7a0b\u5ea6\u6709\u591a\u9ad8\u3002 \u5047\u8bbebean\u7684\u7c7b\u578b\u4e3aA\uff0cA\u7684\u7236\u7c7b\u662fB\uff0cB\u7684\u7236\u7c7b\u662fC\uff0c\u540c\u65f6A\u5b9e\u73b0\u4e86\u63a5\u53e3D \u5982\u679c\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\u7c7b\u578b\u4e3aA\uff0c\u90a3\u4e48\u5b8c\u5168\u5339\u914d\uff0c\u5f97\u5206\u4e3a0 \u5982\u679c\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\u7c7b\u578b\u4e3aB\uff0c\u90a3\u4e48\u5f97\u5206\u4e3a2 \u5982\u679c\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\u7c7b\u578b\u4e3aC\uff0c\u90a3\u4e48\u5f97\u5206\u4e3a4 \u5982\u679c\u6784\u9020\u65b9\u6cd5\u7684\u53c2\u6570\u7c7b\u578b\u4e3aD\uff0c\u90a3\u4e48\u5f97\u5206\u4e3a1 \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\u8fdb\u884c\u6d4b\u8bd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 Object [] objects = new Object [] { new A ()}; // 0 System . out . println ( MethodInvoker . getTypeDifferenceWeight ( new Class [] { A . class }, objects )); // 2 System . out . println ( MethodInvoker . getTypeDifferenceWeight ( new Class [] { B . class }, objects )); // 4 System . out . println ( MethodInvoker . getTypeDifferenceWeight ( new Class [] { C . class }, objects )); // 1 System . out . println ( MethodInvoker . getTypeDifferenceWeight ( new Class [] { D . class }, objects )); \u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u8d8a\u5339\u914d\u5206\u6570\u8d8a\u4f4e\u3002","title":"\u4e3a\u4ec0\u4e48\u5206\u8d8a\u5c11\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff1f"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/09Spring%E4%B9%8B%E6%8E%A8%E6%96%AD%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/#bean","text":"\u9996\u5148\uff0cSpring\u4f1a\u628a@Bean\u4fee\u9970\u7684\u65b9\u6cd5\u89e3\u6790\u6210BeanDefinition\uff1a \u5982\u679c\u65b9\u6cd5\u662fstatic\u7684\uff0c\u90a3\u4e48\u89e3\u6790\u51fa\u6765\u7684BeanDefinition\u4e2d\uff1a factoryBeanName\u4e3aAppConfig\u6240\u5bf9\u5e94\u7684beanName\uff0c\u6bd4\u5982\"appConfig\" factoryMethodName\u4e3a\u5bf9\u5e94\u7684\u65b9\u6cd5\u540d\uff0c\u6bd4\u5982\"aService\" factoryClass\u4e3aAppConfig.class \u5982\u679c\u65b9\u6cd5\u4e0d\u662fstatic\u7684\uff0c\u90a3\u4e48\u89e3\u6790\u51fa\u6765\u7684BeanDefinition\u4e2d\uff1a factoryBeanName\u4e3anull factoryMethodName\u4e3a\u5bf9\u5e94\u7684\u65b9\u6cd5\u540d\uff0c\u6bd4\u5982\"aService\" factoryClass\u4e5f\u4e3aAppConfig.class \u5728\u7531@Bean\u751f\u6210\u7684BeanDefinition\u4e2d\uff0c\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u5c5e\u6027isFactoryMethodUnique\uff0c\u8868\u793afactoryMethod\u662f\u4e0d\u662f\u552f\u4e00\u7684\uff0c\u5728\u666e\u901a\u60c5\u51b5\u4e0b@Bean\u751f\u6210\u7684BeanDefinition\u7684isFactoryMethodUnique\u4e3atrue\uff0c\u4f46\u662f\u5982\u679c\u51fa\u73b0\u4e86\u65b9\u6cd5\u91cd\u8f7d\uff0c\u90a3\u4e48\u5c31\u662f\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 @Bean public static AService aService (){ return new AService (); } @Bean public AService aService ( BService bService ){ return new AService (); } \u867d\u7136\u6709\u4e24\u4e2a@Bean\uff0c\u4f46\u662f\u80af\u5b9a\u53ea\u4f1a\u751f\u6210\u4e00\u4e2aaService\u7684Bean\uff0c\u90a3\u4e48Spring\u5728\u5904\u7406@Bean\u65f6\uff0c\u4e5f\u53ea\u4f1a\u751f\u6210\u4e00\u4e2aaService\u7684BeanDefinition\uff0c\u6bd4\u5982Spring\u5148\u89e3\u6790\u5230\u7b2c\u4e00\u4e2a@Bean\uff0c\u4f1a\u751f\u6210\u4e00\u4e2aBeanDefinition\uff0c\u6b64\u65f6isFactoryMethodUnique\u4e3atrue\uff0c\u4f46\u662f\u89e3\u6790\u5230\u7b2c\u4e8c\u4e2a@Bean\u65f6\uff0c\u4f1a\u5224\u65ad\u51fa\u6765beanDefinitionMap\u4e2d\u5df2\u7ecf\u5b58\u5728\u4e00\u4e2aaService\u7684BeanDefinition\u4e86\uff0c\u90a3\u4e48\u4f1a\u628a\u4e4b\u524d\u7684\u8fd9\u4e2aBeanDefinition\u7684isFactoryMethodUnique\u4fee\u6539\u4e3afalse\uff0c\u5e76\u4e14\u4e0d\u4f1a\u751f\u6210\u65b0\u7684BeanDefinition\u4e86\u3002 \u200b \u5e76\u4e14\u540e\u7eed\u5728\u6839\u636eBeanDefinition\u521b\u5efaBean\u65f6\uff0c\u4f1a\u6839\u636eisFactoryMethodUnique\u6765\u64cd\u4f5c\uff0c\u5982\u679c\u4e3atrue\uff0c\u90a3\u5c31\u8868\u793a\u5f53\u524dBeanDefinition\u53ea\u5bf9\u5e94\u4e86\u4e00\u4e2a\u65b9\u6cd5\uff0c\u90a3\u4e5f\u5c31\u662f\u53ea\u80fd\u7528\u8fd9\u4e2a\u65b9\u6cd5\u6765\u521b\u5efaBean\u4e86\uff0c\u4f46\u662f\u5982\u679cisFactoryMethodUnique\u4e3afalse\uff0c\u90a3\u5c31\u8868\u793a\u5f53\u524dBeanDefition\u5bf9\u5e94\u4e86\u591a\u4e2a\u65b9\u6cd5\uff0c\u9700\u8981\u548c\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u7684\u903b\u8f91\u4e00\u6837\uff0c\u53bb\u9009\u62e9\u7528\u54ea\u4e2a\u65b9\u6cd5\u6765\u521b\u5efaBean\u3002","title":"@Bean\u7684\u60c5\u51b5"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/10Spring%E4%B9%8B%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/","text":"\u6709\u9053\u4e91\u94fe\u63a5\uff1ahttp://note.youdao.com/noteshare?id=e6ce24e9411eab5445612286d641eccd&sub=29A52DF2ACB64C4D974730C75D409180 \u524d\u8a00\u5206\u6790 \u901a\u5e38\uff0c\u6211\u4eec\u8bf4\u7684Spring\u542f\u52a8\uff0c\u5c31\u662f\u6784\u9020ApplicationContext\u5bf9\u8c61\u4ee5\u53ca\u8c03\u7528refresh()\u65b9\u6cd5\u7684\u8fc7\u7a0b\u3002 \u200b \u9996\u5148\uff0cSpring\u542f\u52a8\u8fc7\u7a0b\u4e3b\u8981\u505a\u4e86\u8fd9\u4e48\u51e0\u4ef6\u4e8b\u60c5\uff1a \u6784\u9020\u4e00\u4e2aBeanFactory\u5bf9\u8c61 \u89e3\u6790\u914d\u7f6e\u7c7b\uff0c\u5f97\u5230BeanDefinition\uff0c\u5e76\u6ce8\u518c\u5230BeanFactory\u4e2d \u89e3\u6790@ComponentScan\uff0c\u6b64\u65f6\u5c31\u4f1a\u5b8c\u6210\u626b\u63cf \u89e3\u6790@Import \u89e3\u6790@Bean ... \u56e0\u4e3aApplicationContext\u8fd8\u652f\u6301\u56fd\u9645\u5316\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u521d\u59cb\u5316MessageSource\u5bf9\u8c61 \u56e0\u4e3aApplicationContext\u8fd8\u652f\u6301\u4e8b\u4ef6\u673a\u5236\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u521d\u59cb\u5316ApplicationEventMulticaster\u5bf9\u8c61 \u628a\u7528\u6237\u5b9a\u4e49\u7684ApplicationListener\u5bf9\u8c61\u6dfb\u52a0\u5230ApplicationContext\u4e2d\uff0c\u7b49Spring\u542f\u52a8\u5b8c\u4e86\u5c31\u8981\u53d1\u5e03\u4e8b\u4ef6\u4e86 \u521b\u5efa \u975e\u61d2\u52a0\u8f7d\u7684\u5355\u4f8b Bean\u5bf9\u8c61\uff0c\u5e76\u5b58\u5728BeanFactory\u7684\u5355\u4f8b\u6c60\u4e2d\u3002 \u8c03\u7528Lifecycle Bean\u7684start()\u65b9\u6cd5 \u53d1\u5e03 ContextRefreshedEvent \u4e8b\u4ef6 \u7531\u4e8eSpring\u542f\u52a8\u8fc7\u7a0b\u4e2d\u8981\u521b\u5efa\u975e\u61d2\u52a0\u8f7d\u7684\u5355\u4f8bBean\u5bf9\u8c61\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u7528\u5230BeanPostProcessor\uff0c\u6240\u4ee5Spring\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\u5c31\u9700\u8981\u505a\u4e24\u4ef6\u4e8b\uff1a \u751f\u6210\u9ed8\u8ba4\u7684BeanPostProcessor\u5bf9\u8c61\uff0c\u5e76\u6dfb\u52a0\u5230BeanFactory\u4e2d AutowiredAnnotationBeanPostProcessor\uff1a\u5904\u7406@Autowired\u3001@Value CommonAnnotationBeanPostProcessor\uff1a\u5904\u7406@Resource\u3001@PostConstruct\u3001@PreDestroy ApplicationContextAwareProcessor\uff1a\u5904\u7406ApplicationContextAware\u7b49\u56de\u8c03 \u627e\u5230\u5916\u90e8\u7528\u6237\u6240\u5b9a\u4e49\u7684BeanPostProcessor\u5bf9\u8c61\uff08\u7c7b\u578b\u4e3aBeanPostProcessor\u7684Bean\u5bf9\u8c61\uff09\uff0c\u5e76\u6dfb\u52a0\u5230BeanFactory\u4e2d BeanFactoryPostProcessor BeanPostProcessor\u8868\u793aBean\u7684\u540e\u7f6e\u5904\u7406\u5668\uff0c\u662f\u7528\u6765\u5bf9Bean\u8fdb\u884c\u52a0\u5de5\u7684\uff0c\u7c7b\u4f3c\u7684\uff0cBeanFactoryPostProcessor\u7406\u89e3\u4e3aBeanFactory\u7684\u540e\u7f6e\u5904\u7406\u5668\uff0c\u7528\u6765\u7528\u5bf9BeanFactory\u8fdb\u884c\u52a0\u5de5\u7684\u3002 \u200b Spring\u652f\u6301\u7528\u6237\u5b9a\u4e49BeanFactoryPostProcessor\u7684\u5b9e\u73b0\u7c7bBean\uff0c\u6765\u5bf9BeanFactory\u8fdb\u884c\u52a0\u5de5\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 @Component public class ZhouyuBeanFactoryPostProcessor implements BeanFactoryPostProcessor { @Override public void postProcessBeanFactory ( ConfigurableListableBeanFactory beanFactory ) throws BeansException { BeanDefinition beanDefinition = beanFactory . getBeanDefinition ( \"userService\" ); beanDefinition . setAutowireCandidate ( false ); } } \u4ee5\u4e0a\u4ee3\u7801\uff0c\u5c31\u5229\u7528\u4e86BeanFactoryPostProcessor\u6765\u62ff\u5230BeanFactory\uff0c\u7136\u540e\u83b7\u53d6BeanFactory\u5185\u7684\u67d0\u4e2aBeanDefinition\u5bf9\u8c61\u5e76\u8fdb\u884c\u4fee\u6539\uff0c\u6ce8\u610f\u8fd9\u4e00\u6b65\u662f\u53d1\u751f\u5728Spring\u542f\u52a8\u65f6\uff0c\u521b\u5efa\u5355\u4f8bBean\u4e4b\u524d\u7684\uff0c\u6240\u4ee5\u6b64\u65f6\u5bf9BeanDefinition\u5c31\u884c\u4fee\u6539\u662f\u4f1a\u751f\u6548\u7684\u3002 \u200b \u6ce8\u610f\uff1a\u5728ApplicationContext\u5185\u90e8\u6709\u4e00\u4e2a\u6838\u5fc3\u7684DefaultListableBeanFactory\uff0c\u5b83\u5b9e\u73b0\u4e86ConfigurableListableBeanFactory\u548cBeanDefinitionRegistry\u63a5\u53e3\uff0c\u6240\u4ee5ApplicationContext\u548cDefaultListableBeanFactory\u662f\u53ef\u4ee5\u6ce8\u518cBeanDefinition\u7684\uff0c\u4f46\u662fConfigurableListableBeanFactory\u662f\u4e0d\u80fd\u6ce8\u518cBeanDefinition\u7684\uff0c\u53ea\u80fd\u83b7\u53d6BeanDefinition\uff0c\u7136\u540e\u505a\u4fee\u6539\u3002 \u6240\u4ee5Spring\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2aBeanFactoryPostProcessor\u7684\u5b50\u63a5\u53e3\uff1a BeanDefinitionRegistryPostProcessor \u200b BeanDefinitionRegistryPostProcessor 1 2 3 4 5 public interface BeanDefinitionRegistryPostProcessor extends BeanFactoryPostProcessor { void postProcessBeanDefinitionRegistry ( BeanDefinitionRegistry registry ) throws BeansException ; } \u6211\u4eec\u53ef\u4ee5\u770b\u5230BeanDefinitionRegistryPostProcessor\u7ee7\u627f\u4e86BeanFactoryPostProcessor\u63a5\u53e3\uff0c\u5e76\u65b0\u589e\u4e86\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6ce8\u610f\u65b9\u6cd5\u7684\u53c2\u6570\u4e3aBeanDefinitionRegistry\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u7c7b\u6765\u5b9e\u73b0BeanDefinitionRegistryPostProcessor\uff0c\u90a3\u4e48\u5728postProcessBeanDefinitionRegistry()\u65b9\u6cd5\u4e2d\u5c31\u53ef\u4ee5\u6ce8\u518cBeanDefinition\u4e86\u3002\u6bd4\u5982\uff1a \u200b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @Component public class ZhouyuBeanDefinitionRegistryPostProcessor implements BeanDefinitionRegistryPostProcessor { @Override public void postProcessBeanDefinitionRegistry ( BeanDefinitionRegistry registry ) throws BeansException { AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder . genericBeanDefinition (). getBeanDefinition (); beanDefinition . setBeanClass ( User . class ); registry . registerBeanDefinition ( \"user\" , beanDefinition ); } @Override public void postProcessBeanFactory ( ConfigurableListableBeanFactory beanFactory ) throws BeansException { BeanDefinition beanDefinition = beanFactory . getBeanDefinition ( \"userService\" ); beanDefinition . setAutowireCandidate ( false ); } } \u5982\u4f55\u7406\u89e3refresh()\uff1f 1 2 3 4 5 6 7 8 9 10 11 /** * Load or refresh the persistent representation of the configuration, * which might an XML file, properties file, or relational database schema. * <p>As this is a startup method, it should destroy already created singletons * if it fails, to avoid dangling resources. In other words, after invocation * of that method, either all or no singletons at all should be instantiated. * @throws BeansException if the bean factory could not be initialized * @throws IllegalStateException if already initialized and multiple refresh * attempts are not supported */ void refresh () throws BeansException , IllegalStateException ; \u8fd9\u662fConfigurableApplicationContext\u63a5\u53e3\u4e0arefresh()\u65b9\u6cd5\u7684\u6ce8\u91ca\uff0c\u610f\u601d\u662f\uff1a\u52a0\u8f7d\u6216\u5237\u65b0\u6301\u4e45\u5316\u7684\u914d\u7f6e\uff0c\u53ef\u80fd\u662fXML\u6587\u4ef6\u3001\u5c5e\u6027\u6587\u4ef6\u6216\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u7684\u3002\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u542f\u52a8\u65b9\u6cd5\uff0c\u5982\u679c\u5931\u8d25\uff0c\u5b83\u5e94\u8be5\u9500\u6bc1\u5df2\u7ecf\u521b\u5efa\u7684\u5355\u4f8b\uff0c\u4ee5\u907f\u514d\u6682\u7528\u8d44\u6e90\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u8c03\u7528\u8be5\u65b9\u6cd5\u4e4b\u540e\uff0c\u5e94\u8be5\u5b9e\u4f8b\u5316\u6240\u6709\u7684\u5355\u4f8b\uff0c\u6216\u8005\u6839\u672c\u4e0d\u5b9e\u4f8b\u5316\u5355\u4f8b \u3002 \u6709\u4e2a\u7406\u5ff5\u9700\u8981\u6ce8\u610f\uff1a ApplicationContext\u5173\u95ed\u4e4b\u540e\u4e0d\u4ee3\u8868JVM\u4e5f\u5173\u95ed\u4e86\uff0cApplicationContext\u662f\u5c5e\u4e8eJVM\u7684\uff0c\u8bf4\u767d\u4e86ApplicationContext\u4e5f\u662fJVM\u4e2d\u7684\u4e00\u4e2a\u5bf9\u8c61\u3002 \u200b \u5728Spring\u7684\u8bbe\u8ba1\u4e2d\uff0c\u4e5f\u63d0\u4f9b\u53ef\u4ee5\u5237\u65b0\u7684ApplicationContext\u548c\u4e0d\u53ef\u4ee5\u5237\u65b0\u7684ApplicationContext\u3002\u6bd4\u5982\uff1a 1 AbstractRefreshableApplicationContext extends AbstractApplicationContext \u5c31\u662f\u53ef\u4ee5\u5237\u65b0\u7684 1 GenericApplicationContext extends AbstractApplicationContext \u5c31\u662f\u4e0d\u53ef\u4ee5\u5237\u65b0\u7684\u3002 AnnotationConfigApplicationContext\u7ee7\u627f\u7684\u662fGenericApplicationContext\uff0c\u6240\u4ee5\u5b83\u662f\u4e0d\u80fd\u5237\u65b0\u7684\u3002 AnnotationConfigWebApplicationContext\u7ee7\u627f\u7684\u662fAbstractRefreshableWebApplicationContext\uff0c\u6240\u4ee5\u5b83\u662f\u53ef\u4ee5\u5237\u7684\u3002 \u4e0a\u9762\u8bf4\u7684 \u4e0d\u80fd\u5237\u65b0\u662f\u6307\u4e0d\u80fd\u91cd\u590d\u5237\u65b0\uff0c\u53ea\u80fd\u8c03\u7528\u4e00\u6b21refresh\u65b9\u6cd5\uff0c\u7b2c\u4e8c\u6b21\u65f6\u4f1a\u62a5\u9519\u3002 refresh()\u5e95\u5c42\u539f\u7406\u6d41\u7a0b \u5e95\u5c42\u539f\u7406\u6d41\u7a0b\u56fe\uff1ahttps://www.processon.com/view/link/5f60a7d71e08531edf26a919 \u4e0b\u9762\u4ee5AnnotationConfigApplicationContext\u4e3a\u4f8b\u5b50\uff0c\u6765\u4ecb\u7ecdrefresh\u7684\u5e95\u5c42\u539f\u7406\u3002 \u5728\u8c03\u7528AnnotationConfigApplicationContext\u7684\u6784\u9020\u65b9\u6cd5\u4e4b\u524d\uff0c\u4f1a\u8c03\u7528\u7236\u7c7bGenericApplicationContext\u7684\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u4f1a\u6784\u9020\u4e00\u4e2aBeanFactory\uff0c\u4e3a DefaultListableBeanFactory \u3002 \u6784\u9020AnnotatedBeanDefinitionReader\uff08 \u4e3b\u8981\u4f5c\u7528\u6dfb\u52a0\u4e00\u4e9b\u57fa\u7840\u7684PostProcessor\uff0c\u540c\u65f6\u53ef\u4ee5\u901a\u8fc7reader\u8fdb\u884cBeanDefinition\u7684\u6ce8\u518c \uff09\uff0c\u540c\u65f6\u5bf9BeanFactory\u8fdb\u884c\u8bbe\u7f6e\u548c\u6dfb\u52a0 PostProcessor \uff08\u540e\u7f6e\u5904\u7406\u5668\uff09 \u8bbe\u7f6edependencyComparator\uff1aAnnotationAwareOrderComparator\uff0c\u5b83\u662f\u4e00\u4e2aComparator\uff0c\u662f\u7528\u6765\u8fdb\u884c\u6392\u5e8f\u7684\uff0c\u4f1a\u83b7\u53d6\u67d0\u4e2a\u5bf9\u8c61\u4e0a\u7684 Order\u6ce8\u89e3 \u6216\u8005\u901a\u8fc7\u5b9e\u73b0 Ordered\u63a5\u53e3 \u6240\u5b9a\u4e49\u7684\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u5728\u65e5\u5e38\u5f00\u53d1\u4e2d\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u7c7b\u6765\u8fdb\u884c\u6392\u5e8f\u3002 \u8bbe\u7f6eautowireCandidateResolver\uff1aContextAnnotationAutowireCandidateResolver\uff0c\u7528\u6765\u89e3\u6790\u67d0\u4e2aBean\u80fd\u4e0d\u80fd\u8fdb\u884c\u81ea\u52a8\u6ce8\u5165\uff0c\u6bd4\u5982\u67d0\u4e2aBean\u7684autowireCandidate\u5c5e\u6027\u662f\u5426\u7b49\u4e8etrue \u5411BeanFactory\u4e2d\u6dfb\u52a0 ConfigurationClassPostProcessor \u5bf9\u5e94\u7684BeanDefinition\uff0c\u5b83\u662f\u4e00\u4e2aBeanDefinitionRegistryPostProcessor\uff0c\u5e76\u4e14\u5b9e\u73b0\u4e86PriorityOrdered\u63a5\u53e3 \u5411BeanFactory\u4e2d\u6dfb\u52a0 AutowiredAnnotationBeanPostProcessor \u5bf9\u5e94\u7684BeanDefinition\uff0c\u5b83\u662f\u4e00\u4e2aInstantiationAwareBeanPostProcessorAdapter\uff0cMergedBeanDefinitionPostProcessor \u5411BeanFactory\u4e2d\u6dfb\u52a0CommonAnnotationBeanPostProcessor\u5bf9\u5e94\u7684BeanDefinition\uff0c\u5b83\u662f\u4e00\u4e2aInstantiationAwareBeanPostProcessor\uff0cInitDestroyAnnotationBeanPostProcessor \u5411BeanFactory\u4e2d\u6dfb\u52a0EventListenerMethodProcessor\u5bf9\u5e94\u7684BeanDefinition\uff0c\u5b83\u662f\u4e00\u4e2aBeanFactoryPostProcessor\uff0cSmartInitializingSingleton \u5411BeanFactory\u4e2d\u6dfb\u52a0DefaultEventListenerFactory\u5bf9\u5e94\u7684BeanDefinition\uff0c\u5b83\u662f\u4e00\u4e2aEventListenerFactory \u6784\u9020ClassPathBeanDefinitionScanner\uff08 \u4e3b\u8981\u4f5c\u7528\u53ef\u4ee5\u7528\u6765\u626b\u63cf\u5f97\u5230\u5e76\u6ce8\u518cBeanDefinition \uff09\uff0c\u540c\u65f6\u8fdb\u884c\u8bbe\u7f6e\uff1a \u8bbe\u7f6e this.includeFilters = AnnotationTypeFilter(Component.class) \u8bbe\u7f6eenvironment \u8bbe\u7f6eresourceLoader \u5229\u7528reader\u6ce8\u518cAppConfig\u4e3aBeanDefinition\uff0c\u7c7b\u578b\u4e3aAnnotatedGenericBeanDefinition \u63a5\u4e0b\u6765\u5c31\u662f\u8c03\u7528refresh\u65b9\u6cd5 prepareRefresh()\uff1a \u8bb0\u5f55\u542f\u52a8\u65f6\u95f4 \u53ef\u4ee5\u5141\u8bb8\u5b50\u5bb9\u5668\u8bbe\u7f6e\u4e00\u4e9b\u5185\u5bb9\u5230Environment\u4e2d \u9a8c\u8bc1Environment\u4e2d\u662f\u5426\u5305\u62ec\u4e86\u5fc5\u987b\u8981\u6709\u7684\u5c5e\u6027 obtainFreshBeanFactory()\uff1a\u8fdb\u884cBeanFactory\u7684refresh\uff0c\u5728\u8fd9\u91cc\u4f1a\u53bb\u8c03\u7528\u5b50\u7c7b\u7684refreshBeanFactory\u65b9\u6cd5\uff0c\u5177\u4f53\u5b50\u7c7b\u662f\u600e\u4e48\u5237\u65b0\u7684\u5f97\u770b\u5b50\u7c7b\uff0c\u7136\u540e\u518d\u8c03\u7528\u5b50\u7c7b\u7684getBeanFactory\u65b9\u6cd5\uff0c\u91cd\u65b0\u5f97\u5230\u4e00\u4e2aBeanFactory prepareBeanFactory(beanFactory)\uff1a \u8bbe\u7f6ebeanFactory\u7684\u7c7b\u52a0\u8f7d\u5668 \u8bbe\u7f6e\u8868\u8fbe\u5f0f\u89e3\u6790\u5668\uff1aStandardBeanExpressionResolver\uff0c\u7528\u6765\u89e3\u6790Spring\u4e2d\u7684\u8868\u8fbe\u5f0f \u6dfb\u52a0PropertyEditorRegistrar\uff1aResourceEditorRegistrar\uff0cPropertyEditor\u7c7b\u578b\u8f6c\u5316\u5668\u6ce8\u518c\u5668\uff0c\u7528\u6765\u6ce8\u518c\u4e00\u4e9b\u9ed8\u8ba4\u7684PropertyEditor \u6dfb\u52a0\u4e00\u4e2aBean\u7684\u540e\u7f6e\u5904\u7406\u5668\uff1aApplicationContextAwareProcessor\uff0c\u662f\u4e00\u4e2aBeanPostProcessor\uff0c\u7528\u6765\u6267\u884cEnvironmentAware\u3001ApplicationEventPublisherAware\u7b49\u56de\u8c03\u65b9\u6cd5 \u6dfb\u52a0 ignoredDependencyInterface \uff1a\u53ef\u4ee5\u5411\u8fd9\u4e2a\u5c5e\u6027\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u63a5\u53e3\uff0c\u5982\u679c\u67d0\u4e2a\u7c7b\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\uff0c\u5e76\u4e14\u8fd9\u4e2a\u7c7b\u4e2d\u7684\u67d0\u4e9bset\u65b9\u6cd5\u5728\u63a5\u53e3\u4e2d\u4e5f\u5b58\u5728\uff0c\u90a3\u4e48\u8fd9\u4e2aset\u65b9\u6cd5\u5728\u81ea\u52a8\u6ce8\u5165\u7684\u65f6\u5019\u662f\u4e0d\u4f1a\u6267\u884c\u7684\uff0c\u6bd4\u5982EnvironmentAware\u8fd9\u4e2a\u63a5\u53e3\uff0c\u5982\u679c\u67d0\u4e2a\u7c7b\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u5b9e\u73b0\u5b83\u7684setEnvironment\u65b9\u6cd5\uff0c\u800c\u8fd9\u662f\u4e00\u4e2aset\u65b9\u6cd5\uff0c\u548cSpring\u4e2d\u7684autowire\u662f\u51b2\u7a81\u7684\uff0c\u90a3\u4e48Spring\u5728\u81ea\u52a8\u6ce8\u5165\u65f6\u662f\u4e0d\u4f1a\u8c03\u7528setEnvironment\u65b9\u6cd5\u7684\uff0c\u800c\u662f\u7b49\u5230\u56de\u8c03Aware\u63a5\u53e3\u65f6\u518d\u6765\u8c03\u7528\uff08\u6ce8\u610f\uff0c\u8fd9\u4e2a\u529f\u80fd\u4ec5\u9650\u4e8exml\u7684autowire\uff0c@Autowired\u6ce8\u89e3\u662f\u5ffd\u7565\u8fd9\u4e2a\u5c5e\u6027\u7684\uff09 EnvironmentAware EmbeddedValueResolverAware ResourceLoaderAware ApplicationEventPublisherAware MessageSourceAware ApplicationContextAware \u53e6\u5916\u5176\u5b9e\u5728\u6784\u9020BeanFactory\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u63d0\u524d\u6dfb\u52a0\u4e86\u53e6\u5916\u4e09\u4e2a\uff1a BeanNameAware BeanClassLoaderAware BeanFactoryAware \u6dfb\u52a0 resolvableDependencies \uff1a\u5728byType\u8fdb\u884c\u4f9d\u8d56\u6ce8\u5165\u65f6\uff0c\u4f1a\u5148\u4ece\u8fd9\u4e2a\u5c5e\u6027\u4e2d\u6839\u636e\u7c7b\u578b\u627ebean BeanFactory.class\uff1a\u5f53\u524dBeanFactory\u5bf9\u8c61 ResourceLoader.class\uff1a\u5f53\u524dApplicationContext\u5bf9\u8c61 ApplicationEventPublisher.class\uff1a\u5f53\u524dApplicationContext\u5bf9\u8c61 ApplicationContext.class\uff1a\u5f53\u524dApplicationContext\u5bf9\u8c61 \u6dfb\u52a0\u4e00\u4e2aBean\u7684\u540e\u7f6e\u5904\u7406\u5668\uff1aApplicationListenerDetector\uff0c\u662f\u4e00\u4e2aBeanPostProcessor\uff0c\u7528\u6765\u5224\u65ad\u67d0\u4e2aBean\u662f\u4e0d\u662fApplicationListener\uff0c\u5982\u679c\u662f\u5219\u628a\u8fd9\u4e2aBean\u6dfb\u52a0\u5230ApplicationContext\u4e2d\u53bb\uff0c\u6ce8\u610f\u4e00\u4e2aApplicationListener\u53ea\u80fd\u662f\u5355\u4f8b\u7684 \u6dfb\u52a0\u4e00\u4e2aBean\u7684\u540e\u7f6e\u5904\u7406\u5668\uff1aLoadTimeWeaverAwareProcessor\uff0c\u662f\u4e00\u4e2aBeanPostProcessor\uff0c\u7528\u6765\u5224\u65ad\u67d0\u4e2aBean\u662f\u4e0d\u662f\u5b9e\u73b0\u4e86LoadTimeWeaverAware\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\u5219\u628aApplicationContext\u4e2d\u7684loadTimeWeaver\u56de\u8c03setLoadTimeWeaver\u65b9\u6cd5\u8bbe\u7f6e\u7ed9\u8be5Bean\u3002 \u6dfb\u52a0\u4e00\u4e9b\u5355\u4f8bbean\u5230\u5355\u4f8b\u6c60\uff1a \"environment\"\uff1aEnvironment\u5bf9\u8c61 \"systemProperties\"\uff1aSystem.getProperties()\u8fd4\u56de\u7684Map\u5bf9\u8c61 \"systemEnvironment\"\uff1aSystem.getenv()\u8fd4\u56de\u7684Map\u5bf9\u8c61 postProcessBeanFactory(beanFactory) \uff1a \u63d0\u4f9b\u7ed9AbstractApplicationContext\u7684\u5b50\u7c7b\u8fdb\u884c\u6269\u5c55\uff0c\u5177\u4f53\u7684\u5b50\u7c7b\uff0c\u53ef\u4ee5\u7ee7\u7eed\u5411BeanFactory\u4e2d\u518d\u6dfb\u52a0\u4e00\u4e9b\u4e1c\u897f invokeBeanFactoryPostProcessors(beanFactory)\uff1a \u6267\u884cBeanFactoryPostProcessor \u6b64\u65f6\u5728BeanFactory\u4e2d\u4f1a\u5b58\u5728\u4e00\u4e2aBeanFactoryPostProcessor\uff1a ConfigurationClassPostProcessor \uff0c\u5b83\u4e5f\u662f\u4e00\u4e2a BeanDefinitionRegistryPostProcessor \u7b2c\u4e00\u9636\u6bb5 \u4eceBeanFactory\u4e2d\u627e\u5230\u7c7b\u578b\u4e3aBeanDefinitionRegistryPostProcessor\u7684beanName\uff0c\u4e5f\u5c31\u662f ConfigurationClassPostProcessor \uff0c \u7136\u540e\u8c03\u7528BeanFactory\u7684getBean\u65b9\u6cd5\u5f97\u5230\u5b9e\u4f8b\u5bf9\u8c61 \u6267\u884c ConfigurationClassPostProcessor\u7684postProcessBeanDefinitionRegistry() \u65b9\u6cd5: \u89e3\u6790AppConfig\u7c7b \u626b\u63cf\u5f97\u5230BeanDefinition\u5e76\u6ce8\u518c \u89e3\u6790@Import\uff0c@Bean\u7b49\u6ce8\u89e3\u5f97\u5230BeanDefinition\u5e76\u6ce8\u518c \u8be6\u7ec6\u7684\u770b\u53e6\u5916\u7684\u7b14\u8bb0\uff0c\u4e13\u95e8\u5206\u6790\u4e86 ConfigurationClassPostProcessor\u662f\u5982\u4f55\u5de5\u4f5c\u7684 \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u5728\u8fd9\u4e00\u6b65\u4f1a\u53bb\u5f97\u5230BeanDefinition\uff0c\u800c\u8fd9\u4e9bBeanDefinition\u4e2d\u53ef\u80fd\u5b58\u5728BeanFactoryPostProcessor\u548cBeanDefinitionRegistryPostProcessor\uff0c\u6240\u4ee5\u6267\u884c\u5b8cConfigurationClassPostProcessor\u7684postProcessBeanDefinitionRegistry()\u65b9\u6cd5\u540e\uff0c\u8fd8\u9700\u8981\u7ee7\u7eed\u6267\u884c\u5176\u4ed6BeanDefinitionRegistryPostProcessor\u7684postProcessBeanDefinitionRegistry()\u65b9\u6cd5 \u6267\u884c\u5176\u4ed6BeanDefinitionRegistryPostProcessor\u7684 postProcessBeanDefinitionRegistry() \u65b9\u6cd5 \u6267\u884c\u6240\u6709BeanDefinitionRegistryPostProcessor\u7684 postProcessBeanFactory() \u65b9\u6cd5 \u7b2c\u4e8c\u9636\u6bb5 \u4eceBeanFactory\u4e2d\u627e\u5230\u7c7b\u578b\u4e3aBeanFactoryPostProcessor\u7684beanName\uff0c\u800c\u8fd9\u4e9bBeanFactoryPostProcessor\u5305\u62ec\u4e86\u4e0a\u9762\u7684BeanDefinitionRegistryPostProcessor \u6267\u884c\u8fd8\u6ca1\u6709\u6267\u884c\u8fc7\u7684BeanFactoryPostProcessor\u7684 postProcessBeanFactory() \u65b9\u6cd5 \u5230\u6b64\uff0c\u6240\u6709\u7684BeanFactoryPostProcessor\u7684\u903b\u8f91\u90fd\u6267\u884c\u5b8c\u4e86\uff0c\u4e3b\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u5f97\u5230BeanDefinition\u5e76\u6ce8\u518c\u5230BeanFactory\u4e2d registerBeanPostProcessors(beanFactory)\uff1a\u56e0\u4e3a\u4e0a\u9762\u7684\u6b65\u9aa4\u5b8c\u6210\u4e86\u626b\u63cf\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u7a0b\u5e8f\u5458\u53ef\u80fd\u81ea\u5df1\u5b9a\u4e49\u4e86\u4e00\u4e9bBeanPostProcessor\uff0c\u5728\u8fd9\u4e00\u6b65\u5c31\u4f1a\u628aBeanFactory\u4e2d\u6240\u6709\u7684BeanPostProcessor\u627e\u51fa\u6765\u5e76\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u6dfb\u52a0\u5230BeanFactory\u4e2d\u53bb\uff08\u5c5e\u6027 beanPostProcessors \uff09\uff0c\u6700\u540e\u518d\u91cd\u65b0\u6dfb\u52a0\u4e00\u4e2aApplicationListenerDetector\u5bf9\u8c61\uff08\u4e4b\u524d\u5176\u5b9e\u5c31\u6dfb\u52a0\u4e86\u8fc7\uff0c\u8fd9\u91cc\u662f\u4e3a\u4e86\u628aApplicationListenerDetector\u79fb\u52a8\u5230\u6700\u540e\uff09 initMessageSource()\uff1a\u5982\u679cBeanFactory\u4e2d\u5b58\u5728\u4e00\u4e2a\u53eb\u505a\" messageSource \"\u7684BeanDefinition\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u8fd9\u4e2aBean\u5bf9\u8c61\u521b\u5efa\u51fa\u6765\u5e76\u8d4b\u503c\u7ed9ApplicationContext\u7684messageSource\u5c5e\u6027\uff0c\u8ba9ApplicationContext\u62e5\u6709 \u56fd\u9645\u5316 \u7684\u529f\u80fd initApplicationEventMulticaster()\uff1a\u5982\u679cBeanFactory\u4e2d\u5b58\u5728\u4e00\u4e2a\u53eb\u505a\" applicationEventMulticaster \"\u7684BeanDefinition\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u8fd9\u4e2aBean\u5bf9\u8c61\u521b\u5efa\u51fa\u6765\u5e76\u8d4b\u503c\u7ed9ApplicationContext\u7684applicationEventMulticaster\u5c5e\u6027\uff0c\u8ba9ApplicationContext\u62e5\u6709 \u4e8b\u4ef6\u53d1\u5e03 \u7684\u529f\u80fd onRefresh()\uff1a\u63d0\u4f9b\u7ed9AbstractApplicationContext\u7684\u5b50\u7c7b\u8fdb\u884c\u6269\u5c55\uff0c\u6ca1\u7528 registerListeners()\uff1a\u4eceBeanFactory\u4e2d\u83b7\u53d6ApplicationListener\u7c7b\u578b\u7684beanName\uff0c\u7136\u540e\u6dfb\u52a0\u5230ApplicationContext\u4e2d\u7684\u4e8b\u4ef6\u5e7f\u64ad\u5668 applicationEventMulticaster \u4e2d\u53bb\uff0c\u5230\u8fd9\u4e00\u6b65\u56e0\u4e3aFactoryBean\u8fd8\u6ca1\u6709\u8c03\u7528getObject()\u65b9\u6cd5\u751f\u6210Bean\u5bf9\u8c61\uff0c\u6240\u4ee5\u8fd9\u91cc\u8981\u5728\u6839\u636e\u7c7b\u578b\u627e\u4e00\u4e0bApplicationListener\uff0c\u8bb0\u5f55\u4e00\u4e0b\u5bf9\u5e94\u7684beanName finishBeanFactoryInitialization(beanFactory)\uff1a\u5b8c\u6210BeanFactory\u7684\u521d\u59cb\u5316\uff0c\u4e3b\u8981\u5c31\u662f \u5b9e\u4f8b\u5316\u975e\u61d2\u52a0\u8f7d\u7684\u5355\u4f8bBean \uff0c\u5355\u72ec\u7684\u7b14\u8bb0\u53bb\u8bb2\u3002 finishRefresh()\uff1aBeanFactory\u7684\u521d\u59cb\u5316\u5b8c\u540e\uff0c\u5c31\u5230\u4e86Spring\u542f\u52a8\u7684\u6700\u540e\u4e00\u6b65\u4e86 \u8bbe\u7f6eApplicationContext\u7684lifecycleProcessor\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8bbe\u7f6e\u7684\u662fDefaultLifecycleProcessor \u8c03\u7528lifecycleProcessor\u7684onRefresh()\u65b9\u6cd5\uff0c\u5982\u679c\u662fDefaultLifecycleProcessor\uff0c\u90a3\u4e48\u4f1a\u83b7\u53d6\u6240\u6709\u7c7b\u578b\u4e3aLifecycle\u7684Bean\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u5b83\u7684start()\u65b9\u6cd5\uff0c\u8fd9\u5c31\u662fApplicationContext\u7684\u751f\u547d\u5468\u671f\u6269\u5c55\u673a\u5236 \u53d1\u5e03 ContextRefreshedEvent \u4e8b\u4ef6 \u6267\u884cBeanFactoryPostProcessor \u6267\u884c\u901a\u8fc7ApplicationContext\u6dfb\u52a0\u8fdb\u6765\u7684BeanDefinitionRegistryPostProcessor\u7684postProcessBeanDefinitionRegistry()\u65b9\u6cd5 \u6267\u884cBeanFactory\u4e2d\u5b9e\u73b0\u4e86PriorityOrdered\u63a5\u53e3\u7684BeanDefinitionRegistryPostProcessor\u7684postProcessBeanDefinitionRegistry()\u65b9\u6cd5 \u6267\u884cBeanFactory\u4e2d\u5b9e\u73b0\u4e86Ordered\u63a5\u53e3\u7684BeanDefinitionRegistryPostProcessor\u7684postProcessBeanDefinitionRegistry()\u65b9\u6cd5 \u6267\u884cBeanFactory\u4e2d\u5176\u4ed6\u7684BeanDefinitionRegistryPostProcessor\u7684postProcessBeanDefinitionRegistry()\u65b9\u6cd5 \u6267\u884c\u4e0a\u9762\u6240\u6709\u7684BeanDefinitionRegistryPostProcessor\u7684postProcessBeanFactory()\u65b9\u6cd5 \u6267\u884c\u901a\u8fc7ApplicationContext\u6dfb\u52a0\u8fdb\u6765\u7684BeanFactoryPostProcessor\u7684postProcessBeanFactory()\u65b9\u6cd5 \u6267\u884cBeanFactory\u4e2d\u5b9e\u73b0\u4e86PriorityOrdered\u63a5\u53e3\u7684BeanFactoryPostProcessor\u7684postProcessBeanFactory()\u65b9\u6cd5 \u6267\u884cBeanFactory\u4e2d\u5b9e\u73b0\u4e86Ordered\u63a5\u53e3\u7684BeanFactoryPostProcessor\u7684postProcessBeanFactory()\u65b9\u6cd5 \u6267\u884cBeanFactory\u4e2d\u5176\u4ed6\u7684BeanFactoryPostProcessor\u7684postProcessBeanFactory()\u65b9\u6cd5 Lifecycle\u7684\u4f7f\u7528 Lifecycle\u8868\u793a\u7684\u662fApplicationContext\u7684\u751f\u547d\u5468\u671f\uff0c\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2aSmartLifecycle\u6765\u76d1\u542cApplicationContext\u7684\u542f\u52a8\u548c\u5173\u95ed\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 @Component public class ZhouyuLifecycle implements SmartLifecycle { private boolean isRunning = false ; @Override public void start () { System . out . println ( \"\u542f\u52a8\" ); isRunning = true ; } @Override public void stop () { // \u8981\u89e6\u53d1stop()\uff0c\u8981\u8c03\u7528context.close()\uff0c\u6216\u8005\u6ce8\u518c\u5173\u95ed\u94a9\u5b50\uff08context.registerShutdownHook();\uff09 System . out . println ( \"\u505c\u6b62\" ); isRunning = false ; } @Override public boolean isRunning () { return isRunning ; } }","title":"10.Spring\u4e4b\u542f\u52a8\u8fc7\u7a0b\u6e90\u7801\u89e3\u6790"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/10Spring%E4%B9%8B%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/#_1","text":"\u901a\u5e38\uff0c\u6211\u4eec\u8bf4\u7684Spring\u542f\u52a8\uff0c\u5c31\u662f\u6784\u9020ApplicationContext\u5bf9\u8c61\u4ee5\u53ca\u8c03\u7528refresh()\u65b9\u6cd5\u7684\u8fc7\u7a0b\u3002 \u200b \u9996\u5148\uff0cSpring\u542f\u52a8\u8fc7\u7a0b\u4e3b\u8981\u505a\u4e86\u8fd9\u4e48\u51e0\u4ef6\u4e8b\u60c5\uff1a \u6784\u9020\u4e00\u4e2aBeanFactory\u5bf9\u8c61 \u89e3\u6790\u914d\u7f6e\u7c7b\uff0c\u5f97\u5230BeanDefinition\uff0c\u5e76\u6ce8\u518c\u5230BeanFactory\u4e2d \u89e3\u6790@ComponentScan\uff0c\u6b64\u65f6\u5c31\u4f1a\u5b8c\u6210\u626b\u63cf \u89e3\u6790@Import \u89e3\u6790@Bean ... \u56e0\u4e3aApplicationContext\u8fd8\u652f\u6301\u56fd\u9645\u5316\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u521d\u59cb\u5316MessageSource\u5bf9\u8c61 \u56e0\u4e3aApplicationContext\u8fd8\u652f\u6301\u4e8b\u4ef6\u673a\u5236\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u521d\u59cb\u5316ApplicationEventMulticaster\u5bf9\u8c61 \u628a\u7528\u6237\u5b9a\u4e49\u7684ApplicationListener\u5bf9\u8c61\u6dfb\u52a0\u5230ApplicationContext\u4e2d\uff0c\u7b49Spring\u542f\u52a8\u5b8c\u4e86\u5c31\u8981\u53d1\u5e03\u4e8b\u4ef6\u4e86 \u521b\u5efa \u975e\u61d2\u52a0\u8f7d\u7684\u5355\u4f8b Bean\u5bf9\u8c61\uff0c\u5e76\u5b58\u5728BeanFactory\u7684\u5355\u4f8b\u6c60\u4e2d\u3002 \u8c03\u7528Lifecycle Bean\u7684start()\u65b9\u6cd5 \u53d1\u5e03 ContextRefreshedEvent \u4e8b\u4ef6 \u7531\u4e8eSpring\u542f\u52a8\u8fc7\u7a0b\u4e2d\u8981\u521b\u5efa\u975e\u61d2\u52a0\u8f7d\u7684\u5355\u4f8bBean\u5bf9\u8c61\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u7528\u5230BeanPostProcessor\uff0c\u6240\u4ee5Spring\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\u5c31\u9700\u8981\u505a\u4e24\u4ef6\u4e8b\uff1a \u751f\u6210\u9ed8\u8ba4\u7684BeanPostProcessor\u5bf9\u8c61\uff0c\u5e76\u6dfb\u52a0\u5230BeanFactory\u4e2d AutowiredAnnotationBeanPostProcessor\uff1a\u5904\u7406@Autowired\u3001@Value CommonAnnotationBeanPostProcessor\uff1a\u5904\u7406@Resource\u3001@PostConstruct\u3001@PreDestroy ApplicationContextAwareProcessor\uff1a\u5904\u7406ApplicationContextAware\u7b49\u56de\u8c03 \u627e\u5230\u5916\u90e8\u7528\u6237\u6240\u5b9a\u4e49\u7684BeanPostProcessor\u5bf9\u8c61\uff08\u7c7b\u578b\u4e3aBeanPostProcessor\u7684Bean\u5bf9\u8c61\uff09\uff0c\u5e76\u6dfb\u52a0\u5230BeanFactory\u4e2d","title":"\u524d\u8a00\u5206\u6790"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/10Spring%E4%B9%8B%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/#beanfactorypostprocessor","text":"BeanPostProcessor\u8868\u793aBean\u7684\u540e\u7f6e\u5904\u7406\u5668\uff0c\u662f\u7528\u6765\u5bf9Bean\u8fdb\u884c\u52a0\u5de5\u7684\uff0c\u7c7b\u4f3c\u7684\uff0cBeanFactoryPostProcessor\u7406\u89e3\u4e3aBeanFactory\u7684\u540e\u7f6e\u5904\u7406\u5668\uff0c\u7528\u6765\u7528\u5bf9BeanFactory\u8fdb\u884c\u52a0\u5de5\u7684\u3002 \u200b Spring\u652f\u6301\u7528\u6237\u5b9a\u4e49BeanFactoryPostProcessor\u7684\u5b9e\u73b0\u7c7bBean\uff0c\u6765\u5bf9BeanFactory\u8fdb\u884c\u52a0\u5de5\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 @Component public class ZhouyuBeanFactoryPostProcessor implements BeanFactoryPostProcessor { @Override public void postProcessBeanFactory ( ConfigurableListableBeanFactory beanFactory ) throws BeansException { BeanDefinition beanDefinition = beanFactory . getBeanDefinition ( \"userService\" ); beanDefinition . setAutowireCandidate ( false ); } } \u4ee5\u4e0a\u4ee3\u7801\uff0c\u5c31\u5229\u7528\u4e86BeanFactoryPostProcessor\u6765\u62ff\u5230BeanFactory\uff0c\u7136\u540e\u83b7\u53d6BeanFactory\u5185\u7684\u67d0\u4e2aBeanDefinition\u5bf9\u8c61\u5e76\u8fdb\u884c\u4fee\u6539\uff0c\u6ce8\u610f\u8fd9\u4e00\u6b65\u662f\u53d1\u751f\u5728Spring\u542f\u52a8\u65f6\uff0c\u521b\u5efa\u5355\u4f8bBean\u4e4b\u524d\u7684\uff0c\u6240\u4ee5\u6b64\u65f6\u5bf9BeanDefinition\u5c31\u884c\u4fee\u6539\u662f\u4f1a\u751f\u6548\u7684\u3002 \u200b \u6ce8\u610f\uff1a\u5728ApplicationContext\u5185\u90e8\u6709\u4e00\u4e2a\u6838\u5fc3\u7684DefaultListableBeanFactory\uff0c\u5b83\u5b9e\u73b0\u4e86ConfigurableListableBeanFactory\u548cBeanDefinitionRegistry\u63a5\u53e3\uff0c\u6240\u4ee5ApplicationContext\u548cDefaultListableBeanFactory\u662f\u53ef\u4ee5\u6ce8\u518cBeanDefinition\u7684\uff0c\u4f46\u662fConfigurableListableBeanFactory\u662f\u4e0d\u80fd\u6ce8\u518cBeanDefinition\u7684\uff0c\u53ea\u80fd\u83b7\u53d6BeanDefinition\uff0c\u7136\u540e\u505a\u4fee\u6539\u3002 \u6240\u4ee5Spring\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2aBeanFactoryPostProcessor\u7684\u5b50\u63a5\u53e3\uff1a BeanDefinitionRegistryPostProcessor \u200b","title":"BeanFactoryPostProcessor"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/10Spring%E4%B9%8B%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/#beandefinitionregistrypostprocessor","text":"1 2 3 4 5 public interface BeanDefinitionRegistryPostProcessor extends BeanFactoryPostProcessor { void postProcessBeanDefinitionRegistry ( BeanDefinitionRegistry registry ) throws BeansException ; } \u6211\u4eec\u53ef\u4ee5\u770b\u5230BeanDefinitionRegistryPostProcessor\u7ee7\u627f\u4e86BeanFactoryPostProcessor\u63a5\u53e3\uff0c\u5e76\u65b0\u589e\u4e86\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6ce8\u610f\u65b9\u6cd5\u7684\u53c2\u6570\u4e3aBeanDefinitionRegistry\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u7c7b\u6765\u5b9e\u73b0BeanDefinitionRegistryPostProcessor\uff0c\u90a3\u4e48\u5728postProcessBeanDefinitionRegistry()\u65b9\u6cd5\u4e2d\u5c31\u53ef\u4ee5\u6ce8\u518cBeanDefinition\u4e86\u3002\u6bd4\u5982\uff1a \u200b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @Component public class ZhouyuBeanDefinitionRegistryPostProcessor implements BeanDefinitionRegistryPostProcessor { @Override public void postProcessBeanDefinitionRegistry ( BeanDefinitionRegistry registry ) throws BeansException { AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder . genericBeanDefinition (). getBeanDefinition (); beanDefinition . setBeanClass ( User . class ); registry . registerBeanDefinition ( \"user\" , beanDefinition ); } @Override public void postProcessBeanFactory ( ConfigurableListableBeanFactory beanFactory ) throws BeansException { BeanDefinition beanDefinition = beanFactory . getBeanDefinition ( \"userService\" ); beanDefinition . setAutowireCandidate ( false ); } }","title":"BeanDefinitionRegistryPostProcessor"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/10Spring%E4%B9%8B%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/#refresh","text":"1 2 3 4 5 6 7 8 9 10 11 /** * Load or refresh the persistent representation of the configuration, * which might an XML file, properties file, or relational database schema. * <p>As this is a startup method, it should destroy already created singletons * if it fails, to avoid dangling resources. In other words, after invocation * of that method, either all or no singletons at all should be instantiated. * @throws BeansException if the bean factory could not be initialized * @throws IllegalStateException if already initialized and multiple refresh * attempts are not supported */ void refresh () throws BeansException , IllegalStateException ; \u8fd9\u662fConfigurableApplicationContext\u63a5\u53e3\u4e0arefresh()\u65b9\u6cd5\u7684\u6ce8\u91ca\uff0c\u610f\u601d\u662f\uff1a\u52a0\u8f7d\u6216\u5237\u65b0\u6301\u4e45\u5316\u7684\u914d\u7f6e\uff0c\u53ef\u80fd\u662fXML\u6587\u4ef6\u3001\u5c5e\u6027\u6587\u4ef6\u6216\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u7684\u3002\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u542f\u52a8\u65b9\u6cd5\uff0c\u5982\u679c\u5931\u8d25\uff0c\u5b83\u5e94\u8be5\u9500\u6bc1\u5df2\u7ecf\u521b\u5efa\u7684\u5355\u4f8b\uff0c\u4ee5\u907f\u514d\u6682\u7528\u8d44\u6e90\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u8c03\u7528\u8be5\u65b9\u6cd5\u4e4b\u540e\uff0c\u5e94\u8be5\u5b9e\u4f8b\u5316\u6240\u6709\u7684\u5355\u4f8b\uff0c\u6216\u8005\u6839\u672c\u4e0d\u5b9e\u4f8b\u5316\u5355\u4f8b \u3002 \u6709\u4e2a\u7406\u5ff5\u9700\u8981\u6ce8\u610f\uff1a ApplicationContext\u5173\u95ed\u4e4b\u540e\u4e0d\u4ee3\u8868JVM\u4e5f\u5173\u95ed\u4e86\uff0cApplicationContext\u662f\u5c5e\u4e8eJVM\u7684\uff0c\u8bf4\u767d\u4e86ApplicationContext\u4e5f\u662fJVM\u4e2d\u7684\u4e00\u4e2a\u5bf9\u8c61\u3002 \u200b \u5728Spring\u7684\u8bbe\u8ba1\u4e2d\uff0c\u4e5f\u63d0\u4f9b\u53ef\u4ee5\u5237\u65b0\u7684ApplicationContext\u548c\u4e0d\u53ef\u4ee5\u5237\u65b0\u7684ApplicationContext\u3002\u6bd4\u5982\uff1a 1 AbstractRefreshableApplicationContext extends AbstractApplicationContext \u5c31\u662f\u53ef\u4ee5\u5237\u65b0\u7684 1 GenericApplicationContext extends AbstractApplicationContext \u5c31\u662f\u4e0d\u53ef\u4ee5\u5237\u65b0\u7684\u3002 AnnotationConfigApplicationContext\u7ee7\u627f\u7684\u662fGenericApplicationContext\uff0c\u6240\u4ee5\u5b83\u662f\u4e0d\u80fd\u5237\u65b0\u7684\u3002 AnnotationConfigWebApplicationContext\u7ee7\u627f\u7684\u662fAbstractRefreshableWebApplicationContext\uff0c\u6240\u4ee5\u5b83\u662f\u53ef\u4ee5\u5237\u7684\u3002 \u4e0a\u9762\u8bf4\u7684 \u4e0d\u80fd\u5237\u65b0\u662f\u6307\u4e0d\u80fd\u91cd\u590d\u5237\u65b0\uff0c\u53ea\u80fd\u8c03\u7528\u4e00\u6b21refresh\u65b9\u6cd5\uff0c\u7b2c\u4e8c\u6b21\u65f6\u4f1a\u62a5\u9519\u3002","title":"\u5982\u4f55\u7406\u89e3refresh()\uff1f"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/10Spring%E4%B9%8B%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/#refresh_1","text":"\u5e95\u5c42\u539f\u7406\u6d41\u7a0b\u56fe\uff1ahttps://www.processon.com/view/link/5f60a7d71e08531edf26a919 \u4e0b\u9762\u4ee5AnnotationConfigApplicationContext\u4e3a\u4f8b\u5b50\uff0c\u6765\u4ecb\u7ecdrefresh\u7684\u5e95\u5c42\u539f\u7406\u3002 \u5728\u8c03\u7528AnnotationConfigApplicationContext\u7684\u6784\u9020\u65b9\u6cd5\u4e4b\u524d\uff0c\u4f1a\u8c03\u7528\u7236\u7c7bGenericApplicationContext\u7684\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u4f1a\u6784\u9020\u4e00\u4e2aBeanFactory\uff0c\u4e3a DefaultListableBeanFactory \u3002 \u6784\u9020AnnotatedBeanDefinitionReader\uff08 \u4e3b\u8981\u4f5c\u7528\u6dfb\u52a0\u4e00\u4e9b\u57fa\u7840\u7684PostProcessor\uff0c\u540c\u65f6\u53ef\u4ee5\u901a\u8fc7reader\u8fdb\u884cBeanDefinition\u7684\u6ce8\u518c \uff09\uff0c\u540c\u65f6\u5bf9BeanFactory\u8fdb\u884c\u8bbe\u7f6e\u548c\u6dfb\u52a0 PostProcessor \uff08\u540e\u7f6e\u5904\u7406\u5668\uff09 \u8bbe\u7f6edependencyComparator\uff1aAnnotationAwareOrderComparator\uff0c\u5b83\u662f\u4e00\u4e2aComparator\uff0c\u662f\u7528\u6765\u8fdb\u884c\u6392\u5e8f\u7684\uff0c\u4f1a\u83b7\u53d6\u67d0\u4e2a\u5bf9\u8c61\u4e0a\u7684 Order\u6ce8\u89e3 \u6216\u8005\u901a\u8fc7\u5b9e\u73b0 Ordered\u63a5\u53e3 \u6240\u5b9a\u4e49\u7684\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u5728\u65e5\u5e38\u5f00\u53d1\u4e2d\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u7c7b\u6765\u8fdb\u884c\u6392\u5e8f\u3002 \u8bbe\u7f6eautowireCandidateResolver\uff1aContextAnnotationAutowireCandidateResolver\uff0c\u7528\u6765\u89e3\u6790\u67d0\u4e2aBean\u80fd\u4e0d\u80fd\u8fdb\u884c\u81ea\u52a8\u6ce8\u5165\uff0c\u6bd4\u5982\u67d0\u4e2aBean\u7684autowireCandidate\u5c5e\u6027\u662f\u5426\u7b49\u4e8etrue \u5411BeanFactory\u4e2d\u6dfb\u52a0 ConfigurationClassPostProcessor \u5bf9\u5e94\u7684BeanDefinition\uff0c\u5b83\u662f\u4e00\u4e2aBeanDefinitionRegistryPostProcessor\uff0c\u5e76\u4e14\u5b9e\u73b0\u4e86PriorityOrdered\u63a5\u53e3 \u5411BeanFactory\u4e2d\u6dfb\u52a0 AutowiredAnnotationBeanPostProcessor \u5bf9\u5e94\u7684BeanDefinition\uff0c\u5b83\u662f\u4e00\u4e2aInstantiationAwareBeanPostProcessorAdapter\uff0cMergedBeanDefinitionPostProcessor \u5411BeanFactory\u4e2d\u6dfb\u52a0CommonAnnotationBeanPostProcessor\u5bf9\u5e94\u7684BeanDefinition\uff0c\u5b83\u662f\u4e00\u4e2aInstantiationAwareBeanPostProcessor\uff0cInitDestroyAnnotationBeanPostProcessor \u5411BeanFactory\u4e2d\u6dfb\u52a0EventListenerMethodProcessor\u5bf9\u5e94\u7684BeanDefinition\uff0c\u5b83\u662f\u4e00\u4e2aBeanFactoryPostProcessor\uff0cSmartInitializingSingleton \u5411BeanFactory\u4e2d\u6dfb\u52a0DefaultEventListenerFactory\u5bf9\u5e94\u7684BeanDefinition\uff0c\u5b83\u662f\u4e00\u4e2aEventListenerFactory \u6784\u9020ClassPathBeanDefinitionScanner\uff08 \u4e3b\u8981\u4f5c\u7528\u53ef\u4ee5\u7528\u6765\u626b\u63cf\u5f97\u5230\u5e76\u6ce8\u518cBeanDefinition \uff09\uff0c\u540c\u65f6\u8fdb\u884c\u8bbe\u7f6e\uff1a \u8bbe\u7f6e this.includeFilters = AnnotationTypeFilter(Component.class) \u8bbe\u7f6eenvironment \u8bbe\u7f6eresourceLoader \u5229\u7528reader\u6ce8\u518cAppConfig\u4e3aBeanDefinition\uff0c\u7c7b\u578b\u4e3aAnnotatedGenericBeanDefinition \u63a5\u4e0b\u6765\u5c31\u662f\u8c03\u7528refresh\u65b9\u6cd5 prepareRefresh()\uff1a \u8bb0\u5f55\u542f\u52a8\u65f6\u95f4 \u53ef\u4ee5\u5141\u8bb8\u5b50\u5bb9\u5668\u8bbe\u7f6e\u4e00\u4e9b\u5185\u5bb9\u5230Environment\u4e2d \u9a8c\u8bc1Environment\u4e2d\u662f\u5426\u5305\u62ec\u4e86\u5fc5\u987b\u8981\u6709\u7684\u5c5e\u6027 obtainFreshBeanFactory()\uff1a\u8fdb\u884cBeanFactory\u7684refresh\uff0c\u5728\u8fd9\u91cc\u4f1a\u53bb\u8c03\u7528\u5b50\u7c7b\u7684refreshBeanFactory\u65b9\u6cd5\uff0c\u5177\u4f53\u5b50\u7c7b\u662f\u600e\u4e48\u5237\u65b0\u7684\u5f97\u770b\u5b50\u7c7b\uff0c\u7136\u540e\u518d\u8c03\u7528\u5b50\u7c7b\u7684getBeanFactory\u65b9\u6cd5\uff0c\u91cd\u65b0\u5f97\u5230\u4e00\u4e2aBeanFactory prepareBeanFactory(beanFactory)\uff1a \u8bbe\u7f6ebeanFactory\u7684\u7c7b\u52a0\u8f7d\u5668 \u8bbe\u7f6e\u8868\u8fbe\u5f0f\u89e3\u6790\u5668\uff1aStandardBeanExpressionResolver\uff0c\u7528\u6765\u89e3\u6790Spring\u4e2d\u7684\u8868\u8fbe\u5f0f \u6dfb\u52a0PropertyEditorRegistrar\uff1aResourceEditorRegistrar\uff0cPropertyEditor\u7c7b\u578b\u8f6c\u5316\u5668\u6ce8\u518c\u5668\uff0c\u7528\u6765\u6ce8\u518c\u4e00\u4e9b\u9ed8\u8ba4\u7684PropertyEditor \u6dfb\u52a0\u4e00\u4e2aBean\u7684\u540e\u7f6e\u5904\u7406\u5668\uff1aApplicationContextAwareProcessor\uff0c\u662f\u4e00\u4e2aBeanPostProcessor\uff0c\u7528\u6765\u6267\u884cEnvironmentAware\u3001ApplicationEventPublisherAware\u7b49\u56de\u8c03\u65b9\u6cd5 \u6dfb\u52a0 ignoredDependencyInterface \uff1a\u53ef\u4ee5\u5411\u8fd9\u4e2a\u5c5e\u6027\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u63a5\u53e3\uff0c\u5982\u679c\u67d0\u4e2a\u7c7b\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\uff0c\u5e76\u4e14\u8fd9\u4e2a\u7c7b\u4e2d\u7684\u67d0\u4e9bset\u65b9\u6cd5\u5728\u63a5\u53e3\u4e2d\u4e5f\u5b58\u5728\uff0c\u90a3\u4e48\u8fd9\u4e2aset\u65b9\u6cd5\u5728\u81ea\u52a8\u6ce8\u5165\u7684\u65f6\u5019\u662f\u4e0d\u4f1a\u6267\u884c\u7684\uff0c\u6bd4\u5982EnvironmentAware\u8fd9\u4e2a\u63a5\u53e3\uff0c\u5982\u679c\u67d0\u4e2a\u7c7b\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u5b9e\u73b0\u5b83\u7684setEnvironment\u65b9\u6cd5\uff0c\u800c\u8fd9\u662f\u4e00\u4e2aset\u65b9\u6cd5\uff0c\u548cSpring\u4e2d\u7684autowire\u662f\u51b2\u7a81\u7684\uff0c\u90a3\u4e48Spring\u5728\u81ea\u52a8\u6ce8\u5165\u65f6\u662f\u4e0d\u4f1a\u8c03\u7528setEnvironment\u65b9\u6cd5\u7684\uff0c\u800c\u662f\u7b49\u5230\u56de\u8c03Aware\u63a5\u53e3\u65f6\u518d\u6765\u8c03\u7528\uff08\u6ce8\u610f\uff0c\u8fd9\u4e2a\u529f\u80fd\u4ec5\u9650\u4e8exml\u7684autowire\uff0c@Autowired\u6ce8\u89e3\u662f\u5ffd\u7565\u8fd9\u4e2a\u5c5e\u6027\u7684\uff09 EnvironmentAware EmbeddedValueResolverAware ResourceLoaderAware ApplicationEventPublisherAware MessageSourceAware ApplicationContextAware \u53e6\u5916\u5176\u5b9e\u5728\u6784\u9020BeanFactory\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u63d0\u524d\u6dfb\u52a0\u4e86\u53e6\u5916\u4e09\u4e2a\uff1a BeanNameAware BeanClassLoaderAware BeanFactoryAware \u6dfb\u52a0 resolvableDependencies \uff1a\u5728byType\u8fdb\u884c\u4f9d\u8d56\u6ce8\u5165\u65f6\uff0c\u4f1a\u5148\u4ece\u8fd9\u4e2a\u5c5e\u6027\u4e2d\u6839\u636e\u7c7b\u578b\u627ebean BeanFactory.class\uff1a\u5f53\u524dBeanFactory\u5bf9\u8c61 ResourceLoader.class\uff1a\u5f53\u524dApplicationContext\u5bf9\u8c61 ApplicationEventPublisher.class\uff1a\u5f53\u524dApplicationContext\u5bf9\u8c61 ApplicationContext.class\uff1a\u5f53\u524dApplicationContext\u5bf9\u8c61 \u6dfb\u52a0\u4e00\u4e2aBean\u7684\u540e\u7f6e\u5904\u7406\u5668\uff1aApplicationListenerDetector\uff0c\u662f\u4e00\u4e2aBeanPostProcessor\uff0c\u7528\u6765\u5224\u65ad\u67d0\u4e2aBean\u662f\u4e0d\u662fApplicationListener\uff0c\u5982\u679c\u662f\u5219\u628a\u8fd9\u4e2aBean\u6dfb\u52a0\u5230ApplicationContext\u4e2d\u53bb\uff0c\u6ce8\u610f\u4e00\u4e2aApplicationListener\u53ea\u80fd\u662f\u5355\u4f8b\u7684 \u6dfb\u52a0\u4e00\u4e2aBean\u7684\u540e\u7f6e\u5904\u7406\u5668\uff1aLoadTimeWeaverAwareProcessor\uff0c\u662f\u4e00\u4e2aBeanPostProcessor\uff0c\u7528\u6765\u5224\u65ad\u67d0\u4e2aBean\u662f\u4e0d\u662f\u5b9e\u73b0\u4e86LoadTimeWeaverAware\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\u5219\u628aApplicationContext\u4e2d\u7684loadTimeWeaver\u56de\u8c03setLoadTimeWeaver\u65b9\u6cd5\u8bbe\u7f6e\u7ed9\u8be5Bean\u3002 \u6dfb\u52a0\u4e00\u4e9b\u5355\u4f8bbean\u5230\u5355\u4f8b\u6c60\uff1a \"environment\"\uff1aEnvironment\u5bf9\u8c61 \"systemProperties\"\uff1aSystem.getProperties()\u8fd4\u56de\u7684Map\u5bf9\u8c61 \"systemEnvironment\"\uff1aSystem.getenv()\u8fd4\u56de\u7684Map\u5bf9\u8c61 postProcessBeanFactory(beanFactory) \uff1a \u63d0\u4f9b\u7ed9AbstractApplicationContext\u7684\u5b50\u7c7b\u8fdb\u884c\u6269\u5c55\uff0c\u5177\u4f53\u7684\u5b50\u7c7b\uff0c\u53ef\u4ee5\u7ee7\u7eed\u5411BeanFactory\u4e2d\u518d\u6dfb\u52a0\u4e00\u4e9b\u4e1c\u897f invokeBeanFactoryPostProcessors(beanFactory)\uff1a \u6267\u884cBeanFactoryPostProcessor \u6b64\u65f6\u5728BeanFactory\u4e2d\u4f1a\u5b58\u5728\u4e00\u4e2aBeanFactoryPostProcessor\uff1a ConfigurationClassPostProcessor \uff0c\u5b83\u4e5f\u662f\u4e00\u4e2a BeanDefinitionRegistryPostProcessor \u7b2c\u4e00\u9636\u6bb5 \u4eceBeanFactory\u4e2d\u627e\u5230\u7c7b\u578b\u4e3aBeanDefinitionRegistryPostProcessor\u7684beanName\uff0c\u4e5f\u5c31\u662f ConfigurationClassPostProcessor \uff0c \u7136\u540e\u8c03\u7528BeanFactory\u7684getBean\u65b9\u6cd5\u5f97\u5230\u5b9e\u4f8b\u5bf9\u8c61 \u6267\u884c ConfigurationClassPostProcessor\u7684postProcessBeanDefinitionRegistry() \u65b9\u6cd5: \u89e3\u6790AppConfig\u7c7b \u626b\u63cf\u5f97\u5230BeanDefinition\u5e76\u6ce8\u518c \u89e3\u6790@Import\uff0c@Bean\u7b49\u6ce8\u89e3\u5f97\u5230BeanDefinition\u5e76\u6ce8\u518c \u8be6\u7ec6\u7684\u770b\u53e6\u5916\u7684\u7b14\u8bb0\uff0c\u4e13\u95e8\u5206\u6790\u4e86 ConfigurationClassPostProcessor\u662f\u5982\u4f55\u5de5\u4f5c\u7684 \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u5728\u8fd9\u4e00\u6b65\u4f1a\u53bb\u5f97\u5230BeanDefinition\uff0c\u800c\u8fd9\u4e9bBeanDefinition\u4e2d\u53ef\u80fd\u5b58\u5728BeanFactoryPostProcessor\u548cBeanDefinitionRegistryPostProcessor\uff0c\u6240\u4ee5\u6267\u884c\u5b8cConfigurationClassPostProcessor\u7684postProcessBeanDefinitionRegistry()\u65b9\u6cd5\u540e\uff0c\u8fd8\u9700\u8981\u7ee7\u7eed\u6267\u884c\u5176\u4ed6BeanDefinitionRegistryPostProcessor\u7684postProcessBeanDefinitionRegistry()\u65b9\u6cd5 \u6267\u884c\u5176\u4ed6BeanDefinitionRegistryPostProcessor\u7684 postProcessBeanDefinitionRegistry() \u65b9\u6cd5 \u6267\u884c\u6240\u6709BeanDefinitionRegistryPostProcessor\u7684 postProcessBeanFactory() \u65b9\u6cd5 \u7b2c\u4e8c\u9636\u6bb5 \u4eceBeanFactory\u4e2d\u627e\u5230\u7c7b\u578b\u4e3aBeanFactoryPostProcessor\u7684beanName\uff0c\u800c\u8fd9\u4e9bBeanFactoryPostProcessor\u5305\u62ec\u4e86\u4e0a\u9762\u7684BeanDefinitionRegistryPostProcessor \u6267\u884c\u8fd8\u6ca1\u6709\u6267\u884c\u8fc7\u7684BeanFactoryPostProcessor\u7684 postProcessBeanFactory() \u65b9\u6cd5 \u5230\u6b64\uff0c\u6240\u6709\u7684BeanFactoryPostProcessor\u7684\u903b\u8f91\u90fd\u6267\u884c\u5b8c\u4e86\uff0c\u4e3b\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u5f97\u5230BeanDefinition\u5e76\u6ce8\u518c\u5230BeanFactory\u4e2d registerBeanPostProcessors(beanFactory)\uff1a\u56e0\u4e3a\u4e0a\u9762\u7684\u6b65\u9aa4\u5b8c\u6210\u4e86\u626b\u63cf\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u7a0b\u5e8f\u5458\u53ef\u80fd\u81ea\u5df1\u5b9a\u4e49\u4e86\u4e00\u4e9bBeanPostProcessor\uff0c\u5728\u8fd9\u4e00\u6b65\u5c31\u4f1a\u628aBeanFactory\u4e2d\u6240\u6709\u7684BeanPostProcessor\u627e\u51fa\u6765\u5e76\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u6dfb\u52a0\u5230BeanFactory\u4e2d\u53bb\uff08\u5c5e\u6027 beanPostProcessors \uff09\uff0c\u6700\u540e\u518d\u91cd\u65b0\u6dfb\u52a0\u4e00\u4e2aApplicationListenerDetector\u5bf9\u8c61\uff08\u4e4b\u524d\u5176\u5b9e\u5c31\u6dfb\u52a0\u4e86\u8fc7\uff0c\u8fd9\u91cc\u662f\u4e3a\u4e86\u628aApplicationListenerDetector\u79fb\u52a8\u5230\u6700\u540e\uff09 initMessageSource()\uff1a\u5982\u679cBeanFactory\u4e2d\u5b58\u5728\u4e00\u4e2a\u53eb\u505a\" messageSource \"\u7684BeanDefinition\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u8fd9\u4e2aBean\u5bf9\u8c61\u521b\u5efa\u51fa\u6765\u5e76\u8d4b\u503c\u7ed9ApplicationContext\u7684messageSource\u5c5e\u6027\uff0c\u8ba9ApplicationContext\u62e5\u6709 \u56fd\u9645\u5316 \u7684\u529f\u80fd initApplicationEventMulticaster()\uff1a\u5982\u679cBeanFactory\u4e2d\u5b58\u5728\u4e00\u4e2a\u53eb\u505a\" applicationEventMulticaster \"\u7684BeanDefinition\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u8fd9\u4e2aBean\u5bf9\u8c61\u521b\u5efa\u51fa\u6765\u5e76\u8d4b\u503c\u7ed9ApplicationContext\u7684applicationEventMulticaster\u5c5e\u6027\uff0c\u8ba9ApplicationContext\u62e5\u6709 \u4e8b\u4ef6\u53d1\u5e03 \u7684\u529f\u80fd onRefresh()\uff1a\u63d0\u4f9b\u7ed9AbstractApplicationContext\u7684\u5b50\u7c7b\u8fdb\u884c\u6269\u5c55\uff0c\u6ca1\u7528 registerListeners()\uff1a\u4eceBeanFactory\u4e2d\u83b7\u53d6ApplicationListener\u7c7b\u578b\u7684beanName\uff0c\u7136\u540e\u6dfb\u52a0\u5230ApplicationContext\u4e2d\u7684\u4e8b\u4ef6\u5e7f\u64ad\u5668 applicationEventMulticaster \u4e2d\u53bb\uff0c\u5230\u8fd9\u4e00\u6b65\u56e0\u4e3aFactoryBean\u8fd8\u6ca1\u6709\u8c03\u7528getObject()\u65b9\u6cd5\u751f\u6210Bean\u5bf9\u8c61\uff0c\u6240\u4ee5\u8fd9\u91cc\u8981\u5728\u6839\u636e\u7c7b\u578b\u627e\u4e00\u4e0bApplicationListener\uff0c\u8bb0\u5f55\u4e00\u4e0b\u5bf9\u5e94\u7684beanName finishBeanFactoryInitialization(beanFactory)\uff1a\u5b8c\u6210BeanFactory\u7684\u521d\u59cb\u5316\uff0c\u4e3b\u8981\u5c31\u662f \u5b9e\u4f8b\u5316\u975e\u61d2\u52a0\u8f7d\u7684\u5355\u4f8bBean \uff0c\u5355\u72ec\u7684\u7b14\u8bb0\u53bb\u8bb2\u3002 finishRefresh()\uff1aBeanFactory\u7684\u521d\u59cb\u5316\u5b8c\u540e\uff0c\u5c31\u5230\u4e86Spring\u542f\u52a8\u7684\u6700\u540e\u4e00\u6b65\u4e86 \u8bbe\u7f6eApplicationContext\u7684lifecycleProcessor\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8bbe\u7f6e\u7684\u662fDefaultLifecycleProcessor \u8c03\u7528lifecycleProcessor\u7684onRefresh()\u65b9\u6cd5\uff0c\u5982\u679c\u662fDefaultLifecycleProcessor\uff0c\u90a3\u4e48\u4f1a\u83b7\u53d6\u6240\u6709\u7c7b\u578b\u4e3aLifecycle\u7684Bean\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u5b83\u7684start()\u65b9\u6cd5\uff0c\u8fd9\u5c31\u662fApplicationContext\u7684\u751f\u547d\u5468\u671f\u6269\u5c55\u673a\u5236 \u53d1\u5e03 ContextRefreshedEvent \u4e8b\u4ef6","title":"refresh()\u5e95\u5c42\u539f\u7406\u6d41\u7a0b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/10Spring%E4%B9%8B%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/#beanfactorypostprocessor_1","text":"\u6267\u884c\u901a\u8fc7ApplicationContext\u6dfb\u52a0\u8fdb\u6765\u7684BeanDefinitionRegistryPostProcessor\u7684postProcessBeanDefinitionRegistry()\u65b9\u6cd5 \u6267\u884cBeanFactory\u4e2d\u5b9e\u73b0\u4e86PriorityOrdered\u63a5\u53e3\u7684BeanDefinitionRegistryPostProcessor\u7684postProcessBeanDefinitionRegistry()\u65b9\u6cd5 \u6267\u884cBeanFactory\u4e2d\u5b9e\u73b0\u4e86Ordered\u63a5\u53e3\u7684BeanDefinitionRegistryPostProcessor\u7684postProcessBeanDefinitionRegistry()\u65b9\u6cd5 \u6267\u884cBeanFactory\u4e2d\u5176\u4ed6\u7684BeanDefinitionRegistryPostProcessor\u7684postProcessBeanDefinitionRegistry()\u65b9\u6cd5 \u6267\u884c\u4e0a\u9762\u6240\u6709\u7684BeanDefinitionRegistryPostProcessor\u7684postProcessBeanFactory()\u65b9\u6cd5 \u6267\u884c\u901a\u8fc7ApplicationContext\u6dfb\u52a0\u8fdb\u6765\u7684BeanFactoryPostProcessor\u7684postProcessBeanFactory()\u65b9\u6cd5 \u6267\u884cBeanFactory\u4e2d\u5b9e\u73b0\u4e86PriorityOrdered\u63a5\u53e3\u7684BeanFactoryPostProcessor\u7684postProcessBeanFactory()\u65b9\u6cd5 \u6267\u884cBeanFactory\u4e2d\u5b9e\u73b0\u4e86Ordered\u63a5\u53e3\u7684BeanFactoryPostProcessor\u7684postProcessBeanFactory()\u65b9\u6cd5 \u6267\u884cBeanFactory\u4e2d\u5176\u4ed6\u7684BeanFactoryPostProcessor\u7684postProcessBeanFactory()\u65b9\u6cd5","title":"\u6267\u884cBeanFactoryPostProcessor"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/10Spring%E4%B9%8B%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/#lifecycle","text":"Lifecycle\u8868\u793a\u7684\u662fApplicationContext\u7684\u751f\u547d\u5468\u671f\uff0c\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2aSmartLifecycle\u6765\u76d1\u542cApplicationContext\u7684\u542f\u52a8\u548c\u5173\u95ed\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 @Component public class ZhouyuLifecycle implements SmartLifecycle { private boolean isRunning = false ; @Override public void start () { System . out . println ( \"\u542f\u52a8\" ); isRunning = true ; } @Override public void stop () { // \u8981\u89e6\u53d1stop()\uff0c\u8981\u8c03\u7528context.close()\uff0c\u6216\u8005\u6ce8\u518c\u5173\u95ed\u94a9\u5b50\uff08context.registerShutdownHook();\uff09 System . out . println ( \"\u505c\u6b62\" ); isRunning = false ; } @Override public boolean isRunning () { return isRunning ; } }","title":"Lifecycle\u7684\u4f7f\u7528"},{"location":"Microservice/01%E6%89%8B%E5%86%99%E6%A8%A1%E6%8B%9FSpringBoot%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B/","text":"\u8bfe\u7a0b\u5185\u5bb9\uff1a 1\u3001\u624b\u5199\u6a21\u62dfSpringBoot\u542f\u52a8\u8fc7\u7a0b 2\u3001\u624b\u5199\u6a21\u62dfSpringBoot\u6761\u4ef6\u6ce8\u89e3\u529f\u80fd 3\u3001\u624b\u5199\u6a21\u62dfSpringBoot\u81ea\u52a8\u914d\u7f6e\u529f\u80fd 4\u3001SpringBoot\u6574\u5408Tomcat\u5e95\u5c42\u6e90\u7801\u5206\u6790 \u901a\u8fc7\u624b\u5199\u6a21\u62df\u5b9e\u73b0\u4e00\u4e2aSpring Boot\uff0c\u8ba9\u5927\u5bb6\u80fd\u4ee5\u975e\u5e38\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u80fd\u77e5\u9053Spring Boot\u5927\u6982\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u5b8c\u6574\u7684\u4ee3\u7801\u5730\u5740\uff1ahttps://gitee.com/archguide/zhouyu-springboot \u4f9d\u8d56 \u5efa\u4e00\u4e2a\u5de5\u7a0b\uff0c\u4e24\u4e2aModule: \u200b springboot\u6a21\u5757\uff0c\u8868\u793aspringboot\u6846\u67b6\u7684\u6e90\u7801\u5b9e\u73b0 user\u5305\uff0c\u8868\u793a\u7528\u6237\u4e1a\u52a1\u7cfb\u7edf\uff0c\u7528\u6765\u5199\u4e1a\u52a1\u4ee3\u7801\u6765\u6d4b\u8bd5\u6211\u4eec\u6240\u6a21\u62df\u51fa\u6765\u7684SpringBoot \u9996\u5148\uff0cSpringBoot\u662f\u57fa\u4e8e\u7684Spring\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u4f9d\u8d56Spring\uff0c\u7136\u540e\u6211\u5e0c\u671b\u6211\u4eec\u6a21\u62df\u51fa\u6765\u7684SpringBoot\u4e5f\u652f\u6301Spring MVC\u7684\u90a3\u4e00\u5957\u529f\u80fd\uff0c\u6240\u4ee5\u4e5f\u8981\u4f9d\u8d56Spring MVC\uff0c\u5305\u62ecTomcat\u7b49\uff0c\u6240\u4ee5\u5728SpringBoot\u6a21\u5757\u4e2d\u8981\u6dfb\u52a0\u4ee5\u4e0b\u4f9d\u8d56\uff1a org.springframework spring-context 5.3.18 org.springframework spring-web 5.3.18 org.springframework spring-webmvc 5.3.18 javax.servlet javax.servlet-api 4.0.1 org.apache.tomcat.embed tomcat-embed-core 9.0.60 \u5728User\u6a21\u5757\u4e0b\u6211\u4eec\u8fdb\u884c\u6b63\u5e38\u7684\u5f00\u53d1\u5c31\u884c\u4e86\uff0c\u6bd4\u5982\u5148\u6dfb\u52a0SpringBoot\u4f9d\u8d56\uff1a org.example springboot 1.0-SNAPSHOT \u7136\u540e\u5b9a\u4e49\u76f8\u5173\u7684Controller\u548cService: \u200b @RestController public class UserController { @Autowired private UserService userService; @GetMapping(\"test\") public String test(){ return userService.test(); } } \u56e0\u4e3a\u6211\u4eec\u6a21\u62df\u5b9e\u73b0\u7684\u662fSpringBoot\uff0c\u800c\u4e0d\u662fSpringMVC\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u5728user\u5305\u4e0b\u5b9a\u4e49\u4e86UserController\u548cUserService\uff0c\u6700\u7ec8\u6211\u5e0c\u671b\u80fd\u8fd0\u884cMyApplication\u4e2d\u7684main\u65b9\u6cd5\uff0c\u5c31\u76f4\u63a5\u542f\u52a8\u4e86\u9879\u76ee\uff0c\u5e76\u80fd\u5728\u6d4f\u89c8\u5668\u4e2d\u6b63\u5e38\u7684\u8bbf\u95ee\u5230UserController\u4e2d\u7684\u67d0\u4e2a\u65b9\u6cd5\u3002 \u6838\u5fc3\u6ce8\u89e3\u548c\u6838\u5fc3\u7c7b \u6211\u4eec\u5728\u771f\u6b63\u4f7f\u7528SpringBoot\u65f6\uff0c\u6838\u5fc3\u4f1a\u7528\u5230SpringBoot\u4e00\u4e2a\u7c7b\u548c\u6ce8\u89e3\uff1a @SpringBootApplication\uff0c\u8fd9\u4e2a\u6ce8\u89e3\u662f\u52a0\u5728\u5e94\u7528\u542f\u52a8\u7c7b\u4e0a\u7684\uff0c\u4e5f\u5c31\u662fmain\u65b9\u6cd5\u6240\u5728\u7684\u7c7b SpringApplication\uff0c\u8fd9\u4e2a\u7c7b\u4e2d\u6709\u4e2arun()\u65b9\u6cd5\uff0c\u7528\u6765\u542f\u52a8SpringBoot\u5e94\u7528\u7684 \u6240\u4ee5\u6211\u4eec\u4e5f\u6765\u6a21\u62df\u5b9e\u73b0\u4ed6\u4eec\u3002 \u4e00\u4e2a@ZhouyuSpringBootApplication\u6ce8\u89e3\uff1a @Target(ElementType.TYPE) @Retention(RetentionPolicy.RUNTIME) @Configuration @ComponentScan public @interface ZhouyuSpringBootApplication { } \u4e00\u4e2a\u7528\u6765\u5b9e\u73b0\u542f\u52a8\u903b\u8f91\u7684ZhouyuSpringApplication\u7c7b\u3002 public class ZhouyuSpringApplication { public static void run(Class clazz){ } } \u6ce8\u610frun\u65b9\u6cd5\u9700\u8981\u63a5\u6536\u4e00\u4e2aClass\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u8fd9\u4e2aclass\u662f\u7528\u6765\u5e72\u561b\u7684\uff0c\u7b49\u4f1a\u5c31\u77e5\u9053\u4e86\u3002 \u6709\u4e86\u4ee5\u4e0a\u4e24\u8005\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728MyApplication\u4e2d\u6765\u4f7f\u7528\u4e86\uff0c\u6bd4\u5982\uff1a @ZhouyuSpringBootApplication public class MyApplication { public static void main(String[] args) { ZhouyuSpringApplication.run(MyApplication.class); } } \u73b0\u5728\u7528\u6765\u662f\u6709\u6a21\u6709\u6837\u4e86\uff0c\u4f46\u4e2d\u770b\u4e0d\u4e2d\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u6765\u597d\u597d\u5b9e\u73b0\u4ee5\u4e0brun\u65b9\u6cd5\u4e2d\u7684\u903b\u8f91\u4e86\u3002 run\u65b9\u6cd5 run\u65b9\u6cd5\u4e2d\u9700\u8981\u5b9e\u73b0\u4ec0\u4e48\u5177\u4f53\u7684\u903b\u8f91\u5462\uff1f \u9996\u5148\uff0c\u6211\u4eec\u5e0c\u671brun\u65b9\u6cd5\u4e00\u65e6\u6267\u884c\u5b8c\uff0c\u6211\u4eec\u5c31\u80fd\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee\u5230UserController\uff0c\u90a3\u52bf\u5fc5\u5728run\u65b9\u6cd5\u4e2d\u8981\u542f\u52a8Tomcat\uff0c\u901a\u8fc7Tomcat\u5c31\u80fd\u63a5\u6536\u5230\u8bf7\u6c42\u4e86\u3002 \u5927\u5bb6\u5982\u679c\u5b66\u8fc7Spring MVC\u7684\u5e95\u5c42\u539f\u7406\u5c31\u4f1a\u77e5\u9053\uff0c\u5728SpringMVC\u4e2d\u6709\u4e00\u4e2aServlet\u975e\u5e38\u6838\u5fc3\uff0c\u90a3\u5c31\u662fDispatcherServlet\uff0c\u8fd9\u4e2aDispatcherServlet\u9700\u8981\u7ed1\u5b9a\u4e00\u4e2aSpring\u5bb9\u5668\uff0c\u56e0\u4e3aDispatcherServlet\u63a5\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u5c31\u4f1a\u4ece\u6240\u7ed1\u5b9a\u7684Spring\u5bb9\u5668\u4e2d\u627e\u5230\u6240\u5339\u914d\u7684Controller\uff0c\u5e76\u6267\u884c\u6240\u5339\u914d\u7684\u65b9\u6cd5\u3002 \u6240\u4ee5\uff0c\u5728run\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u8981\u5b9e\u73b0\u7684\u903b\u8f91\u5982\u4e0b\uff1a \u521b\u5efa\u4e00\u4e2aSpring\u5bb9\u5668 \u521b\u5efaTomcat\u5bf9\u8c61 \u751f\u6210DispatcherServlet\u5bf9\u8c61\uff0c\u5e76\u4e14\u548c\u524d\u9762\u521b\u5efa\u51fa\u6765\u7684Spring\u5bb9\u5668\u8fdb\u884c\u7ed1\u5b9a \u5c06DispatcherServlet\u6dfb\u52a0\u5230Tomcat\u4e2d \u542f\u52a8Tomcat \u521b\u5efaSpring\u5bb9\u5668 \u8fd9\u4e2a\u6b65\u9aa4\u6bd4\u8f83\u7b80\u5355\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a public class ZhouyuSpringApplication { public static void run(Class clazz){ AnnotationConfigWebApplicationContext applicationContext = new AnnotationConfigWebApplicationContext(); applicationContext.register(clazz); applicationContext.refresh(); } } \u6211\u4eec\u521b\u5efa\u7684\u662f\u4e00\u4e2aAnnotationConfigWebApplicationContext\u5bb9\u5668\uff0c\u5e76\u4e14\u628arun\u65b9\u6cd5\u4f20\u5165\u8fdb\u6765\u7684class\u4f5c\u4e3a\u5bb9\u5668\u7684\u914d\u7f6e\u7c7b\uff0c\u6bd4\u5982\u5728MyApplication\u7684run\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u5c31\u662f\u628a MyApplication.class \u4f20\u5165\u5230\u4e86run\u65b9\u6cd5\u4e2d\uff0c\u6700\u7ec8MyApplication\u5c31\u662f\u6240\u521b\u5efa\u51fa\u6765\u7684Spring\u5bb9\u5668\u7684\u914d\u7f6e\u7c7b\uff0c\u5e76\u4e14\u7531\u4e8eMyApplication\u7c7b\u4e0a\u6709@ZhouyuSpringBootApplication\u6ce8\u89e3\uff0c\u800c@ZhouyuSpringBootApplication\u6ce8\u89e3\u7684\u5b9a\u4e49\u4e0a\u53c8\u5b58\u5728@ComponentScan\u6ce8\u89e3\uff0c\u6240\u4ee5AnnotationConfigWebApplicationContext\u5bb9\u5668\u5728\u6267\u884crefresh\u65f6\uff0c\u5c31\u4f1a\u89e3\u6790MyApplication\u8fd9\u4e2a\u914d\u7f6e\u7c7b\uff0c\u4ece\u800c\u53d1\u73b0\u5b9a\u4e49\u4e86@ComponentScan\u6ce8\u89e3\uff0c\u4e5f\u5c31\u77e5\u9053\u4e86\u8981 \u8fdb\u884c\u626b\u63cf \uff0c\u53ea\u4e0d\u8fc7\u626b\u63cf\u8def\u5f84\u4e3a\u7a7a\uff0c\u800cAnnotationConfigWebApplicationContext\u5bb9\u5668\u4f1a\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\uff0c \u5982\u679c\u626b\u63cf\u8def\u5f84\u4f1a\u7a7a\uff0c\u5219\u4f1a\u5c06MyApplication\u6240\u5728\u7684\u5305\u8def\u5f84\u505a\u4e3a\u626b\u63cf\u8def\u5f84 \uff0c\u4ece\u800c\u5c31\u4f1a\u626b\u63cf\u5230UserService\u548cUserController\u3002 \u6240\u4ee5Spring\u5bb9\u5668\u521b\u5efa\u5b8c\u4e4b\u540e\uff0c\u5bb9\u5668\u5185\u90e8\u5c31\u62e5\u6709\u4e86UserService\u548cUserController\u8fd9\u4e24\u4e2aBean\u3002 \u542f\u52a8Tomcat \u6211\u4eec\u7528\u7684\u662fEmbed-Tomcat\uff0c\u4e5f\u5c31\u662f\u5185\u5d4c\u7684Tomcat\uff0c\u771f\u6b63\u7684SpringBoot\u4e2d\u4e5f\u7528\u7684\u662f\u5185\u5d4c\u7684Tomcat\uff0c\u800c\u5bf9\u4e8e\u542f\u52a8\u5185\u5d4c\u7684Tomcat\uff0c\u4e5f\u5e76\u4e0d\u9ebb\u70e6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a public static void startTomcat(WebApplicationContext applicationContext){ Tomcat tomcat = new Tomcat(); Server server = tomcat.getServer(); Service service = server.findService(\"Tomcat\"); Connector connector = new Connector(); connector.setPort(8081); Engine engine = new StandardEngine(); engine.setDefaultHost(\"localhost\"); Host host = new StandardHost(); host.setName(\"localhost\"); String contextPath = \"\"; Context context = new StandardContext(); context.setPath(contextPath); context.addLifecycleListener(new Tomcat.FixContextListener()); host.addChild(context); engine.addChild(host); service.setContainer(engine); service.addConnector(connector); tomcat.addServlet(contextPath, \"dispatcher\", new DispatcherServlet(applicationContext)); context.addServletMappingDecoded(\"/*\", \"dispatcher\"); try { tomcat.start(); } catch (LifecycleException e) { e.printStackTrace(); } } \u4ee3\u7801\u867d\u7136\u770b\u4e0a\u53bb\u6bd4\u8f83\u591a\uff0c\u4f46\u662f\u903b\u8f91\u5e76\u4e0d\u590d\u6742\uff0c\u6bd4\u5982\u914d\u7f6e\u4e86Tomcat\u7ed1\u5b9a\u7684\u7aef\u53e3\u4e3a8081\uff0c\u540e\u9762\u5411\u5f53\u524dTomcat\u4e2d\u6dfb\u52a0\u4e86DispatcherServlet\uff0c\u5e76\u8bbe\u7f6e\u4e86\u4e00\u4e2aMapping\u5173\u7cfb\uff0c\u6700\u540e\u542f\u52a8\uff0c\u5176\u4ed6\u4ee3\u7801\u5219\u4e0d\u7528\u592a\u8fc7\u5173\u5fc3\u3002 \u800c\u4e14\u5728\u6784\u9020DispatcherServlet\u5bf9\u8c61\u65f6\uff0c\u4f20\u5165\u4e86\u4e00\u4e2aApplicationContext\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2aSpring\u5bb9\u5668\uff0c\u5c31\u662f\u6211\u4eec\u524d\u6587\u8bf4\u7684\uff0cDispatcherServlet\u5bf9\u8c61\u548c\u4e00\u4e2aSpring\u5bb9\u5668\u8fdb\u884c\u7ed1\u5b9a\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728run\u65b9\u6cd5\u4e2d\uff0c\u8c03\u7528startTomcat\u5373\u53ef\uff1a public static void run(Class clazz){ AnnotationConfigWebApplicationContext applicationContext = new AnnotationConfigWebApplicationContext(); applicationContext.register(clazz); applicationContext.refresh(); startTomcat(applicationContext); } \u5b9e\u9645\u4e0a\u4ee3\u7801\u5199\u5230\u8fd9\uff0c\u4e00\u4e2a\u6781\u5ea6\u7cbe\u7b80\u7248\u7684SpringBoot\u5c31\u5199\u51fa\u6765\u4e86\uff0c\u6bd4\u5982\u73b0\u5728\u8fd0\u884cMyApplication\uff0c\u5c31\u80fd\u6b63\u5e38\u7684\u542f\u52a8\u9879\u76ee\uff0c\u5e76\u80fd\u63a5\u6536\u8bf7\u6c42\u3002 \u542f\u52a8\u80fd\u770b\u5230Tomcat\u7684\u542f\u52a8\u65e5\u5fd7\uff1a \u200b \u7136\u540e\u5728\u6d4f\u89c8\u5668\u4e0a\u8bbf\u95ee\uff1ahttp://localhost:8081/test \u4e5f\u80fd\u6b63\u5e38\u7684\u770b\u5230\u7ed3\u679c\uff1a \u200b \u6b64\u65f6\uff0c\u4f60\u53ef\u4ee5\u7ee7\u7eed\u53bb\u5199\u5176\u4ed6\u7684Controller\u548cService\u4e86\uff0c\u7167\u6837\u80fd\u6b63\u5e38\u8bbf\u95ee\u5230\uff0c\u800c\u6211\u4eec\u7684\u4e1a\u52a1\u4ee3\u7801\u4e2d\u4ecd\u7136\u53ea\u7528\u5230\u4e86ZhouyuSpringApplication\u7c7b\u548c@ZhouyuSpringBootApplication\u6ce8\u89e3\u3002 \u5b9e\u73b0Tomcat\u548cJetty\u7684\u5207\u6362 \u867d\u7136\u6211\u4eec\u524d\u9762\u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684SpringBoot\uff0c\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u6765\u6269\u5145\u5b83\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u73b0\u5728\u6211\u6709\u8fd9\u4e48\u4e00\u4e2a\u9700\u6c42\uff0c\u8fd9\u4e2a\u9700\u6c42\u5c31\u662f\u6211\u73b0\u5728\u4e0d\u60f3\u4f7f\u7528Tomcat\u4e86\uff0c\u800c\u662f\u60f3\u8981\u7528Jetty\uff0c\u90a3\u8be5\u600e\u4e48\u529e\uff1f \u6211\u4eec\u524d\u9762\u4ee3\u7801\u4e2d\u9ed8\u8ba4\u542f\u52a8\u7684\u662fTomcat\uff0c\u90a3\u6211\u73b0\u5728\u60f3\u6539\u6210\u8fd9\u6837\u5b50\uff1a \u5982\u679c\u9879\u76ee\u4e2d\u6709Tomcat\u7684\u4f9d\u8d56\uff0c\u90a3\u5c31\u542f\u52a8Tomcat \u5982\u679c\u9879\u76ee\u4e2d\u6709Jetty\u7684\u4f9d\u8d56\u5c31\u542f\u52a8Jetty \u5982\u679c\u4e24\u8005\u90fd\u6ca1\u6709\u5219\u62a5\u9519 \u5982\u679c\u4e24\u8005\u90fd\u6709\u4e5f\u62a5\u9519 \u8fd9\u4e2a\u903b\u8f91\u5e0c\u671bSpringBoot\u81ea\u52a8\u5e2e\u6211\u5b9e\u73b0\uff0c\u5bf9\u4e8e\u7a0b\u5e8f\u5458\u7528\u6237\u800c\u8a00\uff0c\u53ea\u8981\u5728Pom\u6587\u4ef6\u4e2d\u6dfb\u52a0\u76f8\u5173\u4f9d\u8d56\u5c31\u53ef\u4ee5\u4e86\uff0c\u60f3\u7528Tomcat\u5c31\u52a0Tomcat\u4f9d\u8d56\uff0c\u60f3\u7528Jetty\u5c31\u52a0Jetty\u4f9d\u8d56\u3002 \u90a3SpringBoot\u8be5\u5982\u4f55\u5b9e\u73b0\u5462\uff1f \u6211\u4eec\u77e5\u9053\uff0c\u4e0d\u7ba1\u662fTomcat\u8fd8\u662fJetty\uff0c\u5b83\u4eec\u90fd\u662f\u5e94\u7528\u670d\u52a1\u5668\uff0c\u6216\u8005\u662fServlet\u5bb9\u5668\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u63a5\u53e3\u6765\u8868\u793a\u5b83\u4eec\uff0c\u8fd9\u4e2a\u63a5\u53e3\u53eb\u505aWebServer\uff08\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\u53eb\u8fd9\u4e2a\uff0c\u56e0\u4e3a\u771f\u6b63\u7684SpringBoot\u6e90\u7801\u4e2d\u4e5f\u53eb\u8fd9\u4e2a\uff09\u3002 \u5e76\u4e14\u5728\u8fd9\u4e2a\u63a5\u53e3\u4e2d\u5b9a\u4e49\u4e00\u4e2astart\u65b9\u6cd5\uff1a public interface WebServer { public void start(); } \u6709\u4e86WebServer\u63a5\u53e3\u4e4b\u540e\uff0c\u5c31\u9488\u5bf9Tomcat\u548cJetty\u63d0\u4f9b\u4e24\u4e2a\u5b9e\u73b0\u7c7b\uff1a public class TomcatWebServer implements WebServer{ @Override public void start() { System.out.println(\"\u542f\u52a8Jetty\"); } } public class JettyWebServer implements WebServer{ @Override public void start() { System.out.println(\"\u542f\u52a8Tomcat\"); } } \u800c\u5728ZhouyuSpringApplication\u4e2d\u7684run\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u5c31\u8981\u53bb\u83b7\u53d6\u5bf9\u5e94\u7684WebServer\uff0c\u7136\u540e\u542f\u52a8\u5bf9\u5e94\u7684webServer\uff0c\u4ee3\u7801\u4e3a\uff1a public static void run(Class clazz){ AnnotationConfigWebApplicationContext applicationContext = new AnnotationConfigWebApplicationContext(); applicationContext.register(clazz); applicationContext.refresh(); WebServer webServer = getWebServer(applicationContext); webServer.start(); } public static WebServer getWebServer(ApplicationContext applicationContext){ return null; } \u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ea\u9700\u8981\u5728getWebServer\u65b9\u6cd5\u4e2d\u53bb\u5224\u65ad\u5230\u5e95\u8be5\u8fd4\u56deTomcatWebServer\u8fd8\u662fJettyWebServer\u3002 \u524d\u9762\u63d0\u5230\u8fc7\uff0c\u6211\u4eec\u5e0c\u671b\u6839\u636e\u9879\u76ee\u4e2d\u7684\u4f9d\u8d56\u60c5\u51b5\uff0c\u6765\u51b3\u5b9a\u5230\u5e95\u7528\u54ea\u4e2aWebServer\uff0c\u6211\u5c31\u76f4\u63a5\u7528SpringBoot\u4e2d\u7684\u6e90\u7801\u5b9e\u73b0\u65b9\u5f0f\u6765\u6a21\u62df\u4e86\u3002 \u6a21\u62df\u5b9e\u73b0\u6761\u4ef6\u6ce8\u89e3 \u9996\u5148\u6211\u4eec\u5f97\u5b9e\u73b0\u4e00\u4e2a\u6761\u4ef6\u6ce8\u89e3@ZhouyuConditionalOnClass\uff0c\u5bf9\u5e94\u4ee3\u7801\u5982\u4e0b\uff1a @Target({ ElementType.TYPE, ElementType.METHOD }) @Retention(RetentionPolicy.RUNTIME) @Conditional(ZhouyuOnClassCondition.class) public @interface ZhouyuConditionalOnClass { String value() default \"\"; } \u6ce8\u610f\u6838\u5fc3\u4e3a@Conditional(ZhouyuOnClassCondition.class)\u4e2d\u7684ZhouyuOnClassCondition\uff0c\u56e0\u4e3a\u5b83\u624d\u662f\u771f\u6b63\u5f97\u6761\u4ef6\u903b\u8f91: public class ZhouyuOnClassCondition implements Condition { @Override public boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata) { Map annotationAttributes = metadata.getAnnotationAttributes(ZhouyuConditionalOnClass.class.getName()); String className = (String) annotationAttributes.get(\"value\"); try { context.getClassLoader().loadClass(className); return true; } catch (ClassNotFoundException e) { return false; } } } \u5177\u4f53\u903b\u8f91\u4e3a\uff0c\u62ff\u5230@ZhouyuConditionalOnClass\u4e2d\u7684value\u5c5e\u6027\uff0c\u7136\u540e\u7528\u7c7b\u52a0\u8f7d\u5668\u8fdb\u884c\u52a0\u8f7d\uff0c\u5982\u679c\u52a0\u8f7d\u5230\u4e86\u6240\u6307\u5b9a\u7684\u8fd9\u4e2a\u7c7b\uff0c\u90a3\u5c31\u8868\u793a\u7b26\u5408\u6761\u4ef6\uff0c\u5982\u679c\u52a0\u8f7d\u4e0d\u5230\uff0c\u5219\u8868\u793a\u4e0d\u7b26\u5408\u6761\u4ef6\u3002 \u6a21\u62df\u5b9e\u73b0\u81ea\u52a8\u914d\u7f6e\u7c7b \u6709\u4e86\u6761\u4ef6\u6ce8\u89e3\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6765\u4f7f\u7528\u5b83\u4e86\uff0c\u90a3\u5982\u4f55\u5b9e\u73b0\u5462\uff1f \u8fd9\u91cc\u5c31\u8981\u7528\u5230\u81ea\u52a8\u914d\u7f6e\u7c7b\u7684\u6982\u5ff5\uff0c\u6211\u4eec\u5148\u770b\u4ee3\u7801\uff1a @Configuration public class WebServiceAutoConfiguration { @Bean @ZhouyuConditionalOnClass(\"org.apache.catalina.startup.Tomcat\") public TomcatWebServer tomcatWebServer(){ return new TomcatWebServer(); } @Bean @ZhouyuConditionalOnClass(\"org.eclipse.jetty.server.Server\") public JettyWebServer jettyWebServer(){ return new JettyWebServer(); } } \u8fd9\u4e2a\u4ee3\u7801\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u901a\u8fc7\u4e00\u4e2aWebServiceAutoConfiguration\u7684Spring\u914d\u7f6e\u7c7b\uff0c\u5728\u91cc\u9762\u5b9a\u4e49\u4e86\u4e24\u4e2aBean\uff0c\u4e00\u4e2aTomcatWebServer\uff0c\u4e00\u4e2aJettyWebServer\uff0c\u4e0d\u8fc7\u8fd9\u4e24\u4e2a\u8981\u751f\u6548\u7684\u524d\u63d0\u662f\u7b26\u5408\u5f53\u524d\u6240\u6307\u5b9a\u7684\u6761\u4ef6\uff0c\u6bd4\u5982\uff1a \u53ea\u6709\u5b58\u5728\"org.apache.catalina.startup.Tomcat\"\u7c7b\uff0c\u90a3\u4e48\u624d\u6709TomcatWebServer\u8fd9\u4e2aBean \u53ea\u6709\u5b58\u5728\"org.eclipse.jetty.server.Server\"\u7c7b\uff0c\u90a3\u4e48\u624d\u6709TomcatWebServer\u8fd9\u4e2aBean \u5e76\u4e14\u6211\u4eec\u53ea\u9700\u8981\u5728ZhouyuSpringApplication\u4e2dgetWebServer\u65b9\u6cd5\uff0c\u5982\u6b64\u5b9e\u73b0\uff1a public static WebServer getWebServer(ApplicationContext applicationContext){ // key\u4e3abeanName, value\u4e3aBean\u5bf9\u8c61 Map webServers = applicationContext.getBeansOfType(WebServer.class); if (webServers.isEmpty()) { throw new NullPointerException(); } if (webServers.size() > 1) { throw new IllegalStateException(); } // \u8fd4\u56de\u552f\u4e00\u7684\u4e00\u4e2a return webServers.values().stream().findFirst().get(); } \u8fd9\u6837\u6574\u4f53SpringBoot\u542f\u52a8\u903b\u8f91\u5c31\u662f\u8fd9\u6837\u7684\uff1a \u521b\u5efa\u4e00\u4e2aAnnotationConfigWebApplicationContext\u5bb9\u5668 \u89e3\u6790MyApplication\u7c7b\uff0c\u7136\u540e\u8fdb\u884c\u626b\u63cf \u901a\u8fc7getWebServer\u65b9\u6cd5\u4eceSpring\u5bb9\u5668\u4e2d\u83b7\u53d6WebServer\u7c7b\u578b\u7684Bean \u8c03\u7528WebServer\u5bf9\u8c61\u7684start\u65b9\u6cd5 \u6709\u4e86\u4ee5\u4e0a\u6b65\u9aa4\uff0c\u6211\u4eec\u8fd8\u5dee\u4e86\u4e00\u4e2a\u5173\u952e\u6b65\u9aa4\uff0c\u5c31\u662fSpring\u8981\u80fd\u89e3\u6790\u5230WebServiceAutoConfiguration\u8fd9\u4e2a\u81ea\u52a8\u914d\u7f6e\u7c7b\uff0c\u56e0\u4e3a\u4e0d\u7ba1\u8fd9\u4e2a\u7c7b\u91cc\u5199\u4e86\u4ec0\u4e48\u4ee3\u7801\uff0cSpring\u4e0d\u53bb\u89e3\u6790\u5b83\uff0c\u90a3\u90fd\u662f\u6ca1\u7528\u7684\uff0c\u6b64\u65f6\u6211\u4eec\u9700\u8981SpringBoot\u5728run\u65b9\u6cd5\u4e2d\uff0c\u80fd\u627e\u5230WebServiceAutoConfiguration\u8fd9\u4e2a\u914d\u7f6e\u7c7b\u5e76\u6dfb\u52a0\u5230Spring\u5bb9\u5668\u4e2d\u3002 MyApplication\u662fSpring\u7684\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff0c\u4f46\u662fMyApplication\u662f\u6211\u4eec\u4f20\u9012\u7ed9SpringBoot\uff0c\u4ece\u800c\u6dfb\u52a0\u5230Spring\u5bb9\u5668\u4e2d\u53bb\u7684\uff0c\u800cWebServiceAutoConfiguration\u5c31\u9700\u8981SpringBoot\u53bb\u81ea\u52a8\u53d1\u73b0\uff0c\u800c\u4e0d\u9700\u8981\u7a0b\u5e8f\u5458\u505a\u4efb\u4f55\u914d\u7f6e\u624d\u80fd\u628a\u5b83\u6dfb\u52a0\u5230Spring\u5bb9\u5668\u4e2d\u53bb\uff0c\u800c\u4e14\u8981\u6ce8\u610f\u7684\u662f\uff0cSpring\u5bb9\u5668\u626b\u63cf\u4e5f\u662f\u626b\u63cf\u4e0d\u5230WebServiceAutoConfiguration\u8fd9\u4e2a\u7c7b\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u626b\u63cf\u8def\u5f84\u662f\"com.zhouyu.user\"\uff0c\u800cWebServiceAutoConfiguration\u6240\u5728\u7684\u5305\u8def\u5f84\u4e3a\"com.zhouyu.springboot\"\u3002 \u90a3SpringBoot\u4e2d\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u5462\uff1f\u901a\u8fc7SPI\uff0c\u5f53\u7136SpringBoot\u4e2d\u81ea\u5df1\u5b9e\u73b0\u4e86\u4e00\u5957SPI\u673a\u5236\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u719f\u77e5\u7684spring.factories\u6587\u4ef6\uff0c\u90a3\u4e48\u6211\u4eec\u6a21\u62df\u5c31\u4e0d\u641e\u590d\u6742\u4e86\uff0c\u5c31\u76f4\u63a5\u7528JDK\u81ea\u5e26\u7684SPI\u673a\u5236\u3002 \u53d1\u73b0\u81ea\u52a8\u914d\u7f6e\u7c7b \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u4ee5\u53ca\u4e3a\u4e86\u6700\u540e\u7684\u6548\u679c\u6f14\u793a\uff0c\u6211\u4eec\u9700\u8981\u628aspringboot\u6e90\u7801\u548c\u4e1a\u52a1\u4ee3\u7801\u6e90\u7801\u62c6\u5206\u4e24\u4e2amaven\u6a21\u5757\uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e\u4e24\u4e2a\u9879\u76ee\uff0c\u6700\u540e\u7684\u6e90\u7801\u7ed3\u6784\u4e3a\uff1a \u200b \u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u5728springboot\u9879\u76ee\u4e2d\u7684resources\u76ee\u5f55\u4e0b\u6dfb\u52a0\u5982\u4e0b\u76ee\u5f55\uff08META-INF/services\uff09\u548c\u6587\u4ef6\uff1a \u200b SPI\u7684\u914d\u7f6e\u5c31\u5b8c\u6210\u4e86\uff0c\u76f8\u5f53\u4e8e\u901a\u8fc7com.zhouyu.springboot.AutoConfiguration\u6587\u4ef6\u914d\u7f6e\u4e86springboot\u4e2d\u6240\u63d0\u4f9b\u7684\u914d\u7f6e\u7c7b\u3002 \u5e76\u4e14\u63d0\u4f9b\u4e00\u4e2a\u63a5\u53e3\uff1a public interface AutoConfiguration { } \u5e76\u4e14WebServiceAutoConfiguration\u5b9e\u73b0\u8be5\u63a5\u53e3\uff1a @Configuration public class WebServiceAutoConfiguration implements AutoConfiguration { @Bean @ZhouyuConditionalOnClass(\"org.apache.catalina.startup.Tomcat\") public TomcatWebServer tomcatWebServer(){ return new TomcatWebServer(); } @Bean @ZhouyuConditionalOnClass(\"org.eclipse.jetty.server.jetty\") public JettyWebServer jettyWebServer(){ return new JettyWebServer(); } } \u7136\u540e\u6211\u4eec\u518d\u5229\u7528spring\u4e2d\u7684@Import\u6280\u672f\u6765\u5bfc\u5165\u8fd9\u4e9b\u914d\u7f6e\u7c7b\uff0c\u6211\u4eec\u5728@ZhouyuSpringBootApplication\u7684\u5b9a\u4e49\u4e0a\u589e\u52a0\u5982\u4e0b\u4ee3\u7801: @Target(ElementType.TYPE) @Retention(RetentionPolicy.RUNTIME) @Configuration @ComponentScan @Import(ZhouyuImportSelect.class) public @interface ZhouyuSpringBootApplication { } ZhouyuImportSelect\u7c7b\u4e3a\uff1a public class ZhouyuImportSelect implements DeferredImportSelector { @Override public String[] selectImports(AnnotationMetadata importingClassMetadata) { ServiceLoader serviceLoader = ServiceLoader.load(AutoConfiguration.class); List list = new ArrayList<>(); for (AutoConfiguration autoConfiguration : serviceLoader) { list.add(autoConfiguration.getClass().getName()); } return list.toArray(new String[0]); } } \u8fd9\u5c31\u5b8c\u6210\u4e86\u4ececom.zhouyu.springboot.AutoConfiguration\u6587\u4ef6\u4e2d\u83b7\u53d6\u81ea\u52a8\u914d\u7f6e\u7c7b\u7684\u540d\u5b57\uff0c\u5e76\u5bfc\u5165\u5230Spring\u5bb9\u5668\u4e2d\uff0c\u4ece\u800cSpring\u5bb9\u5668\u5c31\u77e5\u9053\u4e86\u8fd9\u4e9b\u914d\u7f6e\u7c7b\u7684\u5b58\u5728\uff0c\u800c\u5bf9\u4e8euser\u9879\u76ee\u800c\u8a00\uff0c\u662f\u4e0d\u9700\u8981\u4fee\u6539\u4ee3\u7801\u7684\u3002 \u6b64\u65f6\u8fd0\u884cMyApplication\uff0c\u5c31\u80fd\u770b\u5230\u542f\u52a8\u4e86Tomcat\uff1a \u200b \u56e0\u4e3aSpringBoot\u9ed8\u8ba4\u5728\u4f9d\u8d56\u4e2d\u6dfb\u52a0\u4e86Tomcat\u4f9d\u8d56\uff0c\u800c\u5982\u679c\u5728User\u6a21\u5757\u4e2d\u518d\u6dfb\u52a0jetty\u7684\u4f9d\u8d56\uff1a org.example springboot 1.0-SNAPSHOT org.eclipse.jetty jetty-server 9.4.43.v20210629 \u90a3\u4e48\u542f\u52a8MyApplication\u5c31\u4f1a\u62a5\u9519\uff1a \u200b \u53ea\u6709\u5148\u6392\u9664\u5230Tomcat\u7684\u4f9d\u8d56\uff0c\u518d\u6dfb\u52a0Jetty\u7684\u4f9d\u8d56\u624d\u80fd\u542f\u52a8Jetty\uff1a \u200b \u6ce8\u610f\uff1a\u7531\u4e8e\u6ca1\u6709\u4e86Tomcat\u7684\u4f9d\u8d56\uff0c\u8bb0\u5f97\u628a\u6700\u5f00\u59cb\u5199\u7684startTomcat\u65b9\u6cd5\u7ed9\u6ce8\u91ca\u6389\uff0c\u5e76\u5220\u9664\u6389\u76f8\u5173\u4f9d\u8d56\u3002 \u603b\u7ed3 \u5230\u6b64\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7248\u672c\u7684SpringBoot\uff0c\u56e0\u4e3aSpringBoot\u9996\u5148\u662f\u57fa\u4e8eSpring\u7684\uff0c\u800c\u4e14\u63d0\u4f9b\u7684\u529f\u80fd\u4e5f\u66f4\u52a0\u5f3a\u5927\uff0c\u968f\u7740\u540e\u7eed\u5185\u5bb9\u7684\u5c55\u5f00\uff0c\u76f8\u4fe1\u5927\u5bb6\u4f1a\u5bf9\u672c\u6587\u4e2d\u7684\u5404\u4e2a\u529f\u80fd\u4f1a\u6709\u66f4\u52a0\u6df1\u523b\u7684\u7406\u89e3\uff0c\u4e5f\u5e0c\u671b\u5927\u5bb6\u90fd\u81ea\u5df1\u53bb\u5b9e\u73b0\u4e00\u8fb9\uff0c\u5b8c\u6574\u7684\u4ee3\u7801\u5730\u5740\uff1ahttps://gitee.com/archguide/zhouyu-springboot","title":"01\u624b\u5199\u6a21\u62dfSpringBoot\u6838\u5fc3\u6d41\u7a0b"},{"location":"Microservice/02SpringBoot%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%BA%95%E5%B1%82%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/","text":"\u8bfe\u7a0b\u5185\u5bb9 @EnableAutoConfiguration\u6e90\u7801\u89e3\u6790 \u5404\u79cd\u6761\u4ef6\u6ce8\u89e3\u6e90\u7801\u89e3\u6790 SpringBoot\u6574\u5408Tomcat\u5e95\u5c42\u6e90\u7801\u89e3\u6790 SpringBoot\u4e4bAOP\u81ea\u52a8\u914d\u7f6e\u6e90\u7801\u89e3\u6790 Starter\u673a\u5236\u5e95\u5c42\u539f\u7406\u89e3\u6790 SpringBoot2.6.6\u6e90\u7801\u5730\u5740\uff1ahttps://gitee.com/archguide/spring-boot-2.6.6 SpringBoot2.6.6\u6e90\u7801\u7f16\u8bd1\u95ee\u9898\u6c47\u603b\uff1ahttps://www.yuque.com/docs/share/c6770db5-6baa-4394-9636-b2a02edd04de?# \u81ea\u52a8\u914d\u7f6e\u5230\u5e95\u914d\u4e86\u4ec0\u4e48\uff1f \u5bf9\u4e8e\u4e00\u4e2aSpring\u9879\u76ee\uff0c\u4e3b\u8981\u5c31\u662f\u6709\u4e24\u79cd\u914d\u7f6e\uff1a \u4e00\u79cd\u662f\u7c7b\u4f3c\u7aef\u53e3\u53f7\u3001\u6570\u636e\u5e93\u5730\u5740\u3001\u7528\u6237\u540d\u5bc6\u7801\u7b49 \u4e00\u79cd\u662f\u5404\u79cdBean\uff0c\u6bd4\u5982\u6574\u5408Mybatis\u9700\u8981\u914d\u7f6e\u7684 MapperFactoryBean \uff0c\u6bd4\u5982\u6574\u5408\u4e8b\u52a1\u9700\u8981\u914d\u7f6e DataSourceTransactionManager SpringBoot\u4e2d\u7684\u81ea\u52a8\u914d\u7f6e\uff0c\u66f4\u591a\u7684\u662f\u914d\u7f6e\u5404\u79cdBean\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u914d\u7f6e\uff0cSpringBoot\u4e5f\u65e0\u6cd5\u53bb\u914d\u7f6e\uff0c\u6bd4\u5982\u6570\u636e\u5e93\u5730\u5740\u3001\u5bc6\u7801\u4e4b\u7c7b\u7684\uff0cSpringBoot\u80af\u5b9a\u662f\u65e0\u6cd5\u77e5\u9053\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u7aef\u53e3\u53f7\u8fd9\u4e9b\u914d\u7f6e\uff0cSpringBoot\u4e5f\u662f\u4f1a\u63d0\u4f9b\u4e00\u79cd\u9ed8\u8ba4\u503c\u7684\uff0c\u4e5f\u76f8\u5f53\u4e8e\u4e00\u79cd\u81ea\u52a8\u914d\u7f6e\u3002 \u90a3SpringBoot\u662f\u5982\u4f55\u81ea\u52a8\u7684\u5e2e\u52a9\u6211\u4eec\u6765\u914d\u7f6e\u8fd9\u4e9bBean\u7684\u5462\uff1f\u5e76\u4e14\u5982\u679c\u67d0\u4e9bBean\u7a0b\u5e8f\u5458\u81ea\u5df1\u4e5f\u914d\u7f6e\u4e86\uff0c\u90a3SpringBoot\u662f\u5982\u4f55\u8fdb\u884c\u9009\u62e9\u7684\u5462\uff1f \u81ea\u52a8\u914d\u7f6e\u7c7b SpringBoot\u8981\u81ea\u52a8\u5e2e\u6211\u4eec\u914d\u7f6eBean\uff0c\u90a3\u8981\u652f\u6301\u7684\u5c31\u591a\u4e86\uff1a \u6bd4\u5982Spring\u6574\u5408\u5404\u79cdServlet\u5bb9\u5668\uff08Tomcat\u3001Jetty\uff09\u7684Bean \u6bd4\u5982Spring\u6574\u5408\u5404\u79cd\u6d88\u606f\u961f\u5217\u7684Bean \u7b49\u7b49 \u6240\u4ee5SpringBoot\u4e2d\u80af\u5b9a\u4e0d\u80fd\u628a\u6240\u6709\u7684Bean\u90fd\u5b9a\u4e49\u5728\u4e00\u4e2a\u914d\u7f6e\u7c7b\u4e2d\uff0c\u9700\u8981\u5206\u95e8\u522b\u7c7b\uff0c\u8fd9\u6837\u5c31\u9488\u5bf9\u4e0d\u540c\u7684\u573a\u666f\u5b9a\u4e49\u4e86\u4e0d\u540c\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\uff0c\u6bd4\u5982\uff1a ServletWebServerFactoryAutoConfiguration\uff1a\u914d\u7f6e\u4e86Servlet Web\u573a\u666f\u4e2d\u6240\u9700\u8981\u7684\u4e00\u4e9bBean TransactionAutoConfiguration\uff1a\u914d\u7f6e\u4e86\u4e8b\u52a1\u573a\u666f\u4e2d\u6240\u9700\u8981\u7684\u4e00\u4e9bBean AopAutoConfiguration\uff1a\u914d\u7f6e\u4e86AOP\u573a\u666f\u4e2d\u6240\u9700\u8981\u7684\u4e00\u4e9bBean RabbitAutoConfiguration\uff1a\u914d\u7f6e\u4e86Rabbitmq\u573a\u666f\u4e2d\u6240\u9700\u8981\u7684\u4e00\u4e9bBean \u7b49\u7b49 \u4f7f\u7528\u8fd9\u79cd\u7ed3\u6784\u540e\uff0cSpringBoot\u5c31\u80fd\u8ba9\u7a0b\u5e8f\u5458\u66f4\u4e3a\u65b9\u4fbf\u7684\u6765\u63a7\u5236 \u67d0\u4e2aBean\u6216\u67d0\u4e9bBean\u8981\u4e0d\u8981\u751f\u6548 \uff0c\u5982\u679c\u67d0\u4e2a\u81ea\u52a8\u914d\u7f6e\u7c7b\u4e0d\u751f\u6548\uff0c\u90a3\u8be5\u914d\u7f6e\u7c7b\u4e2d\u6240\u5b9a\u4e49\u7684Bean\u5219\u90fd\u4e0d\u4f1a\u751f\u6548\u3002 \u90a3SpringBoot\u4e2d\u662f\u5982\u4f55\u63a7\u5236\u67d0\u4e2a\u81ea\u52a8\u914d\u7f6e\u7c7b\u6216\u67d0\u4e2aBean\u751f\u4e0d\u751f\u6548\u5462\uff1f \u6761\u4ef6\u6ce8\u89e3 SpringBoot\u4e2d\u7684\u6761\u4ef6\u6ce8\u89e3\u6709\uff1a ConditionalOnBean\uff1a\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u67d0\u7c7b\u6216\u67d0\u4e2a\u540d\u5b57\u7684Bean ConditionalOnMissingBean\uff1a\u662f\u5426\u7f3a\u5931\u67d0\u4e2a\u67d0\u7c7b\u6216\u67d0\u4e2a\u540d\u5b57\u7684Bean ConditionalOnSingleCandidate\uff1a\u662f\u5426\u7b26\u5408\u6307\u5b9a\u7c7b\u578b\u7684Bean\u53ea\u6709\u4e00\u4e2a ConditionalOnClass\uff1a\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u7c7b ConditionalOnMissingClass\uff1a\u662f\u5426\u7f3a\u5931\u67d0\u4e2a\u7c7b ConditionalOnExpression\uff1a\u6307\u5b9a\u7684\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u662ftrue\u8fd8\u662ffalse ConditionalOnJava\uff1a\u5224\u65adJava\u7248\u672c ConditionalOnJndi\uff1aJNDI\u6307\u5b9a\u7684\u8d44\u6e90\u662f\u5426\u5b58\u5728 ConditionalOnWebApplication\uff1a\u5f53\u524d\u5e94\u7528\u662f\u4e00\u4e2aWeb\u5e94\u7528 ConditionalOnNotWebApplication\uff1a\u5f53\u524d\u5e94\u7528\u4e0d\u662f\u4e00\u4e2aWeb\u5e94\u7528 ConditionalOnProperty\uff1aEnvironment\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u5c5e\u6027 ConditionalOnResource\uff1a\u6307\u5b9a\u7684\u8d44\u6e90\u662f\u5426\u5b58\u5728 ConditionalOnWarDeployment\uff1a\u5f53\u524d\u9879\u76ee\u662f\u4e0d\u662f\u4ee5War\u5305\u90e8\u7f72\u7684\u65b9\u5f0f\u8fd0\u884c ConditionalOnCloudPlatform\uff1a\u662f\u4e0d\u662f\u5728\u67d0\u4e2a\u4e91\u5e73\u53f0\u4e0a \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u5229\u7528@Conditional\u6765\u81ea\u5b9a\u4e49\u6761\u4ef6\u6ce8\u89e3\u3002 \u6761\u4ef6\u6ce8\u89e3\u662f\u53ef\u4ee5\u5199\u5728\u7c7b\u4e0a\u548c\u65b9\u6cd5\u4e0a\u7684\uff0c\u5982\u679c\u67d0\u4e2a\u6761\u4ef6\u6ce8\u89e3\u5199\u5728\u4e86\u81ea\u52a8\u914d\u7f6e\u7c7b\u4e0a\uff0c\u90a3\u8be5\u81ea\u52a8\u914d\u7f6e\u7c7b\u4f1a\u4e0d\u4f1a\u751f\u6548\u5c31\u8981\u770b\u5f53\u524d\u6761\u4ef6\u80fd\u4e0d\u80fd\u7b26\u5408\uff0c\u6216\u8005\u6761\u4ef6\u6ce8\u89e3\u5199\u5728\u67d0\u4e2a@Bean\u4fee\u9970\u7684\u65b9\u6cd5\u4e0a\uff0c\u90a3\u8fd9\u4e2aBean\u751f\u4e0d\u751f\u6548\u5c31\u770b\u5f53\u524d\u6761\u4ef6\u7b26\u4e0d\u7b26\u5408\u3002 \u5177\u4f53\u539f\u7406\u662f\uff1a Spring\u5728\u89e3\u6790\u67d0\u4e2a\u81ea\u52a8\u914d\u7f6e\u7c7b\u65f6\uff0c\u4f1a\u5148\u68c0\u67e5\u8be5\u81ea\u52a8\u914d\u7f6e\u7c7b\u4e0a\u662f\u5426\u6709\u6761\u4ef6\u6ce8\u89e3\uff0c\u5982\u679c\u6709\uff0c\u5219\u8fdb\u4e00\u6b65\u5224\u65ad\u8be5\u6761\u4ef6\u6ce8\u89e3\u6240\u6307\u5b9a\u7684\u6761\u4ef6\u5f53\u524d\u80fd\u4e0d\u80fd\u6ee1\u8db3\uff0c\u5982\u679c\u6ee1\u8db3\u4e86\u5219\u7ee7\u7eed\u89e3\u6790\u8be5\u914d\u7f6e\u7c7b\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u5219\u4e0d\u8fdb\u884c\u89e3\u6790\u4e86\uff0c\u4e5f\u5c31\u662f\u914d\u7f6e\u7c7b\u6240\u5b9a\u4e49\u7684Bean\u90fd\u5f97\u4e0d\u5230\u89e3\u6790\uff0c\u4e5f\u5c31\u662f\u76f8\u5f53\u4e8e\u6ca1\u6709\u8fd9\u4e9bBean\u4e86\u3002 \u540c\u7406\uff0cSpring\u5728\u89e3\u6790\u67d0\u4e2a@Bean\u7684\u65b9\u6cd5\u65f6\uff0c\u4e5f\u4f1a\u5148\u5224\u65ad\u65b9\u6cd5\u4e0a\u662f\u5426\u6709\u6761\u4ef6\u6ce8\u89e3\uff0c\u7136\u540e\u8fdb\u884c\u89e3\u6790\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u5219\u8be5Bean\u4e0d\u4f1a\u751f\u6548 \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0cSpringBoot\u7684\u81ea\u52a8\u914d\u7f6e\uff0c\u5b9e\u9645\u4e0a\u5c31\u662fSpringBoot\u7684\u6e90\u7801\u4e2d\u9884\u5148\u5199\u597d\u4e86\u4e00\u4e9b\u914d\u7f6e\u7c7b\uff0c\u9884\u5148\u5b9a\u4e49\u597d\u4e86\u4e00\u4e9bBean\uff0c\u6211\u4eec\u5728\u7528SpringBoot\u65f6\uff0c\u8fd9\u4e9b\u914d\u7f6e\u7c7b\u5c31\u5df2\u7ecf\u5728\u6211\u4eec\u9879\u76ee\u7684\u4f9d\u8d56\u4e2d\u4e86\uff0c\u800c\u8fd9\u4e9b\u81ea\u52a8\u914d\u7f6e\u7c7b\u6216\u81ea\u52a8\u914d\u7f6eBean\u5230\u5e95\u751f\u4e0d\u751f\u6548\uff0c\u5c31\u770b\u5177\u4f53\u6240\u6307\u5b9a\u7684\u6761\u4ef6\u4e86\u3002 Starter\u673a\u5236 \u90a3SpringBoot\u4e2d\u7684Starter\u548c\u81ea\u52a8\u914d\u7f6e\u53c8\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f \u5176\u5b9e\u9996\u5148\u8981\u660e\u767d\u4e00\u4e2aStarter\uff0c\u5c31\u662f\u4e00\u4e2aMaven\u4f9d\u8d56\uff0c\u5f53\u6211\u4eec\u5728\u9879\u76ee\u7684pom.xml\u6587\u4ef6\u4e2d\u6dfb\u52a0\u67d0\u4e2aStarter\u4f9d\u8d56\u65f6\uff0c\u5176\u5b9e\u5c31\u662f\u7b80\u5355\u7684\u6dfb\u52a0\u4e86\u5f88\u591a\u5176\u4ed6\u7684\u4f9d\u8d56\uff0c\u6bd4\u5982\uff1a spring-boot-starter-web\uff1a\u5f15\u5165\u4e86spring-boot-starter\u3001spring-boot-starter-json\u3001spring-boot-starter-tomcat\u7b49\u548cWeb\u5f00\u53d1\u76f8\u5173\u7684\u4f9d\u8d56\u5305 spring-boot-starter-tomcat\uff1a\u5f15\u5165\u4e86tomcat-embed-core\u3001tomcat-embed-el\u3001tomcat-embed-websocket\u7b49\u548cTomcat\u76f8\u5173\u7684\u4f9d\u8d56\u5305 ... \u5982\u679c\u786c\u8981\u628aStarter\u673a\u5236\u548c\u81ea\u52a8\u914d\u7f6e\u8054\u7cfb\u8d77\u6765\uff0c\u90a3\u5c31\u662f\u901a\u8fc7@ConditionalOnClass\u8fd9\u4e2a\u6761\u4ef6\u6ce8\u89e3\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6761\u4ef6\u6ce8\u89e3\u7684\u4f5c\u7528\u5c31\u662f\u7528\u6765\u5224\u65ad\u5f53\u524d\u5e94\u7528\u7684\u4f9d\u8d56\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u7c7b\u6216\u67d0\u4e9b\u7c7b\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 @Configuration ( proxyBeanMethods = false ) @ConditionalOnClass ({ Servlet . class , Tomcat . class , UpgradeProtocol . class }) @ConditionalOnMissingBean ( value = ServletWebServerFactory . class , search = SearchStrategy . CURRENT ) static class EmbeddedTomcat { @Bean TomcatServletWebServerFactory tomcatServletWebServerFactory ( ObjectProvider < TomcatConnectorCustomizer > connectorCustomizers , ObjectProvider < TomcatContextCustomizer > contextCustomizers , ObjectProvider < TomcatProtocolHandlerCustomizer <?>> protocolHandlerCustomizers ) { TomcatServletWebServerFactory factory = new TomcatServletWebServerFactory (); // orderedStream()\u8c03\u7528\u65f6\u4f1a\u53bbSpring\u5bb9\u5668\u4e2d\u627e\u5230TomcatConnectorCustomizer\u7c7b\u578b\u7684Bean\uff0c\u9ed8\u8ba4\u662f\u6ca1\u6709\u7684\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49 factory . getTomcatConnectorCustomizers () . addAll ( connectorCustomizers . orderedStream (). collect ( Collectors . toList ())); factory . getTomcatContextCustomizers () . addAll ( contextCustomizers . orderedStream (). collect ( Collectors . toList ())); factory . getTomcatProtocolHandlerCustomizers () . addAll ( protocolHandlerCustomizers . orderedStream (). collect ( Collectors . toList ())); return factory ; } } \u4e0a\u9762\u4ee3\u7801\u4e2d\u5c31\u7528\u5230\u4e86@ConditionalOnClass\uff0c\u7528\u6765\u5224\u65ad\u9879\u76ee\u4e2d\u662f\u5426\u5b58\u5728Servlet.class\u3001Tomcat.class\u3001UpgradeProtocol.class\u8fd9\u4e09\u4e2a\u7c7b\uff0c\u5982\u679c\u5b58\u5728\u5c31\u6ee1\u8db3\u5f53\u524d\u6761\u4ef6\uff0c\u5982\u679c\u9879\u76ee\u4e2d\u5f15\u5165\u4e86spring-boot-starter-tomcat\uff0c\u90a3\u5c31\u6709\u8fd9\u4e09\u4e2a\u7c7b\uff0c\u5982\u679c\u6ca1\u6709spring-boot-starter-tomcat\u90a3\u5c31\u53ef\u80fd\u6ca1\u6709\u8fd9\u4e09\u4e2a\u7c7b\uff08\u9664\u975e\u4f60\u81ea\u5df1\u5355\u72ec\u5f15\u5165\u4e86Tomcat\u76f8\u5173\u7684\u4f9d\u8d56\uff09\u3002 \u6240\u4ee5\u8fd9\u5c31\u505a\u5230\u4e86\uff0c\u5982\u679c\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u8981\u7528Tomcat\uff0c\u90a3\u5c31\u4f9d\u8d56spring-boot-starter-web\u5c31\u591f\u4e86\uff0c\u56e0\u4e3a\u5b83\u9ed8\u8ba4\u4f9d\u8d56\u4e86spring-boot-starter-tomcat\uff0c\u4ece\u800c\u4f9d\u8d56\u4e86Tomcat\uff0c\u4ece\u800cTomcat\u76f8\u5173\u7684Bean\u80fd\u751f\u6548\u3002 \u800c\u5982\u679c\u4e0d\u60f3\u7528Tomcat\uff0c\u90a3\u5c31\u5f97\u8fd9\u4e48\u5199\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> <exclusions> <exclusion> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-tomcat </artifactId> </exclusion> </exclusions> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-jetty </artifactId> </dependency> \u5f97\u628aspring-boot-starter-tomcat\u7ed9\u6392\u9664\u6389\uff0c\u518d\u6dfb\u52a0\u4e0aspring-boot-starter-jetty\u7684\u4f9d\u8d56\uff0c\u8fd9\u6837Tomcat\u7684Bean\u5c31\u4e0d\u4f1a\u751f\u6548\uff0cJetty\u7684Bean\u5c31\u80fd\u751f\u6548\uff0c\u4ece\u800c\u9879\u76ee\u4e2d\u7528\u7684\u5c31\u662fJetty\u3002 @ConditionalOnMissingBean @ConditionalOnMissingBean\u7684\u4f5c\u7528\u662f\u7528\u6765\u5224\u65ad\u67d0\u4e2aBean\u662f\u5426\u7f3a\u5931\uff0c\u5982\u679c \u4e0d\u5b58\u5728 \u67d0\u4e2aBean\uff0c\u90a3\u5c31 \u7b26\u5408\u8be5\u6761\u4ef6 \uff0c\u7406\u89e3\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u662f\u7ec6\u7ec6\u60f3\u4e00\u4e0b\u5c31\u4f1a\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u987a\u5e8f\u95ee\u9898\uff0c\u8fd8\u662f\u62ff\u4e0a\u9762\u7684\u4ee3\u7801\u4e3e\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 @Configuration ( proxyBeanMethods = false ) @ConditionalOnClass ({ Servlet . class , Tomcat . class , UpgradeProtocol . class }) @ConditionalOnMissingBean ( value = ServletWebServerFactory . class , search = SearchStrategy . CURRENT ) static class EmbeddedTomcat { @Bean TomcatServletWebServerFactory tomcatServletWebServerFactory ( ObjectProvider < TomcatConnectorCustomizer > connectorCustomizers , ObjectProvider < TomcatContextCustomizer > contextCustomizers , ObjectProvider < TomcatProtocolHandlerCustomizer <?>> protocolHandlerCustomizers ) { TomcatServletWebServerFactory factory = new TomcatServletWebServerFactory (); // orderedStream()\u8c03\u7528\u65f6\u4f1a\u53bbSpring\u5bb9\u5668\u4e2d\u627e\u5230TomcatConnectorCustomizer\u7c7b\u578b\u7684Bean\uff0c\u9ed8\u8ba4\u662f\u6ca1\u6709\u7684\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49 factory . getTomcatConnectorCustomizers () . addAll ( connectorCustomizers . orderedStream (). collect ( Collectors . toList ())); factory . getTomcatContextCustomizers () . addAll ( contextCustomizers . orderedStream (). collect ( Collectors . toList ())); factory . getTomcatProtocolHandlerCustomizers () . addAll ( protocolHandlerCustomizers . orderedStream (). collect ( Collectors . toList ())); return factory ; } } \u8fd9\u4e2a\u4ee3\u7801\u4e2d\u5c31\u7528\u5230\u4e86@ConditionalOnMissingBean\uff0c\u610f\u601d\u662f\u5982\u679c\u5f53\u524d\u4e0d\u5b58\u5728ServletWebServerFactory\u7c7b\u578b\u7684Bean\uff0c\u90a3\u5c31\u7b26\u5408\u6761\u4ef6\uff0c\u7ed3\u5408\u6574\u4f53\u4ee3\u7801\uff0c\u610f\u601d\u5c31\u662f\uff0c\uff1a \u5982\u679c\u7528\u6237\u81ea\u5df1 \u6ca1\u6709\u5b9a\u4e49 ServletWebServerFactory\u7c7b\u578b\u7684Bean\uff0c\u90a3\u4ee3\u7801\u4e2d\u6240\u5b9a\u4e49\u7684Bean\u5c31\u4f1a \u751f\u6548 \uff0c \u5982\u679c\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\u4e86ServletWebServerFactory\u7c7b\u578b\u7684Bean\uff0c\u90a3\u4ee3\u7801\u4e2d\u5b9a\u4e49\u7684Bean\u5c31\u4e0d\u751f\u6548 \u6240\u4ee5\u8fd9\u4e2a\u6ce8\u89e3\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0cSpringBoot\u5229\u7528\u8fd9\u4e2a\u6ce8\u89e3\u6765\u51b3\u5b9a\u5230\u5e95\u7528\u7528\u6237\u81ea\u5df1\u7684Bean\uff0c\u8fd8\u662f\u7528SpringBoot\u81ea\u52a8\u914d\u7f6e\u7684\u3002 \u5173\u952e\u95ee\u9898\u5728\u4e8e\uff0c\u4e0d\u7ba1\u662f\u81ea\u52a8\u914d\u7f6e\u7c7b\u4e2d\u5b9a\u4e49\u7684Bean\uff0c\u8fd8\u662f\u7528\u6237\u5b9a\u4e49\u7684Bean\uff0c\u90fd\u662f\u9700\u8981\u89e3\u6790\u7684\uff0c\u800c\u4e14\u662f\u6709\u4e00\u4e2a\u987a\u5e8f\u7684\u3002 \u5982\u679c\u662f\uff1a \u5148\u89e3\u6790\u7684SpringBoot\u81ea\u52a8\u914d\u7f6e\u7c7b\uff0c\u6bd4\u5982\u4e0a\u9762\u7684EmbeddedTomcat\u7c7b \u518d\u89e3\u6790\u7a0b\u5e8f\u5458\u5b9a\u4e49\u7684Bean \u90a3@ConditionalOnMissingBean\u7684\u5224\u65ad\u7ed3\u679c\u662f\u6709\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u662f\u5148\u89e3\u6790\u7684EmbeddedTomcat\uff0c\u5728\u89e3\u6790\u7684\u65f6\u5019\u662f\u6ca1\u6709\u53d1\u73b0\u7a0b\u5e8f\u5458\u6240\u5b9a\u4e49\u7684Bean\u7684\uff0c\u5c31\u4f1a\u8ba4\u4e3a\u7b26\u5408@ConditionalOnMissingBean\u7684\u6761\u4ef6\uff0c\u800c\u5b9e\u9645\u4e0a\u7a0b\u5e8f\u5458\u662f\u5b9a\u4e49\u4e86\u7684\uff0c\u53ea\u662f\u8fd8\u6ca1\u6709\u89e3\u6790\u5230\uff0c\u6240\u4ee5\u8fd9\u5c31\u9700\u8981SpringBoot\u628a\u8fd9\u4e2a\u987a\u5e8f\u63a7\u5236\u597d\uff0c\u63a7\u5236\u4e3a\uff1a \u5148\u89e3\u6790\u7528\u6237\u7684\u5b9a\u4e49\u7684Bean\uff0c\u4e5f\u5c31\u662f\u89e3\u6790\u7528\u6237\u5b9a\u4e49\u7684\u914d\u7f6e\u7c7b\uff08\u5305\u542b\u4e86\u626b\u63cf\u548c@Bean\u7684\u89e3\u6790\uff09 \u518d\u89e3\u6790SpringBoot\u4e2d\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b \u4e0d\u7ba1\u662f\u7528\u6237\u5b9a\u4e49\u7684\u914d\u7f6e\u7c7b\u8fd8\u662f\u81ea\u52a8\u914d\u7f6e\u7c7b\uff0c\u90fd\u662f\u914d\u7f6e\u7c7b\uff08\u7b80\u5355\u7406\u89e3\u5c31\u662f\u52a0\u4e86@Configuration\u6ce8\u89e3\uff09\u3002SpringBoot\u542f\u52a8\u65f6\uff0c\u6700\u6838\u5fc3\u7684\u4e5f\u5c31\u662f\u521b\u5efa\u4e00\u4e2aSpring\u5bb9\u5668\uff0c\u800c\u521b\u5efaSpring\u5bb9\u5668\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u6ce8\u89e3\u505a\u51e0\u4ef6\u4e8b\u60c5\uff1a \u628aSpringApplication.run(MyApplication.class)\u4f20\u5165\u8fdb\u6765\u7684MyApplication\u7c7b\u505a\u4e3a\u914d\u7f6e\u7c7b\u8fdb\u884c\u89e3\u6790 \u7531\u4e8eMyApplication\u7c7b\u4e0a\u5b9a\u4e49\u4e86@SpringBootApplication\uff0c\u76f8\u5f53\u4e8e\u5b9a\u4e49\u4e86@SpringBootConfiguration\u3001@EnableAutoConfiguration\u3001@ComponentScan\u6ce8\u89e3 \u6240\u4ee5SpringBoot\u4f1a\u8fdb\u4e00\u6b65\u89e3\u6790\u8fd9\u4e9b\u6ce8\u89e3 @EnableAutoConfiguration\uff1a\u901a\u8fc7@import\u6ce8\u89e3\u5bfc\u5165AutoConfigurationImportSelector\u8fd9\u4e2a\u914d\u7f6e\u7c7b\uff0c\u56e0\u4e3a\u5b83\u5b9e\u73b0\u4e86DeferredImportSelector\u63a5\u53e3\uff0c\u6240\u4ee5Spring\u4f1a\u5728\u628a\u5176\u4ed6\u914d\u7f6e\u7c7b\u90fd\u89e3\u6790\u5b8c\u4e4b\u540e\u624d\u89e3\u6790AutoConfigurationImportSelector\uff08Spring Framework\u4e2d\u7684\u77e5\u8bc6\uff09 @ComponentScan\uff1a\u626b\u63cf\uff0c\u626b\u63cf\u65f6\u4f1a\u626b\u63cf\u5230\u7528\u6237\u6240\u5b9a\u4e49\u7684\u914d\u7f6e\u7c7b\uff0c\u5e76\u89e3\u6790\u7528\u6237\u7684\u914d\u7f6e\u7c7b\uff0c\u6ce8\u610f\uff1a\u626b\u63cf\u662f\u626b\u63cf\u4e0d\u5230SpringBoot\u7684\u81ea\u52a8\u914d\u7f6e\u7684\u7c7b\uff0c\u56e0\u4e3a\u626b\u63cf\u7684\u5305\u8def\u5f84\u4e0d\u5339\u914d\uff0cSpringBoot\u7684\u5305\u90fd\u662forg.springframework.boot.xxxx\uff0c\u7528\u6237\u90fd\u662f\u81ea\u5df1\u7684\u5305\u8def\u5f84\u3002 \u901a\u8fc7\u4e0a\u8ff0\u8fc7\u7a0b\u6211\u4eec\u53d1\u73b0\uff0cSpring\u4f1a\u5728\u6700\u540e\u624d\u6765\u89e3\u6790AutoConfigurationImportSelector\u8fd9\u4e2a\u914d\u7f6e\u7c7b\uff0c\u800c\u8fd9\u4e2a\u7c7b\u7684\u4f5c\u7528\u5c31\u662f\u7528\u6765\u89e3\u6790SpringBoot\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\uff0c\u90a3\u65e2\u7136\u65e0\u6cd5\u626b\u63cf\u5230SpringBoot\u4e2d\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\uff0c\u90a3\u600e\u4e48\u77e5\u9053SpringBoot\u4e2d\u6709\u54ea\u4e9b\u81ea\u52a8\u914d\u7f6e\u7c7b\u5462\uff0c\u8fd9\u5c31\u9700\u8981spring.factories\u6587\u4ef6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSpringBoot\u4f1a\u63d0\u4f9b\u4e00\u4e2aspring.factories\u6587\u4ef6\uff0c\u5e76\u628a\u6240\u6709\u81ea\u52a8\u914d\u7f6e\u7c7b\u7684\u540d\u5b57\u8bb0\u5f55\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5230\u65f6\u5019\u542f\u52a8\u8fc7\u7a0b\u4e2d\u89e3\u6790\u8fd9\u4e2a\u6587\u4ef6\u5c31\u77e5\u9053\u6709\u54ea\u4e9b\u81ea\u52a8\u914d\u7f6e\u7c7b\u4e86\uff0c\u5e76\u4e14\u8fd9\u4ef6\u4e8b\u4e5f\u662f\u53d1\u751f\u5728\u89e3\u6790\u5b8c\u7528\u6237\u7684\u914d\u7f6e\u7c7b\u4e4b\u540e\u7684\u3002 \u81ea\u52a8\u914d\u7f6e\u5f00\u542f\u539f\u7406 \u6211\u4eec\u5728\u4f7f\u7528SpringBoot\u65f6\uff0c\u901a\u5e38\u4f7f\u7528\u7684\u662f@SpringBootApplication\u8fd9\u4e2a\u6ce8\u89e3\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 @SpringBootApplication public class MyApplication { public static void main ( String [] args ) { SpringApplication . run ( MyApplication . class ); } } \u800c\u8fd9\u4e2a\u6ce8\u89e3\u7684\u5b9a\u4e49\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 @Target ( ElementType . TYPE ) @Retention ( RetentionPolicy . RUNTIME ) @Documented @Inherited @SpringBootConfiguration @EnableAutoConfiguration @ComponentScan ( excludeFilters = { @Filter ( type = FilterType . CUSTOM , classes = TypeExcludeFilter . class ), @Filter ( type = FilterType . CUSTOM , classes = AutoConfigurationExcludeFilter . class ) }) public @interface SpringBootApplication { // ... } \u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u6ce8\u89e3\u4e0a\u6709\u53e6\u5916\u4e09\u4e2a\u6ce8\u89e3\uff1a @SpringBootConfiguration @EnableAutoConfiguration @ComponentScan \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a@SpringBootApplication\u662f\u4e00\u4e2a\u4e09\u5408\u4e00\u6ce8\u89e3\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u7528\uff1a 1 2 3 4 5 6 7 8 9 10 @SpringBootConfiguration @EnableAutoConfiguration @ComponentScan public class MyApplication { public static void main ( String [] args ) { SpringApplication . run ( MyApplication . class ); } } \u5982\u679c\u6211\u4eec\u8fd9\u4e48\u7528\u5c31\u80fd\u81ea\u5df1\u63a7\u5236\u8981\u4e0d\u8981\u7528@EnableAutoConfiguration\u8fd9\u4e2a\u6ce8\u89e3\uff0c\u5982\u679c\u7528\u5c31\u8868\u793a\u5f00\u542f\u81ea\u52a8\u914d\u7f6e\uff0c\u5982\u679c\u4e0d\u7528\u5c31\u8868\u793a\u4e0d\u5f00\u542f\u81ea\u52a8\u914d\u7f6e\uff0c\u90a3\u5f00\u542f\u548c\u4e0d\u5f00\u542f\u81ea\u52a8\u914d\u7f6e\u5230\u5e95\u8be5\u600e\u4e48\u7406\u89e3\u5462\uff1f \u6211\u4eec\u524d\u9762\u5206\u6790\u8fc7\uff0cSpringBoot\u7684\u81ea\u52a8\u914d\u7f6e\u5c31\u662fSpringBoot\u5e2e\u52a9\u7a0b\u5e8f\u5458\u914d\u7f6e\u4e00\u4e9bBean\uff0c\u4ece\u800c\u8ba9\u7a0b\u5e8f\u5458\u5728\u7528SpringBoot\u65f6\u53ef\u4ee5\u5c11\u53bb\u914d\u7f6e\u5f88\u591aBean\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5f00\u542f\u4e86\u81ea\u52a8\u914d\u7f6e\uff0c\u90a3\u6700\u7ec8Spring\u5bb9\u5668\u4e2d\u5c31\u6709SpringBoot\u5e2e\u6211\u4eec\u914d\u7f6e\u7684Bean\uff0c\u5982\u679c\u6ca1\u6709\u5f00\u542f\u81ea\u52a8\u914d\u7f6e\uff0c\u90a3Spring\u5bb9\u5668\u4e2d\u5c31\u6ca1\u6709\u8fd9\u4e9bBean\uff0c\u5c31\u9700\u8981\u7a0b\u5e8f\u5458\u53bb\u914d\u7f6e\u3002 \u90a3\u6211\u4eec\u6765\u770b\u770b@EnableAutoConfiguration\u8fd9\u4e2a\u6ce8\u89e3\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f\u5148\u770b\u6e90\u7801\u5b9a\u4e49\uff1a 1 2 3 4 5 6 7 8 @Target ( ElementType . TYPE ) @Retention ( RetentionPolicy . RUNTIME ) @Documented @Inherited @AutoConfigurationPackage @Import ( AutoConfigurationImportSelector . class ) public @interface EnableAutoConfiguration { } \u5176\u4e2d\u975e\u5e38\u6838\u5fc3\u7684\u5c31\u662f\uff1a 1 @Import ( AutoConfigurationImportSelector . class ) \u800cAutoConfigurationImportSelector\u5b9e\u73b0\u4e86DeferredImportSelector\u8fd9\u4e2a\u63a5\u53e3\uff0cSpring\u5bb9\u5668\u5728\u542f\u52a8\u65f6\uff0c\u4f1a\u5728\u89e3\u6790\u5b8c\u5176\u4ed6\u6240\u6709\u7a0b\u5e8f\u5458\u5b9a\u4e49\u7684\u914d\u7f6e\u7c7b\u4e4b\u540e\uff0c\u6765\u8c03\u7528AutoConfigurationImportSelector\u4e2d\u7684selectImports\u65b9\u6cd5\uff0c\u7136\u540e\u628a\u8be5\u65b9\u6cd5\u8fd4\u56de\u7684\u7c7b\u540d\u5bf9\u5e94\u7684\u7c7b\u4f5c\u4e3a\u914d\u7f6e\u7c7b\u8fdb\u884c\u89e3\u6790\u3002 \u8be5\u65b9\u6cd5\u4f1a\u5229\u7528SpringFactoriesLoader\u627e\u5230\u6240\u6709\u7684META-INF/spring.factories\u6587\u4ef6\u4e2dkey\u4e3aEnableAutoConfiguration.class\u7684value\u503c\uff0c\u4e5f\u5c31\u662f\u4f17\u591a\u81ea\u52a8\u914d\u7f6e\u7c7b\u7684\u7c7b\u540d\u3002 \u62ff\u5230\u8fd9\u4e9b\u7c7b\u540d\u540e\u4f1a\u8fdb\u884c\u53bb\u91cd\uff0c\u53bb\u91cd\u7684\u4ee3\u7801\u4e3a\uff1a 1 new ArrayList <> ( new LinkedHashSet <> ( list )) \u53bb\u91cd\u5b8c\u4e4b\u540e\uff0c\u5c31\u4f1a\u770b\u662f\u5426\u5b58\u5728\u67d0\u4e9b\u81ea\u52a8\u914d\u7f6e\u7c7b\u9700\u8981\u6392\u9664\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7@EnableAutoConfiguration\u6ce8\u89e3\u7684exclude\u5c5e\u6027\uff0c\u6216\u8005spring.autoconfigure.exclude\u914d\u7f6e\u6765\u6307\u5b9a\u4e00\u4e9b\u81ea\u52a8\u914d\u7f6e\u7c7b\u7684\u540d\u5b57\uff0c\u7136\u540e\u628a\u5b83\u4eec\u4ece\u81ea\u52a8\u914d\u7f6e\u7c7b\u96c6\u5408\u4e2d\u6392\u9664\u6389\u3002 \u7136\u540e\u4f1a\u7ee7\u7eed\u5229\u7528ConfigurationClassFilter\u5bf9\u81ea\u52a8\u914d\u7f6e\u7c7b\u8fdb\u884c\u8fdb\u4e00\u6b65\u7b5b\u9009\uff0cConfigurationClassFilter\u4f1a\u5229\u7528AutoConfigurationMetadata\u8fdb\u884c\u7b5b\u9009\uff0c\u800cAutoConfigurationMetadata\u5bf9\u8c61\u5bf9\u5e94\u7684\u662f\"META-INF/spring-autoconfigure-metadata.properties\"\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\uff0c\u8fd9\u662f\u4e00\u79cd\u52a0\u5febSpringBoot\u542f\u52a8\u901f\u5ea6\u7684\u673a\u5236\uff0c\u9ed8\u8ba4\u662f\u5f00\u542f\u4e86\u7684\uff08\u4e0d\u8fc7\u8981\u901a\u8fc7maven\u6216gradle\u7684\u65b9\u5f0f\u5f15\u5165springboot\u7684\u4f9d\u8d56\u6765\u4f7f\u7528\u624d\u80fd\u770b\u5230\u6548\u679c\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u662f\u5728SpringBoot\u6e90\u7801\u5de5\u7a0b\u7f16\u8bd1\u7684\u65f6\u5019\u81ea\u52a8\u751f\u6210\u51fa\u6765\u7684\uff0c\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u624b\u52a8\u521b\u5efa\u8fd9\u4e2a\u6587\u4ef6\uff0c\u4ee5\u53ca\u8fd9\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff09\uff0c\u81ea\u52a8\u751f\u6210\u7684\u8fd9\u4e2a\u6587\u4ef6\u5185\u5bb9\u6837\u4f8b\uff1a \u5185\u5bb9\u683c\u5f0f\u4e3a\uff1a \u81ea\u52a8\u914d\u7f6e\u7c7b\u540d.\u6761\u4ef6\u6ce8\u89e3=\u6761\u4ef6 \u6709\u4e86\u8fd9\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff0cSpringBoot\u4f1a\u5728\u901a\u8fc7spring.facotries\u6587\u4ef6\u627e\u5230\u6240\u6709\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\u540e\uff0c\u4f1a\u628a\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\u8bfb\u51fa\u6765\uff0c\u7136\u540e\u5229\u7528AutoConfigurationImportFilter\u5bf9\u6240\u6709\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\u8fdb\u884c\u6761\u4ef6\u5339\u914d\uff0c\u8fd9\u91cc\u7684\u6761\u4ef6\u5224\u65ad\uff0c\u53ea\u4f1a\u5224\u65ad\u6240\u9700\u8981\u7684\u7c7b\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u9700\u8981\u7684\u7c7b\uff0c\u6216\u8005\u9700\u8981\u7684Bean\u5bf9\u5e94\u7684\u7c7b\uff0c\u90fd\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u80af\u5b9a\u4e0d\u7b26\u5408\u6761\u4ef6\u4e86\uff0c\u5bf9\u4e8e\u50cf@ConditionalOnMissingBean\u8fd9\u6837\u7684\u6761\u4ef6\uff0c\u5728\u8fd9\u4e00\u6b65\u662f\u4e0d\u4f1a\u53bb\u5224\u65ad\u7684\uff0c\u6700\u540e\u6761\u4ef6\u5339\u914d\u6210\u529f\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\u5c31\u4f1a\u8bb0\u5f55\u4e0b\u6765\uff0c\u5e76\u6700\u7ec8\u8fd4\u56de\u7ed9Spring\u5bb9\u5668\uff0c\u7ee7\u7eed\u8fdb\u884c\u5176\u4ed6\u6761\u4ef6\u7684\u5339\u914d\u3002 \u6240\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u673a\u5236\uff0c\u4f7f\u5f97Spring\u5e76\u4e0d\u9700\u8981\u89e3\u6790\u6240\u6709\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u6548\u7387\u3002 \u5f53\u7136\u5728\u8fd9\u4e2a\u8fc7\u6ee4\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u65e5\u5fd7\u7ea7\u522b\u7b49\u4e8etrace\u7ea7\u522b\uff0c\u90a3\u4e48\u4f1a\u628a\u6240\u6709\u6761\u4ef6\u4e0d\u5339\u914d\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\u8bb0\u5f55\u5230\u65e5\u5fd7\u4e2d\uff0c\u5982\u679c\u65e5\u5fd7\u6846\u67b6\u914d\u7f6e\u4e86\u6253\u5370\u5230\u63a7\u5236\u53f0\uff0c\u90a3\u5c31\u4f1a\u6253\u5370\u5230\u63a7\u5236\u53f0\uff0c\u6bd4\u5982\uff1a \u5728SpringBoot\u4e2d\uff0c\u8fd8\u6709\u4e00\u4e2a\u66f4\u52a0\u5f3a\u5927\u7684\u7edf\u8ba1\u81ea\u52a8\u914d\u7f6e\u7c7b\u5339\u914d\u7ed3\u679c\u7684\u529f\u80fd\uff0c\u5c31\u662f\u53ef\u4ee5\u914d\u7f6edebug=true\uff0c\u53ea\u8981\u5f00\u542f\u4e86\u8fd9\u4e2a\u914d\u7f6e\uff0c\u90a3\u4e48Spring\u5728\u89e3\u6790\u6bcf\u4e00\u4e2a\u81ea\u52a8\u914d\u7f6e\u7c7b\u65f6\uff0c\u5c31\u4f1a\u5c06\u662f\u5426\u5339\u914d\u7684\u7ed3\u679c\u8fdb\u884c\u8bb0\u5f55\uff0c\u6bd4\u5982\u5f00\u542f\u4e86debug=true\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u770b\u5230\uff1a \u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u5339\u914d\u7ed3\u679c\u5206\u522b\u8bb0\u5f55\u4e86\uff1a \u54ea\u4e9b\u81ea\u52a8\u914d\u7f6e\u7c7b\u7684\u6761\u4ef6\u662f\u5339\u914d\u7684 \u54ea\u4e9b\u81ea\u52a8\u914d\u7f6e\u7c7b\u7684\u6761\u4ef6\u662f\u4e0d\u5339\u914d\u7684\uff0c\u5e76\u4e14\u5177\u4f53\u539f\u56e0\u4e5f\u4f1a\u6253\u5370\u51fa\u6765\uff0c\u6bd4\u5982\u662f\u54ea\u4e2a\u7c7b\u4e0d\u5b58\u5728 \u54ea\u4e9b\u81ea\u52a8\u914d\u7f6e\u7c7b\u662f\u65e0\u6761\u4ef6\u7684 \u8fd9\u4e2a\u529f\u80fd\u7684\u5b9e\u73b0\uff0c\u662fSpring\u89e3\u6790\u5177\u4f53\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\u4e0a\u7684\u5404\u79cd\u6761\u4ef6\u6ce8\u89e3\u7684\u65f6\u5019\u7edf\u8ba1\u7684\uff0c\u6bcf\u89e3\u6790\u4e00\u4e2a\u6761\u4ef6\u6ce8\u89e3\uff0c\u5c31\u4f1a\u628a\u7ed3\u679c\u8bb0\u5f55\u5728ConditionEvaluationReport\u5bf9\u8c61\u4e2d\uff0c\u5f53Spring\u5bb9\u5668\u542f\u52a8\u5b8c\u6210\u540e\uff0c\u4f1a\u53d1\u5e03\u4e00\u4e2aContextRefreshedEvent\u4e8b\u4ef6\uff0c\u800cSpringBoot\u63d0\u4f9b\u4e86\u4e00\u4e2aConditionEvaluationReportLoggingListener\u4f1a\u5904\u7406\u8fd9\u4e2a\u4e8b\u4ef6\uff0c\u63a5\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6\u540e\u5c31\u4f1a\u628a\u7edf\u8ba1\u7ed3\u679c\u8fdb\u884c\u6253\u5370\u3002 \u81ea\u52a8\u914d\u7f6e\u7c7b\u89e3\u6790\u7684\u5927\u4f53\u6d41\u7a0b\u4e3a\uff1a \u8bfb\u53d6spring.factories\u4e2d\u7684\u6240\u6709\u81ea\u52a8\u914d\u7f6e\u7c7b \u770b\u662f\u5426\u914d\u7f6e\u4e86\u9700\u8981\u6392\u9664\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\uff0c\u8fdb\u884c\u6392\u9664 \u7136\u540e\u5229\u7528spring-autoconfigure-metadata.properties\u6587\u4ef6\u6765\u8fc7\u6ee4\u6389\u4e00\u4e9b\u81ea\u52a8\u914d\u7f6e\u7c7b\uff08\u6761\u4ef6\u4e2d\u6307\u5b9a\u7684\u7c7b\u4e0d\u5b58\u5728\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\uff09 \u89e3\u6790\u8fc7\u6ee4\u540e\u81ea\u52a8\u914d\u7f6e\u7c7b\uff0c\u5224\u65ad\u81ea\u52a8\u914d\u7f6e\u7c7b\u6240\u6709\u7684\u6761\u4ef6\u6ce8\u89e3\uff0c\u6761\u4ef6\u5168\u90e8\u7b26\u5408\u624d\u4f1a\u771f\u6b63\u53bb\u89e3\u6790\u81ea\u52a8\u914d\u7f6e\u7c7b\u4e0a\u7684\u5176\u4ed6\u5185\u5bb9\uff0c\u6bd4\u5982@Bean\uff08\u4e5f\u4f1a\u8fdb\u884c\u6761\u4ef6\u5224\u65ad\uff09 Spring Boot\u6574\u5408Tomcat\u5e95\u5c42\u539f\u7406 \u901a\u8fc7\u524d\u9762\u6211\u4eec\u4f1aSpringBoot\u7684\u81ea\u52a8\u914d\u7f6e\u673a\u5236\u3001Starter\u673a\u5236\u3001\u542f\u52a8\u8fc7\u7a0b\u7684\u5e95\u5c42\u5206\u6790\uff0c\u6211\u4eec\u62ff\u4e00\u4e2a\u5b9e\u9645\u7684\u4e1a\u52a1\u6848\u4f8b\u6765\u4e32\u8bb2\u4e00\u4e0b\uff0c\u90a3\u5c31\u662fSpringBoot\u548cTomcat\u7684\u6574\u5408\u3002 \u6211\u4eec\u77e5\u9053\uff0c\u53ea\u8981\u6211\u4eec\u7684\u9879\u76ee\u6dfb\u52a0\u7684starter\u4e3a\uff1aspring-boot-starter-web\uff0c\u90a3\u4e48\u6211\u4eec\u542f\u52a8\u9879\u76ee\u65f6\uff0cSpringBoot\u5c31\u4f1a\u81ea\u52a8\u542f\u52a8\u4e00\u4e2aTomcat\u3002 \u90a3\u4e48\u8fd9\u662f\u600e\u4e48\u505a\u5230\u7684\u5462\uff1f \u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728spring-boot-starter-web\u8fd9\u4e2astarter\u4e2d\uff0c\u5176\u5b9e\u7b80\u4ecb\u7684\u5f15\u5165\u4e86spring-boot-starter-tomcat\u8fd9\u4e2astarter\uff0c\u8fd9\u4e2aspring-boot-starter-tomcat\u53c8\u5f15\u5165\u4e86tomcat-embed-core\u4f9d\u8d56\uff0c\u6240\u4ee5\u53ea\u8981\u6211\u4eec\u9879\u76ee\u4e2d\u4f9d\u8d56\u4e86spring-boot-starter-web\u5c31\u76f8\u5f53\u4e8e\u4f9d\u8d56\u4e86Tomcat\u3002 \u7136\u540e\u5728SpringBoot\u4f17\u591a\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\u4e2d\uff0c\u6709\u4e00\u4e2a\u81ea\u52a8\u914d\u7f6e\u7c7b\u53eb\u505aServletWebServerFactoryAutoConfiguration\uff0c\u5b9a\u4e49\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 @Configuration ( proxyBeanMethods = false ) @AutoConfigureOrder ( Ordered . HIGHEST_PRECEDENCE ) @ConditionalOnClass ( ServletRequest . class ) @ConditionalOnWebApplication ( type = Type . SERVLET ) @EnableConfigurationProperties ( ServerProperties . class ) @Import ({ ServletWebServerFactoryAutoConfiguration . BeanPostProcessorsRegistrar . class , ServletWebServerFactoryConfiguration . EmbeddedTomcat . class , ServletWebServerFactoryConfiguration . EmbeddedJetty . class , ServletWebServerFactoryConfiguration . EmbeddedUndertow . class }) public class ServletWebServerFactoryAutoConfiguration { // ... } \u9996\u5148\u770b\u8fd9\u4e2a\u81ea\u52a8\u914d\u7f6e\u7c7b\u6240\u9700\u8981\u7684\u6761\u4ef6\uff1a @ConditionalOnClass(ServletRequest.class)\uff1a\u8868\u793a\u9879\u76ee\u4f9d\u8d56\u4e2d\u8981\u6709ServletRequest\u7c7b\uff08server api\uff09 @ConditionalOnWebApplication(type = Type.SERVLET)\uff1a\u8868\u793a\u9879\u76ee\u5e94\u7528\u7c7b\u578b\u5f97\u662fSpringMVC\uff08\u8bb2\u542f\u52a8\u8fc7\u7a0b\u7684\u65f6\u5019\u5c31\u77e5\u9053\u5982\u4f55\u5224\u65ad\u4e00\u4e2aSpringBoot\u5e94\u7528\u7684\u7c7b\u578b\u4e86\uff09 \u5728\u4e0a\u9762\u63d0\u5230\u7684spring-boot-starter-web\u4e2d\uff0c\u5176\u5b9e\u8fd8\u95f4\u63a5\u7684\u5f15\u5165\u4e86spring-web\u3001spring-webmvc\u7b49\u4f9d\u8d56\uff0c\u8fd9\u5c31\u4f7f\u5f97\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u6ee1\u8db3\uff0c\u800c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6761\u4ef6\u7684ServletRequest\u7c7b\uff0c\u867d\u7136\u5b83\u662fServlet\u89c4\u8303\u4e2d\u7684\u7c7b\uff0c\u4f46\u662f\u5728\u6211\u4eec\u6240\u4f9d\u8d56\u7684tomcat-embed-core\u8fd9\u4e2ajar\u5305\u4e2d\u662f\u5b58\u5728\u8fd9\u4e2a\u7c7b\u7684\uff0c\u8fd9\u662f\u56e0\u4e3aTomcat\u5728\u81ea\u5df1\u7684\u6e90\u7801\u4e2d\u628aServlet\u89c4\u8303\u4e2d\u7684\u4e00\u4e9b\u4ee3\u7801\u4e5f\u5305\u542b\u8fdb\u53bb\u4e86\uff0c\u6bd4\u5982\uff1a \u8fd9\u5c31\u4f7f\u5f97ServletWebServerFactoryAutoConfiguration\u8fd9\u4e2a\u81ea\u52a8\u914d\u7f6e\u7684\u4e24\u4e2a\u6761\u4ef6\u90fd\u7b26\u5408\uff0c\u90a3\u4e48Spring\u5c31\u80fd\u53bb\u89e3\u6790\u5b83\uff0c\u4e00\u89e3\u6790\u5b83\u5c31\u53d1\u73b0\u8fd9\u4e2a\u81ea\u52a8\u914d\u7f6e\u7c7bImport\u8fdb\u6765\u4e86\u4e09\u4e2a\u7c7b\uff1a ServletWebServerFactoryConfiguration.EmbeddedTomcat.class ServletWebServerFactoryConfiguration.EmbeddedJetty.class ServletWebServerFactoryConfiguration.EmbeddedUndertow.class \u5f88\u660e\u663e\uff0cImport\u8fdb\u6765\u7684\u8fd9\u4e09\u4e2a\u7c7b\u5e94\u8be5\u662f\u5dee\u4e0d\u591a\uff0c\u6211\u4eec\u770bEmbeddedTomcat\u8fd9\u4e2a\u7c7b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 @Configuration ( proxyBeanMethods = false ) @ConditionalOnClass ({ Servlet . class , Tomcat . class , UpgradeProtocol . class }) @ConditionalOnMissingBean ( value = ServletWebServerFactory . class , search = SearchStrategy . CURRENT ) static class EmbeddedTomcat { @Bean TomcatServletWebServerFactory tomcatServletWebServerFactory ( ObjectProvider < TomcatConnectorCustomizer > connectorCustomizers , ObjectProvider < TomcatContextCustomizer > contextCustomizers , ObjectProvider < TomcatProtocolHandlerCustomizer <?>> protocolHandlerCustomizers ) { TomcatServletWebServerFactory factory = new TomcatServletWebServerFactory (); // orderedStream()\u8c03\u7528\u65f6\u4f1a\u53bbSpring\u5bb9\u5668\u4e2d\u627e\u5230TomcatConnectorCustomizer\u7c7b\u578b\u7684Bean\uff0c\u9ed8\u8ba4\u662f\u6ca1\u6709\u7684\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49 factory . getTomcatConnectorCustomizers () . addAll ( connectorCustomizers . orderedStream (). collect ( Collectors . toList ())); factory . getTomcatContextCustomizers () . addAll ( contextCustomizers . orderedStream (). collect ( Collectors . toList ())); factory . getTomcatProtocolHandlerCustomizers () . addAll ( protocolHandlerCustomizers . orderedStream (). collect ( Collectors . toList ())); return factory ; } } \u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u7c7b\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff0c\u6240\u4ee5Spring\u4e5f\u4f1a\u6765\u89e3\u6790\u5b83\uff0c\u4e0d\u8fc7\u5b83\u4e5f\u6709\u4e24\u4e2a\u6761\u4ef6\uff1a @ConditionalOnClass({ Servlet.class, Tomcat.class, UpgradeProtocol.class })\uff1a\u9879\u76ee\u4f9d\u8d56\u4e2d\u8981\u6709Servlet.class\u3001Tomcat.class\u3001UpgradeProtocol.class\u8fd9\u4e09\u4e2a\u7c7b\uff0c\u8fd9\u4e2a\u6761\u4ef6\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\uff0c\u9879\u76ee\u4f9d\u8d56\u4e2d\u6709Tomcat\u7684\u7c7b\uff0c\u90a3\u8fd9\u4e2a\u6761\u4ef6\u5c31\u7b26\u5408\u3002 @ConditionalOnMissingBean(value = ServletWebServerFactory.class, search = SearchStrategy.CURRENT)\uff0c\u9879\u76ee\u4e2d\u6ca1\u6709ServletWebServerFactory\u7c7b\u578b\u7684Bean\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u914d\u7f6e\u7c7b\u7684\u5185\u90e8\u5c31\u662f\u5b9a\u4e49\u4e86\u4e00\u4e2aTomcatServletWebServerFactory\u7c7b\u578b\u7684Bean\uff0cTomcatServletWebServerFactory\u5b9e\u73b0\u4e86ServletWebServerFactory\u63a5\u53e3\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6761\u4ef6\u6ce8\u89e3\u7684\u610f\u601d\u5c31\u662f\uff0c\u5982\u679c\u7a0b\u5e8f\u5458\u81ea\u5df1\u6ca1\u6709\u5b9a\u4e49ServletWebServerFactory\u7c7b\u578b\u7684Bean\uff0c\u90a3\u4e48\u5c31\u7b26\u5408\u6761\u4ef6\uff0c\u4e0d\u7136\uff0c\u5982\u679c\u7a0b\u5e8f\u5458\u81ea\u5df1\u5b9a\u4e49\u4e86ServletWebServerFactory\u7c7b\u578b\u7684Bean\uff0c\u90a3\u4e48\u6761\u4ef6\u5c31\u4e0d\u7b26\u5408\uff0c\u4e5f\u5c31\u5bfc\u81f4SpringBoot\u7ed9\u6211\u4eec\u5b9a\u4e49\u7684TomcatServletWebServerFactory\u8fd9\u4e2aBean\u5c31\u4e0d\u4f1a\u751f\u6548\uff0c\u6700\u7ec8\u751f\u6548\u7684\u5c31\u662f\u7a0b\u5e8f\u5458\u81ea\u5df1\u5b9a\u4e49\u7684\u3002 \u6240\u4ee5\uff0c\u901a\u5e38\u53ea\u8981\u6211\u4eec\u9879\u76ee\u4f9d\u8d56\u4e2d\u6709Tomcat\u4f9d\u8d56\uff0c\u90a3\u5c31\u7b26\u5408\u6761\u4ef6\uff0c\u90a3\u6700\u7ec8Spring\u5bb9\u5668\u4e2d\u5c31\u4f1a\u6709TomcatServletWebServerFactory\u8fd9\u4e2aBean\u3002 \u5bf9\u4e8e\u53e6\u5916\u7684EmbeddedJetty\u548cEmbeddedUndertow\uff0c\u4e5f\u5dee\u4e0d\u591a\uff0c\u90fd\u662f\u5224\u65ad\u9879\u76ee\u4f9d\u8d56\u4e2d\u662f\u5426\u6709Jetty\u548cUndertow\u7684\u4f9d\u8d56\uff0c\u5982\u679c\u6709\uff0c\u90a3\u4e48\u5bf9\u5e94\u5728Spring\u5bb9\u5668\u4e2d\u5c31\u4f1a\u5b58\u5728JettyServletWebServerFactory\u7c7b\u578b\u7684Bean\u3001\u6216\u8005\u5b58\u5728UndertowServletWebServerFactory\u7c7b\u578b\u7684Bean\u3002 \u603b\u7ed3\u4e00\u4e0b\uff1a \u6709Tomcat\u4f9d\u8d56\uff0c\u5c31\u6709TomcatServletWebServerFactory\u8fd9\u4e2aBean \u6709Jetty\u4f9d\u8d56\uff0c\u5c31\u6709JettyServletWebServerFactory\u8fd9\u4e2aBean \u6709Undertow\u4f9d\u8d56\uff0c\u5c31\u6709UndertowServletWebServerFactory\u8fd9\u4e2aBean \u90a3\u4e48SpringBoot\u7ed9\u6211\u4eec\u914d\u7f6e\u7684\u8fd9\u51e0\u4e2aBean\u5230\u5e95\u6709\u4ec0\u4e48\u7528\u5462\uff1f \u6211\u4eec\u524d\u9762\u8bf4\u5230\uff0cTomcatServletWebServerFactory\u5b9e\u73b0\u4e86ServletWebServerFactory\u8fd9\u4e2a\u63a5\u53e3\uff0c\u8fd9\u4e2a\u63a5\u53e3\u7684\u5b9a\u4e49\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 public interface ServletWebServerFactory { WebServer getWebServer ( ServletContextInitializer ... initializers ); } public interface WebServer { void start () throws WebServerException ; void stop () throws WebServerException ; int getPort (); } \u6211\u4eec\u53d1\u73b0ServletWebServerFactory\u5176\u5b9e\u5c31\u662f\u7528\u6765\u83b7\u5f97WebServer\u5bf9\u8c61\u7684\uff0c\u800cWebServer\u62e5\u6709\u542f\u52a8\u3001\u505c\u6b62\u3001\u83b7\u53d6\u7aef\u53e3\u7b49\u65b9\u6cd5\uff0c\u90a3\u4e48\u5f88\u81ea\u7136\uff0c\u6211\u4eec\u5c31\u53d1\u73b0WebServer\u5176\u5b9e\u6307\u7684\u5c31\u662fTomcat\u3001Jetty\u3001Undertow\uff0c\u800cTomcatServletWebServerFactory\u5c31\u662f\u7528\u6765\u751f\u6210Tomcat\u6240\u5bf9\u5e94\u7684WebServer\u5bf9\u8c61\uff0c\u5177\u4f53\u4e00\u70b9\u5c31\u662fTomcatWebServer\u5bf9\u8c61\uff0c\u5e76\u4e14\u5728\u751f\u6210TomcatWebServer\u5bf9\u8c61\u65f6\u4f1a\u628aTomcat\u7ed9\u542f\u52a8\u8d77\u6765\uff0c\u5728\u6e90\u7801\u4e2d\uff0c\u8c03\u7528TomcatServletWebServerFactory\u5bf9\u8c61\u7684getWebServer()\u65b9\u6cd5\u65f6\u5c31\u4f1a\u542f\u52a8Tomcat\u3002 \u6211\u4eec\u518d\u6765\u770bTomcatServletWebServerFactory\u8fd9\u4e2aBean\u7684\u5b9a\u4e49\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @Bean TomcatServletWebServerFactory tomcatServletWebServerFactory ( ObjectProvider < TomcatConnectorCustomizer > connectorCustomizers , ObjectProvider < TomcatContextCustomizer > contextCustomizers , ObjectProvider < TomcatProtocolHandlerCustomizer <?>> protocolHandlerCustomizers ) { TomcatServletWebServerFactory factory = new TomcatServletWebServerFactory (); // orderedStream()\u8c03\u7528\u65f6\u4f1a\u53bbSpring\u5bb9\u5668\u4e2d\u627e\u5230TomcatConnectorCustomizer\u7c7b\u578b\u7684Bean\uff0c\u9ed8\u8ba4\u662f\u6ca1\u6709\u7684\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49 factory . getTomcatConnectorCustomizers () . addAll ( connectorCustomizers . orderedStream (). collect ( Collectors . toList ())); factory . getTomcatContextCustomizers () . addAll ( contextCustomizers . orderedStream (). collect ( Collectors . toList ())); factory . getTomcatProtocolHandlerCustomizers () . addAll ( protocolHandlerCustomizers . orderedStream (). collect ( Collectors . toList ())); return factory ; } \u8981\u6784\u9020\u8fd9\u4e2aBean\uff0cSpring\u4f1a\u4eceSpring\u5bb9\u5668\u4e2d\u83b7\u53d6\u5230TomcatConnectorCustomizer\u3001TomcatContextCustomizer\u3001TomcatProtocolHandlerCustomizer\u8fd9\u4e09\u4e2a\u7c7b\u578b\u7684Bean\uff0c\u7136\u540e\u628a\u5b83\u4eec\u6dfb\u52a0\u5230TomcatServletWebServerFactory\u5bf9\u8c61\u4e2d\u53bb\uff0c\u5f88\u660e\u663e\u8fd9\u4e09\u79cdBean\u662f\u7528\u6765\u914d\u7f6eTomcat\u7684\uff0c\u6bd4\u5982\uff1a TomcatConnectorCustomizer\uff1a\u662f\u7528\u6765\u914d\u7f6eTomcat\u4e2d\u7684Connector\u7ec4\u4ef6\u7684 TomcatContextCustomizer\uff1a\u662f\u7528\u6765\u914d\u7f6eTomcat\u4e2d\u7684Context\u7ec4\u4ef6\u7684 TomcatProtocolHandlerCustomizer\uff1a\u662f\u7528\u6765\u914d\u7f6eTomcat\u4e2d\u7684ProtocolHandler\u7ec4\u4ef6\u7684 \u4e5f\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49TomcatConnectorCustomizer\u7c7b\u578b\u7684Bean\uff0c\u6765\u5bf9Tomcat\u8fdb\u884c\u914d\u7f6e\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 @SpringBootApplication public class MyApplication { @Bean public TomcatConnectorCustomizer tomcatConnectorCustomizer (){ return new TomcatConnectorCustomizer () { @Override public void customize ( Connector connector ) { connector . setPort ( 8888 ); } }; } public static void main ( String [] args ) { SpringApplication . run ( MyApplication . class ); } } \u8fd9\u6837Tomcat\u5c31\u4f1a\u7ed1\u5b9a8888\u8fd9\u4e2a\u7aef\u53e3\u3002 \u6709\u4e86TomcatServletWebServerFactory\u8fd9\u4e2aBean\u4e4b\u540e\uff0c\u5728SpringBoot\u7684\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u6267\u884cServletWebServerApplicationContext\u7684onRefresh()\u65b9\u6cd5\uff0c\u800c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8c03\u7528createWebServer()\u65b9\u6cd5\uff0c\u800c\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u4e24\u884c\u4ee3\u7801\u4e3a\uff1a 1 2 ServletWebServerFactory factory = getWebServerFactory (); this . webServer = factory . getWebServer ( getSelfInitializer ()); \u5f88\u660e\u663e\uff0cgetWebServerFactory()\u8d1f\u8d23\u83b7\u53d6\u5177\u4f53\u7684ServletWebServerFactory\u5bf9\u8c61\uff0c\u8981\u4e48\u662fTomcatServletWebServerFactory\u5bf9\u8c61\uff0c\u8981\u4e48\u662fJettyServletWebServerFactory\u5bf9\u8c61\uff0c\u8981\u4e48\u662fUndertowServletWebServerFactory\u5bf9\u8c61\uff0c\u6ce8\u610f\u53ea\u80fd\u83b7\u53d6\u5230\u4e00\u4e2a\uff0c\u7136\u540e\u8c03\u7528\u8be5\u5bf9\u8c61\u7684getWebServer\u65b9\u6cd5\uff0c\u542f\u52a8\u5bf9\u5e94\u7684Tomcat\u3001\u6216\u8005Jetty\u3001\u6216\u8005Undertow\u3002 getWebServerFactory\u65b9\u6cd5\u4e2d\u7684\u903b\u8f91\u6bd4\u8f83\u7b80\u5355\uff0c\u83b7\u53d6Spring\u5bb9\u5668\u4e2d\u7684ServletWebServerFactory\u7c7b\u578b\u7684Bean\u5bf9\u8c61\uff0c\u5982\u679c\u6ca1\u6709\u83b7\u53d6\u5230\u5219\u629b\u5f02\u5e38\uff0c\u5982\u679c\u627e\u5230\u591a\u4e2a\u4e5f\u629b\u5f02\u5e38\uff0c\u4e5f\u5c31\u662f\u5728Spring\u5bb9\u5668\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aServletWebServerFactory\u7c7b\u578b\u7684Bean\u5bf9\u8c61\u3002 \u62ff\u5230TomcatServletWebServerFactory\u5bf9\u8c61\u540e\uff0c\u5c31\u8c03\u7528\u5b83\u7684getWebServer\u65b9\u6cd5\uff0c\u800c\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u5c31\u4f1a\u751f\u6210\u4e00\u4e2aTomcat\u5bf9\u8c61\uff0c\u5e76\u4e14\u5229\u7528\u524d\u9762\u7684TomcatConnectorCustomizer\u7b49\u7b49\u4f1aTomcat\u5bf9\u8c61\u8fdb\u884c\u914d\u7f6e\uff0c\u6700\u540e\u542f\u52a8Tomcat\u3002 \u8fd9\u6837\u5728\u542f\u52a8\u5e94\u7528\u65f6\u5c31\u5b8c\u6210\u4e86Tomcat\u7684\u542f\u52a8\uff0c\u5230\u6b64\u6211\u4eec\u901a\u8fc7\u8fd9\u4e2a\u6848\u4f8b\u4e5f\u770b\u5230\u4e86\u5177\u4f53\u7684Starter\u673a\u5236\u3001\u81ea\u52a8\u914d\u7f6e\u7684\u5177\u4f53\u4f7f\u7528\u3002 \u4e0d\u8fc7\u989d\u5916\u6709\u4e00\u70b9\u8981\u63d0\u4e00\u4e0b\uff0c\u6211\u4eec\u524d\u9762\u63d0\u5230\u4e86\u6211\u4eec\u53ef\u4ee5\u5229\u7528TomcatConnectorCustomizer\u5bf9Tomca\u4e2d\u7684Connector\u7ec4\u4ef6\u8fdb\u884c\u914d\u7f6e\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u60f3\u5230\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSpringBoot\u662f\u4e0d\u662f\u5c31\u662f\u63d0\u4f9b\u4e86\u4e00\u4e2aTomcatConnectorCustomizer\u7684Bean\uff0c\u7136\u540e\u7ed9Connector\u914d\u7f6e\u4e868080\u7aef\u53e3\uff0c\u6216\u8005\u4eceEnvironment\u5bf9\u8c61\u4e2d\u83b7\u53d6server.port\u914d\u7f6e\uff0c\u5e76\u8bbe\u7f6e\u5230Connector\u4e2d\u53bb\u5462\uff1f \u5e76\u4e0d\u662f\uff0c\u56e0\u4e3a\u5982\u679cSpringBoot\u8fd9\u4e48\u5b9e\u73b0\uff0c\u90a3\u4e48\u9ed8\u8ba4\u5c31\u5f97\u63d0\u4f9b\u4e09\u4e2aConnectorCustomizer\u7684Bean\uff0c\u4e00\u4e2aTomcatConnectorCustomizer\u3001\u4e00\u4e2aJettyConnectorCustomizer\u3001\u4e00\u4e2aUndertowConnectorCustomizer\uff0c\u8fd9\u662f\u6bd4\u8f83\u4e0d\u6070\u5f53\u7684\uff0c\u6211\u4eec\u77e5\u9053\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e0d\u7ba1\u6211\u4eec\u662f\u7528Tomcat\uff0c\u8fd8\u662fJetty\uff0c\u8fd8\u662fUndertow\uff0c\u5b83\u4eec\u542f\u52a8\u65f6\u7ed1\u5b9a\u7684\u90fd\u662f8080\u7aef\u53e3\uff0c\u4e5f\u5c31\u662f\u8bf4SpringBoot\u5e76\u4e0d\u4f1a\u6839\u636e\u4e0d\u540c\u7684WebServer\u8bbe\u7f6e\u4e0d\u540c\u7684\u7aef\u53e3\uff0c\u4e5f\u5c31\u662f\u8bf4SpringBoot\u53ea\u4f1a\u7ed9WebServer\u8bbe\u7f6e\u7aef\u53e3\uff0c\u800c\u4e0d\u4f1a\u533a\u5206WebServer\u7684\u4e0d\u540c\u5b9e\u73b0\u3002 \u6240\u4ee5\u5728\u81ea\u52a8\u914d\u7f6e\u7c7bServletWebServerFactoryAutoConfiguration\u4e2d\uff0c\u4f1a\u5b9a\u4e49\u4e00\u4e2aServletWebServerFactoryCustomizer\u7c7b\u578b\u7684Bean\uff0c\u5b9a\u4e49\u4e3a\uff1a 1 2 3 4 5 6 7 8 @Bean public ServletWebServerFactoryCustomizer servletWebServerFactoryCustomizer ( ServerProperties serverProperties , ObjectProvider < WebListenerRegistrar > webListenerRegistrars , ObjectProvider < CookieSameSiteSupplier > cookieSameSiteSuppliers ) { return new ServletWebServerFactoryCustomizer ( serverProperties , webListenerRegistrars . orderedStream (). collect ( Collectors . toList ()), cookieSameSiteSuppliers . orderedStream (). collect ( Collectors . toList ())); } \u8fd9\u4e2aBean\u4f1a\u63a5\u6536\u4e00\u4e2aServerProperties\u7684Bean\uff0cServerProperties\u7684Bean\u5bf9\u5e94\u7684\u5c31\u662fproperties\u6587\u4ef6\u4e2d\u524d\u7f00\u4e3aserver\u7684\u914d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528ServerProperties\u5bf9\u8c61\u7684getPort\u65b9\u6cd5\u83b7\u53d6\u5230\u6211\u4eec\u6240\u914d\u7f6e\u7684server.port\u7684\u503c\u3002 \u800cServletWebServerFactoryCustomizer\u662f\u9488\u5bf9\u4e00\u4e2aServletWebServerFactory\u7684\u81ea\u5b9a\u4e49\u5668\uff0c\u4e5f\u5c31\u662f\u7528\u6765\u914d\u7f6eTomcatServletWebServerFactory\u8fd9\u4e2aBean\u7684\uff0c\u5230\u65f6\u5019ServletWebServerFactoryCustomizer\u5c31\u4f1a\u5229\u7528ServerProperties\u5bf9\u8c61\u6765\u5bf9TomcatServletWebServerFactory\u5bf9\u8c61\u8fdb\u884c\u8bbe\u7f6e\u3002 \u5728ServletWebServerFactoryAutoConfiguration\u8fd9\u4e2a\u81ea\u52a8\u914d\u7f6e\u4e0a\uff0c\u9664\u5f00Import\u4e86EmbeddedTomcat\u3001EmbeddedJetty\u3001EmbeddedUndertow\u8fd9\u4e09\u4e2a\u914d\u7f6e\u7c7b\uff0c\u8fd8Import\u4e86\u4e00\u4e2aServletWebServerFactoryAutoConfiguration.BeanPostProcessorsRegistrar.class\uff0c\u8fd9\u4e2aBeanPostProcessorsRegistrar\u4f1a\u5411Spring\u5bb9\u5668\u4e2d\u6ce8\u518c\u4e00\u4e2aWebServerFactoryCustomizerBeanPostProcessor\u7c7b\u578b\u7684Bean\u3002 WebServerFactoryCustomizerBeanPostProcessor\u662f\u4e00\u4e2aBeanPosrtProcessor\uff0c\u5b83\u4e13\u95e8\u7528\u6765\u5904\u7406\u7c7b\u578b\u4e3aWebServerFactory\u7684Bean\u5bf9\u8c61\uff0c\u800c\u6211\u4eec\u7684TomcatServletWebServerFactory\u3001JettyServletWebServerFactory\u3001UndertowServletWebServerFactory\u4e5f\u90fd\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\uff0c\u6240\u4ee5\u4e0d\u7ba1\u5f53\u524d\u9879\u76ee\u4f9d\u8d56\u7684\u60c5\u51b5\uff0c\u53ea\u8981\u5728Spring\u5728\u521b\u5efa\u6bd4\u5982TomcatServletWebServerFactory\u8fd9\u4e2aBean\u65f6\uff0cWebServerFactoryCustomizerBeanPostProcessor\u5c31\u4f1a\u5bf9\u5b83\u8fdb\u884c\u5904\u7406\uff0c\u5904\u7406\u7684\u903b\u8f91\u4e3a\uff1a \u4eceSpring\u5bb9\u5668\u4e2d\u62ff\u5230WebServerFactoryCustomizer\u7c7b\u578b\u7684Bean\uff0c\u4e5f\u5c31\u662f\u524d\u9762\u8bf4\u7684ServletWebServerFactoryCustomizer\u5bf9\u8c61 \u7136\u540e\u8c03\u7528ServletWebServerFactoryCustomizer\u5bf9\u8c61\u7684customize\u65b9\u6cd5\uff0c\u628aTomcatServletWebServerFactory\u5bf9\u8c61\u4f20\u5165\u8fdb\u53bb customize\u65b9\u6cd5\u4e2d\u5c31\u4f1a\u4eceServerProperties\u5bf9\u8c61\u83b7\u53d6\u5404\u79cd\u914d\u7f6e\uff0c\u7136\u540e\u8bbe\u7f6e\u7ed9TomcatServletWebServerFactory\u5bf9\u8c61 \u6bd4\u5982\uff1a \u8fd9\u6837\u5f53TomcatServletWebServerFactory\u8fd9\u4e2aBean\u5bf9\u8c61\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u5b83\u91cc\u9762\u7684\u5f88\u591a\u5c5e\u6027\uff0c\u6bd4\u5982port\uff0c\u5c31\u5df2\u7ecf\u662f\u7a0b\u5e8f\u5458\u6240\u914d\u7f6e\u7684\u503c\u4e86\uff0c\u540e\u7eed\u6267\u884cgetWebServer\u65b9\u6cd5\u65f6\uff0c\u5c31\u76f4\u63a5\u83b7\u53d6\u81ea\u5df1\u7684\u5c5e\u6027\uff0c\u6bd4\u5982port\u5c5e\u6027\uff0c\u8bbe\u7f6e\u7ed9Tomcat\uff0c\u7136\u540e\u518d\u5229\u7528TomcatConnectorCustomizer\u7b49\u4f1a\u4e0b\u8fdb\u884c\u5904\u7406\uff0c\u6700\u540e\u542f\u52a8Tomcat\u3002 \u5230\u6b64\uff0cSpringBoot\u6574\u5408Tomcat\u7684\u6838\u5fc3\u539f\u7406\u5c31\u5206\u6790\u5b8c\u4e86\uff0c\u4e3b\u8981\u6d89\u53ca\u7684\u4e1c\u897f\u6709\uff1a spring-boot-starter-web\uff1a\u4f1a\u81ea\u52a8\u5f15\u5165Tomcat\u3001SpringMVC\u7684\u4f9d\u8d56 ServletWebServerFactoryAutoConfiguration\uff1a\u81ea\u52a8\u914d\u7f6e\u7c7b ServletWebServerFactoryAutoConfiguration.BeanPostProcessorsRegistrar\uff1a\u7528\u6765\u6ce8\u518cWebServerFactoryCustomizerBeanPostProcessor ServletWebServerFactoryConfiguration.EmbeddedTomcat\uff1a\u914d\u7f6eTomcatServletWebServerFactory ServletWebServerFactoryConfiguration.EmbeddedJetty\uff1a\u914d\u7f6eJettyServletWebServerFactory ServletWebServerFactoryConfiguration.EmbeddedUndertow\uff1a\u914d\u7f6eUndertowServletWebServerFactory ServletWebServerFactoryCustomizer\uff1a\u7528\u6765\u914d\u7f6eServletWebServerFactory WebServerFactoryCustomizerBeanPostProcessor\uff1a\u662f\u4e00\u4e2aBeanPostProcessor\uff0c\u5229\u7528ServletWebServerFactoryCustomizer\u6765\u914d\u7f6eServletWebServerFactory ServletWebServerApplicationContext\u4e2d\u7684onRefresh()\u65b9\u6cd5\uff1a\u8d1f\u8d23\u542f\u52a8Tomcat SpringBoot\u4e2d\u7684\u5e95\u5c42\u539f\u7406\u5b9e\u73b0\u4e2d\uff0c\u6761\u4ef6\u6ce8\u89e3\u65f6\u975e\u5e38\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u6761\u4ef6\u6ce8\u89e3\u76f4\u63a5\u51b3\u5b9a\u4e86\u4e00\u4e2aBean\u5728\u4ec0\u4e48\u6761\u4ef6\u4e0b\u624d\u4f1a\u751f\u6548\uff0c\u524d\u9762\u5df2\u7ecf\u6574\u7406\u8fc7\u4e86SpringBoot\u4e2d\u6709\u54ea\u4e9b\u6761\u4ef6\u6ce8\u89e3\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u91cd\u590d\uff0c\u672c\u8282\u6211\u4eec\u6765\u770b\u770b\u975e\u5e38\u6838\u5fc3\u7684\u4e24\u4e2a\u6761\u4ef6\u6ce8\u89e3@ConditionalOnClass\u548c@ConditionalOnBean\u7684\u5e95\u5c42\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002 \u81ea\u5b9a\u4e49\u6761\u4ef6\u6ce8\u89e3 SpringBoot\u4e2d\u4f17\u591a\u7684\u6761\u4ef6\u6ce8\u89e3\uff0c\u90fd\u662f\u57fa\u4e8eSpring\u4e2d\u7684@Conditional\u6765\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u6765\u7528\u4e00\u4e0b@Conditional\u6ce8\u89e3\u3002 \u5148\u6765\u770b\u4e0b@Conditional\u6ce8\u89e3\u7684\u5b9a\u4e49\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 @Target ({ ElementType . TYPE , ElementType . METHOD }) @Retention ( RetentionPolicy . RUNTIME ) @Documented public @interface Conditional { /** * All {@link Condition} classes that must {@linkplain Condition#matches match} * in order for the component to be registered. */ Class <? extends Condition >[] value (); } \u6839\u636e\u5b9a\u4e49\u6211\u4eec\u5728\u7528@Conditional\u6ce8\u89e3\u65f6\uff0c\u9700\u8981\u6307\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2aCondition\u7684\u5b9e\u73b0\u7c7b\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u6765\u63d0\u4f9b\u4e00\u4e2a\u5b9e\u73b0\u7c7b\uff1a 1 2 3 4 5 6 7 8 public class ZhouyuCondition implements Condition { @Override public boolean matches ( ConditionContext context , AnnotatedTypeMetadata metadata ) { return false ; } } \u5f88\u660e\u663e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728matches\u65b9\u6cd5\u4e2d\u6765\u5b9a\u4e49\u6761\u4ef6\u903b\u8f91\uff1a ConditionContext\uff1a\u8868\u793a\u6761\u4ef6\u4e0a\u4e0b\u6587\uff0c\u53ef\u4ee5\u901a\u8fc7ConditionContext\u83b7\u53d6\u5230\u5f53\u524d\u7684\u7c7b\u52a0\u8f7d\u5668\u3001BeanFactory\u3001Environment\u73af\u5883\u53d8\u91cf\u5bf9\u8c61 AnnotatedTypeMetadata\uff1a\u8868\u793a\u5f53\u524d\u6b63\u5728\u8fdb\u884c\u6761\u4ef6\u5224\u65ad\u7684Bean\u6240\u5bf9\u5e94\u7684\u7c7b\u4fe1\u606f\uff0c\u6216\u65b9\u6cd5\u4fe1\u606f\uff08\u6bd4\u5982@Bean\u5b9a\u4e49\u7684\u4e00\u4e2aBean\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7AnnotatedTypeMetadata\u83b7\u53d6\u5230\u5f53\u524d\u7c7b\u6216\u65b9\u6cd5\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u4ece\u800c\u5c31\u53ef\u4ee5\u62ff\u5230\u6761\u4ef6\u6ce8\u89e3\u7684\u4fe1\u606f\uff0c\u5f53\u7136\u5982\u679c\u4e00\u4e2aBean\u4e0a\u4f7f\u7528\u4e86\u591a\u4e2a\u6761\u4ef6\u6ce8\u89e3\uff0c\u90a3\u4e48\u5728\u89e3\u6790\u8fc7\u7a0b\u4e2d\u90fd\u53ef\u4ee5\u83b7\u53d6\u5230\uff0c\u540c\u65f6\u4e5f\u80fd\u83b7\u53d6Bean\u4e0a\u5b9a\u4e49\u7684\u5176\u4ed6\u6ce8\u89e3\u4fe1\u606f \u4e86\u89e3\u8fd9\u4e9b\uff0c\u6211\u4eec\u5c31\u6765\u770b\u770b@ConditionalOnClass\u662f\u5982\u4f55\u5de5\u4f5c\u7684 @ConditionalOnClass\u7684\u5e95\u5c42\u5de5\u4f5c\u539f\u7406 \u5148\u6765\u770b\u4e00\u4e2a\u6848\u4f8b\uff1a 1 2 3 4 5 6 7 @Configuration @ConditionalOnClass ( name = \"com.zhouyu.Jetty\" ) @ConditionalOnMissingClass ( value = \"com.zhouyu.Tomcat\" ) public class ZhouyuConfiguration { } \u6211\u4eec\u5728ZhouyuConfiguration\u8fd9\u4e2a\u7c7b\u4e0a\u4f7f\u7528\u4e86\u4e24\u4e2a\u6761\u4ef6\u6ce8\u89e3\uff1a @ConditionalOnClass(name = \"com.zhouyu.Jetty\")\uff1a\u6761\u4ef6\u662f\u9879\u76ee\u4f9d\u8d56\u4e2d \u5b58\u5728 \"com.zhouyu.Jetty\"\u8fd9\u4e2a\u7c7b\uff0c\u5219\u8868\u793a\u7b26\u5408\u6761\u4ef6 @ConditionalOnMissingClass(value = \"com.zhouyu.Tomcat\")\uff1a\u6761\u4ef6\u662f\u9879\u76ee\u4f9d\u8d56\u4e2d \u4e0d\u5b58\u5728 \"com.zhouyu.Tomcat\"\u8fd9\u4e2a\u7c7b\uff0c\u5219\u8868\u793a\u7b26\u5408\u6761\u4ef6 \u8fd9\u4e24\u4e2a\u6ce8\u89e3\u5bf9\u5e94\u7684\u90fd\u662f @Conditional(OnClassCondition.class) \uff0c\u90a3\u5728OnClassCondition\u7c7b\u4e2d\u662f\u5982\u4f55\u5bf9\u8fd9\u4e24\u4e2a\u6ce8\u89e3\u8fdb\u884c\u533a\u5206\u7684\u5462\uff1f Spring\u5728\u89e3\u6790\u5230ZhouyuConfiguration\u8fd9\u4e2a\u914d\u7f6e\u65f6\uff0c\u53d1\u73b0\u8be5\u7c7b\u4e0a\u7528\u5230\u4e86\u6761\u4ef6\u6ce8\u89e3\u5c31\u4f1a\u8fdb\u884c\u6761\u4ef6\u89e3\u6790\uff0c\u76f8\u5173\u6e90\u7801\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 for ( Condition condition : conditions ) { ConfigurationPhase requiredPhase = null ; if ( condition instanceof ConfigurationCondition ) { requiredPhase = (( ConfigurationCondition ) condition ). getConfigurationPhase (); } // \u91cd\u70b9\u5728\u8fd9 if (( requiredPhase == null || requiredPhase == phase ) && ! condition . matches ( this . context , metadata )) { return true ; } } conditions\u4e2d\u4fdd\u5b58\u4e86\u4e24\u4e2aOnClassCondition\u5bf9\u8c61\uff0c\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u4f9d\u6b21\u8c03\u7528OnClassCondition\u5bf9\u8c61\u7684matches\u65b9\u6cd5\u8fdb\u884c\u6761\u4ef6\u5339\u914d\uff0c\u4e00\u65e6\u67d0\u4e00\u4e2a\u6761\u4ef6\u4e0d\u5339\u914d\u5c31\u4e0d\u4f1a\u8fdb\u884c\u4e0b\u4e00\u4e2a\u6761\u4ef6\u7684\u5224\u65ad\u4e86\uff0c\u8fd9\u91ccreturn\u7684\u662ftrue\uff0c\u4f46\u662f\u8fd9\u6bb5\u4ee3\u7801\u6240\u5728\u7684\u65b9\u6cd5\u53eb\u505ashouldSkip\uff0c\u6240\u4ee5true\u8868\u793a\u5ffd\u7565\u3002 \u6211\u4eec\u7ee7\u7eed\u770bOnClassCondition\u7684matches()\u65b9\u6cd5\u7684\u5b9e\u73b0\u3002 OnClassCondition\u7c7b\u7ee7\u627f\u4e86FilteringSpringBootCondition\uff0cFilteringSpringBootCondition\u7c7b\u53c8\u7ee7\u627f\u4e86SpringBootCondition\uff0c\u800cSpringBootCondition\u5b9e\u73b0\u4e86Condition\u63a5\u53e3\uff0cmatches()\u65b9\u6cd5\u4e5f\u662f\u5728SpringBootCondition\u8fd9\u4e2a\u7c7b\u4e2d\u5b9e\u73b0\u7684\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 @Override public final boolean matches ( ConditionContext context , AnnotatedTypeMetadata metadata ) { // \u83b7\u53d6\u5f53\u524d\u89e3\u6790\u7684\u7c7b\u540d\u6216\u65b9\u6cd5\u540d String classOrMethodName = getClassOrMethodName ( metadata ); try { // \u8fdb\u884c\u5177\u4f53\u7684\u6761\u4ef6\u5339\u914d\uff0cConditionOutcome\u8868\u793a\u5339\u914d\u7ed3\u679c ConditionOutcome outcome = getMatchOutcome ( context , metadata ); // \u65e5\u5fd7\u8bb0\u5f55\u5339\u914d\u7ed3\u679c logOutcome ( classOrMethodName , outcome ); recordEvaluation ( context , classOrMethodName , outcome ); // \u8fd4\u56detrue\u6216false return outcome . isMatch (); } catch ( NoClassDefFoundError ex ) { // ... } catch ( RuntimeException ex ) { // ... } } \u6240\u4ee5\u5177\u4f53\u7684\u6761\u4ef6\u5339\u914d\u903b\u8f91\u5728getMatchOutcome\u65b9\u6cd5\u4e2d\uff0c\u800cSpringBootCondition\u7c7b\u4e2d\u7684getMatchOutcome\u65b9\u6cd5\u662f\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u903b\u8f91\u5c31\u5728\u5b50\u7c7bOnClassCondition\u4e2d\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 @Override public ConditionOutcome getMatchOutcome ( ConditionContext context , AnnotatedTypeMetadata metadata ) { ClassLoader classLoader = context . getClassLoader (); ConditionMessage matchMessage = ConditionMessage . empty (); // \u62ff\u5230ConditionalOnClass\u6ce8\u89e3\u4e2d\u7684value\u503c\uff0c\u4e5f\u5c31\u662f\u8981\u5224\u65ad\u662f\u5426\u5b58\u5728\u7684\u7c7b\u540d List < String > onClasses = getCandidates ( metadata , ConditionalOnClass . class ); if ( onClasses != null ) { // \u5224\u65adonClasses\u4e2d\u4e0d\u5b58\u5728\u7684\u7c7b List < String > missing = filter ( onClasses , ClassNameFilter . MISSING , classLoader ); // \u5982\u679c\u6709\u7f3a\u5931\u7684\u7c7b\uff0c\u90a3\u5c31\u8868\u793a\u4e0d\u5339\u914d if ( ! missing . isEmpty ()) { return ConditionOutcome . noMatch ( ConditionMessage . forCondition ( ConditionalOnClass . class ) . didNotFind ( \"required class\" , \"required classes\" ). items ( Style . QUOTE , missing )); } // \u5426\u5219\u5c31\u8868\u793a\u5339\u914d matchMessage = matchMessage . andCondition ( ConditionalOnClass . class ) . found ( \"required class\" , \"required classes\" ) . items ( Style . QUOTE , filter ( onClasses , ClassNameFilter . PRESENT , classLoader )); } // \u548c\u4e0a\u9762\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u662f\u5224\u65adonMissingClasses\u662f\u4e0d\u662f\u5168\u90e8\u7f3a\u5931\uff0c\u5982\u679c\u662f\u5219\u8868\u793a\u5339\u914d List < String > onMissingClasses = getCandidates ( metadata , ConditionalOnMissingClass . class ); if ( onMissingClasses != null ) { List < String > present = filter ( onMissingClasses , ClassNameFilter . PRESENT , classLoader ); if ( ! present . isEmpty ()) { return ConditionOutcome . noMatch ( ConditionMessage . forCondition ( ConditionalOnMissingClass . class ) . found ( \"unwanted class\" , \"unwanted classes\" ). items ( Style . QUOTE , present )); } matchMessage = matchMessage . andCondition ( ConditionalOnMissingClass . class ) . didNotFind ( \"unwanted class\" , \"unwanted classes\" ) . items ( Style . QUOTE , filter ( onMissingClasses , ClassNameFilter . MISSING , classLoader )); } return ConditionOutcome . match ( matchMessage ); } \u5728getMatchOutcome\u65b9\u6cd5\u4e2d\u7684\u903b\u8f91\u4e3a\uff1a \u5982\u679c\u7c7b\u6216\u65b9\u6cd5\u4e0a\u6709@ConditionalOnClass\u6ce8\u89e3\uff0c\u5219\u83b7\u53d6@ConditionalOnClass\u6ce8\u89e3\u4e2d\u7684value\u5c5e\u6027\uff0c\u4e5f\u5c31\u662f\u8981\u5224\u65ad\u662f\u5426 \u5b58\u5728\u7684\u7c7b\u540d \u5229\u7528ClassNameFilter.MISSING\u6765\u5224\u65ad\u8fd9\u4e9b\u7c7b\u662f\u5426\u7f3a\u5931\uff0c\u628a\u7f3a\u5931\u7684\u7c7b\u7684\u7c7b\u540d\u5b58\u5165missing\u96c6\u5408 \u5982\u679cmissing\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8868\u793a\u6709\u7c7b\u7f3a\u5931\uff0c\u5219\u8868\u793a\u4e0d\u5339\u914d\uff0c\u5e76\u5229\u7528ConditionMessage\u8bb0\u5f55\u54ea\u4e9b\u7c7b\u662f\u7f3a\u5931\u7684\uff0c\u76f4\u63a5return\uff0c\u8868\u793a\u6761\u4ef6\u4e0d\u5339\u914d \u5426\u5219\uff0c\u5219\u8868\u793a\u6761\u4ef6\u5339\u914d\uff0c\u7ee7\u7eed\u6267\u884c\u4ee3\u7801 \u5982\u679c\u7c7b\u6216\u65b9\u6cd5\u4e0a\u6709ConditionalOnMissingClass\u6ce8\u89e3\uff0c\u5219\u83b7\u53d6ConditionalOnMissingClass\u6ce8\u89e3\u4e2d\u7684value\u5c5e\u6027\uff0c\u4e5f\u5c31\u662f\u8981\u5224\u65ad\u662f\u5426 \u7f3a\u5931\u7684\u7c7b\u540d \u5229\u7528ClassNameFilter.PRESENT\u6765\u5224\u65ad\u8fd9\u4e9b\u7c7b\u662f\u5426\u5b58\u5728\uff0c\u628a\u5b58\u5728\u7684\u7c7b\u7684\u7c7b\u540d\u5b58\u5165present\u96c6\u5408 \u5982\u679cpresent\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8868\u793a\u6709\u7c7b\u5b58\u5728\uff0c\u5219\u8868\u793a\u4e0d\u5339\u914d\uff0c\u5e76\u5229\u7528ConditionMessage\u8bb0\u5f55\u54ea\u4e9b\u7c7b\u662f\u5b58\u5728\u7684\uff0c\u76f4\u63a5return\uff0c\u8868\u793a\u6761\u4ef6\u4e0d\u5339\u914d \u5426\u5219\uff0c\u5219\u8868\u793a\u6761\u4ef6\u5339\u914d\uff0c\u7ee7\u7eed\u6267\u884c\u4ee3\u7801 return\uff0c\u8868\u793a\u6761\u4ef6\u5339\u914d \u56e0\u4e3aConditionalOnClass\u6ce8\u89e3\u548cConditionalOnMissingClass\u6ce8\u89e3\u7684\u903b\u8f91\u662f\u6bd4\u8f83\u7c7b\u4f3c\u7684\uff0c\u6240\u4ee5\u5728\u6e90\u7801\u4e2d\u90fd\u662f\u5728OnClassCondition\u8fd9\u4e2a\u7c7b\u4e2d\u5b9e\u73b0\u7684\uff0c\u5047\u5982\u4e00\u4e2a\u7c7b\u4e0a\u5373\u6709@ConditionalOnClass\uff0c\u4e5f\u6709@ConditionalOnMissingClass\uff0c\u6bd4\u5982\u4ee5\u4e0b\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 @Configuration @ConditionalOnClass ( Tomcat . class ) @ConditionalOnMissingClass ( value = \"com.zhouyu.Tomcat\" ) public class ZhouyuConfiguration { } \u5982\u679c@ConditionalOnClass\u6761\u4ef6\u5339\u914d\u3001@ConditionalOnMissingClass\u6761\u4ef6\u4e5f\u5339\u914d\uff0c\u90a3\u4e48getMatchOutcome\u65b9\u6cd5\u4f1a\u6267\u884c\u4e24\u6b21 \u5982\u679c@ConditionalOnClass\u6761\u4ef6\u4e0d\u5339\u914d\uff0c\u90a3\u4e48getMatchOutcome\u65b9\u6cd5\u4f1a\u6267\u884c\u4e00\u6b21 \u5982\u679c@ConditionalOnClass\u6761\u4ef6\u5339\u914d\u3001@ConditionalOnMissingClass\u6761\u4ef6\u4e0d\u5339\u914d\uff0c\u90a3\u4e48getMatchOutcome\u65b9\u6cd5\u4e5f\u53ea\u4f1a\u6267\u884c\u4e00\u6b21\uff0c\u56e0\u4e3a\u5728getMatchOutcome\u65b9\u6cd5\u5904\u7406\u4e86\u8fd9\u79cd\u60c5\u51b5 \u4e0a\u9762\u63d0\u5230\u7684ClassNameFilter.MISSING\u548cClassNameFilter.PRESENT\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 protected enum ClassNameFilter { PRESENT { @Override public boolean matches ( String className , ClassLoader classLoader ) { return isPresent ( className , classLoader ); } }, MISSING { @Override public boolean matches ( String className , ClassLoader classLoader ) { return ! isPresent ( className , classLoader ); } }; abstract boolean matches ( String className , ClassLoader classLoader ); static boolean isPresent ( String className , ClassLoader classLoader ) { if ( classLoader == null ) { classLoader = ClassUtils . getDefaultClassLoader (); } try { resolve ( className , classLoader ); return true ; } catch ( Throwable ex ) { return false ; } } } \u4e3b\u8981\u5c31\u662f\u7528\u7c7b\u52a0\u8f7d\u5668\uff0c\u6765\u5224\u65ad\u7c7b\u662f\u5426\u5b58\u5728\u3002 @ConditionalOnBean\u7684\u5e95\u5c42\u5de5\u4f5c\u539f\u7406 @ConditionalOnBean\u548c@ConditionalOnClass\u7684\u5e95\u5c42\u5b9e\u73b0\u5e94\u8be5\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u4e00\u4e2a\u662f\u5224\u65adBean\u5b58\u4e0d\u5b58\u5728\uff0c\u4e00\u4e2a\u662f\u5224\u65ad\u7c7b\u5b58\u4e0d\u5b58\u5728\uff0c\u4e8b\u5b9e\u4e0a\u4e5f\u786e\u5b9e\u5dee\u4e0d\u591a\u3002 \u9996\u5148@ConditionalOnBean\u548c@ConditionalOnMissingBean\u5bf9\u5e94\u7684\u90fd\u662fOnBeanCondition\u7c7b\uff0cOnBeanCondition\u7c7b\u4e5f\u662f\u7ee7\u627f\u4e86SpringBootCondition\uff0c\u6240\u4ee5SpringBootCondition\u7c7b\u4e2d\u7684getMatchOutcome\u65b9\u6cd5\u624d\u662f\u5339\u914d\u903b\u8f91\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 @Override public ConditionOutcome getMatchOutcome ( ConditionContext context , AnnotatedTypeMetadata metadata ) { ConditionMessage matchMessage = ConditionMessage . empty (); MergedAnnotations annotations = metadata . getAnnotations (); // \u5982\u679c\u5b58\u5728ConditionalOnBean\u6ce8\u89e3 if ( annotations . isPresent ( ConditionalOnBean . class )) { Spec < ConditionalOnBean > spec = new Spec <> ( context , metadata , annotations , ConditionalOnBean . class ); MatchResult matchResult = getMatchingBeans ( context , spec ); // \u5982\u679c\u67d0\u4e2aBean\u4e0d\u5b58\u5728 if ( ! matchResult . isAllMatched ()) { String reason = createOnBeanNoMatchReason ( matchResult ); return ConditionOutcome . noMatch ( spec . message (). because ( reason )); } // \u6240\u6709Bean\u90fd\u5b58\u5728 matchMessage = spec . message ( matchMessage ). found ( \"bean\" , \"beans\" ). items ( Style . QUOTE , matchResult . getNamesOfAllMatches ()); } // \u5982\u679c\u5b58\u5728ConditionalOnSingleCandidate\u6ce8\u89e3 if ( metadata . isAnnotated ( ConditionalOnSingleCandidate . class . getName ())) { Spec < ConditionalOnSingleCandidate > spec = new SingleCandidateSpec ( context , metadata , annotations ); MatchResult matchResult = getMatchingBeans ( context , spec ); // Bean\u4e0d\u5b58\u5728 if ( ! matchResult . isAllMatched ()) { return ConditionOutcome . noMatch ( spec . message (). didNotFind ( \"any beans\" ). atAll ()); } // Bean\u5b58\u5728 Set < String > allBeans = matchResult . getNamesOfAllMatches (); // \u5982\u679c\u53ea\u6709\u4e00\u4e2a if ( allBeans . size () == 1 ) { matchMessage = spec . message ( matchMessage ). found ( \"a single bean\" ). items ( Style . QUOTE , allBeans ); } else { // \u5982\u679c\u6709\u591a\u4e2a List < String > primaryBeans = getPrimaryBeans ( context . getBeanFactory (), allBeans , spec . getStrategy () == SearchStrategy . ALL ); // \u6ca1\u6709\u4e3bBean\uff0c\u90a3\u5c31\u4e0d\u5339\u914d if ( primaryBeans . isEmpty ()) { return ConditionOutcome . noMatch ( spec . message (). didNotFind ( \"a primary bean from beans\" ). items ( Style . QUOTE , allBeans )); } // \u6709\u591a\u4e2a\u4e3bBean\uff0c\u90a3\u5c31\u4e0d\u5339\u914d if ( primaryBeans . size () > 1 ) { return ConditionOutcome . noMatch ( spec . message (). found ( \"multiple primary beans\" ). items ( Style . QUOTE , primaryBeans )); } // \u53ea\u6709\u4e00\u4e2a\u4e3bBean matchMessage = spec . message ( matchMessage ) . found ( \"a single primary bean '\" + primaryBeans . get ( 0 ) + \"' from beans\" ) . items ( Style . QUOTE , allBeans ); } } // \u5b58\u5728ConditionalOnMissingBean\u6ce8\u89e3 if ( metadata . isAnnotated ( ConditionalOnMissingBean . class . getName ())) { Spec < ConditionalOnMissingBean > spec = new Spec <> ( context , metadata , annotations , ConditionalOnMissingBean . class ); MatchResult matchResult = getMatchingBeans ( context , spec ); //\u6709\u4efb\u610f\u4e00\u4e2aBean\u5b58\u5728\uff0c\u90a3\u5c31\u6761\u4ef6\u4e0d\u5339\u914d if ( matchResult . isAnyMatched ()) { String reason = createOnMissingBeanNoMatchReason ( matchResult ); return ConditionOutcome . noMatch ( spec . message (). because ( reason )); } // \u90fd\u4e0d\u5b58\u5728\u5728\uff0c\u5219\u5339\u914d matchMessage = spec . message ( matchMessage ). didNotFind ( \"any beans\" ). atAll (); } return ConditionOutcome . match ( matchMessage ); } \u903b\u8f91\u6d41\u7a0b\u4e3a\uff1a \u5f53\u524d\u5728\u89e3\u6790\u7684\u7c7b\u6216\u65b9\u6cd5\u4e0a\uff0c\u662f\u5426\u6709@ConditionalOnBean\u6ce8\u89e3\uff0c\u5982\u679c\u6709\u5219\u751f\u6210\u5bf9\u5e94\u7684Spec\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u4e2d\u5305\u542b\u4e86\u7528\u6237\u6307\u5b9a\u7684\uff0c\u8981\u5224\u65ad\u7684\u662f\u5426\u5b58\u5728\u7684Bean\u7684\u7c7b\u578b \u8c03\u7528getMatchingBeans\u65b9\u6cd5\u8fdb\u884c\u6761\u4ef6\u5224\u65ad\uff0cMatchResult\u4e3a\u6761\u4ef6\u5224\u65ad\u7ed3\u679c \u53ea\u8981\u5224\u65ad\u51fa\u6765\u67d0\u4e00\u4e2aBean\u4e0d\u5b58\u5728\uff0c\u5219return\uff0c\u8868\u793a\u6761\u4ef6\u4e0d\u5339\u914d \u53ea\u8981\u6240\u6709Bean\u90fd\u5b58\u5728\uff0c\u5219\u7ee7\u7eed\u6267\u884c\u4e0b\u9762\u4ee3\u7801 \u5f53\u524d\u5728\u89e3\u6790\u7684\u7c7b\u6216\u65b9\u6cd5\u4e0a\uff0c\u662f\u5426\u6709@ConditionalOnSingleCandidate\u6ce8\u89e3\uff0c\u5982\u679c\u6709\u5219\u751f\u6210\u5bf9\u5e94\u7684SingleCandidateSpec\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u4e2d\u5305\u542b\u4e86\u7528\u6237\u6307\u5b9a\u7684\uff0c\u8981\u5224\u65ad\u7684\u662f\u5426\u5b58\u5728\u7684Bean\u7684\u7c7b\u578b\uff08\u53ea\u80fd\u6307\u5b9a\u4e00\u4e2a\u7c7b\u578b\uff09\uff0c\u5e76\u4e14\u8be5\u7c7b\u578b\u7684Bean\u53ea\u80fd\u6709\u4e00\u4e2a \u8c03\u7528getMatchingBeans\u65b9\u6cd5\u8fdb\u884c\u6761\u4ef6\u5224\u65ad\uff0cMatchResult\u4e3a\u6761\u4ef6\u5224\u65ad\u7ed3\u679c \u6307\u5b9a\u7c7b\u578b\u7684Bean\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219return\uff0c\u8868\u793a\u6761\u4ef6\u4e0d\u5339\u914d \u5982\u679c\u6307\u5b9a\u7c7b\u578b\u7684Bean\u5b58\u5728\uff0c\u4f46\u662f\u5b58\u5728\u591a\u4e2a\uff0c\u90a3\u5c31\u770b\u662f\u5426\u5b58\u5728\u4e3bBean\uff08\u52a0\u4e86@primary\u6ce8\u89e3\u7684Bean\uff09\uff0c\u5e76\u4e14\u53ea\u80fd\u6709\u4e00\u4e2a\u4e3bBean\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219return\uff0c\u8868\u793a\u6761\u4ef6\u4e0d\u5339\u914d \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u4e3bBean\uff0c\u5219\u8868\u793a\u6761\u4ef6\u5339\u914d\uff0c\u7ee7\u7eed\u6267\u884c\u4e0b\u9762\u4ee3\u7801 \u5f53\u524d\u5728\u89e3\u6790\u7684\u7c7b\u6216\u65b9\u6cd5\u4e0a\uff0c\u662f\u5426\u6709@ConditionalOnMissingBean\u6ce8\u89e3\uff0c\u5982\u679c\u6709\u5219\u751f\u6210\u5bf9\u5e94\u7684Spec\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u4e2d\u5305\u542b\u4e86\u7528\u6237\u6307\u5b9a\u7684\uff0c\u8981\u5224\u65ad\u7684\u662f\u5426\u7f3a\u5931\u7684Bean\u7684\u7c7b\u578b \u8c03\u7528getMatchingBeans\u65b9\u6cd5\u8fdb\u884c\u6761\u4ef6\u5224\u65ad\uff0cMatchResult\u4e3a\u6761\u4ef6\u5224\u65ad\u7ed3\u679c \u53ea\u8981\u6709\u4efb\u610f\u4e00\u4e2aBean\u5b58\u5728\uff0c\u5219return\uff0c\u8868\u793a\u6761\u4ef6\u4e0d\u5339\u914d \u90fd\u5b58\u5728\uff0c\u5219\u8868\u793a\u6761\u4ef6\u5339\u914d \u7ed3\u675f getMatchingBeans\u65b9\u6cd5\u4e2d\u4f1a\u5229\u7528BeanFactory\u53bb\u83b7\u53d6\u6307\u5b9a\u7c7b\u578b\u7684Bean\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u7c7b\u578b\u7684Bean\uff0c\u5219\u4f1a\u5c06\u8be5\u7c7b\u578b\u8bb0\u5f55\u5728MatchResult\u5bf9\u8c61\u7684unmatchedTypes\u96c6\u5408\u4e2d\uff0c\u5982\u679c\u6709\u8be5\u7c7b\u578b\u7684Bean\uff0c\u5219\u4f1a\u628a\u8be5Bean\u7684beanName\u8bb0\u5f55\u5728MatchResult\u5bf9\u8c61\u7684matchedNames\u96c6\u5408\u4e2d\uff0c\u6240\u4ee5MatchResult\u5bf9\u8c61\u4e2d\u8bb0\u5f55\u4e86\uff0c\u54ea\u4e9b\u7c7b\u6ca1\u6709\u5bf9\u5e94\u7684Bean\uff0c\u54ea\u4e9b\u7c7b\u6709\u5bf9\u5e94\u7684Bean\u3002 @ConditionalOnClass\u548c@ConditionalOnBean\uff0c\u8fd9\u4e24\u4e2a\u6761\u4ef6\u6ce8\u89e3\u7684\u5de5\u4f5c\u539f\u7406\u5c31\u5206\u6790\u5230\u8fd9\uff0c\u603b\u7ed3\u4ee5\u4e0b\u6d41\u7a0b\u5c31\u662f\uff1a Spring\u5728\u89e3\u6790\u67d0\u4e2a\u914d\u7f6e\u7c7b\uff0c\u6216\u67d0\u4e2aBean\u5b9a\u4e49\u65f6 \u5982\u679c\u53d1\u73b0\u5b83\u4eec\u4e0a\u9762\u7528\u5230\u4e86\u6761\u4ef6\u6ce8\u89e3\uff0c\u5c31\u4f1a\u53d6\u51fa\u6240\u6709\u7684\u6761\u4ef6\u7684\u6761\u4ef6\u6ce8\u89e3\uff0c\u5e76\u751f\u6210\u5bf9\u5e94\u7684\u6761\u4ef6\u5bf9\u8c61\uff0c\u6bd4\u5982OnBeanCondition\u5bf9\u8c61\u3001OnClassCondition\u5bf9\u8c61 \u4ece\u800c\u4f9d\u6b21\u8c03\u7528\u6761\u4ef6\u5bf9\u8c61\u7684matches\u65b9\u6cd5\uff0c\u8fdb\u884c\u6761\u4ef6\u5339\u914d\uff0c\u770b\u662f\u5426\u7b26\u5408\u6761\u4ef6 \u800c\u6761\u4ef6\u5339\u914d\u903b\u8f91\u4e2d\uff0c\u4f1a\u62ff\u5230@ConditionalOnClass\u548c@ConditionalOnBean\u7b49\u6761\u4ef6\u6ce8\u89e3\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u8981\u5224\u65ad\u54ea\u4e9b\u7c7b\u5b58\u5728\u3001\u54ea\u4e9bBean\u5b58\u5728 \u7136\u540e\u5229\u7528ClassLaoder\u3001BeanFactory\u6765\u8fdb\u884c\u5224\u65ad \u6700\u540e\u53ea\u6709\u6240\u6709\u6761\u4ef6\u6ce8\u89e3\u7684\u6761\u4ef6\u90fd\u5339\u914d\uff0c\u90a3\u4e48\u5f53\u524d\u914d\u7f6e\u7c7b\u6216Bean\u5b9a\u4e49\u624d\u7b97\u7b26\u5408\u6761\u4ef6 \u6e90\u7801\u4f1a\u6709\u70b9\u96be\uff0c\u8fd8\u5e0c\u671b\u5927\u5bb6\u8010\u70b9\u6027\u5b50\uff0c\u591a\u770b\u591a\u8c03\u8bd5\u6e90\u7801\u3002","title":"02SpringBoot\u81ea\u52a8\u914d\u7f6e\u5e95\u5c42\u6e90\u7801\u89e3\u6790"},{"location":"Nginx/01Nginx%E5%AE%89%E8%A3%85/","text":"Nginx \u7b80\u4ecb \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 openresty\u6765\u505a\u8bb2\u89e3\u6f14\u793a Nginx\u5b98\u7f51 https://www.nginx.com/ Nginx \u662f\u4e00\u6b3e\u9ad8\u6027\u80fd\u7684HTTP\u670d\u52a1\u5668\u548c\u53cd \u5411\u4ee3\u7406\u670d\u52a1\u5668 \uff0c\u540c\u65f6\u652f\u6301 IMAP/POP3/SMTP \u4ee3\u7406\u670d\u52a1 \u4ec0\u4e48\u662fNginx Nginx \u662f\u4e00\u6b3e\u9ad8\u6027\u80fd\u7684 http \u670d\u52a1\u5668/\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u53ca\u7535\u5b50\u90ae\u4ef6\uff08IMAP/POP3\uff09\u4ee3\u7406\u670d\u52a1\u5668\u3002\u7531\u4fc4\u7f57\u65af\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u5e08\u4f0a\u6208\u5c14\u00b7\u897f\u7d22\u592b\uff08Igor Sysoev\uff09\u6240\u5f00\u53d1\uff0c\u5b98\u65b9\u6d4b\u8bd5 nginx \u80fd\u591f\u652f\u652f\u6491 5 \u4e07\u5e76\u53d1\u94fe\u63a5\uff0c \u5e76\u4e14 cpu\u3001\u5185\u5b58\u7b49\u8d44\u6e90\u6d88\u8017\u5374\u975e\u5e38\u4f4e\uff0c\u8fd0\u884c\u975e\u5e38\u7a33\u5b9a\u3002 \u7531C\u8bed\u8a00\u7f16\u5199 Nginx \u5e94\u7528\u573a\u666f\uff1a 1\u3001http \u670d\u52a1\u5668\u3002Nginx \u662f\u4e00\u4e2a http \u670d\u52a1\u53ef\u4ee5\u72ec\u7acb\u63d0\u4f9b http \u670d\u52a1\u3002\u53ef\u4ee5\u505a \u7f51\u9875\u9759\u6001\u670d\u52a1\u5668 \u3002 2\u3001 \u865a\u62df\u4e3b\u673a \u3002\u53ef\u4ee5\u5b9e\u73b0\u5728\u4e00\u53f0\u670d\u52a1\u5668\u865a\u62df\u51fa\u591a\u4e2a\u7f51\u7ad9\u3002\u4f8b\u5982\u4e2a\u4eba\u7f51\u7ad9\u4f7f\u7528\u7684\u865a\u62df\u4e3b\u673a\u3002 3\u3001\u53cd\u5411\u4ee3\u7406\uff0c\u8d1f\u8f7d\u5747\u8861\u3002\u5f53\u7f51\u7ad9\u7684\u8bbf\u95ee\u91cf\u8fbe\u5230\u4e00\u5b9a\u7a0b\u5ea6\u540e\uff0c\u5355\u53f0\u670d\u52a1\u5668\u4e0d\u80fd\u6ee1\u8db3\u7528\u6237\u7684\u8bf7\u6c42\u65f6\uff0c\u9700\u8981\u7528\u591a\u53f0\u670d\u52a1\u5668\u96c6\u7fa4\u53ef\u4ee5\u4f7f\u7528 nginx \u505a\u53cd\u5411\u4ee3\u7406\u3002\u5e76\u4e14\u591a\u53f0\u670d\u52a1\u5668\u53ef\u4ee5\u5e73\u5747\u5206\u62c5\u8d1f\u8f7d\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u67d0\u53f0\u670d\u52a1\u5668\u8d1f\u8f7d\u9ad8\u5b95\u673a\u800c\u67d0\u53f0\u670d\u52a1\u5668\u95f2\u7f6e\u7684\u60c5\u51b5\u3002 \u5b89\u88c5 \u9996\u5148 \u521b\u5efa\u6587\u4ef6 \u5236\u4f5c\u81ea\u52a8\u5b89\u88c5\u811a\u672c vim openresty.sh 1 2 3 4 5 6 7 8 9 10 11 12 13 yum install - y pcre - devel openssl - devel gcc curl cd / usr / local / wget https : //openresty.org/download/openresty-1.17.8.2.tar.gz cd / usr / local / tar - zxvf openresty - 1.17.8.2 . tar . gz cd / usr / local / mv openresty - 1.17.8.2 openresty cd / usr / local / openresty / . / configure -- with - luajit \\ -- without - http_redis2_module \\ -- with - http_iconv_module cd / usr / local / openresty / make && make install \u8d4b\u4e88\u6267\u884c\u6587\u4ef6 chmod +x openresty.sh \u8fd0\u884c\u5373\u53ef ./openresty.sh \u7136\u540e\u4fee\u6539\u73af\u5883 1 2 3 4 $ vi / etc / profile export PATH =/ usr / local / openresty / nginx / sbin : $PATH $ source / etc / profile OK\u81f3\u6b64\u7ed3\u675f \u914d\u7f6e\u5b8c\u6210 \u53ef\u4ee5\u5728 cd /usr/local/openresty/ \u76ee\u5f55\u4e0b\u627e\u5230NGinx \u542f\u52a8\u4ed6\u5c31ok\u4e86 \u8fd9\u4e2a\u811a\u672c\u53ef\u4ee5\u590d\u7528 \u4e0b\u6b21\u76f4\u63a5 \u8d4b\u4e88\u6267\u884c\u6587\u4ef6\u914d\u7f6e \u73af\u5883\u5373\u53ef \u865a\u62df\u673a\u5185 \u6d4b\u8bd5","title":"01Nginx\u5b89\u88c5"},{"location":"Nginx/01Nginx%E5%AE%89%E8%A3%85/#nginx","text":"\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 openresty\u6765\u505a\u8bb2\u89e3\u6f14\u793a Nginx\u5b98\u7f51 https://www.nginx.com/ Nginx \u662f\u4e00\u6b3e\u9ad8\u6027\u80fd\u7684HTTP\u670d\u52a1\u5668\u548c\u53cd \u5411\u4ee3\u7406\u670d\u52a1\u5668 \uff0c\u540c\u65f6\u652f\u6301 IMAP/POP3/SMTP \u4ee3\u7406\u670d\u52a1","title":"Nginx \u7b80\u4ecb"},{"location":"Nginx/01Nginx%E5%AE%89%E8%A3%85/#nginx_1","text":"Nginx \u662f\u4e00\u6b3e\u9ad8\u6027\u80fd\u7684 http \u670d\u52a1\u5668/\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u53ca\u7535\u5b50\u90ae\u4ef6\uff08IMAP/POP3\uff09\u4ee3\u7406\u670d\u52a1\u5668\u3002\u7531\u4fc4\u7f57\u65af\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u5e08\u4f0a\u6208\u5c14\u00b7\u897f\u7d22\u592b\uff08Igor Sysoev\uff09\u6240\u5f00\u53d1\uff0c\u5b98\u65b9\u6d4b\u8bd5 nginx \u80fd\u591f\u652f\u652f\u6491 5 \u4e07\u5e76\u53d1\u94fe\u63a5\uff0c \u5e76\u4e14 cpu\u3001\u5185\u5b58\u7b49\u8d44\u6e90\u6d88\u8017\u5374\u975e\u5e38\u4f4e\uff0c\u8fd0\u884c\u975e\u5e38\u7a33\u5b9a\u3002 \u7531C\u8bed\u8a00\u7f16\u5199 Nginx \u5e94\u7528\u573a\u666f\uff1a 1\u3001http \u670d\u52a1\u5668\u3002Nginx \u662f\u4e00\u4e2a http \u670d\u52a1\u53ef\u4ee5\u72ec\u7acb\u63d0\u4f9b http \u670d\u52a1\u3002\u53ef\u4ee5\u505a \u7f51\u9875\u9759\u6001\u670d\u52a1\u5668 \u3002 2\u3001 \u865a\u62df\u4e3b\u673a \u3002\u53ef\u4ee5\u5b9e\u73b0\u5728\u4e00\u53f0\u670d\u52a1\u5668\u865a\u62df\u51fa\u591a\u4e2a\u7f51\u7ad9\u3002\u4f8b\u5982\u4e2a\u4eba\u7f51\u7ad9\u4f7f\u7528\u7684\u865a\u62df\u4e3b\u673a\u3002 3\u3001\u53cd\u5411\u4ee3\u7406\uff0c\u8d1f\u8f7d\u5747\u8861\u3002\u5f53\u7f51\u7ad9\u7684\u8bbf\u95ee\u91cf\u8fbe\u5230\u4e00\u5b9a\u7a0b\u5ea6\u540e\uff0c\u5355\u53f0\u670d\u52a1\u5668\u4e0d\u80fd\u6ee1\u8db3\u7528\u6237\u7684\u8bf7\u6c42\u65f6\uff0c\u9700\u8981\u7528\u591a\u53f0\u670d\u52a1\u5668\u96c6\u7fa4\u53ef\u4ee5\u4f7f\u7528 nginx \u505a\u53cd\u5411\u4ee3\u7406\u3002\u5e76\u4e14\u591a\u53f0\u670d\u52a1\u5668\u53ef\u4ee5\u5e73\u5747\u5206\u62c5\u8d1f\u8f7d\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u67d0\u53f0\u670d\u52a1\u5668\u8d1f\u8f7d\u9ad8\u5b95\u673a\u800c\u67d0\u53f0\u670d\u52a1\u5668\u95f2\u7f6e\u7684\u60c5\u51b5\u3002","title":"\u4ec0\u4e48\u662fNginx"},{"location":"Nginx/01Nginx%E5%AE%89%E8%A3%85/#_1","text":"\u9996\u5148 \u521b\u5efa\u6587\u4ef6 \u5236\u4f5c\u81ea\u52a8\u5b89\u88c5\u811a\u672c vim openresty.sh 1 2 3 4 5 6 7 8 9 10 11 12 13 yum install - y pcre - devel openssl - devel gcc curl cd / usr / local / wget https : //openresty.org/download/openresty-1.17.8.2.tar.gz cd / usr / local / tar - zxvf openresty - 1.17.8.2 . tar . gz cd / usr / local / mv openresty - 1.17.8.2 openresty cd / usr / local / openresty / . / configure -- with - luajit \\ -- without - http_redis2_module \\ -- with - http_iconv_module cd / usr / local / openresty / make && make install \u8d4b\u4e88\u6267\u884c\u6587\u4ef6 chmod +x openresty.sh \u8fd0\u884c\u5373\u53ef ./openresty.sh \u7136\u540e\u4fee\u6539\u73af\u5883 1 2 3 4 $ vi / etc / profile export PATH =/ usr / local / openresty / nginx / sbin : $PATH $ source / etc / profile OK\u81f3\u6b64\u7ed3\u675f \u914d\u7f6e\u5b8c\u6210 \u53ef\u4ee5\u5728 cd /usr/local/openresty/ \u76ee\u5f55\u4e0b\u627e\u5230NGinx \u542f\u52a8\u4ed6\u5c31ok\u4e86 \u8fd9\u4e2a\u811a\u672c\u53ef\u4ee5\u590d\u7528 \u4e0b\u6b21\u76f4\u63a5 \u8d4b\u4e88\u6267\u884c\u6587\u4ef6\u914d\u7f6e \u73af\u5883\u5373\u53ef \u865a\u62df\u673a\u5185","title":"\u5b89\u88c5"},{"location":"Nginx/01Nginx%E5%AE%89%E8%A3%85/#_2","text":"","title":"\u6d4b\u8bd5"},{"location":"Nginx/02Nginx%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%A7%A3%E8%AF%BB/","text":"Nginx \u914d\u7f6e\u6587\u4ef6\u89e3\u8bfb \u914d\u7f6e\u6587\u4ef6\u7684\u51e0\u5927\u5757 1 2 3 4 5 6 7 8 # nginx\u914d\u7f6e\u6587\u4ef6\u4e3b\u8981\u5206\u4e3a\u516d\u4e2a\u533a\u57df\uff1a \u6838\u5fc3\u533a\u57df # main(\u5168\u5c40\u8bbe\u7f6e) \u4f5c\u7528\u57df\u662f\u5168\u5c40 # events(nginx\u5de5\u4f5c\u6a21\u5f0f) # upstream(\u8d1f\u8f7d\u5747\u8861\u670d\u52a1\u5668\u8bbe\u7f6e\uff09 # http(http\u8bbe\u7f6e) # sever(\u4e3b\u673a\u8bbe\u7f6e) # location(URL\u5339\u914d) # \u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 #\u8bbe\u7f6e\u7528\u6237\u7684\u6743\u9650 root nobody \u6307\u5b9a \u7528\u6237\u540d\u865a\u62df\u673a\u5185\u7528\u6237 \u6216\u8005 Ip\u8bbf\u95ee #user nobody; #\u8bbe\u7f6e\u5de5\u4f5c\u8fdb\u7a0b\u6570 \u4e00\u822c\u4e3a Cpu \u6838\u5fc3*2 4*2 worker_processes 8; # \u65e5\u5fd7\u8f93\u51fa\u53c2\u6570 #error_log logs/error.log; #error_log logs/error.log notice; #error_log logs/error.log info; # \u8fdb\u7a0bID #pid logs/nginx.pid; events { #\u6307\u5b9a\u8fd0\u884c\u6a21\u578b use epoll; # \u5de5\u4f5c\u8fde\u63a5\u6570 \u9ed8\u8ba4512 \u6839\u636e\u81ea\u5df1\u7684\u60c5\u51b5\u8c03\u6574 worker_connections 1024; } #http\u6a21\u5757 http { # \u80fd\u591f\u652f\u6301\u7684\u7c7b\u578b \u5728 \u8fd9\u4e2a\u6587\u4ef6\u4e0b\u5199\u7740 mime.types include mime.types; # \u9ed8\u8ba4\u7684\u7c7b\u578b \u5728 application/octet-stream; default_type application/octet-stream; # \u65e5\u5fd7\u7684\u683c\u5f0f #log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' # '$status $body_bytes_sent \"$http_referer\" ' # '\"$http_user_agent\" \"$http_x_forwarded_for\"'; #\u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55 #access_log logs/access.log main; #\u542f\u52a8 \u53d1\u9001\u6587\u4ef6 sendfile on; # \u5f00\u542fTCP \u63a8\u9001 #tcp_nopush on; # \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 #keepalive_timeout 0; keepalive_timeout 65; # \u5f00\u542f\u538b\u7f29\u6587\u4ef6 #gzip on; # \u670d\u52a1 # \u670d\u52a1\u5206\u7ec4 \u53cd\u5411\u4ee3\u7406\u7684\u6838\u5fc3\u5173\u952e upstream tuling { # ip \u65b9\u5f0f \u6700\u5927\u5931\u8d253\u4e2a\u8fde\u63a5 \u95f4\u9694 30S \u6743\u91cd\u4e3a 5 server 127.0.0.1:8080 max_fails=3 fail_timeout=30s weight=5; #\u6839\u636eip \u5229\u7528Hash\u7b97\u6cd5\u51b3\u5b9a\u8bbf\u95ee\u54ea\u53f0\u673a\u5668 ip_hash; } server { listen 80; server_name localhost; #charset koi8-r; #\u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55 \u4ee5\u53ca\u4f4d\u7f6e #access_log logs/host.access.log main; # \u5339\u914d\u4f4d\u7f6e \u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f location / { # \u5bfb\u627e\u4f4d\u7f6e \u9ed8\u8ba4\u5728Nginx \u76ee\u5f55\u4e0b\u7684 \u7c7b\u578b root html; index index.html index.htm; proxy_pass http://127.0.0.1; } #\u9519\u8bef\u4fe1\u606f \u9875\u9762 #error_page 404 /404.html; #\u5c06\u670d\u52a1\u5668\u9519\u8bef\u9875\u91cd\u5b9a\u5411\u5230\u9759\u6001\u9875/50x.html # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } #\u5b9e\u4f8b \u5165 \u5c06\u8bbf\u95ee\u5c3e\u7f00\u4e3a \\.php \u8df3\u8f6c\u5230 127.0.0.1 # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \\.php$ { # proxy_pass http://127.0.0.1; #} #\u5c06PHP\u811a\u672c\u4f20\u9012\u7ed9\u6b63\u5728\u4fa6\u542c127.0.0.1:9000\u7684FastCGI\u670d\u52a1\u5668 # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php$ { # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #} #\u62d2\u7edd\u8bbf\u95ee.htaccess\u6587\u4ef6\uff0c\u5982\u679cApache\u7684\u6587\u6863\u6839 # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # #location ~ /\\.ht { # deny all; #} } # another virtual host using mix of IP-, name-, and port-based configuration # #server { # listen 8000; # listen somename:8080; # server_name somename alias another.alias; # location / { # root html; # index index.html index.htm; # } #} # HTTPS server # #server { # listen 443 ssl; # server_name localhost; # ssl_certificate cert.pem; # ssl_certificate_key cert.key; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 5m; # ssl_ciphers HIGH:!aNULL:!MD5; # ssl_prefer_server_ciphers on; # location / { # root html; # index index.html index.htm; # } #} } \u6587\u5b57\u7248\u63cf\u8ff0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 ################### main\u533a\u57df ################################# #user :\u6765\u6307\u5b9aNginx Worker\u8fdb\u7a0b\u8fd0\u884c\u7528\u6237\u4ee5\u53ca\u7528\u6237\u7ec4\uff0c\u9ed8\u8ba4\u7531nobody\u8d26\u53f7\u8fd0\u884c\u3002\u4e5f\u53ef\u4ee5\u521b\u5efanginx\u7528\u6237\u6307\u5b9a\u7528\u6237\u3002 # \u521b\u5efawww\u7528\u6237\uff0c\u5728nginx\u914d\u7f6e\u6587\u4ef6\u4e2d\u628auser noboby noboby;-->user www www;\u5373\u53ef # /usr/sbin/groupadd www # /usr/sbin/useradd -g www www #worker_processes:\u6765\u6307\u5b9a\u4e86Nginx\u8981\u5f00\u542f\u7684\u5b50\u8fdb\u7a0b\u6570\u3002\u6bcf\u4e2aNginx\u8fdb\u7a0b\u5e73\u5747\u8017\u8d3910M~12M\u5185\u5b58\u3002\u6839\u636e\u7ecf\u9a8c\uff0c\u4e00\u822c\u6307\u5b9a1\u4e2a\u8fdb\u7a0b\u5c31\u8db3\u591f\u4e86\uff0c\u5982\u679c\u662f\u591a\u6838CPU\uff0c # \u5efa\u8bae\u6307\u5b9a\u548cCPU\u7684\u6570\u91cf\u4e00\u6837\u7684\u8fdb\u7a0b\u6570\u5373\u53ef\u3002\u6211\u8fd9\u91cc\u51992\uff0c\u90a3\u4e48\u5c31\u4f1a\u5f00\u542f2\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u603b\u51713\u4e2a\u8fdb\u7a0b\u3002 #error_log:\u7528\u6765\u5b9a\u4e49\u5168\u5c40\u9519\u8bef\u65e5\u5fd7\u6587\u4ef6\u3002\u65e5\u5fd7\u8f93\u51fa\u7ea7\u522b\u6709debug\u3001info\u3001notice\u3001warn\u3001error\u3001crit\u53ef\u4f9b\u9009\u62e9\uff0c\u5176\u4e2d\uff0cdebug\u8f93\u51fa\u65e5\u5fd7\u6700\u4e3a\u6700\u8be6\u7ec6\uff0c\u800ccrit\u8f93\u51fa\u65e5\u5fd7\u6700\u5c11\u3002 #pid:\u7528\u6765\u6307\u5b9a\u8fdb\u7a0bid\u7684\u5b58\u50a8\u6587\u4ef6\u4f4d\u7f6e\u3002 #worker_rlimit_nofile:\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2anginx\u8fdb\u7a0b\u53ef\u4ee5\u6253\u5f00\u7684\u6700\u591a\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u76ee\uff0c\u8fd9\u91cc\u662f65535\uff0c\u9700\u8981\u4f7f\u7528\u547d\u4ee4\u201culimit -n 65535\u201d\u6765\u8bbe\u7f6e\u3002 user nobody; worker_processes 1; error_log logs/error.log; error_log logs/error.log notice; error_log logs/error.log info; pid logs/nginx.pid; #####################event \u533a\u57df############################### #use\uff1a\u7528\u6765\u6307\u5b9aNginx\u7684\u5de5\u4f5c\u6a21\u5f0f\u3002Nginx\u652f\u6301\u7684\u5de5\u4f5c\u6a21\u5f0f\u6709select\u3001poll\u3001kqueue\u3001epoll\u3001rtsig\u548c/dev/poll\u3002 # \u5176\u4e2dselect\u548cpoll\u90fd\u662f\u6807\u51c6\u7684\u5de5\u4f5c\u6a21\u5f0f\uff0ckqueue\u548cepoll\u662f\u9ad8\u6548\u7684\u5de5\u4f5c\u6a21\u5f0f\uff0c\u4e0d\u540c\u7684\u662fepoll\u7528\u5728Linux\u5e73\u53f0\u4e0a\uff0c # \u800ckqueue\u7528\u5728BSD\u7cfb\u7edf\u4e2d,\u5bf9\u4e8eLinux\u7cfb\u7edf\uff0cepoll\u5de5\u4f5c\u6a21\u5f0f\u662f\u9996\u9009\u3002 #worker_connections\uff1a\u7528\u4e8e\u5b9a\u4e49Nginx\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u6700\u5927\u8fde\u63a5\u6570\uff0c\u5373\u63a5\u6536\u524d\u7aef\u7684\u6700\u5927\u8bf7\u6c42\u6570\uff0c\u9ed8\u8ba4\u662f1024\u3002 # \u6700\u5927\u5ba2\u6237\u7aef\u8fde\u63a5\u6570\u7531worker_processes\u548cworker_connections\u51b3\u5b9a\uff0c\u5373Max_clients=worker_processes*worker_connections\uff0c # \u5728\u4f5c\u4e3a\u53cd\u5411\u4ee3\u7406\u65f6\uff0cMax_clients\u53d8\u4e3a\uff1aMax_clients = worker_processes * worker_connections/4\u3002 # \u8fdb\u7a0b\u7684\u6700\u5927\u8fde\u63a5\u6570\u53d7Linux\u7cfb\u7edf\u8fdb\u7a0b\u7684\u6700\u5927\u6253\u5f00\u6587\u4ef6\u6570\u9650\u5236\uff0c\u5728\u6267\u884c\u64cd\u4f5c\u7cfb\u7edf\u547d\u4ee4\u201culimit -n 65536\u201d\u540eworker_connections\u7684\u8bbe\u7f6e\u624d\u80fd\u751f\u6548\u3002 events { use epoll; worker_connections 1024; } ######################### http\u8bbe\u7f6e##################################### # http\u6a21\u5757\u8d1f\u8d23HTTP\u670d\u52a1\u5668\u76f8\u5173\u5c5e\u6027\u7684\u914d\u7f6e\uff0c\u6709server\u548cupstream\u4e24\u4e2a\u5b50\u6a21\u5757 http { #include \uff1a\u6765\u7528\u8bbe\u5b9a\u6587\u4ef6\u7684mime\u7c7b\u578b,\u7c7b\u578b\u5728\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\u4e0b\u7684mime.type\u6587\u4ef6\u5b9a\u4e49\uff0c\u6765\u544a\u8bc9nginx\u6765\u8bc6\u522b\u6587\u4ef6\u7c7b\u578b\u3002 #default_type\uff1a\u8bbe\u5b9a\u4e86\u9ed8\u8ba4\u7684\u7c7b\u578b\u4e3a\u4e8c\u8fdb\u5236\u6d41\uff0c\u4e5f\u5c31\u662f\u5f53\u6587\u4ef6\u7c7b\u578b\u672a\u5b9a\u4e49\u65f6\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4f8b\u5982\u5728\u6ca1\u6709\u914d\u7f6easp\u7684locate\u73af\u5883\u65f6\uff0cNginx\u662f\u4e0d\u4e88\u89e3\u6790\u7684\uff0c\u6b64\u65f6\uff0c\u7528\u6d4f\u89c8\u5668\u8bbf\u95eeasp\u6587\u4ef6\u5c31\u4f1a\u51fa\u73b0\u4e0b\u8f7d\u4e86\u3002 #log_format\uff1a\u7528\u4e8e\u8bbe\u7f6e\u65e5\u5fd7\u7684\u683c\u5f0f\uff0c\u548c\u8bb0\u5f55\u54ea\u4e9b\u53c2\u6570\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3amain\uff0c\u521a\u597d\u7528\u4e8eaccess_log\u6765\u7eaa\u5f55\u8fd9\u79cd\u7c7b\u578b\u3002 include mime.types; default_type application/octet-stream; log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; access_log logs/access.log main; sendfile on; tcp_nopush on; keepalive_timeout 0; keepalive_timeout 65; gzip on; ######################### server\u8bbe\u7f6e##################################### #server\u7528\u6765\u5b9a\u4e00\u4e2a\u865a\u62df\u4e3b\u673a\uff0c\u6807\u5fd7\u5b9a\u4e49\u865a\u62df\u4e3b\u673a\u5f00\u59cb\u3002 #listen\uff1a\u7528\u4e8e\u6307\u5b9a\u865a\u62df\u4e3b\u673a\u7684\u670d\u52a1\u7aef\u53e3\u3002 #server_name\uff1a\u7528\u6765\u6307\u5b9aIP\u5730\u5740\u6216\u8005\u57df\u540d\uff0c\u591a\u4e2a\u57df\u540d\u4e4b\u95f4\u7528\u7a7a\u683c\u5206\u5f00\u3002 #root \uff1a\u8868\u793a\u5728\u8fd9\u6574\u4e2aserver\u865a\u62df\u4e3b\u673a\u5185\uff0c\u5168\u90e8\u7684root web\u6839\u76ee\u5f55\u3002\u6ce8\u610f\u8981\u548clocate {}\u4e0b\u9762\u5b9a\u4e49\u7684\u533a\u5206\u5f00\u6765\u3002 #index \uff1a\u5168\u5c40\u5b9a\u4e49\u8bbf\u95ee\u7684\u9ed8\u8ba4\u9996\u9875\u5730\u5740\u3002\u6ce8\u610f\u8981\u548clocate {}\u4e0b\u9762\u5b9a\u4e49\u7684\u533a\u5206\u5f00\u6765\u3002 #charset\uff1a\u7528\u4e8e\u8bbe\u7f6e\u7f51\u9875\u7684\u9ed8\u8ba4\u7f16\u7801\u683c\u5f0f\u3002 #access_log\uff1a\u7528\u6765\u6307\u5b9a\u6b64\u865a\u62df\u4e3b\u673a\u7684\u8bbf\u95ee\u65e5\u5fd7\u5b58\u653e\u8def\u5f84\uff0c\u6700\u540e\u7684main\u7528\u4e8e\u6307\u5b9a\u8bbf\u95ee\u65e5\u5fd7\u7684\u8f93\u51fa\u683c\u5f0f\u3002 server { listen 80; server_name localhost; root /Users/hk/www; index index.php index.html index.htm; charset utf-8; access_log logs/host.access.log main; aerror_log logs/host.error.log main; ######################### location\u8bbe\u7f6e##################################### # location\u6a21\u5757 \u8d1f\u8f7d\u5747\u8861,\u53cd\u5411\u4ee3\u7406,\u865a\u62df\u57df\u540d\u7b49\u914d\u7f6e\u3002\u662f\u6765\u5b9a\u4f4d\u7684\uff0c\u5b9a\u4f4dURL\uff0c\u89e3\u6790URL\uff0c\u5b83\u4e5f\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u6b63\u5219\u5339\u914d\u529f\u80fd\uff0c\u4e5f\u652f\u6301\u6761\u4ef6\u5224\u65ad\u5339\u914d\uff0c # \u53ef\u4ee5\u901a\u8fc7location\u6307\u4ee4\u5b9e\u73b0Nginx\u5bf9\u52a8,\u9759\u6001\u7f51\u9875\u8fdb\u884c\u8fc7\u6ee4\u5904\u7406\u3002 #/\u8868\u793a\u5339\u914d\u8bbf\u95ee\u6839\u76ee\u5f55\u3002 #root\u6307\u4ee4\u7528\u4e8e\u6307\u5b9a\u8bbf\u95ee\u6839\u76ee\u5f55\u65f6\uff0c\u865a\u62df\u4e3b\u673a\u7684web\u76ee\u5f55\uff0c\u8fd9\u4e2a\u76ee\u5f55\u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84\uff08\u76f8\u5bf9\u8def\u5f84\u662f\u76f8\u5bf9\u4e8enginx\u7684\u5b89\u88c5\u76ee\u5f55\uff09\u3002\u4e5f\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84\u3002 #proxy_pass\uff1a\u4ee3\u7406\u8f6c\u53d1\uff0c\u5982\u679c\u5728proxy_pass\u540e\u9762\u7684url\u52a0/\uff0c\u8868\u793a\u7edd\u5bf9\u6839\u8def\u5f84\uff1b\u5982\u679c\u6ca1\u6709/\uff0c\u8868\u793a\u76f8\u5bf9\u8def\u5f84\uff0c\u628a\u5339\u914d\u7684\u8def\u5f84\u90e8\u5206\u4e5f\u7ed9\u4ee3\u7406\u8d70\u3002 #proxy_set_header\uff1a\u5141\u8bb8\u91cd\u65b0\u5b9a\u4e49\u6216\u8005\u6dfb\u52a0\u53d1\u5f80\u540e\u7aef\u670d\u52a1\u5668\u7684\u8bf7\u6c42\u5934\u3002 #include\uff1a\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\uff0c\u540e\u9762\u4ecb\u7ecdnginx\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6\u65f6\u5019\u4f1a\u63d0\u5230\u3002 #root\uff1a\u5b9a\u4f4dlocaltion\u5339\u914d\u7684url\u8d44\u6e90\u8def\u5f84\u3002 #index\uff1a\u5b9a\u4e49\u9875\u9762\u663e\u793ahtml\uff0c\u4e00\u822c\u548calias\u914d\u5408\u4f7f\u7528\u3002 location / { root html; index index.html index.htm; } error_page 404 /404.html; error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } #\u53cd\u5411\u4ee3\u7406\u914d\u7f6e location /jyb { proxy_pass http://qurt/; proxy_read_timeout 1800s; proxy_set_header Host $host:$server_port; proxy_set_header X-real-ip $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } #\u91c7\u7528uwsgi\u65b9\u5f0f location /python/ { include uwsgi_params; uwsgi_pass 127.0.0.1:33333; } # FastCGI\u65b9\u5f0f location ~ \\.php$ { root html; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; include fastcgi_params; } #\u8bbf\u95eenginx\u672c\u673a\u76ee\u5f55\u7684\u6587\u4ef6 location / { root /home/hk/; index index.html index.htm; } location /static/ { alias /var/static/; } # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # location ~ /\\.ht { deny all; } } # another virtual host using mix of IP-, name-, and port-based configuration server { listen 8000; listen somename:8080; server_name somename alias another.alias; location / { root html; index index.html index.htm; } } # HTTPS server server { listen 443 ssl; server_name localhost; ssl_certificate cert.pem; ssl_certificate_key cert.key; ssl_session_cache shared:SSL:1m; ssl_session_timeout 5m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; location / { root html; index index.html index.htm; } } ##############upstram \u6a21\u5757################ # upstream \u6a21\u5757 \u8d1f\u8f7d\u5747\u8861\u6a21\u5757\uff0c\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u8c03\u5ea6\u7b97\u6cd5\u6765\u5b9e\u73b0\u5ba2\u6237\u7aefIP\u5230\u540e\u7aef\u670d\u52a1\u5668\u7684\u8d1f\u8f7d\u5747\u8861\u3002 #Nginx\u7684\u8d1f\u8f7d\u5747\u8861\u6a21\u5757\u76ee\u524d\u652f\u63014\u79cd\u8c03\u5ea6\u7b97\u6cd5: # weight \u8f6e\u8be2\uff08\u9ed8\u8ba4\uff09\u3002\u6bcf\u4e2a\u8bf7\u6c42\u6309\u65f6\u95f4\u987a\u5e8f\u9010\u4e00\u5206\u914d\u5230\u4e0d\u540c\u7684\u540e\u7aef\u670d\u52a1\u5668\uff0c\u5982\u679c\u540e\u7aef\u67d0\u53f0\u670d\u52a1\u5668\u5b95\u673a\uff0c\u6545\u969c\u7cfb\u7edf\u88ab\u81ea\u52a8\u5254\u9664\uff0c\u4f7f\u7528\u6237\u8bbf\u95ee\u4e0d\u53d7\u5f71\u54cd\u3002 # weight\u6307\u5b9a\u8f6e\u8be2\u6743\u503c\uff0cweight\u503c\u8d8a\u5927\uff0c\u5206\u914d\u5230\u7684\u8bbf\u95ee\u673a\u7387\u8d8a\u9ad8\uff0c\u4e3b\u8981\u7528\u4e8e\u540e\u7aef\u6bcf\u4e2a\u670d\u52a1\u5668\u6027\u80fd\u4e0d\u5747\u7684\u60c5\u51b5\u4e0b\u3002 # ip_hash\u3002\u6bcf\u4e2a\u8bf7\u6c42\u6309\u8bbf\u95eeIP\u7684hash\u7ed3\u679c\u5206\u914d\uff0c\u8fd9\u6837\u6765\u81ea\u540c\u4e00\u4e2aIP\u7684\u8bbf\u5ba2\u56fa\u5b9a\u8bbf\u95ee\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\u5668\uff0c\u6709\u6548\u89e3\u51b3\u4e86\u52a8\u6001\u7f51\u9875\u5b58\u5728\u7684session\u5171\u4eab\u95ee\u9898\u3002 # fair\u3002\u6bd4\u4e0a\u9762\u4e24\u4e2a\u66f4\u52a0\u667a\u80fd\u7684\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\u3002\u6b64\u79cd\u7b97\u6cd5\u53ef\u4ee5\u4f9d\u636e\u9875\u9762\u5927\u5c0f\u548c\u52a0\u8f7d\u65f6\u95f4\u957f\u77ed\u667a\u80fd\u5730\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\uff0c # \u4e5f\u5c31\u662f\u6839\u636e\u540e\u7aef\u670d\u52a1\u5668\u7684\u54cd\u5e94\u65f6\u95f4\u6765\u5206\u914d\u8bf7\u6c42\uff0c\u54cd\u5e94\u65f6\u95f4\u77ed\u7684\u4f18\u5148\u5206\u914d\u3002Nginx\u672c\u8eab\u662f\u4e0d\u652f\u6301fair\u7684\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u8fd9\u79cd\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5fc5\u987b\u4e0b\u8f7dNginx\u7684upstream_fair\u6a21\u5757\u3002 # url_hash\u3002\u6309\u8bbf\u95eeurl\u7684hash\u7ed3\u679c\u6765\u5206\u914d\u8bf7\u6c42\uff0c\u4f7f\u6bcf\u4e2aurl\u5b9a\u5411\u5230\u540c\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8\u540e\u7aef\u7f13\u5b58\u670d\u52a1\u5668\u7684\u6548\u7387\u3002Nginx\u672c\u8eab\u662f\u4e0d\u652f\u6301url_hash\u7684\uff0c # \u5982\u679c\u9700\u8981\u4f7f\u7528\u8fd9\u79cd\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5fc5\u987b\u5b89\u88c5Nginx \u7684hash\u8f6f\u4ef6\u5305\u3002 #\u5728HTTP Upstream\u6a21\u5757\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7server\u6307\u4ee4\u6307\u5b9a\u540e\u7aef\u670d\u52a1\u5668\u7684IP\u5730\u5740\u548c\u7aef\u53e3\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u8bbe\u5b9a\u6bcf\u4e2a\u540e\u7aef\u670d\u52a1\u5668\u5728\u8d1f\u8f7d\u5747\u8861\u8c03\u5ea6\u4e2d\u7684\u72b6\u6001\u3002\u5e38\u7528\u7684\u72b6\u6001\u6709\uff1a # down\uff0c\u8868\u793a\u5f53\u524d\u7684server\u6682\u65f6\u4e0d\u53c2\u4e0e\u8d1f\u8f7d\u5747\u8861\u3002 # backup\uff0c\u9884\u7559\u7684\u5907\u4efd\u673a\u5668\u3002\u5f53\u5176\u4ed6\u6240\u6709\u7684\u975ebackup\u673a\u5668\u51fa\u73b0\u6545\u969c\u6216\u8005\u5fd9\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u8bf7\u6c42backup\u673a\u5668\uff0c\u56e0\u6b64\u8fd9\u53f0\u673a\u5668\u7684\u538b\u529b\u6700\u8f7b\u3002 # max_fails\uff0c\u5141\u8bb8\u8bf7\u6c42\u5931\u8d25\u7684\u6b21\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u3002\u5f53\u8d85\u8fc7\u6700\u5927\u6b21\u6570\u65f6\uff0c\u8fd4\u56deproxy_next_upstream \u6a21\u5757\u5b9a\u4e49\u7684\u9519\u8bef\u3002 # fail_timeout\uff0c\u5728\u7ecf\u5386\u4e86max_fails\u6b21\u5931\u8d25\u540e\uff0c\u6682\u505c\u670d\u52a1\u7684\u65f6\u95f4\u3002max_fails\u53ef\u4ee5\u548cfail_timeout\u4e00\u8d77\u4f7f\u7528\u3002 #\u6ce8\u610f \u5f53\u8d1f\u8f7d\u8c03\u5ea6\u7b97\u6cd5\u4e3aip_hash\u65f6\uff0c\u540e\u7aef\u670d\u52a1\u5668\u5728\u8d1f\u8f7d\u5747\u8861\u8c03\u5ea6\u4e2d\u7684\u72b6\u6001\u4e0d\u80fd\u662fweight\u548cbackup\u3002 #\u5907\u6ce8\uff1a nginx\u7684worker_rlimit_nofile\u8fbe\u5230\u4e0a\u9650\u65f6\uff0c\u518d\u6709\u5ba2\u6237\u7aef\u94fe\u63a5\u62a5502\u9519\u8bef. \u7528\u4e86log_format\u6307\u4ee4\u8bbe\u7f6e\u4e86\u65e5\u5fd7\u683c\u5f0f\u4e4b\u540e\uff0c\u9700\u8981\u7528access_log\u6307\u4ee4\u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u7684\u5b58\u653e\u8def\u5f84\u3002 upstream server_group { ip_hash; server 192.168.123.1:80; server 192.168.123.2:80 down; server 192.168.123.3:8080 max_fails=3 fail_timeout=20s; server 192.168.123.4:8080; } server { listen 80; server_name localhost; location / { proxy_pass http://server_group/; } } } ######################nginx \u4e2dlocation\u4e2droot\u548calias\u7684\u533a\u522b #################### nginx\u6307\u5b9a\u6587\u4ef6\u8def\u5f84\u6709\u4e24\u79cd\u65b9\u5f0froot\u548calias\uff0c\u8fd9\u4e24\u8005\u7684\u7528\u6cd5\u533a\u522b\uff0c\u4f7f\u7528\u65b9\u6cd5\u603b\u7ed3\u4e86\u3002 root\u4e0ealias\u4e3b\u8981\u533a\u522b\u5728\u4e8enginx\u5982\u4f55\u89e3\u91calocation\u540e\u9762\u7684uri\uff0c\u8fd9\u4f1a\u4f7f\u4e24\u8005\u5206\u522b\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5c06\u8bf7\u6c42\u6620\u5c04\u5230\u670d\u52a1\u5668\u6587\u4ef6\u4e0a\u3002 [root] \u8bed\u6cd5\uff1aroot path \u9ed8\u8ba4\u503c\uff1aroot html \u914d\u7f6e\u6bb5\uff1ahttp\u3001server\u3001location\u3001if [alias] \u8bed\u6cd5\uff1aalias path \u914d\u7f6e\u6bb5\uff1alocation root\u5b9e\u4f8b\uff1a location ^~ /t/ { root /www/root/html/; } \u5982\u679c\u4e00\u4e2a\u8bf7\u6c42\u7684URI\u662f/t/a.html\u65f6\uff0cweb\u670d\u52a1\u5668\u5c06\u4f1a\u8fd4\u56de\u670d\u52a1\u5668\u4e0a\u7684/www/root/html/t/a.html\u7684\u6587\u4ef6\u3002 alias\u5b9e\u4f8b\uff1a location ^~ /t/ { alias /www/root/html/new_t/; } \u5982\u679c\u4e00\u4e2a\u8bf7\u6c42\u7684URI\u662f/t/a.html\u65f6\uff0cweb\u670d\u52a1\u5668\u5c06\u4f1a\u8fd4\u56de\u670d\u52a1\u5668\u4e0a\u7684/www/root/html/new_t/a.html\u7684\u6587\u4ef6\u3002\u6ce8\u610f\u8fd9\u91cc\u662fnew_t\uff0c \u56e0\u4e3aalias\u4f1a\u628alocation\u540e\u9762\u914d\u7f6e\u7684\u8def\u5f84\u4e22\u5f03\u6389\uff0c\u628a\u5f53\u524d\u5339\u914d\u5230\u7684\u76ee\u5f55\u6307\u5411\u5230\u6307\u5b9a\u7684\u76ee\u5f55\u3002 \u6ce8\u610f\uff1a 1. \u4f7f\u7528alias\u65f6\uff0c\u76ee\u5f55\u540d\u540e\u9762\u4e00\u5b9a\u8981\u52a0\"/\"\u3002 2. alias\u5728\u4f7f\u7528\u6b63\u5219\u5339\u914d\u65f6\uff0c\u5fc5\u987b\u6355\u6349\u8981\u5339\u914d\u7684\u5185\u5bb9\u5e76\u5728\u6307\u5b9a\u7684\u5185\u5bb9\u5904\u4f7f\u7528\u3002 3. alias\u53ea\u80fd\u4f4d\u4e8elocation\u5757\u4e2d\u3002\uff08root\u53ef\u4ee5\u4e0d\u653e\u5728location\u4e2d\uff09","title":"02Nginx\u914d\u7f6e\u6587\u4ef6\u89e3\u8bfb"},{"location":"Nginx/02Nginx%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%A7%A3%E8%AF%BB/#nginx","text":"\u914d\u7f6e\u6587\u4ef6\u7684\u51e0\u5927\u5757 1 2 3 4 5 6 7 8 # nginx\u914d\u7f6e\u6587\u4ef6\u4e3b\u8981\u5206\u4e3a\u516d\u4e2a\u533a\u57df\uff1a \u6838\u5fc3\u533a\u57df # main(\u5168\u5c40\u8bbe\u7f6e) \u4f5c\u7528\u57df\u662f\u5168\u5c40 # events(nginx\u5de5\u4f5c\u6a21\u5f0f) # upstream(\u8d1f\u8f7d\u5747\u8861\u670d\u52a1\u5668\u8bbe\u7f6e\uff09 # http(http\u8bbe\u7f6e) # sever(\u4e3b\u673a\u8bbe\u7f6e) # location(URL\u5339\u914d) # \u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 #\u8bbe\u7f6e\u7528\u6237\u7684\u6743\u9650 root nobody \u6307\u5b9a \u7528\u6237\u540d\u865a\u62df\u673a\u5185\u7528\u6237 \u6216\u8005 Ip\u8bbf\u95ee #user nobody; #\u8bbe\u7f6e\u5de5\u4f5c\u8fdb\u7a0b\u6570 \u4e00\u822c\u4e3a Cpu \u6838\u5fc3*2 4*2 worker_processes 8; # \u65e5\u5fd7\u8f93\u51fa\u53c2\u6570 #error_log logs/error.log; #error_log logs/error.log notice; #error_log logs/error.log info; # \u8fdb\u7a0bID #pid logs/nginx.pid; events { #\u6307\u5b9a\u8fd0\u884c\u6a21\u578b use epoll; # \u5de5\u4f5c\u8fde\u63a5\u6570 \u9ed8\u8ba4512 \u6839\u636e\u81ea\u5df1\u7684\u60c5\u51b5\u8c03\u6574 worker_connections 1024; } #http\u6a21\u5757 http { # \u80fd\u591f\u652f\u6301\u7684\u7c7b\u578b \u5728 \u8fd9\u4e2a\u6587\u4ef6\u4e0b\u5199\u7740 mime.types include mime.types; # \u9ed8\u8ba4\u7684\u7c7b\u578b \u5728 application/octet-stream; default_type application/octet-stream; # \u65e5\u5fd7\u7684\u683c\u5f0f #log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' # '$status $body_bytes_sent \"$http_referer\" ' # '\"$http_user_agent\" \"$http_x_forwarded_for\"'; #\u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55 #access_log logs/access.log main; #\u542f\u52a8 \u53d1\u9001\u6587\u4ef6 sendfile on; # \u5f00\u542fTCP \u63a8\u9001 #tcp_nopush on; # \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 #keepalive_timeout 0; keepalive_timeout 65; # \u5f00\u542f\u538b\u7f29\u6587\u4ef6 #gzip on; # \u670d\u52a1 # \u670d\u52a1\u5206\u7ec4 \u53cd\u5411\u4ee3\u7406\u7684\u6838\u5fc3\u5173\u952e upstream tuling { # ip \u65b9\u5f0f \u6700\u5927\u5931\u8d253\u4e2a\u8fde\u63a5 \u95f4\u9694 30S \u6743\u91cd\u4e3a 5 server 127.0.0.1:8080 max_fails=3 fail_timeout=30s weight=5; #\u6839\u636eip \u5229\u7528Hash\u7b97\u6cd5\u51b3\u5b9a\u8bbf\u95ee\u54ea\u53f0\u673a\u5668 ip_hash; } server { listen 80; server_name localhost; #charset koi8-r; #\u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55 \u4ee5\u53ca\u4f4d\u7f6e #access_log logs/host.access.log main; # \u5339\u914d\u4f4d\u7f6e \u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f location / { # \u5bfb\u627e\u4f4d\u7f6e \u9ed8\u8ba4\u5728Nginx \u76ee\u5f55\u4e0b\u7684 \u7c7b\u578b root html; index index.html index.htm; proxy_pass http://127.0.0.1; } #\u9519\u8bef\u4fe1\u606f \u9875\u9762 #error_page 404 /404.html; #\u5c06\u670d\u52a1\u5668\u9519\u8bef\u9875\u91cd\u5b9a\u5411\u5230\u9759\u6001\u9875/50x.html # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } #\u5b9e\u4f8b \u5165 \u5c06\u8bbf\u95ee\u5c3e\u7f00\u4e3a \\.php \u8df3\u8f6c\u5230 127.0.0.1 # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \\.php$ { # proxy_pass http://127.0.0.1; #} #\u5c06PHP\u811a\u672c\u4f20\u9012\u7ed9\u6b63\u5728\u4fa6\u542c127.0.0.1:9000\u7684FastCGI\u670d\u52a1\u5668 # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php$ { # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #} #\u62d2\u7edd\u8bbf\u95ee.htaccess\u6587\u4ef6\uff0c\u5982\u679cApache\u7684\u6587\u6863\u6839 # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # #location ~ /\\.ht { # deny all; #} } # another virtual host using mix of IP-, name-, and port-based configuration # #server { # listen 8000; # listen somename:8080; # server_name somename alias another.alias; # location / { # root html; # index index.html index.htm; # } #} # HTTPS server # #server { # listen 443 ssl; # server_name localhost; # ssl_certificate cert.pem; # ssl_certificate_key cert.key; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 5m; # ssl_ciphers HIGH:!aNULL:!MD5; # ssl_prefer_server_ciphers on; # location / { # root html; # index index.html index.htm; # } #} } \u6587\u5b57\u7248\u63cf\u8ff0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 ################### main\u533a\u57df ################################# #user :\u6765\u6307\u5b9aNginx Worker\u8fdb\u7a0b\u8fd0\u884c\u7528\u6237\u4ee5\u53ca\u7528\u6237\u7ec4\uff0c\u9ed8\u8ba4\u7531nobody\u8d26\u53f7\u8fd0\u884c\u3002\u4e5f\u53ef\u4ee5\u521b\u5efanginx\u7528\u6237\u6307\u5b9a\u7528\u6237\u3002 # \u521b\u5efawww\u7528\u6237\uff0c\u5728nginx\u914d\u7f6e\u6587\u4ef6\u4e2d\u628auser noboby noboby;-->user www www;\u5373\u53ef # /usr/sbin/groupadd www # /usr/sbin/useradd -g www www #worker_processes:\u6765\u6307\u5b9a\u4e86Nginx\u8981\u5f00\u542f\u7684\u5b50\u8fdb\u7a0b\u6570\u3002\u6bcf\u4e2aNginx\u8fdb\u7a0b\u5e73\u5747\u8017\u8d3910M~12M\u5185\u5b58\u3002\u6839\u636e\u7ecf\u9a8c\uff0c\u4e00\u822c\u6307\u5b9a1\u4e2a\u8fdb\u7a0b\u5c31\u8db3\u591f\u4e86\uff0c\u5982\u679c\u662f\u591a\u6838CPU\uff0c # \u5efa\u8bae\u6307\u5b9a\u548cCPU\u7684\u6570\u91cf\u4e00\u6837\u7684\u8fdb\u7a0b\u6570\u5373\u53ef\u3002\u6211\u8fd9\u91cc\u51992\uff0c\u90a3\u4e48\u5c31\u4f1a\u5f00\u542f2\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u603b\u51713\u4e2a\u8fdb\u7a0b\u3002 #error_log:\u7528\u6765\u5b9a\u4e49\u5168\u5c40\u9519\u8bef\u65e5\u5fd7\u6587\u4ef6\u3002\u65e5\u5fd7\u8f93\u51fa\u7ea7\u522b\u6709debug\u3001info\u3001notice\u3001warn\u3001error\u3001crit\u53ef\u4f9b\u9009\u62e9\uff0c\u5176\u4e2d\uff0cdebug\u8f93\u51fa\u65e5\u5fd7\u6700\u4e3a\u6700\u8be6\u7ec6\uff0c\u800ccrit\u8f93\u51fa\u65e5\u5fd7\u6700\u5c11\u3002 #pid:\u7528\u6765\u6307\u5b9a\u8fdb\u7a0bid\u7684\u5b58\u50a8\u6587\u4ef6\u4f4d\u7f6e\u3002 #worker_rlimit_nofile:\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2anginx\u8fdb\u7a0b\u53ef\u4ee5\u6253\u5f00\u7684\u6700\u591a\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u76ee\uff0c\u8fd9\u91cc\u662f65535\uff0c\u9700\u8981\u4f7f\u7528\u547d\u4ee4\u201culimit -n 65535\u201d\u6765\u8bbe\u7f6e\u3002 user nobody; worker_processes 1; error_log logs/error.log; error_log logs/error.log notice; error_log logs/error.log info; pid logs/nginx.pid; #####################event \u533a\u57df############################### #use\uff1a\u7528\u6765\u6307\u5b9aNginx\u7684\u5de5\u4f5c\u6a21\u5f0f\u3002Nginx\u652f\u6301\u7684\u5de5\u4f5c\u6a21\u5f0f\u6709select\u3001poll\u3001kqueue\u3001epoll\u3001rtsig\u548c/dev/poll\u3002 # \u5176\u4e2dselect\u548cpoll\u90fd\u662f\u6807\u51c6\u7684\u5de5\u4f5c\u6a21\u5f0f\uff0ckqueue\u548cepoll\u662f\u9ad8\u6548\u7684\u5de5\u4f5c\u6a21\u5f0f\uff0c\u4e0d\u540c\u7684\u662fepoll\u7528\u5728Linux\u5e73\u53f0\u4e0a\uff0c # \u800ckqueue\u7528\u5728BSD\u7cfb\u7edf\u4e2d,\u5bf9\u4e8eLinux\u7cfb\u7edf\uff0cepoll\u5de5\u4f5c\u6a21\u5f0f\u662f\u9996\u9009\u3002 #worker_connections\uff1a\u7528\u4e8e\u5b9a\u4e49Nginx\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u6700\u5927\u8fde\u63a5\u6570\uff0c\u5373\u63a5\u6536\u524d\u7aef\u7684\u6700\u5927\u8bf7\u6c42\u6570\uff0c\u9ed8\u8ba4\u662f1024\u3002 # \u6700\u5927\u5ba2\u6237\u7aef\u8fde\u63a5\u6570\u7531worker_processes\u548cworker_connections\u51b3\u5b9a\uff0c\u5373Max_clients=worker_processes*worker_connections\uff0c # \u5728\u4f5c\u4e3a\u53cd\u5411\u4ee3\u7406\u65f6\uff0cMax_clients\u53d8\u4e3a\uff1aMax_clients = worker_processes * worker_connections/4\u3002 # \u8fdb\u7a0b\u7684\u6700\u5927\u8fde\u63a5\u6570\u53d7Linux\u7cfb\u7edf\u8fdb\u7a0b\u7684\u6700\u5927\u6253\u5f00\u6587\u4ef6\u6570\u9650\u5236\uff0c\u5728\u6267\u884c\u64cd\u4f5c\u7cfb\u7edf\u547d\u4ee4\u201culimit -n 65536\u201d\u540eworker_connections\u7684\u8bbe\u7f6e\u624d\u80fd\u751f\u6548\u3002 events { use epoll; worker_connections 1024; } ######################### http\u8bbe\u7f6e##################################### # http\u6a21\u5757\u8d1f\u8d23HTTP\u670d\u52a1\u5668\u76f8\u5173\u5c5e\u6027\u7684\u914d\u7f6e\uff0c\u6709server\u548cupstream\u4e24\u4e2a\u5b50\u6a21\u5757 http { #include \uff1a\u6765\u7528\u8bbe\u5b9a\u6587\u4ef6\u7684mime\u7c7b\u578b,\u7c7b\u578b\u5728\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\u4e0b\u7684mime.type\u6587\u4ef6\u5b9a\u4e49\uff0c\u6765\u544a\u8bc9nginx\u6765\u8bc6\u522b\u6587\u4ef6\u7c7b\u578b\u3002 #default_type\uff1a\u8bbe\u5b9a\u4e86\u9ed8\u8ba4\u7684\u7c7b\u578b\u4e3a\u4e8c\u8fdb\u5236\u6d41\uff0c\u4e5f\u5c31\u662f\u5f53\u6587\u4ef6\u7c7b\u578b\u672a\u5b9a\u4e49\u65f6\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4f8b\u5982\u5728\u6ca1\u6709\u914d\u7f6easp\u7684locate\u73af\u5883\u65f6\uff0cNginx\u662f\u4e0d\u4e88\u89e3\u6790\u7684\uff0c\u6b64\u65f6\uff0c\u7528\u6d4f\u89c8\u5668\u8bbf\u95eeasp\u6587\u4ef6\u5c31\u4f1a\u51fa\u73b0\u4e0b\u8f7d\u4e86\u3002 #log_format\uff1a\u7528\u4e8e\u8bbe\u7f6e\u65e5\u5fd7\u7684\u683c\u5f0f\uff0c\u548c\u8bb0\u5f55\u54ea\u4e9b\u53c2\u6570\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3amain\uff0c\u521a\u597d\u7528\u4e8eaccess_log\u6765\u7eaa\u5f55\u8fd9\u79cd\u7c7b\u578b\u3002 include mime.types; default_type application/octet-stream; log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; access_log logs/access.log main; sendfile on; tcp_nopush on; keepalive_timeout 0; keepalive_timeout 65; gzip on; ######################### server\u8bbe\u7f6e##################################### #server\u7528\u6765\u5b9a\u4e00\u4e2a\u865a\u62df\u4e3b\u673a\uff0c\u6807\u5fd7\u5b9a\u4e49\u865a\u62df\u4e3b\u673a\u5f00\u59cb\u3002 #listen\uff1a\u7528\u4e8e\u6307\u5b9a\u865a\u62df\u4e3b\u673a\u7684\u670d\u52a1\u7aef\u53e3\u3002 #server_name\uff1a\u7528\u6765\u6307\u5b9aIP\u5730\u5740\u6216\u8005\u57df\u540d\uff0c\u591a\u4e2a\u57df\u540d\u4e4b\u95f4\u7528\u7a7a\u683c\u5206\u5f00\u3002 #root \uff1a\u8868\u793a\u5728\u8fd9\u6574\u4e2aserver\u865a\u62df\u4e3b\u673a\u5185\uff0c\u5168\u90e8\u7684root web\u6839\u76ee\u5f55\u3002\u6ce8\u610f\u8981\u548clocate {}\u4e0b\u9762\u5b9a\u4e49\u7684\u533a\u5206\u5f00\u6765\u3002 #index \uff1a\u5168\u5c40\u5b9a\u4e49\u8bbf\u95ee\u7684\u9ed8\u8ba4\u9996\u9875\u5730\u5740\u3002\u6ce8\u610f\u8981\u548clocate {}\u4e0b\u9762\u5b9a\u4e49\u7684\u533a\u5206\u5f00\u6765\u3002 #charset\uff1a\u7528\u4e8e\u8bbe\u7f6e\u7f51\u9875\u7684\u9ed8\u8ba4\u7f16\u7801\u683c\u5f0f\u3002 #access_log\uff1a\u7528\u6765\u6307\u5b9a\u6b64\u865a\u62df\u4e3b\u673a\u7684\u8bbf\u95ee\u65e5\u5fd7\u5b58\u653e\u8def\u5f84\uff0c\u6700\u540e\u7684main\u7528\u4e8e\u6307\u5b9a\u8bbf\u95ee\u65e5\u5fd7\u7684\u8f93\u51fa\u683c\u5f0f\u3002 server { listen 80; server_name localhost; root /Users/hk/www; index index.php index.html index.htm; charset utf-8; access_log logs/host.access.log main; aerror_log logs/host.error.log main; ######################### location\u8bbe\u7f6e##################################### # location\u6a21\u5757 \u8d1f\u8f7d\u5747\u8861,\u53cd\u5411\u4ee3\u7406,\u865a\u62df\u57df\u540d\u7b49\u914d\u7f6e\u3002\u662f\u6765\u5b9a\u4f4d\u7684\uff0c\u5b9a\u4f4dURL\uff0c\u89e3\u6790URL\uff0c\u5b83\u4e5f\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u6b63\u5219\u5339\u914d\u529f\u80fd\uff0c\u4e5f\u652f\u6301\u6761\u4ef6\u5224\u65ad\u5339\u914d\uff0c # \u53ef\u4ee5\u901a\u8fc7location\u6307\u4ee4\u5b9e\u73b0Nginx\u5bf9\u52a8,\u9759\u6001\u7f51\u9875\u8fdb\u884c\u8fc7\u6ee4\u5904\u7406\u3002 #/\u8868\u793a\u5339\u914d\u8bbf\u95ee\u6839\u76ee\u5f55\u3002 #root\u6307\u4ee4\u7528\u4e8e\u6307\u5b9a\u8bbf\u95ee\u6839\u76ee\u5f55\u65f6\uff0c\u865a\u62df\u4e3b\u673a\u7684web\u76ee\u5f55\uff0c\u8fd9\u4e2a\u76ee\u5f55\u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84\uff08\u76f8\u5bf9\u8def\u5f84\u662f\u76f8\u5bf9\u4e8enginx\u7684\u5b89\u88c5\u76ee\u5f55\uff09\u3002\u4e5f\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84\u3002 #proxy_pass\uff1a\u4ee3\u7406\u8f6c\u53d1\uff0c\u5982\u679c\u5728proxy_pass\u540e\u9762\u7684url\u52a0/\uff0c\u8868\u793a\u7edd\u5bf9\u6839\u8def\u5f84\uff1b\u5982\u679c\u6ca1\u6709/\uff0c\u8868\u793a\u76f8\u5bf9\u8def\u5f84\uff0c\u628a\u5339\u914d\u7684\u8def\u5f84\u90e8\u5206\u4e5f\u7ed9\u4ee3\u7406\u8d70\u3002 #proxy_set_header\uff1a\u5141\u8bb8\u91cd\u65b0\u5b9a\u4e49\u6216\u8005\u6dfb\u52a0\u53d1\u5f80\u540e\u7aef\u670d\u52a1\u5668\u7684\u8bf7\u6c42\u5934\u3002 #include\uff1a\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\uff0c\u540e\u9762\u4ecb\u7ecdnginx\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6\u65f6\u5019\u4f1a\u63d0\u5230\u3002 #root\uff1a\u5b9a\u4f4dlocaltion\u5339\u914d\u7684url\u8d44\u6e90\u8def\u5f84\u3002 #index\uff1a\u5b9a\u4e49\u9875\u9762\u663e\u793ahtml\uff0c\u4e00\u822c\u548calias\u914d\u5408\u4f7f\u7528\u3002 location / { root html; index index.html index.htm; } error_page 404 /404.html; error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } #\u53cd\u5411\u4ee3\u7406\u914d\u7f6e location /jyb { proxy_pass http://qurt/; proxy_read_timeout 1800s; proxy_set_header Host $host:$server_port; proxy_set_header X-real-ip $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } #\u91c7\u7528uwsgi\u65b9\u5f0f location /python/ { include uwsgi_params; uwsgi_pass 127.0.0.1:33333; } # FastCGI\u65b9\u5f0f location ~ \\.php$ { root html; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; include fastcgi_params; } #\u8bbf\u95eenginx\u672c\u673a\u76ee\u5f55\u7684\u6587\u4ef6 location / { root /home/hk/; index index.html index.htm; } location /static/ { alias /var/static/; } # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # location ~ /\\.ht { deny all; } } # another virtual host using mix of IP-, name-, and port-based configuration server { listen 8000; listen somename:8080; server_name somename alias another.alias; location / { root html; index index.html index.htm; } } # HTTPS server server { listen 443 ssl; server_name localhost; ssl_certificate cert.pem; ssl_certificate_key cert.key; ssl_session_cache shared:SSL:1m; ssl_session_timeout 5m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; location / { root html; index index.html index.htm; } } ##############upstram \u6a21\u5757################ # upstream \u6a21\u5757 \u8d1f\u8f7d\u5747\u8861\u6a21\u5757\uff0c\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u8c03\u5ea6\u7b97\u6cd5\u6765\u5b9e\u73b0\u5ba2\u6237\u7aefIP\u5230\u540e\u7aef\u670d\u52a1\u5668\u7684\u8d1f\u8f7d\u5747\u8861\u3002 #Nginx\u7684\u8d1f\u8f7d\u5747\u8861\u6a21\u5757\u76ee\u524d\u652f\u63014\u79cd\u8c03\u5ea6\u7b97\u6cd5: # weight \u8f6e\u8be2\uff08\u9ed8\u8ba4\uff09\u3002\u6bcf\u4e2a\u8bf7\u6c42\u6309\u65f6\u95f4\u987a\u5e8f\u9010\u4e00\u5206\u914d\u5230\u4e0d\u540c\u7684\u540e\u7aef\u670d\u52a1\u5668\uff0c\u5982\u679c\u540e\u7aef\u67d0\u53f0\u670d\u52a1\u5668\u5b95\u673a\uff0c\u6545\u969c\u7cfb\u7edf\u88ab\u81ea\u52a8\u5254\u9664\uff0c\u4f7f\u7528\u6237\u8bbf\u95ee\u4e0d\u53d7\u5f71\u54cd\u3002 # weight\u6307\u5b9a\u8f6e\u8be2\u6743\u503c\uff0cweight\u503c\u8d8a\u5927\uff0c\u5206\u914d\u5230\u7684\u8bbf\u95ee\u673a\u7387\u8d8a\u9ad8\uff0c\u4e3b\u8981\u7528\u4e8e\u540e\u7aef\u6bcf\u4e2a\u670d\u52a1\u5668\u6027\u80fd\u4e0d\u5747\u7684\u60c5\u51b5\u4e0b\u3002 # ip_hash\u3002\u6bcf\u4e2a\u8bf7\u6c42\u6309\u8bbf\u95eeIP\u7684hash\u7ed3\u679c\u5206\u914d\uff0c\u8fd9\u6837\u6765\u81ea\u540c\u4e00\u4e2aIP\u7684\u8bbf\u5ba2\u56fa\u5b9a\u8bbf\u95ee\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\u5668\uff0c\u6709\u6548\u89e3\u51b3\u4e86\u52a8\u6001\u7f51\u9875\u5b58\u5728\u7684session\u5171\u4eab\u95ee\u9898\u3002 # fair\u3002\u6bd4\u4e0a\u9762\u4e24\u4e2a\u66f4\u52a0\u667a\u80fd\u7684\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\u3002\u6b64\u79cd\u7b97\u6cd5\u53ef\u4ee5\u4f9d\u636e\u9875\u9762\u5927\u5c0f\u548c\u52a0\u8f7d\u65f6\u95f4\u957f\u77ed\u667a\u80fd\u5730\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\uff0c # \u4e5f\u5c31\u662f\u6839\u636e\u540e\u7aef\u670d\u52a1\u5668\u7684\u54cd\u5e94\u65f6\u95f4\u6765\u5206\u914d\u8bf7\u6c42\uff0c\u54cd\u5e94\u65f6\u95f4\u77ed\u7684\u4f18\u5148\u5206\u914d\u3002Nginx\u672c\u8eab\u662f\u4e0d\u652f\u6301fair\u7684\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u8fd9\u79cd\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5fc5\u987b\u4e0b\u8f7dNginx\u7684upstream_fair\u6a21\u5757\u3002 # url_hash\u3002\u6309\u8bbf\u95eeurl\u7684hash\u7ed3\u679c\u6765\u5206\u914d\u8bf7\u6c42\uff0c\u4f7f\u6bcf\u4e2aurl\u5b9a\u5411\u5230\u540c\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8\u540e\u7aef\u7f13\u5b58\u670d\u52a1\u5668\u7684\u6548\u7387\u3002Nginx\u672c\u8eab\u662f\u4e0d\u652f\u6301url_hash\u7684\uff0c # \u5982\u679c\u9700\u8981\u4f7f\u7528\u8fd9\u79cd\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5fc5\u987b\u5b89\u88c5Nginx \u7684hash\u8f6f\u4ef6\u5305\u3002 #\u5728HTTP Upstream\u6a21\u5757\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7server\u6307\u4ee4\u6307\u5b9a\u540e\u7aef\u670d\u52a1\u5668\u7684IP\u5730\u5740\u548c\u7aef\u53e3\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u8bbe\u5b9a\u6bcf\u4e2a\u540e\u7aef\u670d\u52a1\u5668\u5728\u8d1f\u8f7d\u5747\u8861\u8c03\u5ea6\u4e2d\u7684\u72b6\u6001\u3002\u5e38\u7528\u7684\u72b6\u6001\u6709\uff1a # down\uff0c\u8868\u793a\u5f53\u524d\u7684server\u6682\u65f6\u4e0d\u53c2\u4e0e\u8d1f\u8f7d\u5747\u8861\u3002 # backup\uff0c\u9884\u7559\u7684\u5907\u4efd\u673a\u5668\u3002\u5f53\u5176\u4ed6\u6240\u6709\u7684\u975ebackup\u673a\u5668\u51fa\u73b0\u6545\u969c\u6216\u8005\u5fd9\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u8bf7\u6c42backup\u673a\u5668\uff0c\u56e0\u6b64\u8fd9\u53f0\u673a\u5668\u7684\u538b\u529b\u6700\u8f7b\u3002 # max_fails\uff0c\u5141\u8bb8\u8bf7\u6c42\u5931\u8d25\u7684\u6b21\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u3002\u5f53\u8d85\u8fc7\u6700\u5927\u6b21\u6570\u65f6\uff0c\u8fd4\u56deproxy_next_upstream \u6a21\u5757\u5b9a\u4e49\u7684\u9519\u8bef\u3002 # fail_timeout\uff0c\u5728\u7ecf\u5386\u4e86max_fails\u6b21\u5931\u8d25\u540e\uff0c\u6682\u505c\u670d\u52a1\u7684\u65f6\u95f4\u3002max_fails\u53ef\u4ee5\u548cfail_timeout\u4e00\u8d77\u4f7f\u7528\u3002 #\u6ce8\u610f \u5f53\u8d1f\u8f7d\u8c03\u5ea6\u7b97\u6cd5\u4e3aip_hash\u65f6\uff0c\u540e\u7aef\u670d\u52a1\u5668\u5728\u8d1f\u8f7d\u5747\u8861\u8c03\u5ea6\u4e2d\u7684\u72b6\u6001\u4e0d\u80fd\u662fweight\u548cbackup\u3002 #\u5907\u6ce8\uff1a nginx\u7684worker_rlimit_nofile\u8fbe\u5230\u4e0a\u9650\u65f6\uff0c\u518d\u6709\u5ba2\u6237\u7aef\u94fe\u63a5\u62a5502\u9519\u8bef. \u7528\u4e86log_format\u6307\u4ee4\u8bbe\u7f6e\u4e86\u65e5\u5fd7\u683c\u5f0f\u4e4b\u540e\uff0c\u9700\u8981\u7528access_log\u6307\u4ee4\u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u7684\u5b58\u653e\u8def\u5f84\u3002 upstream server_group { ip_hash; server 192.168.123.1:80; server 192.168.123.2:80 down; server 192.168.123.3:8080 max_fails=3 fail_timeout=20s; server 192.168.123.4:8080; } server { listen 80; server_name localhost; location / { proxy_pass http://server_group/; } } } ######################nginx \u4e2dlocation\u4e2droot\u548calias\u7684\u533a\u522b #################### nginx\u6307\u5b9a\u6587\u4ef6\u8def\u5f84\u6709\u4e24\u79cd\u65b9\u5f0froot\u548calias\uff0c\u8fd9\u4e24\u8005\u7684\u7528\u6cd5\u533a\u522b\uff0c\u4f7f\u7528\u65b9\u6cd5\u603b\u7ed3\u4e86\u3002 root\u4e0ealias\u4e3b\u8981\u533a\u522b\u5728\u4e8enginx\u5982\u4f55\u89e3\u91calocation\u540e\u9762\u7684uri\uff0c\u8fd9\u4f1a\u4f7f\u4e24\u8005\u5206\u522b\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5c06\u8bf7\u6c42\u6620\u5c04\u5230\u670d\u52a1\u5668\u6587\u4ef6\u4e0a\u3002 [root] \u8bed\u6cd5\uff1aroot path \u9ed8\u8ba4\u503c\uff1aroot html \u914d\u7f6e\u6bb5\uff1ahttp\u3001server\u3001location\u3001if [alias] \u8bed\u6cd5\uff1aalias path \u914d\u7f6e\u6bb5\uff1alocation root\u5b9e\u4f8b\uff1a location ^~ /t/ { root /www/root/html/; } \u5982\u679c\u4e00\u4e2a\u8bf7\u6c42\u7684URI\u662f/t/a.html\u65f6\uff0cweb\u670d\u52a1\u5668\u5c06\u4f1a\u8fd4\u56de\u670d\u52a1\u5668\u4e0a\u7684/www/root/html/t/a.html\u7684\u6587\u4ef6\u3002 alias\u5b9e\u4f8b\uff1a location ^~ /t/ { alias /www/root/html/new_t/; } \u5982\u679c\u4e00\u4e2a\u8bf7\u6c42\u7684URI\u662f/t/a.html\u65f6\uff0cweb\u670d\u52a1\u5668\u5c06\u4f1a\u8fd4\u56de\u670d\u52a1\u5668\u4e0a\u7684/www/root/html/new_t/a.html\u7684\u6587\u4ef6\u3002\u6ce8\u610f\u8fd9\u91cc\u662fnew_t\uff0c \u56e0\u4e3aalias\u4f1a\u628alocation\u540e\u9762\u914d\u7f6e\u7684\u8def\u5f84\u4e22\u5f03\u6389\uff0c\u628a\u5f53\u524d\u5339\u914d\u5230\u7684\u76ee\u5f55\u6307\u5411\u5230\u6307\u5b9a\u7684\u76ee\u5f55\u3002 \u6ce8\u610f\uff1a 1. \u4f7f\u7528alias\u65f6\uff0c\u76ee\u5f55\u540d\u540e\u9762\u4e00\u5b9a\u8981\u52a0\"/\"\u3002 2. alias\u5728\u4f7f\u7528\u6b63\u5219\u5339\u914d\u65f6\uff0c\u5fc5\u987b\u6355\u6349\u8981\u5339\u914d\u7684\u5185\u5bb9\u5e76\u5728\u6307\u5b9a\u7684\u5185\u5bb9\u5904\u4f7f\u7528\u3002 3. alias\u53ea\u80fd\u4f4d\u4e8elocation\u5757\u4e2d\u3002\uff08root\u53ef\u4ee5\u4e0d\u653e\u5728location\u4e2d\uff09","title":"Nginx \u914d\u7f6e\u6587\u4ef6\u89e3\u8bfb"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/","text":"Nginx \u670d\u52a1\u5668\u7684\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u662f\u5176\u6700\u5e38\u7528\u7684\u91cd\u8981\u529f\u80fd\uff0c\u7531\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u4e5f\u53ef\u4ee5\u884d\u751f\u51fa\u5f88\u591a\u4e0e\u6b64\u76f8\u5173\u7684 Nginx \u670d\u52a1\u5668\u91cd\u8981\u529f\u80fd\uff0c\u6bd4\u5982\u540e\u9762\u4f1a\u4ecb\u7ecd\u7684\u8d1f\u8f7d\u5747\u8861\u3002\u6211\u4eec\u4f1a\u5148\u4ecb\u7ecd Nginx \u7684\u53cd\u5411\u4ee3\u7406\uff0c\u5f53\u7136\u5728\u4e86\u89e3\u53cd\u5411\u4ee3\u7406\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u77e5\u9053\u4ec0\u4e48\u662f\u4ee3\u7406\u4ee5\u53ca\u4ec0\u4e48\u662f\u6b63\u5411\u4ee3\u7406\u3002 1\u3001\u4ee3\u7406 \u5728Java\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\uff0c\u4ee3\u7406\u6a21\u5f0f\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff1a \u7ed9\u67d0\u4e2a\u5bf9\u8c61\u63d0\u4f9b\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u5e76\u7531\u4ee3\u7406\u5bf9\u8c61\u63a7\u5236\u539f\u5bf9\u8c61\u7684\u5f15\u7528\u3002 ** \u53ef\u80fd\u5927\u5bb6\u4e0d\u592a\u660e\u767d\u8fd9\u53e5\u8bdd\uff0c\u5728\u4e3e\u4e00\u4e2a\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u4f8b\u5b50\uff1a\u6bd4\u5982\u6211\u4eec\u8981\u4e70\u4e00\u95f4\u4e8c\u624b\u623f\uff0c\u867d\u7136\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u53bb\u627e\u623f\u6e90\uff0c\u4f46\u662f\u8fd9\u592a\u82b1\u8d39\u65f6\u95f4\u7cbe\u529b\u4e86\uff0c\u800c\u4e14\u623f\u5c4b\u8d28\u91cf\u68c0\u6d4b\u4ee5\u53ca\u623f\u5c4b\u8fc7\u6237\u7b49\u4e00\u7cfb\u5217\u624b\u7eed\u4e5f\u90fd\u5f97\u6211\u4eec\u53bb\u529e\uff0c\u518d\u8bf4\u73b0\u5728\u8fd9\u4e2a\u793e\u4f1a\uff0c\u7b49\u6211\u4eec\u627e\u5230\u623f\u6e90\uff0c\u8bf4\u4e0d\u5b9a\u623f\u5b50\u90fd\u5df2\u7ecf\u6da8\u4ef7\u4e86\uff0c\u90a3\u4e48\u600e\u4e48\u529e\u5462\uff1f\u6700\u7b80\u5355\u5feb\u6377\u7684\u65b9\u6cd5\u5c31\u662f\u627e\u4e8c\u624b\u623f\u4e2d\u4ecb\u516c\u53f8\uff08\u4e3a\u4ec0\u4e48\uff1f\u522b\u4eba\u90a3\u91cc\u623f\u6e90\u591a\u554a\uff09\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u59d4\u6258\u4e2d\u4ecb\u516c\u53f8\u6765\u7ed9\u6211\u627e\u5408\u9002\u7684\u623f\u5b50\uff0c\u4ee5\u53ca\u540e\u7eed\u7684\u8d28\u91cf\u68c0\u6d4b\u8fc7\u6237\u7b49\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u9009\u597d\u81ea\u5df1\u60f3\u8981\u7684\u623f\u5b50\uff0c\u7136\u540e\u4ea4\u94b1\u5c31\u884c\u4e86\u3002 \u4ee3\u7406\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5982\u679c\u6211\u4eec\u60f3\u505a\u4ec0\u4e48\uff0c\u4f46\u53c8\u4e0d\u60f3\u76f4\u63a5\u53bb\u505a\uff0c\u90a3\u4e48\u8fd9\u65f6\u5019\u5c31\u627e\u53e6\u5916\u4e00\u4e2a\u4eba\u5e2e\u6211\u4eec\u53bb\u505a\u3002\u90a3\u4e48\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u9762\u7684\u4e2d\u4ecb\u516c\u53f8\u5c31\u662f\u7ed9\u6211\u4eec\u505a\u4ee3\u7406\u670d\u52a1\u7684\uff0c\u6211\u4eec\u59d4\u6258\u4e2d\u4ecb\u516c\u53f8\u5e2e\u6211\u4eec\u627e\u623f\u5b50\u3002 Nginx \u4e3b\u8981\u80fd\u591f\u4ee3\u7406\u5982\u4e0b\u51e0\u79cd\u534f\u8bae\uff0c\u5176\u4e2d\u7528\u5230\u7684\u6700\u591a\u7684\u5c31\u662f\u505aHttp\u4ee3\u7406\u670d\u52a1\u5668\u3002 2\u3001\u6b63\u5411\u4ee3\u7406 \u5f04\u6e05\u695a\u4ec0\u4e48\u662f\u4ee3\u7406\u4e86\uff0c\u90a3\u4e48\u4ec0\u4e48\u53c8\u662f\u6b63\u5411\u4ee3\u7406\u5462\uff1f \u8fd9\u91cc\u6211\u518d\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1a\u5927\u5bb6\u90fd\u77e5\u9053\uff0c\u73b0\u5728\u56fd\u5185\u662f\u8bbf\u95ee\u4e0d\u4e86 Google\u7684\uff0c\u90a3\u4e48\u600e\u4e48\u624d\u80fd\u8bbf\u95ee Google\u5462\uff1f\u6211\u4eec\u53c8\u60f3\uff0c\u7f8e\u56fd\u4eba\u4e0d\u662f\u80fd\u8bbf\u95ee Google\u5417\uff08\u8fd9\u4e0d\u5e9f\u8bdd\uff0cGoogle\u5c31\u662f\u7f8e\u56fd\u7684\uff09\uff0c\u5982\u679c\u6211\u4eec\u7535\u8111\u7684\u5bf9\u5916\u516c\u7f51 IP \u5730\u5740\u80fd\u53d8\u6210\u7f8e\u56fd\u7684 IP \u5730\u5740\uff0c\u90a3\u4e0d\u5c31\u53ef\u4ee5\u8bbf\u95ee Google\u4e86\u3002\u4f60\u5f88\u806a\u660e\uff0cVPN \u5c31\u662f\u8fd9\u6837\u4ea7\u751f\u7684\u3002\u6211\u4eec\u5728\u8bbf\u95ee Google \u65f6\uff0c\u5148\u8fde\u4e0a VPN \u670d\u52a1\u5668\u5c06\u6211\u4eec\u7684 IP \u5730\u5740\u53d8\u6210\u7f8e\u56fd\u7684 IP \u5730\u5740\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u987a\u5229\u7684\u8bbf\u95ee\u4e86\u3002 \u8fd9\u91cc\u7684 VPN \u5c31\u662f\u505a\u6b63\u5411\u4ee3\u7406\u7684\u3002\u6b63\u5411\u4ee3\u7406\u670d\u52a1\u5668\u4f4d\u4e8e\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\uff0c\u4e3a\u4e86\u5411\u670d\u52a1\u5668\u83b7\u53d6\u6570\u636e\uff0c\u5ba2\u6237\u7aef\u8981\u5411\u4ee3\u7406\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\uff0c\u5e76\u6307\u5b9a\u76ee\u6807\u670d\u52a1\u5668\uff0c\u4ee3\u7406\u670d\u52a1\u5668\u5c06\u76ee\u6807\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e\u8f6c\u4ea4\u7ed9\u5ba2\u6237\u7aef\u3002\u8fd9\u91cc\u5ba2\u6237\u7aef\u662f\u8981\u8fdb\u884c\u4e00\u4e9b\u6b63\u5411\u4ee3\u7406\u7684\u8bbe\u7f6e\u7684\u3002 3\u3001\u53cd\u5411\u4ee3\u7406 \u53cd\u5411\u4ee3\u7406\u548c\u6b63\u5411\u4ee3\u7406\u7684\u533a\u522b\u5c31\u662f\uff1a \u6b63\u5411\u4ee3\u7406\u4ee3\u7406\u5ba2\u6237\u7aef\uff0c\u53cd\u5411\u4ee3\u7406\u4ee3\u7406\u670d\u52a1\u5668\u3002 \u53cd\u5411\u4ee3\u7406\uff0c\u5176\u5b9e\u5ba2\u6237\u7aef\u5bf9\u4ee3\u7406\u662f\u65e0\u611f\u77e5\u7684\uff0c\u56e0\u4e3a\u5ba2\u6237\u7aef\u4e0d\u9700\u8981\u4efb\u4f55\u914d\u7f6e\u5c31\u53ef\u4ee5\u8bbf\u95ee\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u8bf7\u6c42\u53d1\u9001\u5230\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u7531\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u53bb\u9009\u62e9\u76ee\u6807\u670d\u52a1\u5668\u83b7\u53d6\u6570\u636e\u540e\uff0c\u5728\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u6b64\u65f6\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u548c\u76ee\u6807\u670d\u52a1\u5668\u5bf9\u5916\u5c31\u662f\u4e00\u4e2a\u670d\u52a1\u5668\uff0c\u66b4\u9732\u7684\u662f\u4ee3\u7406\u670d\u52a1\u5668\u5730\u5740\uff0c\u9690\u85cf\u4e86\u771f\u5b9e\u670d\u52a1\u5668IP\u5730\u5740\u3002 \u7406\u89e3\u8fd9\u4e24\u79cd\u4ee3\u7406\u7684\u5173\u952e\u5728\u4e8e\u4ee3\u7406\u670d\u52a1\u5668\u6240\u4ee3\u7406\u7684\u5bf9\u8c61\u662f\u4ec0\u4e48\uff0c\u6b63\u5411\u4ee3\u7406\u4ee3\u7406\u7684\u662f\u5ba2\u6237\u7aef\uff0c\u6211\u4eec\u9700\u8981\u5728\u5ba2\u6237\u7aef\u8fdb\u884c\u4e00\u4e9b\u4ee3\u7406\u7684\u8bbe\u7f6e\u3002\u800c\u53cd\u5411\u4ee3\u7406\u4ee3\u7406\u7684\u662f\u670d\u52a1\u5668\uff0c\u4f5c\u4e3a\u5ba2\u6237\u7aef\u7684\u6211\u4eec\u662f\u65e0\u6cd5\u611f\u77e5\u5230\u670d\u52a1\u5668\u7684\u771f\u5b9e\u5b58\u5728\u7684\u3002 \u603b\u7ed3\u8d77\u6765\u8fd8\u662f\u4e00\u53e5\u8bdd\uff1a \u6b63\u5411\u4ee3\u7406\u4ee3\u7406\u5ba2\u6237\u7aef\uff0c\u53cd\u5411\u4ee3\u7406\u4ee3\u7406\u670d\u52a1\u5668\u3002 4\u3001Nginx \u53cd\u5411\u4ee3\u7406 \u8303\u4f8b\uff1a\u4f7f\u7528 nginx \u53cd\u5411\u4ee3\u7406 www.123.com \u76f4\u63a5\u8df3\u8f6c\u5230127.0.0.1:8080 \u2460\u3001\u542f\u52a8\u4e00\u4e2a tomcat\uff0c\u6d4f\u89c8\u5668\u5730\u5740\u680f\u8f93\u5165 127.0.0.1:8080\uff0c\u51fa\u73b0\u5982\u4e0b\u754c\u9762 \u2461\u3001\u901a\u8fc7\u4fee\u6539\u672c\u5730 host \u6587\u4ef6\uff0c\u5c06 www.123.com \u6620\u5c04\u5230 127.0.0.1 1 127.0.0.1 www.123.com \u5c06\u4e0a\u9762\u4ee3\u7801\u6dfb\u52a0\u5230 Windows \u7684host \u6587\u4ef6\u4e2d\uff0c\u8be5\u6587\u4ef6\u4f4d\u7f6e\u5728\uff1a \u914d\u7f6e\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u901a\u8fc7 www.123.com:8080 \u8bbf\u95ee\u5230\u7b2c\u4e00\u6b65\u51fa\u73b0\u7684 Tomcat\u521d\u59cb\u754c\u9762\u3002 \u90a3\u4e48\u5982\u4f55\u53ea\u9700\u8981\u8f93\u5165 www.123.com \u4fbf\u53ef\u4ee5\u8df3\u8f6c\u5230 Tomcat\u521d\u59cb\u754c\u9762\u5462\uff1f\u4fbf\u7528\u5230 nginx\u7684\u53cd\u5411\u4ee3\u7406\u3002 \u2462\u3001\u5728 nginx.conf \u914d\u7f6e\u6587\u4ef6\u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a 1 2 3 4 5 6 7 8 9 1 server { 2 listen 80; 3 server_name www.123.com; 4 5 location / { 6 proxy_pass http://127.0.0.1:8080; 7 index index.html index.htm index.jsp; 8 } 9 } \u5982\u4e0a\u914d\u7f6e\uff0c\u6211\u4eec\u76d1\u542c80\u7aef\u53e3\uff0c\u8bbf\u95ee\u57df\u540d\u4e3awww.123.com\uff0c\u4e0d\u52a0\u7aef\u53e3\u53f7\u65f6\u9ed8\u8ba4\u4e3a80\u7aef\u53e3\uff0c\u6545\u8bbf\u95ee\u8be5\u57df\u540d\u65f6\u4f1a\u8df3\u8f6c\u5230127.0.0.1:8080\u8def\u5f84\u4e0a\u3002 \u6211\u4eec\u5728\u6d4f\u89c8\u5668\u7aef\u8f93\u5165 www.123.com \u7ed3\u679c\u5982\u4e0b\uff1a \u2463\u3001\u603b\u7ed3 \u5176\u5b9e\u8fd9\u91cc\u66f4\u8d34\u5207\u7684\u8bf4\u662f\u901a\u8fc7nginx\u4ee3\u7406\u7aef\u53e3\uff0c\u539f\u5148\u8bbf\u95ee\u7684\u662f8080\u7aef\u53e3\uff0c\u901a\u8fc7nginx\u4ee3\u7406\u4e4b\u540e\uff0c\u901a\u8fc780\u7aef\u53e3\u5c31\u53ef\u4ee5\u8bbf\u95ee\u4e86\u3002 5\u3001Nginx \u53cd\u5411\u4ee3\u7406\u76f8\u5173\u6307\u4ee4\u4ecb\u7ecd \u2460\u3001listen \u8be5\u6307\u4ee4\u7528\u4e8e\u914d\u7f6e\u7f51\u7edc\u76d1\u542c\u3002\u4e3b\u8981\u6709\u5982\u4e0b\u4e09\u79cd\u914d\u7f6e\u8bed\u6cd5\u7ed3\u6784\uff1a \u4e00\u3001\u914d\u7f6e\u76d1\u542c\u7684IP\u5730\u5740 1 2 listen address[:port] [default_server] [setfib=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [deferred] [accept_filter=filter] [bind] [ssl]; \u4e8c\u3001\u914d\u7f6e\u76d1\u542c\u7aef\u53e3 1 2 listen port[default_server] [setfib=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ipv6only=on|off] [ssl]; \u4e09\u3001\u914d\u7f6e UNIX Domain Socket 1 2 listen unix:path [default_server] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ssl]; \u4e0a\u9762\u7684\u914d\u7f6e\u770b\u4f3c\u6bd4\u8f83\u590d\u6742\uff0c\u5176\u5b9e\u4f7f\u7528\u8d77\u6765\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff1a 1 2 3 4 1 listen *:80 | *:8080 #\u76d1\u542c\u6240\u670980\u7aef\u53e3\u548c8080\u7aef\u53e3 2 listen IP_address:port #\u76d1\u542c\u6307\u5b9a\u7684\u5730\u5740\u548c\u7aef\u53e3\u53f7 3 listen IP_address #\u76d1\u542c\u6307\u5b9aip\u5730\u5740\u6240\u6709\u7aef\u53e3 4 listen port #\u76d1\u542c\u8be5\u7aef\u53e3\u7684\u6240\u6709IP\u8fde\u63a5 \u4e0b\u9762\u5206\u522b\u89e3\u91ca\u6bcf\u4e2a\u9009\u9879\u7684\u5177\u4f53\u542b\u4e49\uff1a 1\u3001address:IP\u5730\u5740\uff0c\u5982\u679c\u662f IPV6\u5730\u5740\uff0c\u9700\u8981\u4f7f\u7528\u4e2d\u62ec\u53f7[] \u62ec\u8d77\u6765\uff0c\u6bd4\u5982[fe80::1]\u7b49\u3002 2\u3001port:\u7aef\u53e3\u53f7\uff0c\u5982\u679c\u53ea\u5b9a\u4e49\u4e86IP\u5730\u5740\uff0c\u6ca1\u6709\u5b9a\u4e49\u7aef\u53e3\u53f7\uff0c\u90a3\u4e48\u5c31\u4f7f\u752880\u7aef\u53e3\u3002 3\u3001path:socket\u6587\u4ef6\u8def\u5f84\uff0c\u5982 var/run/nginx.sock\u7b49\u3002 4\u3001default_server:\u6807\u8bc6\u7b26\uff0c\u5c06\u6b64\u865a\u62df\u4e3b\u673a\u8bbe\u7f6e\u4e3a address:port \u7684\u9ed8\u8ba4\u4e3b\u673a\u3002\uff08\u5728 nginx-0.8.21 \u4e4b\u524d\u4f7f\u7528\u7684\u662f default \u6307\u4ee4\uff09 5\u3001 setfib=number:Nginx-0.8.44 \u4e2d\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf\u76d1\u542c socket \u5173\u8054\u8def\u7531\u8868\uff0c\u76ee\u524d\u53ea\u5bf9 FreeBSD \u8d77\u4f5c\u7528\uff0c\u4e0d\u5e38\u7528\u3002 6\u3001backlog=number:\u8bbe\u7f6e\u76d1\u542c\u51fd\u6570listen()\u6700\u591a\u5141\u8bb8\u591a\u5c11\u7f51\u7edc\u8fde\u63a5\u540c\u65f6\u5904\u4e8e\u6302\u8d77\u72b6\u6001\uff0c\u5728 FreeBSD \u4e2d\u9ed8\u8ba4\u4e3a -1,\u5176\u4ed6\u5e73\u53f0\u9ed8\u8ba4\u4e3a511. 7\u3001rcvbuf=size:\u8bbe\u7f6e\u76d1\u542csocket\u63a5\u6536\u7f13\u5b58\u533a\u5927\u5c0f\u3002 8\u3001sndbuf=size:\u8bbe\u7f6e\u76d1\u542csocket\u53d1\u9001\u7f13\u5b58\u533a\u5927\u5c0f\u3002 9\u3001deferred:\u6807\u8bc6\u7b26\uff0c\u5c06accept()\u8bbe\u7f6e\u4e3aDeferred\u6a21\u5f0f\u3002 10\u3001accept_filter=filter:\u8bbe\u7f6e\u76d1\u542c\u7aef\u53e3\u5bf9\u6240\u6709\u8bf7\u6c42\u8fdb\u884c\u8fc7\u6ee4\uff0c\u88ab\u8fc7\u6ee4\u7684\u5185\u5bb9\u4e0d\u80fd\u88ab\u63a5\u6536\u548c\u5904\u7406\uff0c\u672c\u6307\u4ee4\u53ea\u5728 FreeBSD \u548c NetBSD 5.0+ \u5e73\u53f0\u4e0b\u6709\u6548\u3002filter \u53ef\u4ee5\u8bbe\u7f6e\u4e3a dataready \u6216 httpready \u3002 11\u3001bind:\u6807\u8bc6\u7b26\uff0c\u4f7f\u7528\u72ec\u7acb\u7684bind() \u5904\u7406\u6b64address:port\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u7aef\u53e3\u76f8\u540c\u800cIP\u5730\u5740\u4e0d\u540c\u7684\u591a\u4e2a\u8fde\u63a5\uff0cNginx \u670d\u52a1\u5668\u5c06\u53ea\u4f7f\u7528\u4e00\u4e2a\u76d1\u542c\u6307\u4ee4\uff0c\u5e76\u4f7f\u7528 bind() \u5904\u7406\u7aef\u53e3\u76f8\u540c\u7684\u6240\u6709\u8fde\u63a5\u3002 12\u3001ssl:\u6807\u8bc6\u7b26\uff0c\u8bbe\u7f6e\u4f1a\u8bdd\u8fde\u63a5\u4f7f\u7528 SSL\u6a21\u5f0f\u8fdb\u884c\uff0c\u6b64\u6807\u8bc6\u7b26\u548cNginx\u670d\u52a1\u5668\u63d0\u4f9b\u7684 HTTPS \u670d\u52a1\u6709\u5173\u3002 \u2461\u3001server_name \u8be5\u6307\u4ee4\u7528\u4e8e\u865a\u62df\u4e3b\u673a\u7684\u914d\u7f6e\u3002\u901a\u5e38\u5206\u4e3a\u4ee5\u4e0b\u4e24\u79cd\uff1a 1\u3001\u57fa\u4e8e\u540d\u79f0\u7684\u865a\u62df\u4e3b\u673a\u914d\u7f6e \u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a 1 server_name name ...; \u4e00\u3001\u5bf9\u4e8ename \u6765\u8bf4\uff0c\u53ef\u4ee5\u53ea\u6709\u4e00\u4e2a\u540d\u79f0\uff0c\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u540d\u79f0\uff0c\u4e2d\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002\u800c\u6bcf\u4e2a\u540d\u5b57\u7531\u4e24\u6bb5\u6216\u8005\u4e09\u6bb5\u7ec4\u6210\uff0c\u6bcf\u6bb5\u4e4b\u95f4\u7528\u201c.\u201d\u9694\u5f00\u3002 1 server_name 123.com www.123.com \u4e8c\u3001\u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26\u201c*\u201d\uff0c\u4f46\u901a\u914d\u7b26\u53ea\u80fd\u7528\u5728\u7531\u4e09\u6bb5\u5b57\u7b26\u7ec4\u6210\u7684\u9996\u6bb5\u6216\u8005\u5c3e\u7aef\uff0c\u6216\u8005\u7531\u4e24\u7aef\u5b57\u7b26\u7ec4\u6210\u7684\u5c3e\u7aef\u3002 1 server_name *.123.com www.123.* \u4e09\u3001\u8fd8\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u201c~\u201d\u4f5c\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\u6807\u8bb0\u3002 1 server_name ~^www\\d+\\.123\\.com$; \u8be5\u8868\u8fbe\u5f0f\u201c~\u201d\u8868\u793a\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4ee5www\u5f00\u5934\uff08\u201c^\u201d\u8868\u793a\u5f00\u5934\uff09\uff0c\u7d27\u8ddf\u7740\u4e00\u4e2a0~9\u4e4b\u95f4\u7684\u6570\u5b57\uff0c\u5728\u7d27\u8ddf\u201c.123.co\u201d\uff0c\u6700\u540e\u8ddf\u7740\u201cm\u201d($\u8868\u793a\u7ed3\u5c3e) \u4ee5\u4e0a\u5339\u914d\u7684\u987a\u5e8f\u4f18\u5148\u7ea7\u5982\u4e0b\uff1a 1 2 3 4 1 \u2460\u3001\u51c6\u786e\u5339\u914d server_name 2 \u2461\u3001\u901a\u914d\u7b26\u5728\u5f00\u59cb\u65f6\u5339\u914d server_name \u6210\u529f 3 \u2462\u3001\u901a\u914d\u7b26\u5728\u7ed3\u5c3e\u65f6\u5339\u914d server_name \u6210\u529f 4 \u2463\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d server_name \u6210\u529f 2\u3001\u57fa\u4e8e IP \u5730\u5740\u7684\u865a\u62df\u4e3b\u673a\u914d\u7f6e \u8bed\u6cd5\u7ed3\u6784\u548c\u57fa\u4e8e\u57df\u540d\u5339\u914d\u4e00\u6837\uff0c\u800c\u4e14\u4e0d\u9700\u8981\u8003\u8651\u901a\u914d\u7b26\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u95ee\u9898\u3002 1 server_name 192.168.1.1 \u2462\u3001location \u8be5\u6307\u4ee4\u7528\u4e8e\u5339\u914d URL\u3002 \u8bed\u6cd5\u5982\u4e0b\uff1a 1 2 3 1 location [ = | ~ | ~* | ^~] uri { 2 3 } 1\u3001= \uff1a\u7528\u4e8e\u4e0d\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\u7684 uri \u524d\uff0c\u8981\u6c42\u8bf7\u6c42\u5b57\u7b26\u4e32\u4e0e uri \u4e25\u683c\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5c31\u505c\u6b62\u7ee7\u7eed\u5411\u4e0b\u641c\u7d22\u5e76\u7acb\u5373\u5904\u7406\u8be5\u8bf7\u6c42\u3002 2\u3001~\uff1a\u7528\u4e8e\u8868\u793a uri \u5305\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e14\u533a\u5206\u5927\u5c0f\u5199\u3002 3\u3001~*\uff1a\u7528\u4e8e\u8868\u793a uri \u5305\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e14\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 4\u3001^~\uff1a\u7528\u4e8e\u4e0d\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\u7684 uri \u524d\uff0c\u8981\u6c42 Nginx \u670d\u52a1\u5668\u627e\u5230\u6807\u8bc6 uri \u548c\u8bf7\u6c42\u5b57\u7b26\u4e32\u5339\u914d\u5ea6\u6700\u9ad8\u7684 location \u540e\uff0c\u7acb\u5373\u4f7f\u7528\u6b64 location \u5904\u7406\u8bf7\u6c42\uff0c\u800c\u4e0d\u518d\u4f7f\u7528 location \u5757\u4e2d\u7684\u6b63\u5219 uri \u548c\u8bf7\u6c42\u5b57\u7b26\u4e32\u505a\u5339\u914d\u3002 \u6ce8\u610f\uff1a\u5982\u679c uri \u5305\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5219\u5fc5\u987b\u8981\u6709 ~ \u6216\u8005 ~* \u6807\u8bc6\u3002 \u2463\u3001proxy_pass \u8be5\u6307\u4ee4\u7528\u4e8e\u8bbe\u7f6e\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5730\u5740\u3002\u53ef\u4ee5\u662f\u4e3b\u673a\u540d\u79f0\u3001IP\u5730\u5740\u52a0\u7aef\u53e3\u53f7\u7684\u5f62\u5f0f\u3002 \u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b\uff1a 1 proxy_pass URL; URL \u4e3a\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5730\u5740\uff0c\u53ef\u4ee5\u5305\u542b\u4f20\u8f93\u534f\u8bae\u3001\u4e3b\u673a\u540d\u79f0\u6216IP\u5730\u5740\u52a0\u7aef\u53e3\u53f7\uff0cURI\u7b49\u3002 1 proxy_pass http://www.123.com/uri; \u2464\u3001index \u8be5\u6307\u4ee4\u7528\u4e8e\u8bbe\u7f6e\u7f51\u7ad9\u7684\u9ed8\u8ba4\u9996\u9875\u3002 \u8bed\u6cd5\u4e3a\uff1a 1 index filename ...; \u540e\u9762\u7684\u6587\u4ef6\u540d\u79f0\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u4e2d\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002 1 index index.html index.jsp; \u901a\u5e38\u8be5\u6307\u4ee4\u6709\u4e24\u4e2a\u4f5c\u7528\uff1a\u7b2c\u4e00\u4e2a\u662f\u7528\u6237\u5728\u8bf7\u6c42\u8bbf\u95ee\u7f51\u7ad9\u65f6\uff0c\u8bf7\u6c42\u5730\u5740\u53ef\u4ee5\u4e0d\u5199\u9996\u9875\u540d\u79f0\uff1b\u7b2c\u4e8c\u4e2a\u662f\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u8bf7\u6c42\uff0c\u6839\u636e\u8bf7\u6c42\u5185\u5bb9\u800c\u8bbe\u7f6e\u4e0d\u540c\u7684\u9996\u9875\u3002","title":"03Nginx\u4ee3\u7406"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#1","text":"\u5728Java\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\uff0c\u4ee3\u7406\u6a21\u5f0f\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff1a \u7ed9\u67d0\u4e2a\u5bf9\u8c61\u63d0\u4f9b\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u5e76\u7531\u4ee3\u7406\u5bf9\u8c61\u63a7\u5236\u539f\u5bf9\u8c61\u7684\u5f15\u7528\u3002 ** \u53ef\u80fd\u5927\u5bb6\u4e0d\u592a\u660e\u767d\u8fd9\u53e5\u8bdd\uff0c\u5728\u4e3e\u4e00\u4e2a\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u4f8b\u5b50\uff1a\u6bd4\u5982\u6211\u4eec\u8981\u4e70\u4e00\u95f4\u4e8c\u624b\u623f\uff0c\u867d\u7136\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u53bb\u627e\u623f\u6e90\uff0c\u4f46\u662f\u8fd9\u592a\u82b1\u8d39\u65f6\u95f4\u7cbe\u529b\u4e86\uff0c\u800c\u4e14\u623f\u5c4b\u8d28\u91cf\u68c0\u6d4b\u4ee5\u53ca\u623f\u5c4b\u8fc7\u6237\u7b49\u4e00\u7cfb\u5217\u624b\u7eed\u4e5f\u90fd\u5f97\u6211\u4eec\u53bb\u529e\uff0c\u518d\u8bf4\u73b0\u5728\u8fd9\u4e2a\u793e\u4f1a\uff0c\u7b49\u6211\u4eec\u627e\u5230\u623f\u6e90\uff0c\u8bf4\u4e0d\u5b9a\u623f\u5b50\u90fd\u5df2\u7ecf\u6da8\u4ef7\u4e86\uff0c\u90a3\u4e48\u600e\u4e48\u529e\u5462\uff1f\u6700\u7b80\u5355\u5feb\u6377\u7684\u65b9\u6cd5\u5c31\u662f\u627e\u4e8c\u624b\u623f\u4e2d\u4ecb\u516c\u53f8\uff08\u4e3a\u4ec0\u4e48\uff1f\u522b\u4eba\u90a3\u91cc\u623f\u6e90\u591a\u554a\uff09\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u59d4\u6258\u4e2d\u4ecb\u516c\u53f8\u6765\u7ed9\u6211\u627e\u5408\u9002\u7684\u623f\u5b50\uff0c\u4ee5\u53ca\u540e\u7eed\u7684\u8d28\u91cf\u68c0\u6d4b\u8fc7\u6237\u7b49\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u9009\u597d\u81ea\u5df1\u60f3\u8981\u7684\u623f\u5b50\uff0c\u7136\u540e\u4ea4\u94b1\u5c31\u884c\u4e86\u3002 \u4ee3\u7406\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5982\u679c\u6211\u4eec\u60f3\u505a\u4ec0\u4e48\uff0c\u4f46\u53c8\u4e0d\u60f3\u76f4\u63a5\u53bb\u505a\uff0c\u90a3\u4e48\u8fd9\u65f6\u5019\u5c31\u627e\u53e6\u5916\u4e00\u4e2a\u4eba\u5e2e\u6211\u4eec\u53bb\u505a\u3002\u90a3\u4e48\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u9762\u7684\u4e2d\u4ecb\u516c\u53f8\u5c31\u662f\u7ed9\u6211\u4eec\u505a\u4ee3\u7406\u670d\u52a1\u7684\uff0c\u6211\u4eec\u59d4\u6258\u4e2d\u4ecb\u516c\u53f8\u5e2e\u6211\u4eec\u627e\u623f\u5b50\u3002 Nginx \u4e3b\u8981\u80fd\u591f\u4ee3\u7406\u5982\u4e0b\u51e0\u79cd\u534f\u8bae\uff0c\u5176\u4e2d\u7528\u5230\u7684\u6700\u591a\u7684\u5c31\u662f\u505aHttp\u4ee3\u7406\u670d\u52a1\u5668\u3002","title":"1\u3001\u4ee3\u7406"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#2","text":"\u5f04\u6e05\u695a\u4ec0\u4e48\u662f\u4ee3\u7406\u4e86\uff0c\u90a3\u4e48\u4ec0\u4e48\u53c8\u662f\u6b63\u5411\u4ee3\u7406\u5462\uff1f \u8fd9\u91cc\u6211\u518d\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1a\u5927\u5bb6\u90fd\u77e5\u9053\uff0c\u73b0\u5728\u56fd\u5185\u662f\u8bbf\u95ee\u4e0d\u4e86 Google\u7684\uff0c\u90a3\u4e48\u600e\u4e48\u624d\u80fd\u8bbf\u95ee Google\u5462\uff1f\u6211\u4eec\u53c8\u60f3\uff0c\u7f8e\u56fd\u4eba\u4e0d\u662f\u80fd\u8bbf\u95ee Google\u5417\uff08\u8fd9\u4e0d\u5e9f\u8bdd\uff0cGoogle\u5c31\u662f\u7f8e\u56fd\u7684\uff09\uff0c\u5982\u679c\u6211\u4eec\u7535\u8111\u7684\u5bf9\u5916\u516c\u7f51 IP \u5730\u5740\u80fd\u53d8\u6210\u7f8e\u56fd\u7684 IP \u5730\u5740\uff0c\u90a3\u4e0d\u5c31\u53ef\u4ee5\u8bbf\u95ee Google\u4e86\u3002\u4f60\u5f88\u806a\u660e\uff0cVPN \u5c31\u662f\u8fd9\u6837\u4ea7\u751f\u7684\u3002\u6211\u4eec\u5728\u8bbf\u95ee Google \u65f6\uff0c\u5148\u8fde\u4e0a VPN \u670d\u52a1\u5668\u5c06\u6211\u4eec\u7684 IP \u5730\u5740\u53d8\u6210\u7f8e\u56fd\u7684 IP \u5730\u5740\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u987a\u5229\u7684\u8bbf\u95ee\u4e86\u3002 \u8fd9\u91cc\u7684 VPN \u5c31\u662f\u505a\u6b63\u5411\u4ee3\u7406\u7684\u3002\u6b63\u5411\u4ee3\u7406\u670d\u52a1\u5668\u4f4d\u4e8e\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\uff0c\u4e3a\u4e86\u5411\u670d\u52a1\u5668\u83b7\u53d6\u6570\u636e\uff0c\u5ba2\u6237\u7aef\u8981\u5411\u4ee3\u7406\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\uff0c\u5e76\u6307\u5b9a\u76ee\u6807\u670d\u52a1\u5668\uff0c\u4ee3\u7406\u670d\u52a1\u5668\u5c06\u76ee\u6807\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e\u8f6c\u4ea4\u7ed9\u5ba2\u6237\u7aef\u3002\u8fd9\u91cc\u5ba2\u6237\u7aef\u662f\u8981\u8fdb\u884c\u4e00\u4e9b\u6b63\u5411\u4ee3\u7406\u7684\u8bbe\u7f6e\u7684\u3002","title":"2\u3001\u6b63\u5411\u4ee3\u7406"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#3","text":"\u53cd\u5411\u4ee3\u7406\u548c\u6b63\u5411\u4ee3\u7406\u7684\u533a\u522b\u5c31\u662f\uff1a \u6b63\u5411\u4ee3\u7406\u4ee3\u7406\u5ba2\u6237\u7aef\uff0c\u53cd\u5411\u4ee3\u7406\u4ee3\u7406\u670d\u52a1\u5668\u3002 \u53cd\u5411\u4ee3\u7406\uff0c\u5176\u5b9e\u5ba2\u6237\u7aef\u5bf9\u4ee3\u7406\u662f\u65e0\u611f\u77e5\u7684\uff0c\u56e0\u4e3a\u5ba2\u6237\u7aef\u4e0d\u9700\u8981\u4efb\u4f55\u914d\u7f6e\u5c31\u53ef\u4ee5\u8bbf\u95ee\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u8bf7\u6c42\u53d1\u9001\u5230\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u7531\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u53bb\u9009\u62e9\u76ee\u6807\u670d\u52a1\u5668\u83b7\u53d6\u6570\u636e\u540e\uff0c\u5728\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u6b64\u65f6\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u548c\u76ee\u6807\u670d\u52a1\u5668\u5bf9\u5916\u5c31\u662f\u4e00\u4e2a\u670d\u52a1\u5668\uff0c\u66b4\u9732\u7684\u662f\u4ee3\u7406\u670d\u52a1\u5668\u5730\u5740\uff0c\u9690\u85cf\u4e86\u771f\u5b9e\u670d\u52a1\u5668IP\u5730\u5740\u3002 \u7406\u89e3\u8fd9\u4e24\u79cd\u4ee3\u7406\u7684\u5173\u952e\u5728\u4e8e\u4ee3\u7406\u670d\u52a1\u5668\u6240\u4ee3\u7406\u7684\u5bf9\u8c61\u662f\u4ec0\u4e48\uff0c\u6b63\u5411\u4ee3\u7406\u4ee3\u7406\u7684\u662f\u5ba2\u6237\u7aef\uff0c\u6211\u4eec\u9700\u8981\u5728\u5ba2\u6237\u7aef\u8fdb\u884c\u4e00\u4e9b\u4ee3\u7406\u7684\u8bbe\u7f6e\u3002\u800c\u53cd\u5411\u4ee3\u7406\u4ee3\u7406\u7684\u662f\u670d\u52a1\u5668\uff0c\u4f5c\u4e3a\u5ba2\u6237\u7aef\u7684\u6211\u4eec\u662f\u65e0\u6cd5\u611f\u77e5\u5230\u670d\u52a1\u5668\u7684\u771f\u5b9e\u5b58\u5728\u7684\u3002 \u603b\u7ed3\u8d77\u6765\u8fd8\u662f\u4e00\u53e5\u8bdd\uff1a \u6b63\u5411\u4ee3\u7406\u4ee3\u7406\u5ba2\u6237\u7aef\uff0c\u53cd\u5411\u4ee3\u7406\u4ee3\u7406\u670d\u52a1\u5668\u3002","title":"3\u3001\u53cd\u5411\u4ee3\u7406"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#4nginx","text":"\u8303\u4f8b\uff1a\u4f7f\u7528 nginx \u53cd\u5411\u4ee3\u7406 www.123.com \u76f4\u63a5\u8df3\u8f6c\u5230127.0.0.1:8080 \u2460\u3001\u542f\u52a8\u4e00\u4e2a tomcat\uff0c\u6d4f\u89c8\u5668\u5730\u5740\u680f\u8f93\u5165 127.0.0.1:8080\uff0c\u51fa\u73b0\u5982\u4e0b\u754c\u9762 \u2461\u3001\u901a\u8fc7\u4fee\u6539\u672c\u5730 host \u6587\u4ef6\uff0c\u5c06 www.123.com \u6620\u5c04\u5230 127.0.0.1 1 127.0.0.1 www.123.com \u5c06\u4e0a\u9762\u4ee3\u7801\u6dfb\u52a0\u5230 Windows \u7684host \u6587\u4ef6\u4e2d\uff0c\u8be5\u6587\u4ef6\u4f4d\u7f6e\u5728\uff1a \u914d\u7f6e\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u901a\u8fc7 www.123.com:8080 \u8bbf\u95ee\u5230\u7b2c\u4e00\u6b65\u51fa\u73b0\u7684 Tomcat\u521d\u59cb\u754c\u9762\u3002 \u90a3\u4e48\u5982\u4f55\u53ea\u9700\u8981\u8f93\u5165 www.123.com \u4fbf\u53ef\u4ee5\u8df3\u8f6c\u5230 Tomcat\u521d\u59cb\u754c\u9762\u5462\uff1f\u4fbf\u7528\u5230 nginx\u7684\u53cd\u5411\u4ee3\u7406\u3002 \u2462\u3001\u5728 nginx.conf \u914d\u7f6e\u6587\u4ef6\u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a 1 2 3 4 5 6 7 8 9 1 server { 2 listen 80; 3 server_name www.123.com; 4 5 location / { 6 proxy_pass http://127.0.0.1:8080; 7 index index.html index.htm index.jsp; 8 } 9 } \u5982\u4e0a\u914d\u7f6e\uff0c\u6211\u4eec\u76d1\u542c80\u7aef\u53e3\uff0c\u8bbf\u95ee\u57df\u540d\u4e3awww.123.com\uff0c\u4e0d\u52a0\u7aef\u53e3\u53f7\u65f6\u9ed8\u8ba4\u4e3a80\u7aef\u53e3\uff0c\u6545\u8bbf\u95ee\u8be5\u57df\u540d\u65f6\u4f1a\u8df3\u8f6c\u5230127.0.0.1:8080\u8def\u5f84\u4e0a\u3002 \u6211\u4eec\u5728\u6d4f\u89c8\u5668\u7aef\u8f93\u5165 www.123.com \u7ed3\u679c\u5982\u4e0b\uff1a \u2463\u3001\u603b\u7ed3 \u5176\u5b9e\u8fd9\u91cc\u66f4\u8d34\u5207\u7684\u8bf4\u662f\u901a\u8fc7nginx\u4ee3\u7406\u7aef\u53e3\uff0c\u539f\u5148\u8bbf\u95ee\u7684\u662f8080\u7aef\u53e3\uff0c\u901a\u8fc7nginx\u4ee3\u7406\u4e4b\u540e\uff0c\u901a\u8fc780\u7aef\u53e3\u5c31\u53ef\u4ee5\u8bbf\u95ee\u4e86\u3002","title":"4\u3001Nginx \u53cd\u5411\u4ee3\u7406"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#5nginx","text":"","title":"5\u3001Nginx \u53cd\u5411\u4ee3\u7406\u76f8\u5173\u6307\u4ee4\u4ecb\u7ecd"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#1listen","text":"\u8be5\u6307\u4ee4\u7528\u4e8e\u914d\u7f6e\u7f51\u7edc\u76d1\u542c\u3002\u4e3b\u8981\u6709\u5982\u4e0b\u4e09\u79cd\u914d\u7f6e\u8bed\u6cd5\u7ed3\u6784\uff1a \u4e00\u3001\u914d\u7f6e\u76d1\u542c\u7684IP\u5730\u5740 1 2 listen address[:port] [default_server] [setfib=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [deferred] [accept_filter=filter] [bind] [ssl]; \u4e8c\u3001\u914d\u7f6e\u76d1\u542c\u7aef\u53e3 1 2 listen port[default_server] [setfib=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ipv6only=on|off] [ssl]; \u4e09\u3001\u914d\u7f6e UNIX Domain Socket 1 2 listen unix:path [default_server] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ssl]; \u4e0a\u9762\u7684\u914d\u7f6e\u770b\u4f3c\u6bd4\u8f83\u590d\u6742\uff0c\u5176\u5b9e\u4f7f\u7528\u8d77\u6765\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff1a 1 2 3 4 1 listen *:80 | *:8080 #\u76d1\u542c\u6240\u670980\u7aef\u53e3\u548c8080\u7aef\u53e3 2 listen IP_address:port #\u76d1\u542c\u6307\u5b9a\u7684\u5730\u5740\u548c\u7aef\u53e3\u53f7 3 listen IP_address #\u76d1\u542c\u6307\u5b9aip\u5730\u5740\u6240\u6709\u7aef\u53e3 4 listen port #\u76d1\u542c\u8be5\u7aef\u53e3\u7684\u6240\u6709IP\u8fde\u63a5 \u4e0b\u9762\u5206\u522b\u89e3\u91ca\u6bcf\u4e2a\u9009\u9879\u7684\u5177\u4f53\u542b\u4e49\uff1a 1\u3001address:IP\u5730\u5740\uff0c\u5982\u679c\u662f IPV6\u5730\u5740\uff0c\u9700\u8981\u4f7f\u7528\u4e2d\u62ec\u53f7[] \u62ec\u8d77\u6765\uff0c\u6bd4\u5982[fe80::1]\u7b49\u3002 2\u3001port:\u7aef\u53e3\u53f7\uff0c\u5982\u679c\u53ea\u5b9a\u4e49\u4e86IP\u5730\u5740\uff0c\u6ca1\u6709\u5b9a\u4e49\u7aef\u53e3\u53f7\uff0c\u90a3\u4e48\u5c31\u4f7f\u752880\u7aef\u53e3\u3002 3\u3001path:socket\u6587\u4ef6\u8def\u5f84\uff0c\u5982 var/run/nginx.sock\u7b49\u3002 4\u3001default_server:\u6807\u8bc6\u7b26\uff0c\u5c06\u6b64\u865a\u62df\u4e3b\u673a\u8bbe\u7f6e\u4e3a address:port \u7684\u9ed8\u8ba4\u4e3b\u673a\u3002\uff08\u5728 nginx-0.8.21 \u4e4b\u524d\u4f7f\u7528\u7684\u662f default \u6307\u4ee4\uff09 5\u3001 setfib=number:Nginx-0.8.44 \u4e2d\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf\u76d1\u542c socket \u5173\u8054\u8def\u7531\u8868\uff0c\u76ee\u524d\u53ea\u5bf9 FreeBSD \u8d77\u4f5c\u7528\uff0c\u4e0d\u5e38\u7528\u3002 6\u3001backlog=number:\u8bbe\u7f6e\u76d1\u542c\u51fd\u6570listen()\u6700\u591a\u5141\u8bb8\u591a\u5c11\u7f51\u7edc\u8fde\u63a5\u540c\u65f6\u5904\u4e8e\u6302\u8d77\u72b6\u6001\uff0c\u5728 FreeBSD \u4e2d\u9ed8\u8ba4\u4e3a -1,\u5176\u4ed6\u5e73\u53f0\u9ed8\u8ba4\u4e3a511. 7\u3001rcvbuf=size:\u8bbe\u7f6e\u76d1\u542csocket\u63a5\u6536\u7f13\u5b58\u533a\u5927\u5c0f\u3002 8\u3001sndbuf=size:\u8bbe\u7f6e\u76d1\u542csocket\u53d1\u9001\u7f13\u5b58\u533a\u5927\u5c0f\u3002 9\u3001deferred:\u6807\u8bc6\u7b26\uff0c\u5c06accept()\u8bbe\u7f6e\u4e3aDeferred\u6a21\u5f0f\u3002 10\u3001accept_filter=filter:\u8bbe\u7f6e\u76d1\u542c\u7aef\u53e3\u5bf9\u6240\u6709\u8bf7\u6c42\u8fdb\u884c\u8fc7\u6ee4\uff0c\u88ab\u8fc7\u6ee4\u7684\u5185\u5bb9\u4e0d\u80fd\u88ab\u63a5\u6536\u548c\u5904\u7406\uff0c\u672c\u6307\u4ee4\u53ea\u5728 FreeBSD \u548c NetBSD 5.0+ \u5e73\u53f0\u4e0b\u6709\u6548\u3002filter \u53ef\u4ee5\u8bbe\u7f6e\u4e3a dataready \u6216 httpready \u3002 11\u3001bind:\u6807\u8bc6\u7b26\uff0c\u4f7f\u7528\u72ec\u7acb\u7684bind() \u5904\u7406\u6b64address:port\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u7aef\u53e3\u76f8\u540c\u800cIP\u5730\u5740\u4e0d\u540c\u7684\u591a\u4e2a\u8fde\u63a5\uff0cNginx \u670d\u52a1\u5668\u5c06\u53ea\u4f7f\u7528\u4e00\u4e2a\u76d1\u542c\u6307\u4ee4\uff0c\u5e76\u4f7f\u7528 bind() \u5904\u7406\u7aef\u53e3\u76f8\u540c\u7684\u6240\u6709\u8fde\u63a5\u3002 12\u3001ssl:\u6807\u8bc6\u7b26\uff0c\u8bbe\u7f6e\u4f1a\u8bdd\u8fde\u63a5\u4f7f\u7528 SSL\u6a21\u5f0f\u8fdb\u884c\uff0c\u6b64\u6807\u8bc6\u7b26\u548cNginx\u670d\u52a1\u5668\u63d0\u4f9b\u7684 HTTPS \u670d\u52a1\u6709\u5173\u3002","title":"\u2460\u3001listen"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#2server_name","text":"\u8be5\u6307\u4ee4\u7528\u4e8e\u865a\u62df\u4e3b\u673a\u7684\u914d\u7f6e\u3002\u901a\u5e38\u5206\u4e3a\u4ee5\u4e0b\u4e24\u79cd\uff1a 1\u3001\u57fa\u4e8e\u540d\u79f0\u7684\u865a\u62df\u4e3b\u673a\u914d\u7f6e \u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a 1 server_name name ...; \u4e00\u3001\u5bf9\u4e8ename \u6765\u8bf4\uff0c\u53ef\u4ee5\u53ea\u6709\u4e00\u4e2a\u540d\u79f0\uff0c\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u540d\u79f0\uff0c\u4e2d\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002\u800c\u6bcf\u4e2a\u540d\u5b57\u7531\u4e24\u6bb5\u6216\u8005\u4e09\u6bb5\u7ec4\u6210\uff0c\u6bcf\u6bb5\u4e4b\u95f4\u7528\u201c.\u201d\u9694\u5f00\u3002 1 server_name 123.com www.123.com \u4e8c\u3001\u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26\u201c*\u201d\uff0c\u4f46\u901a\u914d\u7b26\u53ea\u80fd\u7528\u5728\u7531\u4e09\u6bb5\u5b57\u7b26\u7ec4\u6210\u7684\u9996\u6bb5\u6216\u8005\u5c3e\u7aef\uff0c\u6216\u8005\u7531\u4e24\u7aef\u5b57\u7b26\u7ec4\u6210\u7684\u5c3e\u7aef\u3002 1 server_name *.123.com www.123.* \u4e09\u3001\u8fd8\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u201c~\u201d\u4f5c\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\u6807\u8bb0\u3002 1 server_name ~^www\\d+\\.123\\.com$; \u8be5\u8868\u8fbe\u5f0f\u201c~\u201d\u8868\u793a\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4ee5www\u5f00\u5934\uff08\u201c^\u201d\u8868\u793a\u5f00\u5934\uff09\uff0c\u7d27\u8ddf\u7740\u4e00\u4e2a0~9\u4e4b\u95f4\u7684\u6570\u5b57\uff0c\u5728\u7d27\u8ddf\u201c.123.co\u201d\uff0c\u6700\u540e\u8ddf\u7740\u201cm\u201d($\u8868\u793a\u7ed3\u5c3e) \u4ee5\u4e0a\u5339\u914d\u7684\u987a\u5e8f\u4f18\u5148\u7ea7\u5982\u4e0b\uff1a 1 2 3 4 1 \u2460\u3001\u51c6\u786e\u5339\u914d server_name 2 \u2461\u3001\u901a\u914d\u7b26\u5728\u5f00\u59cb\u65f6\u5339\u914d server_name \u6210\u529f 3 \u2462\u3001\u901a\u914d\u7b26\u5728\u7ed3\u5c3e\u65f6\u5339\u914d server_name \u6210\u529f 4 \u2463\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d server_name \u6210\u529f 2\u3001\u57fa\u4e8e IP \u5730\u5740\u7684\u865a\u62df\u4e3b\u673a\u914d\u7f6e \u8bed\u6cd5\u7ed3\u6784\u548c\u57fa\u4e8e\u57df\u540d\u5339\u914d\u4e00\u6837\uff0c\u800c\u4e14\u4e0d\u9700\u8981\u8003\u8651\u901a\u914d\u7b26\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u95ee\u9898\u3002 1 server_name 192.168.1.1","title":"\u2461\u3001server_name"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#3location","text":"\u8be5\u6307\u4ee4\u7528\u4e8e\u5339\u914d URL\u3002 \u8bed\u6cd5\u5982\u4e0b\uff1a 1 2 3 1 location [ = | ~ | ~* | ^~] uri { 2 3 } 1\u3001= \uff1a\u7528\u4e8e\u4e0d\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\u7684 uri \u524d\uff0c\u8981\u6c42\u8bf7\u6c42\u5b57\u7b26\u4e32\u4e0e uri \u4e25\u683c\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5c31\u505c\u6b62\u7ee7\u7eed\u5411\u4e0b\u641c\u7d22\u5e76\u7acb\u5373\u5904\u7406\u8be5\u8bf7\u6c42\u3002 2\u3001~\uff1a\u7528\u4e8e\u8868\u793a uri \u5305\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e14\u533a\u5206\u5927\u5c0f\u5199\u3002 3\u3001~*\uff1a\u7528\u4e8e\u8868\u793a uri \u5305\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e14\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 4\u3001^~\uff1a\u7528\u4e8e\u4e0d\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\u7684 uri \u524d\uff0c\u8981\u6c42 Nginx \u670d\u52a1\u5668\u627e\u5230\u6807\u8bc6 uri \u548c\u8bf7\u6c42\u5b57\u7b26\u4e32\u5339\u914d\u5ea6\u6700\u9ad8\u7684 location \u540e\uff0c\u7acb\u5373\u4f7f\u7528\u6b64 location \u5904\u7406\u8bf7\u6c42\uff0c\u800c\u4e0d\u518d\u4f7f\u7528 location \u5757\u4e2d\u7684\u6b63\u5219 uri \u548c\u8bf7\u6c42\u5b57\u7b26\u4e32\u505a\u5339\u914d\u3002 \u6ce8\u610f\uff1a\u5982\u679c uri \u5305\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5219\u5fc5\u987b\u8981\u6709 ~ \u6216\u8005 ~* \u6807\u8bc6\u3002","title":"\u2462\u3001location"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#4proxy_pass","text":"\u8be5\u6307\u4ee4\u7528\u4e8e\u8bbe\u7f6e\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5730\u5740\u3002\u53ef\u4ee5\u662f\u4e3b\u673a\u540d\u79f0\u3001IP\u5730\u5740\u52a0\u7aef\u53e3\u53f7\u7684\u5f62\u5f0f\u3002 \u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b\uff1a 1 proxy_pass URL; URL \u4e3a\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5730\u5740\uff0c\u53ef\u4ee5\u5305\u542b\u4f20\u8f93\u534f\u8bae\u3001\u4e3b\u673a\u540d\u79f0\u6216IP\u5730\u5740\u52a0\u7aef\u53e3\u53f7\uff0cURI\u7b49\u3002 1 proxy_pass http://www.123.com/uri;","title":"\u2463\u3001proxy_pass"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#5index","text":"\u8be5\u6307\u4ee4\u7528\u4e8e\u8bbe\u7f6e\u7f51\u7ad9\u7684\u9ed8\u8ba4\u9996\u9875\u3002 \u8bed\u6cd5\u4e3a\uff1a 1 index filename ...; \u540e\u9762\u7684\u6587\u4ef6\u540d\u79f0\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u4e2d\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002 1 index index.html index.jsp; \u901a\u5e38\u8be5\u6307\u4ee4\u6709\u4e24\u4e2a\u4f5c\u7528\uff1a\u7b2c\u4e00\u4e2a\u662f\u7528\u6237\u5728\u8bf7\u6c42\u8bbf\u95ee\u7f51\u7ad9\u65f6\uff0c\u8bf7\u6c42\u5730\u5740\u53ef\u4ee5\u4e0d\u5199\u9996\u9875\u540d\u79f0\uff1b\u7b2c\u4e8c\u4e2a\u662f\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u8bf7\u6c42\uff0c\u6839\u636e\u8bf7\u6c42\u5185\u5bb9\u800c\u8bbe\u7f6e\u4e0d\u540c\u7684\u9996\u9875\u3002","title":"\u2464\u3001index"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/","text":"\u8d1f\u8f7d\u5747\u8861\u4ecb\u7ecd \u8d1f\u8f7d\u5747\u8861\u7684\u610f\u601d\u662f\u5728\u670d\u52a1\u5668\u96c6\u7fa4\u4e2d\uff0c\u9700\u8981\u6709\u4e00\u53f0\u670d\u52a1\u5668\u4f5c\u4e3a\u8c03\u5ea6\u8005\uff0c\u5ba2\u6237\u7aef\u6240\u6709\u7684\u8bf7\u6c42\u90fd\u7531\u8c03\u5ea6\u8005\u63a5\u6536\uff0c\u8c03\u5ea6\u8005\u518d\u6839\u636e\u6bcf\u53f0\u670d\u52a1\u5668\u7684\u8d1f\u8f7d\u60c5\u51b5\uff0c\u5c06\u8bf7\u6c42\u5206\u914d\u7ed9\u5bf9\u5e94\u7684\u670d\u52a1\u5668\u53bb\u5904\u7406\uff1b \u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u8c03\u5ea6\u8005\u5982\u4f55\u5408\u7406\u5206\u914d\u4efb\u52a1\uff0c\u4fdd\u8bc1\u6240\u6709\u670d\u52a1\u5668\u5c06\u6027\u80fd\u5145\u5206\u53d1\u6325\uff0c\u4ece\u800c\u4fdd\u6301\u670d\u52a1\u5668\u96c6\u7fa4\u7684\u6574\u4f53\u6027\u80fd\u6700\u4f18\uff0c\u8fd9\u5c31\u662f\u8d1f\u8f7d\u5747\u8861\u7684\u95ee\u9898\u4e86\u3002 Nginx\u8d1f\u8f7d\u5747\u8861\u7684\u65b9\u5f0f \u8f6e\u8be2 \u8f6e\u8be2\u65b9\u5f0f\u662fNginx\u8d1f\u8f7d\u9ed8\u8ba4\u7684\u65b9\u5f0f\uff0c\u987e\u540d\u601d\u4e49\uff0c\u6240\u6709\u8bf7\u6c42\u90fd\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u5206\u914d\u5230\u4e0d\u540c\u7684\u670d\u52a1\u4e0a\uff0c\u5982\u679c\u670d\u52a1Down\u6389\uff0c\u53ef\u4ee5\u81ea\u52a8\u5254\u9664\uff0c\u5982\u4e0b\u914d\u7f6e\u540e\u8f6e\u8bad10001\u670d\u52a1\u548c10002\u670d\u52a1\u3002 1 2 3 4 upstream dalaoyang-server { server localhost:10001; server localhost:10002; } \u6743\u91cd \u6307\u5b9a\u6bcf\u4e2a\u670d\u52a1\u7684\u6743\u91cd\u6bd4\u4f8b\uff0cweight\u548c\u8bbf\u95ee\u6bd4\u7387\u6210\u6b63\u6bd4\uff0c\u901a\u5e38\u7528\u4e8e\u540e\u7aef\u670d\u52a1\u673a\u5668\u6027\u80fd\u4e0d\u7edf\u4e00\uff0c\u5c06\u6027\u80fd\u597d\u7684\u5206\u914d\u6743\u91cd\u9ad8\u6765\u53d1\u6325\u670d\u52a1\u5668\u6700\u5927\u6027\u80fd\uff0c\u5982\u4e0b\u914d\u7f6e\u540e10002\u670d\u52a1\u7684\u8bbf\u95ee\u6bd4\u7387\u4f1a\u662f10001\u670d\u52a1\u7684\u4e8c\u500d\u3002 1 2 3 4 upstream dalaoyang-server { server localhost:10001 weight=1; server localhost:10002 weight=2; } iphash \u6bcf\u4e2a\u8bf7\u6c42\u90fd\u6839\u636e\u8bbf\u95eeip\u7684hash\u7ed3\u679c\u5206\u914d\uff0c\u7ecf\u8fc7\u8fd9\u6837\u7684\u5904\u7406\uff0c\u6bcf\u4e2a\u8bbf\u5ba2\u56fa\u5b9a\u8bbf\u95ee\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\uff0c\u5982\u4e0b\u914d\u7f6e\uff08ip_hash\u53ef\u4ee5\u548cweight\u914d\u5408\u4f7f\u7528\uff09\u3002 1 2 3 4 5 upstream dalaoyang-server { ip_hash; server localhost:10001 weight=1; server localhost:10002 weight=2; } \u6700\u5c11\u8fde\u63a5 \u5c06\u8bf7\u6c42\u5206\u914d\u5230\u8fde\u63a5\u6570\u6700\u5c11\u7684\u670d\u52a1\u4e0a\u3002 1 2 3 4 5 upstream dalaoyang-server { least_conn; server localhost:10001 weight=1; server localhost:10002 weight=2; } fair \u6309\u540e\u7aef\u670d\u52a1\u5668\u7684\u54cd\u5e94\u65f6\u95f4\u6765\u5206\u914d\u8bf7\u6c42\uff0c\u54cd\u5e94\u65f6\u95f4\u77ed\u7684\u4f18\u5148\u5206\u914d\u3002 \u9700\u8981\u63d2\u4ef6\u6765\u5e2e\u6211\u4eec\u5b9e\u73b0 1 2 3 4 5 upstream dalaoyang-server { server localhost:10001 weight=1; server localhost:10002 weight=2; fair; } Nginx\u914d\u7f6e \u4ee5\u8f6e\u8be2\u4e3a\u4f8b\uff0c\u5982\u4e0b\u662fnginx.conf\u5b8c\u6574\u4ee3\u7801\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 worker_processes 1 ; events { worker_connections 1024 ; } http { upstream dalaoyang - server { server localhost : 10001 ; server localhost : 10002 ; } server { listen 10000 ; server_name localhost ; location / { proxy_pass http : //dalaoyang-server; proxy_redirect default ; } } }","title":"04Nginx\u8d1f\u8f7d\u5747\u8861"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/#_1","text":"\u8d1f\u8f7d\u5747\u8861\u7684\u610f\u601d\u662f\u5728\u670d\u52a1\u5668\u96c6\u7fa4\u4e2d\uff0c\u9700\u8981\u6709\u4e00\u53f0\u670d\u52a1\u5668\u4f5c\u4e3a\u8c03\u5ea6\u8005\uff0c\u5ba2\u6237\u7aef\u6240\u6709\u7684\u8bf7\u6c42\u90fd\u7531\u8c03\u5ea6\u8005\u63a5\u6536\uff0c\u8c03\u5ea6\u8005\u518d\u6839\u636e\u6bcf\u53f0\u670d\u52a1\u5668\u7684\u8d1f\u8f7d\u60c5\u51b5\uff0c\u5c06\u8bf7\u6c42\u5206\u914d\u7ed9\u5bf9\u5e94\u7684\u670d\u52a1\u5668\u53bb\u5904\u7406\uff1b \u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u8c03\u5ea6\u8005\u5982\u4f55\u5408\u7406\u5206\u914d\u4efb\u52a1\uff0c\u4fdd\u8bc1\u6240\u6709\u670d\u52a1\u5668\u5c06\u6027\u80fd\u5145\u5206\u53d1\u6325\uff0c\u4ece\u800c\u4fdd\u6301\u670d\u52a1\u5668\u96c6\u7fa4\u7684\u6574\u4f53\u6027\u80fd\u6700\u4f18\uff0c\u8fd9\u5c31\u662f\u8d1f\u8f7d\u5747\u8861\u7684\u95ee\u9898\u4e86\u3002","title":"\u8d1f\u8f7d\u5747\u8861\u4ecb\u7ecd"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/#nginx","text":"","title":"Nginx\u8d1f\u8f7d\u5747\u8861\u7684\u65b9\u5f0f"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/#_2","text":"\u8f6e\u8be2\u65b9\u5f0f\u662fNginx\u8d1f\u8f7d\u9ed8\u8ba4\u7684\u65b9\u5f0f\uff0c\u987e\u540d\u601d\u4e49\uff0c\u6240\u6709\u8bf7\u6c42\u90fd\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u5206\u914d\u5230\u4e0d\u540c\u7684\u670d\u52a1\u4e0a\uff0c\u5982\u679c\u670d\u52a1Down\u6389\uff0c\u53ef\u4ee5\u81ea\u52a8\u5254\u9664\uff0c\u5982\u4e0b\u914d\u7f6e\u540e\u8f6e\u8bad10001\u670d\u52a1\u548c10002\u670d\u52a1\u3002 1 2 3 4 upstream dalaoyang-server { server localhost:10001; server localhost:10002; }","title":"\u8f6e\u8be2"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/#_3","text":"\u6307\u5b9a\u6bcf\u4e2a\u670d\u52a1\u7684\u6743\u91cd\u6bd4\u4f8b\uff0cweight\u548c\u8bbf\u95ee\u6bd4\u7387\u6210\u6b63\u6bd4\uff0c\u901a\u5e38\u7528\u4e8e\u540e\u7aef\u670d\u52a1\u673a\u5668\u6027\u80fd\u4e0d\u7edf\u4e00\uff0c\u5c06\u6027\u80fd\u597d\u7684\u5206\u914d\u6743\u91cd\u9ad8\u6765\u53d1\u6325\u670d\u52a1\u5668\u6700\u5927\u6027\u80fd\uff0c\u5982\u4e0b\u914d\u7f6e\u540e10002\u670d\u52a1\u7684\u8bbf\u95ee\u6bd4\u7387\u4f1a\u662f10001\u670d\u52a1\u7684\u4e8c\u500d\u3002 1 2 3 4 upstream dalaoyang-server { server localhost:10001 weight=1; server localhost:10002 weight=2; }","title":"\u6743\u91cd"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/#iphash","text":"\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u6839\u636e\u8bbf\u95eeip\u7684hash\u7ed3\u679c\u5206\u914d\uff0c\u7ecf\u8fc7\u8fd9\u6837\u7684\u5904\u7406\uff0c\u6bcf\u4e2a\u8bbf\u5ba2\u56fa\u5b9a\u8bbf\u95ee\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\uff0c\u5982\u4e0b\u914d\u7f6e\uff08ip_hash\u53ef\u4ee5\u548cweight\u914d\u5408\u4f7f\u7528\uff09\u3002 1 2 3 4 5 upstream dalaoyang-server { ip_hash; server localhost:10001 weight=1; server localhost:10002 weight=2; }","title":"iphash"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/#_4","text":"\u5c06\u8bf7\u6c42\u5206\u914d\u5230\u8fde\u63a5\u6570\u6700\u5c11\u7684\u670d\u52a1\u4e0a\u3002 1 2 3 4 5 upstream dalaoyang-server { least_conn; server localhost:10001 weight=1; server localhost:10002 weight=2; }","title":"\u6700\u5c11\u8fde\u63a5"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/#fair","text":"\u6309\u540e\u7aef\u670d\u52a1\u5668\u7684\u54cd\u5e94\u65f6\u95f4\u6765\u5206\u914d\u8bf7\u6c42\uff0c\u54cd\u5e94\u65f6\u95f4\u77ed\u7684\u4f18\u5148\u5206\u914d\u3002 \u9700\u8981\u63d2\u4ef6\u6765\u5e2e\u6211\u4eec\u5b9e\u73b0 1 2 3 4 5 upstream dalaoyang-server { server localhost:10001 weight=1; server localhost:10002 weight=2; fair; }","title":"fair"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/#nginx_1","text":"\u4ee5\u8f6e\u8be2\u4e3a\u4f8b\uff0c\u5982\u4e0b\u662fnginx.conf\u5b8c\u6574\u4ee3\u7801\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 worker_processes 1 ; events { worker_connections 1024 ; } http { upstream dalaoyang - server { server localhost : 10001 ; server localhost : 10002 ; } server { listen 10000 ; server_name localhost ; location / { proxy_pass http : //dalaoyang-server; proxy_redirect default ; } } }","title":"Nginx\u914d\u7f6e"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/","text":"Nginx\u9650\u6d41\u7194\u65ad *\u4f5c\u4e3a\u4f18\u79c0\u7684\u8d1f\u8f7d\u5747\u8861\u6a21\u5757\uff0c\u76ee\u524d\u662f\u6211\u4eec\u5de5\u4f5c\u4e2d\u7528\u5230\u6700\u591a\u7684\u3002\u5176\u5b9e\uff0c\u8be5\u6a21\u5757\u662f\u63d0\u4f9b\u4e86\u6211\u4eec\u9700\u8981\u7684\u540e\u7aef\u9650\u6d41\u529f\u80fd\u7684\u3002\u901a\u8fc7\u5b98\u65b9\u6587\u6863\u4ecb\u7ecd\uff0c \u4ee4\u724c\u6876\u7b97\u6cd5 \u7b97\u6cd5\u601d\u60f3\u662f\uff1a \u4ee4\u724c\u4ee5\u56fa\u5b9a\u901f\u7387\u4ea7\u751f\uff0c\u5e76\u7f13\u5b58\u5230\u4ee4\u724c\u6876\u4e2d\uff1b \u4ee4\u724c\u6876\u653e\u6ee1\u65f6\uff0c\u591a\u4f59\u7684\u4ee4\u724c\u88ab\u4e22\u5f03\uff1b \u8bf7\u6c42\u8981\u6d88\u8017\u7b49\u6bd4\u4f8b\u7684\u4ee4\u724c\u624d\u80fd\u88ab\u5904\u7406\uff1b \u4ee4\u724c\u4e0d\u591f\u65f6\uff0c\u8bf7\u6c42\u88ab\u7f13\u5b58\u3002 \u6f0f\u6876\u7b97\u6cd5 \u7b97\u6cd5\u601d\u60f3\u662f\uff1a \u6c34\uff08\u8bf7\u6c42\uff09\u4ece\u4e0a\u65b9\u5012\u5165\u6c34\u6876\uff0c\u4ece\u6c34\u6876\u4e0b\u65b9\u6d41\u51fa\uff08\u88ab\u5904\u7406\uff09\uff1b \u6765\u4e0d\u53ca\u6d41\u51fa\u7684\u6c34\u5b58\u5728\u6c34\u6876\u4e2d\uff08\u7f13\u51b2\uff09\uff0c\u4ee5\u56fa\u5b9a\u901f\u7387\u6d41\u51fa\uff1b \u6c34\u6876\u6ee1\u540e\u6c34\u6ea2\u51fa\uff08\u4e22\u5f03\uff09\u3002 \u8fd9\u4e2a\u7b97\u6cd5\u7684\u6838\u5fc3\u662f\uff1a\u7f13\u5b58\u8bf7\u6c42\u3001\u5300\u901f\u5904\u7406\u3001\u591a\u4f59\u7684\u8bf7\u6c42\u76f4\u63a5\u4e22\u5f03\u3002 \u76f8\u6bd4\u6f0f\u6876\u7b97\u6cd5\uff0c\u4ee4\u724c\u6876\u7b97\u6cd5\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4e0d\u4f46\u6709\u4e00\u53ea\u201c\u6876\u201d\uff0c\u8fd8\u6709\u4e2a\u961f\u5217\uff0c\u8fd9\u4e2a\u6876\u662f\u7528\u6765\u5b58\u653e\u4ee4\u724c\u7684\uff0c\u961f\u5217\u624d\u662f\u7528\u6765\u5b58\u653e\u8bf7\u6c42\u7684\u3002 \u4ece\u4f5c\u7528\u4e0a\u6765\u8bf4\uff0c\u6f0f\u6876\u548c\u4ee4\u724c\u6876\u7b97\u6cd5\u6700\u660e\u663e\u7684\u533a\u522b\u5c31\u662f\u662f\u5426\u5141\u8bb8\u7a81\u53d1\u6d41\u91cf(burst)\u7684\u5904\u7406\uff0c\u6f0f\u6876\u7b97\u6cd5\u80fd\u591f\u5f3a\u884c\u9650\u5236\u6570\u636e\u7684\u5b9e\u65f6\u4f20\u8f93\uff08\u5904\u7406\uff09\u901f\u7387\uff0c\u5bf9\u7a81\u53d1\u6d41\u91cf\u4e0d\u505a\u989d\u5916\u5904\u7406\uff1b\u800c\u4ee4\u724c\u6876\u7b97\u6cd5\u80fd\u591f\u5728\u9650\u5236\u6570\u636e\u7684\u5e73\u5747\u4f20\u8f93\u901f\u7387\u7684\u540c\u65f6\u5141\u8bb8\u67d0\u79cd\u7a0b\u5ea6\u7684\u7a81\u53d1\u4f20\u8f93\u3002 Nginx\u6309\u8bf7\u6c42\u901f\u7387\u9650\u901f\u6a21\u5757\u4f7f\u7528\u7684\u662f\u6f0f\u6876\u7b97\u6cd5\uff0c\u5373\u80fd\u591f\u5f3a\u884c\u4fdd\u8bc1\u8bf7\u6c42\u7684\u5b9e\u65f6\u5904\u7406\u901f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u8bbe\u7f6e\u7684\u9608\u503c\u3002 \u6848\u4f8b \u901a\u8fc7\u67e5\u770bnginx\u5b98\u65b9\u6587\u6863\uff0chttps://www.nginx.cn/doc/ HttpLimit zone \u672c\u6a21\u5757\u53ef\u4ee5\u9488\u5bf9\u6761\u4ef6\uff0c\u8fdb\u884c\u4f1a\u8bdd\u7684\u5e76\u53d1\u8fde\u63a5\u6570\u63a7\u5236\u3002\uff08\u4f8b\u5982\uff1a\u9650\u5236\u6bcf\u4e2aIP\u7684\u5e76\u53d1\u8fde\u63a5\u6570\u3002\uff09 \u914d\u7f6e\u793a\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 http { : limit_zone one $binary_remote_addr 10m; : ... : server { : ... : location /download/ { : limit_conn one 1; : } \u6307\u4ee4 [#limit_zone limit_zone] [#limit_conn limit_conn] limit_zone \u8bed\u6cd5\uff1a limit_zone zone_name $variable the_size \u9ed8\u8ba4\u503c\uff1a no \u4f5c\u7528\u57df\uff1a http \u672c\u6307\u4ee4\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6570\u636e\u533a\uff0c\u91cc\u9762\u8bb0\u5f55\u4f1a\u8bdd\u72b6\u6001\u4fe1\u606f\u3002 $variable \u5b9a\u4e49\u5224\u65ad\u4f1a\u8bdd\u7684\u53d8\u91cf\uff1bthe_size \u5b9a\u4e49\u8bb0\u5f55\u533a\u7684\u603b\u5bb9\u91cf\u3002 \u4f8b\u5b50\uff1a 1 limit_zone one $binary_remote_addr 10m; \u5b9a\u4e49\u4e00\u4e2a\u53eb\u201cone\u201d\u7684\u8bb0\u5f55\u533a\uff0c\u603b\u5bb9\u91cf\u4e3a 10M\uff0c\u4ee5\u53d8\u91cf $binary_remote_addr \u4f5c\u4e3a\u4f1a\u8bdd\u7684\u5224\u65ad\u57fa\u51c6\uff08\u5373\u4e00\u4e2a\u5730\u5740\u4e00\u4e2a\u4f1a\u8bdd\uff09\u3002 \u60a8\u53ef\u4ee5\u6ce8\u610f\u5230\u4e86\uff0c\u5728\u8fd9\u91cc\u4f7f\u7528\u7684\u662f $binary_remote_addr \u800c\u4e0d\u662f $remote_addr\u3002 $remote_addr \u7684\u957f\u5ea6\u4e3a 7 \u81f3 15 bytes\uff0c\u4f1a\u8bdd\u4fe1\u606f\u7684\u957f\u5ea6\u4e3a 32 \u6216 64 bytes\u3002 \u800c $binary_remote_addr \u7684\u957f\u5ea6\u4e3a 4 bytes\uff0c\u4f1a\u8bdd\u4fe1\u606f\u7684\u957f\u5ea6\u4e3a 32 bytes\u3002 \u5f53\u533a\u7684\u5927\u5c0f\u4e3a 1M \u7684\u65f6\u5019\uff0c\u5927\u7ea6\u53ef\u4ee5\u8bb0\u5f55 32000 \u4e2a\u4f1a\u8bdd\u4fe1\u606f\uff08\u4e00\u4e2a\u4f1a\u8bdd\u5360\u7528 32 bytes\uff09\u3002 limit_conn \u8bed\u6cd5\uff1a limit_conn zone_name the_size \u9ed8\u8ba4\u503c\uff1a no \u4f5c\u7528\u57df\uff1a http, server, location \u6307\u5b9a\u4e00\u4e2a\u4f1a\u8bdd\u6700\u5927\u7684\u5e76\u53d1\u8fde\u63a5\u6570\u3002 \u5f53\u8d85\u8fc7\u6307\u5b9a\u7684\u6700\u53d1\u5e76\u53d1\u8fde\u63a5\u6570\u65f6\uff0c\u670d\u52a1\u5668\u5c06\u8fd4\u56de \"Service unavailable\" (503)\u3002 \u4f8b\u5b50\uff1a 1 2 3 4 5 6 limit_zone one $binary_remote_addr 10m; : server { : location /download/ { : limit_conn one 1; : } \u5b9a\u4e49\u4e00\u4e2a\u53eb\u201cone\u201d\u7684\u8bb0\u5f55\u533a\uff0c\u603b\u5bb9\u91cf\u4e3a 10M\uff0c\u4ee5\u53d8\u91cf $binary_remote_addr \u4f5c\u4e3a\u4f1a\u8bdd\u7684\u5224\u65ad\u57fa\u51c6\uff08\u5373\u4e00\u4e2a\u5730\u5740\u4e00\u4e2a\u4f1a\u8bdd\uff09\u3002 \u9650\u5236 /download/ \u76ee\u5f55\u4e0b\uff0c\u4e00\u4e2a\u4f1a\u8bdd\u53ea\u80fd\u8fdb\u884c\u4e00\u4e2a\u8fde\u63a5\u3002 \u7b80\u5355\u70b9\uff0c\u5c31\u662f\u9650\u5236 /download/ \u76ee\u5f55\u4e0b\uff0c\u4e00\u4e2aIP\u53ea\u80fd\u53d1\u8d77\u4e00\u4e2a\u8fde\u63a5\uff0c\u591a\u8fc7\u4e00\u4e2a\uff0c\u4e00\u5f8b503\u3002 ab \u6d4b\u8bd5\u5b89\u88c5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #ab\u8fd0\u884c\u9700\u8981\u4f9d\u8d56apr-util\u5305\uff0c\u5b89\u88c5\u547d\u4ee4\u4e3a\uff1a yum install apr-util #\u5b89\u88c5\u4f9d\u8d56 yum-utils\u4e2d\u7684yumdownload \u5de5\u5177\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230 yumdownload \u547d\u4ee4\u53ef\u4ee5 yum install yum-utils cd /opt mkdir abtmp cd abtmp yum install yum-utils.noarch yumdownloader httpd-tools* rpm2cpio httpd-*.rpm | cpio -idmv #\u64cd\u4f5c\u5b8c\u6210\u540e \u5c06\u4f1a\u4ea7\u751f\u4e00\u4e2a usr \u76ee\u5f55 ab\u6587\u4ef6\u5c31\u5728\u8fd9\u4e2ausr \u76ee\u5f55\u4e2d #\u7b80\u5355\u4f7f\u7528\u8bf4\u660e ./ab -c 100 -n 10000 http://127.0.0.1/index.html #-c 100 \u5373\uff1a\u6bcf\u6b21\u5e76\u53d1100\u4e2a #-n 10000 \u5373\uff1a \u5171\u53d1\u900110000\u4e2a\u8bf7\u6c42","title":"05Nginx\u9650\u6d41\u7194\u65ad"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#nginx","text":"*\u4f5c\u4e3a\u4f18\u79c0\u7684\u8d1f\u8f7d\u5747\u8861\u6a21\u5757\uff0c\u76ee\u524d\u662f\u6211\u4eec\u5de5\u4f5c\u4e2d\u7528\u5230\u6700\u591a\u7684\u3002\u5176\u5b9e\uff0c\u8be5\u6a21\u5757\u662f\u63d0\u4f9b\u4e86\u6211\u4eec\u9700\u8981\u7684\u540e\u7aef\u9650\u6d41\u529f\u80fd\u7684\u3002\u901a\u8fc7\u5b98\u65b9\u6587\u6863\u4ecb\u7ecd\uff0c","title":"Nginx\u9650\u6d41\u7194\u65ad"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#_1","text":"\u7b97\u6cd5\u601d\u60f3\u662f\uff1a \u4ee4\u724c\u4ee5\u56fa\u5b9a\u901f\u7387\u4ea7\u751f\uff0c\u5e76\u7f13\u5b58\u5230\u4ee4\u724c\u6876\u4e2d\uff1b \u4ee4\u724c\u6876\u653e\u6ee1\u65f6\uff0c\u591a\u4f59\u7684\u4ee4\u724c\u88ab\u4e22\u5f03\uff1b \u8bf7\u6c42\u8981\u6d88\u8017\u7b49\u6bd4\u4f8b\u7684\u4ee4\u724c\u624d\u80fd\u88ab\u5904\u7406\uff1b \u4ee4\u724c\u4e0d\u591f\u65f6\uff0c\u8bf7\u6c42\u88ab\u7f13\u5b58\u3002","title":"\u4ee4\u724c\u6876\u7b97\u6cd5"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#_2","text":"\u7b97\u6cd5\u601d\u60f3\u662f\uff1a \u6c34\uff08\u8bf7\u6c42\uff09\u4ece\u4e0a\u65b9\u5012\u5165\u6c34\u6876\uff0c\u4ece\u6c34\u6876\u4e0b\u65b9\u6d41\u51fa\uff08\u88ab\u5904\u7406\uff09\uff1b \u6765\u4e0d\u53ca\u6d41\u51fa\u7684\u6c34\u5b58\u5728\u6c34\u6876\u4e2d\uff08\u7f13\u51b2\uff09\uff0c\u4ee5\u56fa\u5b9a\u901f\u7387\u6d41\u51fa\uff1b \u6c34\u6876\u6ee1\u540e\u6c34\u6ea2\u51fa\uff08\u4e22\u5f03\uff09\u3002 \u8fd9\u4e2a\u7b97\u6cd5\u7684\u6838\u5fc3\u662f\uff1a\u7f13\u5b58\u8bf7\u6c42\u3001\u5300\u901f\u5904\u7406\u3001\u591a\u4f59\u7684\u8bf7\u6c42\u76f4\u63a5\u4e22\u5f03\u3002 \u76f8\u6bd4\u6f0f\u6876\u7b97\u6cd5\uff0c\u4ee4\u724c\u6876\u7b97\u6cd5\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4e0d\u4f46\u6709\u4e00\u53ea\u201c\u6876\u201d\uff0c\u8fd8\u6709\u4e2a\u961f\u5217\uff0c\u8fd9\u4e2a\u6876\u662f\u7528\u6765\u5b58\u653e\u4ee4\u724c\u7684\uff0c\u961f\u5217\u624d\u662f\u7528\u6765\u5b58\u653e\u8bf7\u6c42\u7684\u3002 \u4ece\u4f5c\u7528\u4e0a\u6765\u8bf4\uff0c\u6f0f\u6876\u548c\u4ee4\u724c\u6876\u7b97\u6cd5\u6700\u660e\u663e\u7684\u533a\u522b\u5c31\u662f\u662f\u5426\u5141\u8bb8\u7a81\u53d1\u6d41\u91cf(burst)\u7684\u5904\u7406\uff0c\u6f0f\u6876\u7b97\u6cd5\u80fd\u591f\u5f3a\u884c\u9650\u5236\u6570\u636e\u7684\u5b9e\u65f6\u4f20\u8f93\uff08\u5904\u7406\uff09\u901f\u7387\uff0c\u5bf9\u7a81\u53d1\u6d41\u91cf\u4e0d\u505a\u989d\u5916\u5904\u7406\uff1b\u800c\u4ee4\u724c\u6876\u7b97\u6cd5\u80fd\u591f\u5728\u9650\u5236\u6570\u636e\u7684\u5e73\u5747\u4f20\u8f93\u901f\u7387\u7684\u540c\u65f6\u5141\u8bb8\u67d0\u79cd\u7a0b\u5ea6\u7684\u7a81\u53d1\u4f20\u8f93\u3002 Nginx\u6309\u8bf7\u6c42\u901f\u7387\u9650\u901f\u6a21\u5757\u4f7f\u7528\u7684\u662f\u6f0f\u6876\u7b97\u6cd5\uff0c\u5373\u80fd\u591f\u5f3a\u884c\u4fdd\u8bc1\u8bf7\u6c42\u7684\u5b9e\u65f6\u5904\u7406\u901f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u8bbe\u7f6e\u7684\u9608\u503c\u3002","title":"\u6f0f\u6876\u7b97\u6cd5"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#_3","text":"\u901a\u8fc7\u67e5\u770bnginx\u5b98\u65b9\u6587\u6863\uff0chttps://www.nginx.cn/doc/","title":"\u6848\u4f8b"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#httplimit-zone","text":"\u672c\u6a21\u5757\u53ef\u4ee5\u9488\u5bf9\u6761\u4ef6\uff0c\u8fdb\u884c\u4f1a\u8bdd\u7684\u5e76\u53d1\u8fde\u63a5\u6570\u63a7\u5236\u3002\uff08\u4f8b\u5982\uff1a\u9650\u5236\u6bcf\u4e2aIP\u7684\u5e76\u53d1\u8fde\u63a5\u6570\u3002\uff09 \u914d\u7f6e\u793a\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 http { : limit_zone one $binary_remote_addr 10m; : ... : server { : ... : location /download/ { : limit_conn one 1; : }","title":"HttpLimit zone"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#_4","text":"[#limit_zone limit_zone] [#limit_conn limit_conn]","title":"\u6307\u4ee4"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#limit_zone","text":"\u8bed\u6cd5\uff1a limit_zone zone_name $variable the_size \u9ed8\u8ba4\u503c\uff1a no \u4f5c\u7528\u57df\uff1a http \u672c\u6307\u4ee4\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6570\u636e\u533a\uff0c\u91cc\u9762\u8bb0\u5f55\u4f1a\u8bdd\u72b6\u6001\u4fe1\u606f\u3002 $variable \u5b9a\u4e49\u5224\u65ad\u4f1a\u8bdd\u7684\u53d8\u91cf\uff1bthe_size \u5b9a\u4e49\u8bb0\u5f55\u533a\u7684\u603b\u5bb9\u91cf\u3002 \u4f8b\u5b50\uff1a 1 limit_zone one $binary_remote_addr 10m; \u5b9a\u4e49\u4e00\u4e2a\u53eb\u201cone\u201d\u7684\u8bb0\u5f55\u533a\uff0c\u603b\u5bb9\u91cf\u4e3a 10M\uff0c\u4ee5\u53d8\u91cf $binary_remote_addr \u4f5c\u4e3a\u4f1a\u8bdd\u7684\u5224\u65ad\u57fa\u51c6\uff08\u5373\u4e00\u4e2a\u5730\u5740\u4e00\u4e2a\u4f1a\u8bdd\uff09\u3002 \u60a8\u53ef\u4ee5\u6ce8\u610f\u5230\u4e86\uff0c\u5728\u8fd9\u91cc\u4f7f\u7528\u7684\u662f $binary_remote_addr \u800c\u4e0d\u662f $remote_addr\u3002 $remote_addr \u7684\u957f\u5ea6\u4e3a 7 \u81f3 15 bytes\uff0c\u4f1a\u8bdd\u4fe1\u606f\u7684\u957f\u5ea6\u4e3a 32 \u6216 64 bytes\u3002 \u800c $binary_remote_addr \u7684\u957f\u5ea6\u4e3a 4 bytes\uff0c\u4f1a\u8bdd\u4fe1\u606f\u7684\u957f\u5ea6\u4e3a 32 bytes\u3002 \u5f53\u533a\u7684\u5927\u5c0f\u4e3a 1M \u7684\u65f6\u5019\uff0c\u5927\u7ea6\u53ef\u4ee5\u8bb0\u5f55 32000 \u4e2a\u4f1a\u8bdd\u4fe1\u606f\uff08\u4e00\u4e2a\u4f1a\u8bdd\u5360\u7528 32 bytes\uff09\u3002","title":"limit_zone"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#limit_conn","text":"\u8bed\u6cd5\uff1a limit_conn zone_name the_size \u9ed8\u8ba4\u503c\uff1a no \u4f5c\u7528\u57df\uff1a http, server, location \u6307\u5b9a\u4e00\u4e2a\u4f1a\u8bdd\u6700\u5927\u7684\u5e76\u53d1\u8fde\u63a5\u6570\u3002 \u5f53\u8d85\u8fc7\u6307\u5b9a\u7684\u6700\u53d1\u5e76\u53d1\u8fde\u63a5\u6570\u65f6\uff0c\u670d\u52a1\u5668\u5c06\u8fd4\u56de \"Service unavailable\" (503)\u3002 \u4f8b\u5b50\uff1a 1 2 3 4 5 6 limit_zone one $binary_remote_addr 10m; : server { : location /download/ { : limit_conn one 1; : } \u5b9a\u4e49\u4e00\u4e2a\u53eb\u201cone\u201d\u7684\u8bb0\u5f55\u533a\uff0c\u603b\u5bb9\u91cf\u4e3a 10M\uff0c\u4ee5\u53d8\u91cf $binary_remote_addr \u4f5c\u4e3a\u4f1a\u8bdd\u7684\u5224\u65ad\u57fa\u51c6\uff08\u5373\u4e00\u4e2a\u5730\u5740\u4e00\u4e2a\u4f1a\u8bdd\uff09\u3002 \u9650\u5236 /download/ \u76ee\u5f55\u4e0b\uff0c\u4e00\u4e2a\u4f1a\u8bdd\u53ea\u80fd\u8fdb\u884c\u4e00\u4e2a\u8fde\u63a5\u3002 \u7b80\u5355\u70b9\uff0c\u5c31\u662f\u9650\u5236 /download/ \u76ee\u5f55\u4e0b\uff0c\u4e00\u4e2aIP\u53ea\u80fd\u53d1\u8d77\u4e00\u4e2a\u8fde\u63a5\uff0c\u591a\u8fc7\u4e00\u4e2a\uff0c\u4e00\u5f8b503\u3002","title":"limit_conn"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#ab","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #ab\u8fd0\u884c\u9700\u8981\u4f9d\u8d56apr-util\u5305\uff0c\u5b89\u88c5\u547d\u4ee4\u4e3a\uff1a yum install apr-util #\u5b89\u88c5\u4f9d\u8d56 yum-utils\u4e2d\u7684yumdownload \u5de5\u5177\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230 yumdownload \u547d\u4ee4\u53ef\u4ee5 yum install yum-utils cd /opt mkdir abtmp cd abtmp yum install yum-utils.noarch yumdownloader httpd-tools* rpm2cpio httpd-*.rpm | cpio -idmv #\u64cd\u4f5c\u5b8c\u6210\u540e \u5c06\u4f1a\u4ea7\u751f\u4e00\u4e2a usr \u76ee\u5f55 ab\u6587\u4ef6\u5c31\u5728\u8fd9\u4e2ausr \u76ee\u5f55\u4e2d #\u7b80\u5355\u4f7f\u7528\u8bf4\u660e ./ab -c 100 -n 10000 http://127.0.0.1/index.html #-c 100 \u5373\uff1a\u6bcf\u6b21\u5e76\u53d1100\u4e2a #-n 10000 \u5373\uff1a \u5171\u53d1\u900110000\u4e2a\u8bf7\u6c42","title":"ab \u6d4b\u8bd5\u5b89\u88c5"},{"location":"Nginx/06Nginx%E5%AE%9E%E7%8E%B0%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/","text":"Nginx\u5b9e\u73b0\u52a8\u9759\u5206\u79bb Nginx\u7684\u9759\u6001\u5904\u7406\u80fd\u529b\u5f88\u5f3a\uff0c\u4f46\u662f\u52a8\u6001\u5904\u7406\u80fd\u529b\u4e0d\u8db3\uff0c\u56e0\u6b64\uff0c\u5728\u4f01\u4e1a\u4e2d\u5e38\u7528\u52a8\u9759\u5206\u79bb\u6280\u672f\u3002\u52a8\u9759\u5206\u79bb\u6280\u672f\u5176\u5b9e\u662f\u91c7\u7528\u4ee3\u7406\u7684\u65b9\u5f0f\uff0c\u5728server{}\u6bb5\u4e2d\u52a0\u5165\u5e26\u6b63\u5219\u5339\u914d\u7684location\u6765\u6307\u5b9a\u5339\u914d\u9879\u9488\u5bf9\u670d\u52a1\u7684\u52a8\u9759\u5206\u79bb\uff1a \u9759\u6001\u9875\u9762\u4ea4\u7ed9Nginx\u5904\u7406\uff0c \u52a8\u6001\u9875\u9762\u4ea4\u7ed9\u670d\u52a1\u5668\u6216Apache\u5904\u7406\u3002\u5728Nginx\u7684\u914d\u7f6e\u4e2d\uff0c\u662f\u901a\u8fc7location\u914d\u7f6e\u6bb5\u914d\u5408\u6b63\u5219\u5339\u914d\u5b9e\u73b0\u9759\u6001\u4e0e\u52a8\u6001\u9875\u9762\u7684\u4e0d\u540c\u5904\u7406\u65b9\u5f0f\u3002 \u5b9e\u73b0\u6574\u4e2a\u7f51\u7ad9\u7684\u52a8\u9759\u5206\u79bb\uff0c\u5b9e\u73b0\u5982\u4e0b\u8981\u6c42\uff1a 1.\u524d\u7aefNginx\u6536\u5230\u9759\u6001\u8bf7\u6c42\uff0c\u76f4\u63a5\u4eceNFS\u4e2d\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002 2.\u524d\u7aefNginx\u6536\u5230\u52a8\u6001\u8bf7\u6c42\u8f6c\u4ea4\u7ed9\u901a\u8fc7FastCGI\u4ea4\u7ed9\u670d\u52a1\u5668\u5904\u7406\u3002 ----\u5982\u679c\u5f97\u5230\u9759\u6001\u7ed3\u679c\u76f4\u63a5\u4eceNFS\u53d6\u51fa\u7ed3\u679c\u4ea4\u7ed9Nginx\u7136\u540e\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002 ----\u5982\u679c\u9700\u8981\u6570\u636e\u5904\u7406\u670d\u52a1\u5668\u8fde\u63a5\u6570\u636e\u5e93\u540e\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9Nginx 3.\u524d\u7aefNginx\u6536\u5230\u56fe\u7247\u8bf7\u6c42\u4ee5.jpg\u3001.png\u3001.gif\u7b49\u8bf7\u6c42\u4ea4\u7ed9\u540e\u7aefImages\u670d\u52a1\u5668\u5904\u7406 1 2 3 location ~* \\.(jpg|gif)$ { # location\u5339\u914d\u5c06\u56fe\u7247\u4ea4\u7ed9Image\u5904\u7406 \u200b proxy_pass http://10.10.0.23:80; # Image\u670d\u52a1\u5668\u8981\u5f00\u542fweb\u670d\u52a1 \u200b } \u81f3\u6b64\u914d\u7f6e\u5c31\u5df2\u7ecf\u5b8c\u6210\u3002\u8fbe\u5230\u4e86\u56fe\u7247\u4ece\u56fe\u7247\u670d\u52a1\u5668\u8fd4\u56de\uff0c\u9759\u6001nginx\u76f4\u63a5\u8fd4\u56de\uff0c\u52a8\u6001\u4ea4\u7ed9\u540e\u7aef\u8fdb\u884c\u5904\u7406\u3002 \u603b\u7ed3 1.\u524d\u7aefNginx\u8981\u505a\u597dlocation\u5339\u914d\uff0c\u5c06 .php\u4e0e .jpg\u7b49\u8fdb\u884c\u53cd\u5411\u4ee3\u7406\u3002 2.\u540e\u7aefPHP\u670d\u52a1\u5668\u8981\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0cPHP\u81ea\u5e26\u914d\u7f6e\u6587\u4ef6\u53ea\u76d1\u542c\u672c\u5730\uff0c\u4e14\u53ea\u5141\u8bb8\u672c\u5730\u8bbf\u95ee 3.\u540e\u7aefImage\u670d\u52a1\u5668\uff0c\u4e0d\u8bba\u662fapache\u8fd8\u662fNginx\u8981\u5f00\u542fWEB\u670d\u52a1\u3002\u6839\u76ee\u5f55\u8981\u6307\u5411\u56fe\u7247\u6839\u76ee\u5f55\uff0c\u4e14\u6839\u76ee\u5f55\u4e0b\u7684\u56fe\u7247\u8981\u4e0e\u539f\u672c\u56fe\u7247\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u4e00\u81f4\u3002","title":"06Nginx\u5b9e\u73b0\u52a8\u9759\u5206\u79bb"},{"location":"Nginx/06Nginx%E5%AE%9E%E7%8E%B0%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/#nginx","text":"Nginx\u7684\u9759\u6001\u5904\u7406\u80fd\u529b\u5f88\u5f3a\uff0c\u4f46\u662f\u52a8\u6001\u5904\u7406\u80fd\u529b\u4e0d\u8db3\uff0c\u56e0\u6b64\uff0c\u5728\u4f01\u4e1a\u4e2d\u5e38\u7528\u52a8\u9759\u5206\u79bb\u6280\u672f\u3002\u52a8\u9759\u5206\u79bb\u6280\u672f\u5176\u5b9e\u662f\u91c7\u7528\u4ee3\u7406\u7684\u65b9\u5f0f\uff0c\u5728server{}\u6bb5\u4e2d\u52a0\u5165\u5e26\u6b63\u5219\u5339\u914d\u7684location\u6765\u6307\u5b9a\u5339\u914d\u9879\u9488\u5bf9\u670d\u52a1\u7684\u52a8\u9759\u5206\u79bb\uff1a \u9759\u6001\u9875\u9762\u4ea4\u7ed9Nginx\u5904\u7406\uff0c \u52a8\u6001\u9875\u9762\u4ea4\u7ed9\u670d\u52a1\u5668\u6216Apache\u5904\u7406\u3002\u5728Nginx\u7684\u914d\u7f6e\u4e2d\uff0c\u662f\u901a\u8fc7location\u914d\u7f6e\u6bb5\u914d\u5408\u6b63\u5219\u5339\u914d\u5b9e\u73b0\u9759\u6001\u4e0e\u52a8\u6001\u9875\u9762\u7684\u4e0d\u540c\u5904\u7406\u65b9\u5f0f\u3002 \u5b9e\u73b0\u6574\u4e2a\u7f51\u7ad9\u7684\u52a8\u9759\u5206\u79bb\uff0c\u5b9e\u73b0\u5982\u4e0b\u8981\u6c42\uff1a 1.\u524d\u7aefNginx\u6536\u5230\u9759\u6001\u8bf7\u6c42\uff0c\u76f4\u63a5\u4eceNFS\u4e2d\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002 2.\u524d\u7aefNginx\u6536\u5230\u52a8\u6001\u8bf7\u6c42\u8f6c\u4ea4\u7ed9\u901a\u8fc7FastCGI\u4ea4\u7ed9\u670d\u52a1\u5668\u5904\u7406\u3002 ----\u5982\u679c\u5f97\u5230\u9759\u6001\u7ed3\u679c\u76f4\u63a5\u4eceNFS\u53d6\u51fa\u7ed3\u679c\u4ea4\u7ed9Nginx\u7136\u540e\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002 ----\u5982\u679c\u9700\u8981\u6570\u636e\u5904\u7406\u670d\u52a1\u5668\u8fde\u63a5\u6570\u636e\u5e93\u540e\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9Nginx 3.\u524d\u7aefNginx\u6536\u5230\u56fe\u7247\u8bf7\u6c42\u4ee5.jpg\u3001.png\u3001.gif\u7b49\u8bf7\u6c42\u4ea4\u7ed9\u540e\u7aefImages\u670d\u52a1\u5668\u5904\u7406 1 2 3 location ~* \\.(jpg|gif)$ { # location\u5339\u914d\u5c06\u56fe\u7247\u4ea4\u7ed9Image\u5904\u7406 \u200b proxy_pass http://10.10.0.23:80; # Image\u670d\u52a1\u5668\u8981\u5f00\u542fweb\u670d\u52a1 \u200b } \u81f3\u6b64\u914d\u7f6e\u5c31\u5df2\u7ecf\u5b8c\u6210\u3002\u8fbe\u5230\u4e86\u56fe\u7247\u4ece\u56fe\u7247\u670d\u52a1\u5668\u8fd4\u56de\uff0c\u9759\u6001nginx\u76f4\u63a5\u8fd4\u56de\uff0c\u52a8\u6001\u4ea4\u7ed9\u540e\u7aef\u8fdb\u884c\u5904\u7406\u3002 \u603b\u7ed3 1.\u524d\u7aefNginx\u8981\u505a\u597dlocation\u5339\u914d\uff0c\u5c06 .php\u4e0e .jpg\u7b49\u8fdb\u884c\u53cd\u5411\u4ee3\u7406\u3002 2.\u540e\u7aefPHP\u670d\u52a1\u5668\u8981\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0cPHP\u81ea\u5e26\u914d\u7f6e\u6587\u4ef6\u53ea\u76d1\u542c\u672c\u5730\uff0c\u4e14\u53ea\u5141\u8bb8\u672c\u5730\u8bbf\u95ee 3.\u540e\u7aefImage\u670d\u52a1\u5668\uff0c\u4e0d\u8bba\u662fapache\u8fd8\u662fNginx\u8981\u5f00\u542fWEB\u670d\u52a1\u3002\u6839\u76ee\u5f55\u8981\u6307\u5411\u56fe\u7247\u6839\u76ee\u5f55\uff0c\u4e14\u6839\u76ee\u5f55\u4e0b\u7684\u56fe\u7247\u8981\u4e0e\u539f\u672c\u56fe\u7247\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u4e00\u81f4\u3002","title":"Nginx\u5b9e\u73b0\u52a8\u9759\u5206\u79bb"},{"location":"Nginx/07Nginx%E8%B0%83%E4%BC%98/","text":"Nginx \u6027\u80fd\u8c03\u4f18 \u65b9\u6848 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 #\u8bbe\u7f6e\u7528\u6237\u7684\u6743\u9650 root nobody \u6307\u5b9a \u7528\u6237\u540d\u865a\u62df\u673a\u5185\u7528\u6237 \u6216\u8005 Ip\u8bbf\u95ee #user nobody; #\u8bbe\u7f6e\u5de5\u4f5c\u8fdb\u7a0b\u6570 \u4e00\u822c\u4e3a Cpu \u6838\u5fc3*2 4*2 worker_processes 8; # \u65e5\u5fd7\u8f93\u51fa\u53c2\u6570 #error_log logs/error.log; #error_log logs/error.log notice; #error_log logs/error.log info; # \u8fdb\u7a0bID #pid logs/nginx.pid; events { #\u6307\u5b9a\u8fd0\u884c\u6a21\u578b use epoll; # \u5de5\u4f5c\u8fde\u63a5\u6570 \u9ed8\u8ba4512 \u6839\u636e\u81ea\u5df1\u7684\u60c5\u51b5\u8c03\u6574 worker_connections 1024; } #http\u6a21\u5757 http { # \u80fd\u591f\u652f\u6301\u7684\u7c7b\u578b \u5728 \u8fd9\u4e2a\u6587\u4ef6\u4e0b\u5199\u7740 mime.types include mime.types; # \u9ed8\u8ba4\u7684\u7c7b\u578b \u5728 application/octet-stream; default_type application/octet-stream; # \u65e5\u5fd7\u7684\u683c\u5f0f #log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' # '$status $body_bytes_sent \"$http_referer\" ' # '\"$http_user_agent\" \"$http_x_forwarded_for\"'; #\u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55 #access_log logs/access.log main; #\u542f\u52a8 \u53d1\u9001\u6587\u4ef6 sendfile on; # \u5f00\u542fTCP \u63a8\u9001 #tcp_nopush on; # \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 #keepalive_timeout 0; keepalive_timeout 65; # \u5f00\u542f\u538b\u7f29\u6587\u4ef6 #gzip on; # \u670d\u52a1 # \u670d\u52a1\u5206\u7ec4 \u53cd\u5411\u4ee3\u7406\u7684\u6838\u5fc3\u5173\u952e upstream tuling { # ip \u65b9\u5f0f \u6700\u5927\u5931\u8d253\u4e2a\u8fde\u63a5 \u95f4\u9694 30S \u6743\u91cd\u4e3a 5 server 127.0.0.1:8080 max_fails=3 fail_timeout=30s weight=5; #\u6839\u636eip \u5229\u7528Hash\u7b97\u6cd5\u51b3\u5b9a\u8bbf\u95ee\u54ea\u53f0\u673a\u5668 ip_hash; } server { listen 80; server_name localhost; #charset koi8-r; #\u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55 \u4ee5\u53ca\u4f4d\u7f6e #access_log logs/host.access.log main; # \u5339\u914d\u4f4d\u7f6e \u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f location / { # \u5bfb\u627e\u4f4d\u7f6e \u9ed8\u8ba4\u5728Nginx \u76ee\u5f55\u4e0b\u7684 \u7c7b\u578b root html; index index.html index.htm; proxy_pass http://127.0.0.1; } #\u9519\u8bef\u4fe1\u606f \u9875\u9762 #error_page 404 /404.html; #\u5c06\u670d\u52a1\u5668\u9519\u8bef\u9875\u91cd\u5b9a\u5411\u5230\u9759\u6001\u9875/50x.html # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } #\u5b9e\u4f8b \u5165 \u5c06\u8bbf\u95ee\u5c3e\u7f00\u4e3a \\.php \u8df3\u8f6c\u5230 127.0.0.1 # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \\.php$ { # proxy_pass http://127.0.0.1; #} #\u5c06PHP\u811a\u672c\u4f20\u9012\u7ed9\u6b63\u5728\u4fa6\u542c127.0.0.1:9000\u7684FastCGI\u670d\u52a1\u5668 # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php$ { # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #} #\u62d2\u7edd\u8bbf\u95ee.htaccess\u6587\u4ef6\uff0c\u5982\u679cApache\u7684\u6587\u6863\u6839 # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # #location ~ /\\.ht { # deny all; #} } # another virtual host using mix of IP-, name-, and port-based configuration # #server { # listen 8000; # listen somename:8080; # server_name somename alias another.alias; # location / { # root html; # index index.html index.htm; # } #} # HTTPS server # #server { # listen 443 ssl; # server_name localhost; # ssl_certificate cert.pem; # ssl_certificate_key cert.key; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 5m; # ssl_ciphers HIGH:!aNULL:!MD5; # ssl_prefer_server_ciphers on; # location / { # root html; # index index.html index.htm; # } #} }","title":"07Nginx\u8c03\u4f18"},{"location":"Nginx/07Nginx%E8%B0%83%E4%BC%98/#nginx","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 #\u8bbe\u7f6e\u7528\u6237\u7684\u6743\u9650 root nobody \u6307\u5b9a \u7528\u6237\u540d\u865a\u62df\u673a\u5185\u7528\u6237 \u6216\u8005 Ip\u8bbf\u95ee #user nobody; #\u8bbe\u7f6e\u5de5\u4f5c\u8fdb\u7a0b\u6570 \u4e00\u822c\u4e3a Cpu \u6838\u5fc3*2 4*2 worker_processes 8; # \u65e5\u5fd7\u8f93\u51fa\u53c2\u6570 #error_log logs/error.log; #error_log logs/error.log notice; #error_log logs/error.log info; # \u8fdb\u7a0bID #pid logs/nginx.pid; events { #\u6307\u5b9a\u8fd0\u884c\u6a21\u578b use epoll; # \u5de5\u4f5c\u8fde\u63a5\u6570 \u9ed8\u8ba4512 \u6839\u636e\u81ea\u5df1\u7684\u60c5\u51b5\u8c03\u6574 worker_connections 1024; } #http\u6a21\u5757 http { # \u80fd\u591f\u652f\u6301\u7684\u7c7b\u578b \u5728 \u8fd9\u4e2a\u6587\u4ef6\u4e0b\u5199\u7740 mime.types include mime.types; # \u9ed8\u8ba4\u7684\u7c7b\u578b \u5728 application/octet-stream; default_type application/octet-stream; # \u65e5\u5fd7\u7684\u683c\u5f0f #log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' # '$status $body_bytes_sent \"$http_referer\" ' # '\"$http_user_agent\" \"$http_x_forwarded_for\"'; #\u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55 #access_log logs/access.log main; #\u542f\u52a8 \u53d1\u9001\u6587\u4ef6 sendfile on; # \u5f00\u542fTCP \u63a8\u9001 #tcp_nopush on; # \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 #keepalive_timeout 0; keepalive_timeout 65; # \u5f00\u542f\u538b\u7f29\u6587\u4ef6 #gzip on; # \u670d\u52a1 # \u670d\u52a1\u5206\u7ec4 \u53cd\u5411\u4ee3\u7406\u7684\u6838\u5fc3\u5173\u952e upstream tuling { # ip \u65b9\u5f0f \u6700\u5927\u5931\u8d253\u4e2a\u8fde\u63a5 \u95f4\u9694 30S \u6743\u91cd\u4e3a 5 server 127.0.0.1:8080 max_fails=3 fail_timeout=30s weight=5; #\u6839\u636eip \u5229\u7528Hash\u7b97\u6cd5\u51b3\u5b9a\u8bbf\u95ee\u54ea\u53f0\u673a\u5668 ip_hash; } server { listen 80; server_name localhost; #charset koi8-r; #\u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55 \u4ee5\u53ca\u4f4d\u7f6e #access_log logs/host.access.log main; # \u5339\u914d\u4f4d\u7f6e \u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f location / { # \u5bfb\u627e\u4f4d\u7f6e \u9ed8\u8ba4\u5728Nginx \u76ee\u5f55\u4e0b\u7684 \u7c7b\u578b root html; index index.html index.htm; proxy_pass http://127.0.0.1; } #\u9519\u8bef\u4fe1\u606f \u9875\u9762 #error_page 404 /404.html; #\u5c06\u670d\u52a1\u5668\u9519\u8bef\u9875\u91cd\u5b9a\u5411\u5230\u9759\u6001\u9875/50x.html # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } #\u5b9e\u4f8b \u5165 \u5c06\u8bbf\u95ee\u5c3e\u7f00\u4e3a \\.php \u8df3\u8f6c\u5230 127.0.0.1 # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \\.php$ { # proxy_pass http://127.0.0.1; #} #\u5c06PHP\u811a\u672c\u4f20\u9012\u7ed9\u6b63\u5728\u4fa6\u542c127.0.0.1:9000\u7684FastCGI\u670d\u52a1\u5668 # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php$ { # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #} #\u62d2\u7edd\u8bbf\u95ee.htaccess\u6587\u4ef6\uff0c\u5982\u679cApache\u7684\u6587\u6863\u6839 # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # #location ~ /\\.ht { # deny all; #} } # another virtual host using mix of IP-, name-, and port-based configuration # #server { # listen 8000; # listen somename:8080; # server_name somename alias another.alias; # location / { # root html; # index index.html index.htm; # } #} # HTTPS server # #server { # listen 443 ssl; # server_name localhost; # ssl_certificate cert.pem; # ssl_certificate_key cert.key; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 5m; # ssl_ciphers HIGH:!aNULL:!MD5; # ssl_prefer_server_ciphers on; # location / { # root html; # index index.html index.htm; # } #} }","title":"Nginx \u6027\u80fd\u8c03\u4f18 \u65b9\u6848"},{"location":"Nginx/08Nginx%E9%95%9C%E5%83%8F%E6%9C%8D%E5%8A%A1%E5%99%A8/","text":"Nginx\u7684proxy_store\u4f5c\u7528\u662f\u76f4\u63a5\u628a\u9759\u6001\u6587\u4ef6\u5728\u672c\u5730\u786c\u76d8\u521b\u5efa\u5e76\u8bfb\u53d6\uff0c\u7c7b\u4f3c\u4e8e\u4e03\u725b\u6216\u8005\u53c8\u62cd\u8fd9\u6837\u7684\u955c\u50cfCDN\u529f\u80fd\uff0c\u9996\u6b21\u8bbf\u95ee\u4f1a\u81ea\u52a8\u83b7\u53d6\u6e90\u7ad9\u7684\u9759\u6001\u56fe\u7247\u7b49\u6587\u4ef6\uff0c\u4e4b\u540e\u7684\u8bbf\u95ee\u5c31\u662f\u76f4\u63a5\u4eceCDN\u670d\u52a1\u5668\u8bfb\u53d6\uff0c\u52a0\u5feb\u4e86\u901f\u5ea6\u3002 \u9700\u8981\u914d\u7f6e\u4e00\u4e0b\u53c2\u6570\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 #\u542f\u7528\u7f13\u5b58\u5230\u672c\u5730\u7684\u529f\u80fd proxy_store on; #\u8868\u793a\u7528\u6237\u8bfb\u5199\u6743\u9650\uff0c\u5982\u679c\u5728error\u4e2d\u62a5\u8def\u5f84\u4e0d\u5141\u8bb8\u8bbf\u95ee\u7684\u8bdd\u5c31\u7528\"chomod -R a+rw\"\u5c06\u4e0b\u9762\u914d\u7f6e\u7684\u8def\u5f84\u6539\u4e3a\u76f8\u5e94\u7684\u6743\u9650. proxy_store_access user:rw group:rw all:rw; #\u6b64\u5904\u4e3a\u6587\u4ef6\u7684\u7f13\u5b58\u8def\u5f84\uff0c\u8fd9\u4e2a\u8def\u5f84\u662f\u548curl\u4e2d\u7684\u6587\u4ef6\u8def\u5f84\u4e00\u81f4\u7684 proxy_temp_path \u7f13\u5b58\u76ee\u5f55; #\u5728\u4e0a\u9762\u7684\u914d\u7f6e\u4e4b\u540e\uff0c\u867d\u7136\u6587\u4ef6\u88ab\u7f13\u5b58\u5230\u4e86\u672c\u5730\u78c1\u76d8\u4e0a\uff0c\u4f46\u6bcf\u6b21\u8bf7\u6c42\u4ecd\u4f1a\u5411\u8fdc\u7aef\u62c9\u53d6\u6587\u4ef6\uff0c\u4e3a\u4e86\u907f\u514d\u53bb\u8fdc\u7aef\u62c9\u53d6\u6587\u4ef6\uff0c\u8fd8\u5fc5\u987b\u589e\u52a0\uff1a if ( !-e $request_filename) { proxy_pass http://192.168.10.10; } \u6ce8\uff1a\"!-e $request_filename\"\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5339\u914d\u7f13\u5b58\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u4e0e\u6e90\u6587\u4ef6\u662f\u5426\u5b58\u5728\u3002 \"http://192.168.10.10\" \u6e90\u670d\u52a1\u5668\u7684\u5730\u5740\uff0c\u9ed8\u8ba4\u7aef\u53e380\uff0c\u5982\u76d1\u542c\u5176\u4ed6\u7aef\u53e3\uff0c\u6b64\u5904\u8981\u6307\u51fa\uff0c\u4f8b\u59824000\u7aef\u53e3\uff0chttp://192.168.10.10:4000 \u6574\u4f53\u914d\u7f6e\u5982\u4e0b\uff08\u4fee\u6539nginx\u7684\u914d\u7f6e\u6587\u4ef6nginx.conf\uff09\uff1a 1 2 3 4 5 6 7 8 9 10 11 location / { //\u8fd9\u91cc\u7684location\u662f\u8981\u6362\u6210\u81ea\u5df1\u7ecf\u8fc7\u7cbe\u786e\u5339\u914d\u7684location\uff0c\u6bd4\u5982\u8981\u7f13\u5b58\u56fe\u7247\u8981\u5199\u6210 \"location ~*\\.(gif|jpg|jepg|png|bmp)${\" expires 3d; //\u6240\u6709\u94fe\u63a5\uff0c\u6d4f\u89c8\u5668\u7f13\u5b58\u8fc7\u671f\u65f6\u95f4\u4e3a3\u5929 proxy_set_header Accept-Encoding ''; root /home/mpeg/nginx; //\u6b64\u76ee\u5f55\u4e3a\u670d\u52a1\u5668\u7684\u6839\u76ee\u5f55\uff0c\u4e0b\u9762\u7684if\u8bed\u53e5\u5c31\u662f\u5224\u65ad\u6b64\u76ee\u5f55\u4e0b\u662f\u5426\u6709\u54cd\u5e94\u7684\u6587\u4ef6 proxy_store on; //\u8868\u793a\u5f00\u542f\u7f13\u5b58 proxy_store_access user:rw group:rw all:rw;//\u8868\u793a\u7528\u6237\u8bfb\u5199\u6743\u9650 proxy_temp_path /home/mpeg/nginx; //\u6b64\u5904\u4e3a\u6587\u4ef6\u7684\u7f13\u5b58\u8def\u5f84\uff0c\u8fd9\u4e2a\u8def\u5f84\u662f\u548curl\u4e2d\u7684\u6587\u4ef6\u8def\u5f84\u4e00\u81f4\u7684 if ( !-e $request_filename) { proxy_pass http://192.168.0.1; //\u6b64\u5904\u4e3a\u8981\u88ab\u4ee3\u7406\u7684\u670d\u52a1\u5668\u7684\u5730\u5740 } }","title":"08Nginx\u955c\u50cf\u670d\u52a1\u5668"},{"location":"Nginx/09Nginx%E7%83%AD%E5%A4%87%E9%83%A8%E7%BD%B2/","text":"nginx \u70ed\u5907\u90e8\u7f72 \u53cc\u4e3b\u6a21\u5f0f \u7528nginx\u505a\u8d1f\u8f7d\u5747\u8861\uff0c\u4f5c\u4e3a\u67b6\u6784\u7684\u6700\u524d\u7aef\u6216\u4e2d\u95f4\u5c42\uff0c\u968f\u7740\u65e5\u76ca\u589e\u957f\u7684\u8bbf\u95ee\u91cf\uff0c\u9700\u8981\u7ed9\u8d1f\u8f7d\u5747\u8861\u505a\u9ad8\u53ef\u7528\u67b6\u6784\uff0c\u5229\u7528keepalived\u89e3\u51b3\u5355\u70b9\u98ce\u9669\uff0c\u4e00\u65e6 nginx\u5b95\u673a\u80fd\u5feb\u901f\u5207\u6362\u5230\u5907\u4efd\u670d\u52a1\u5668 \u5b89\u88c5 keepalived 1 yum install nginx keepalived pcre-devel -y \u914d\u7f6ekeepalived\u9ad8\u53ef\u7528\uff0c\u4fee\u6539\u4e3b\u914d\u7f6e\u6587\u4ef6 \u4e24\u53f0\u5747\u5907\u4efd 1 cp /etc/keepalived/keepalived.conf keepalived.conf.bak 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 global_defs { vrrp_garp_interval 0 vrrp_gna_interval 0 } vrrp_instance VI_1 { state MASTER #\u5907\u7528\u673a \u4fee\u6539\u4e3a BACKUP interface enp0s8 virtual_router_id 50 priority 100 # \u53c2\u6570 \u5907\u7528\u6bd4\u4e3b\u673a\u4f4e\u5c31\u53ef\u4ee5\u4e86 advert_int 1 authentication { auth_type PASS auth_pass 1111 } virtual_ipaddress { 192.168.56.120 } } ~ \u542f\u52a8 \u4e24\u53f0\u7684nginx 1 systemctl start nginx \u542f\u52a8 keepalived 1 service keepalived start \u68c0\u67e5\u4e0b\u72b6\u6001 \u68c0\u67e5\u4e0bIP \u68c0\u67e5\u9875\u9762\u8bbf\u95ee","title":"09Nginx\u70ed\u5907\u90e8\u7f72"},{"location":"Nginx/09Nginx%E7%83%AD%E5%A4%87%E9%83%A8%E7%BD%B2/#keepalived","text":"1 yum install nginx keepalived pcre-devel -y","title":"\u5b89\u88c5 keepalived"},{"location":"Nginx/09Nginx%E7%83%AD%E5%A4%87%E9%83%A8%E7%BD%B2/#keepalived_1","text":"\u4e24\u53f0\u5747\u5907\u4efd 1 cp /etc/keepalived/keepalived.conf keepalived.conf.bak 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 global_defs { vrrp_garp_interval 0 vrrp_gna_interval 0 } vrrp_instance VI_1 { state MASTER #\u5907\u7528\u673a \u4fee\u6539\u4e3a BACKUP interface enp0s8 virtual_router_id 50 priority 100 # \u53c2\u6570 \u5907\u7528\u6bd4\u4e3b\u673a\u4f4e\u5c31\u53ef\u4ee5\u4e86 advert_int 1 authentication { auth_type PASS auth_pass 1111 } virtual_ipaddress { 192.168.56.120 } } ~ \u542f\u52a8 \u4e24\u53f0\u7684nginx 1 systemctl start nginx \u542f\u52a8 keepalived 1 service keepalived start \u68c0\u67e5\u4e0b\u72b6\u6001 \u68c0\u67e5\u4e0bIP \u68c0\u67e5\u9875\u9762\u8bbf\u95ee","title":"\u914d\u7f6ekeepalived\u9ad8\u53ef\u7528\uff0c\u4fee\u6539\u4e3b\u914d\u7f6e\u6587\u4ef6"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/","text":"ngx_http_auth_basic_module\u5141\u8bb8\u901a\u8fc7\u4f7f\u7528\"HTTP\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\"\u534f\u8bae\u9a8c\u8bc1\u7528\u6237\u540d\u548c\u5bc6\u7801\u6765\u9650\u5236\u5bf9\u8d44\u6e90\u7684\u8bbf\u95ee\u3002\u5766\u767d\u70b9\u6765\u8bf4\uff0c\u5982\u679c\u60f3\u5bf9\u67d0\u76ee\u5f55\u8bbe\u7f6e\u8bbf\u95ee\u6743\u9650\uff0c\u53ef\u4ee5\u4f7f\u7528ngx_http_auth_basic_module\u63d0\u4f9b\u7684\u529f\u80fd\u3002 \u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u6a21\u5757 \u8bed\u6cd5\u53ca\u8bed\u4e49 auth_basic \u8bed\u6cd5\uff1aauth_basic string | off; \u8bed\u4e49\uff1a\u4f7f\u7528\"HTTP\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\"\u534f\u8bae\u542f\u7528\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u9a8c\u8bc1\u3002\u6307\u5b9a\u7684\u53c2\u6570\u7528\u4f5crealm\uff0c\u53c2\u6570\u503c\u53ef\u4ee5\u5305\u542b\u53d8\u91cf\uff081.3.10\u30011.2.7\uff09\u3002\u8bbe\u7f6e\u7279\u6b8a\u503coff\u5c06\u5173\u95ed\u8eab\u4efd\u8ba4\u8bc1\u3002 \u53c2\u6570\u503c\u4f1a\u4f5c\u4e3a\u63d0\u793a\u663e\u793a\u5728\u8ba4\u8bc1\u5bf9\u8bdd\u6846\u6807\u9898\u680f\u4e2d\u3002 auth_basic_user_file \u8bed\u6cd5\uff1aauth_basic_user_file file; \u8bed\u4e49\uff1a \u6307\u5b9a\u5b58\u50a8\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u6587\u4ef6\u683c\u5f0f\uff1a 1 2 3 4 5 # comment name1:password1 name2:password2:comment name3:password3 1234 \u5bc6\u7801\u652f\u6301\u4ee5\u4e0b\u7c7b\u578b\uff1a \u00b7 \u4f7f\u7528crypt()\u51fd\u6570\u52a0\u5bc6\u3002\u53ef\u4ee5\u4f7f\u7528Apache Http Server\u53d1\u884c\u7248\u4e2d\u7684\u201chtpasswd\u201d\u5b9e\u7528\u7a0b\u5e8f\u6216\u201copenssl passwd\u201d\u547d\u4ee4\u751f\u6210\u3002 \u00b7 \u4f7f\u7528\u57fa\u4e8eMD5\u7684\u5bc6\u7801\u7b97\u6cd5\uff08apr1\uff09\u7684Apache\u53d8\u4f53\u8fdb\u884c\u6563\u5217\uff1b\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u5de5\u5177\u751f\u6210\u3002 \u00b7 \u7531RFC2307\u4e2d\u63cf\u8ff0\u7684\"{scheme}data\"\u8bed\u6cd5\uff081.0.3+\uff09\u6307\u5b9a\u3002\u5f53\u524d\u5b9e\u73b0\u65b9\u6848\u5305\u62ec\u6587\u672c\uff08\u7528\u4e8e\u793a\u4f8b\uff0c\u4e0d\u5e94\u4f7f\u7528\uff09\u3001SHA(1.3.13)(SHA-1\u54c8\u5e0c\u6587\u672c\uff0c\u4e0d\u5e94\u4f7f\u7528)\u3001SSHA\uff08SHA-1\u52a0\u76d0\u54c8\u5e0c\uff0c\u88abOpenLDAP\u3001Dovecot\u7b49\u8f6f\u4ef6\u5305\u4f7f\u7528\uff09\u3002 htpasswd \u751f\u6210\u5bc6\u7801\u6587\u4ef6 htpasswd\u662f\u5f00\u6e90Http\u670d\u52a1\u5668Apache Http Server\u7684\u4e00\u4e2a\u547d\u4ee4\u5de5\u5177\uff0c\u6240\u4ee5\u672c\u673a\u5982\u679c\u6ca1\u6709\u8be5\u547d\u4ee4\uff0c\u9700\u8981\u5148\u5b89\u88c5\u3002 1 2 yum install httpd-tools -y 1 htpasswd\u6307\u4ee4\u7528\u6765\u521b\u5efa\u548c\u66f4\u65b0\u7528\u4e8e\u57fa\u672c\u8ba4\u8bc1\u7684\u7528\u6237\u8ba4\u8bc1\u5bc6\u7801\u6587\u4ef6\u3002htpasswd\u6307\u4ee4\u5fc5\u987b\u5bf9\u5bc6\u7801\u6587\u4ef6\u6709\u8bfb\u5199\u6743\u9650\uff0c\u5426\u5219\u4f1a\u8fd4\u56de\u9519\u8bef\u7801\u3002 htpasswd\u53c2\u6570\u5217\u8868\uff1a \u53c2\u6570 \u53c2\u6570\u8bf4\u660e -b \u5bc6\u7801\u76f4\u63a5\u5199\u5728\u547d\u4ee4\u884c\u4e2d\uff0c\u800c\u975e\u4f7f\u7528\u63d0\u793a\u8f93\u5165\u7684\u65b9\u5f0f -c \u521b\u5efa\u5bc6\u7801\u6587\u4ef6\uff0c\u82e5\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u8986\u76d6\u6587\u4ef6\u91cd\u65b0\u5199\u5165 -n \u4e0d\u66f4\u65b0\u5bc6\u7801\u6587\u4ef6\uff0c\u5c06\u7528\u6237\u540d\u5bc6\u7801\u8fdb\u884c\u6807\u51c6\u8f93\u51fa -m \u4f7f\u7528MD5\u7b97\u6cd5\u5bf9\u5bc6\u7801\u8fdb\u884c\u5904\u7406 -d \u4f7f\u7528CRYPT\u7b97\u6cd5\u5bf9\u5bc6\u7801\u8fdb\u884c\u5904\u7406 -s \u4f7f\u7528SHA\u7b97\u6cd5\u5bf9\u5bc6\u7801\u8fdb\u884c\u5904\u7406 -p \u4e0d\u5bf9\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\u5904\u7406\uff0c\u4f7f\u7528\u660e\u6587\u5bc6\u7801 -D \u4ece\u5bc6\u7801\u6587\u4ef6\u4e2d\u5220\u9664\u6307\u5b9a\u7528\u6237\u8bb0\u5f55 htpasswd\u751f\u6210Nginx\u5bc6\u7801\u6587\u4ef6\uff1a 1 2 htpasswd -bc /usr/local/nginx/conf/nginxpasswd Securitit 000000 1 \u6b64\u65f6\u67e5\u770b/usr/local/nginx/conf/nginxpasswd\u6587\u4ef6\uff1a 1 2 Securitit: $apr1$nuJ /GIEt $nH8z8kk0EFVq5oo9 .qRzI/ 1 \u82e5\u8981\u5728\u5df2\u6709Nginx\u5bc6\u7801\u6587\u4ef6\u4e2d\u8ffd\u52a0\u7528\u6237\uff0c\u5219\u65e0\u9700-c\u53c2\u6570\uff1a 1 2 htpasswd -b /usr/local/nginx/conf/nginxpasswd Csdn 111111 1 \u6b64\u65f6\u67e5\u770b/usr/local/nginx/conf/nginxpasswd\u6587\u4ef6\uff1a 1 2 3 Securitit: $apr1$nuJ /GIEt $nH8z8kk0EFVq5oo9 .qRzI/ Csdn: $apr1$1 IWZsiJl $q1K5CwAboegG1LO18Jdta0 12 \u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u6a21\u5757 \u793a\u4f8b \u57fa\u4e8e\u9ed8\u8ba4nginx.conf\u8fdb\u884c\u4fee\u6539\uff0c\u4f7f\u7528\u4e0a\u9762\u751f\u6210\u7684\u5bc6\u7801\u6587\u4ef6\u8fdb\u884c\u8ba4\u8bc1\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 worker_processes 1 ; error_log logs/error.log ; events { worker_connections 1024 ; } http { include mime.types ; default_type application/octet-stream ; sendfile on ; keepalive_timeout 65 ; server { listen 80 ; server_name securitit ; location / { auth_basic \"Please Input UserName And Password!\" ; auth_basic_user_file nginxpasswd ; } } } \u901a\u8fc7./nginx -s reload\u5e73\u6ed1\u91cd\u542fNginx\uff0c\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95eehttp://192.168.20.9/\uff0c\u4f1a\u51fa\u73b0\u5982\u4e0b\u7684\u6548\u679c\uff1a \u6ce8\uff1a\u56fe\u6807\u7ea2\u8272\u6807\u8bb0\u7684\u5373\u662fauth_basic\u914d\u7f6e\u7684\u53c2\u6570\u503c\u3002 \u6b64\u65f6\uff0c\u9700\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\u8bbf\u95ee\u8d44\u6e90\uff0c\u82e5\u70b9\u51fb\"\u53d6\u6d88\"\uff0c\u5219\u4f1a\u63d0\u793a\u8bbf\u95ee\u53d7\u9650\uff1a \u8f93\u5165\u6b63\u786e\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u53ef\u4ee5\u6b63\u786e\u8bbf\u95ee\u76ee\u6807\u8d44\u6e90\uff1a \u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u6a21\u5757 \u76ee\u5f55\u68c0\u7d22\u793a\u4f8b \u53c2\u7167 Nginx \u76ee\u5f55\u6d4f\u89c8\u6a21\u5757 \u4e2d\u6587\u4e71\u7801 \u8bbf\u95ee\u8ba4\u8bc1 ngx_http_autoindex_module \uff0c\u8fdb\u884c\u914d\u7f6e\uff0cNginx\u53ef\u4ee5\u8fdb\u884c\u76ee\u5f55\u68c0\u7d22\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u76ee\u5f55\uff0c\u8bbe\u7f6e\u4e0d\u540c\u7684\u6743\u9650\uff0c\u5b9e\u73b0\u8d44\u6e90\u8bbf\u95ee\u63a7\u5236\u3002 \u8bbf\u95ee\u65f6\uff0c\u8fdb\u884c\u8eab\u4efd\u8ba4\u8bc1\uff1a \u8eab\u4efd\u8ba4\u8bc1\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5bf9\u5e94\u7684\u76ee\u5f55\u53ca\u8d44\u6e90\uff1a \u6b64\u65f6\uff0c\u5bf9\u4e8e\u76ee\u5f55\u7684\u5206\u5c42\u3001\u5206\u7c7b\u3001\u6743\u9650\u5206\u79bb\u5c31\u663e\u5f97\u5f88\u91cd\u8981\u4e86\u3002 \u603b\u7ed3 \u5e94\u7528\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u4e8e\u76ee\u5f55\u7684\u8bbf\u95ee\u6743\u9650\u8bbe\u7f6e\u540c\u6837\u91cd\u8981\uff0c\u4f46\u662f\u4e00\u822c\u4e0d\u4f1a\u4f7f\u7528\"HTTP\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\"\u8fd9\u79cd\u65b9\u5f0f\u3002\u9996\u5148\uff0c\u9762\u5bf9\u5927\u4f17\u7528\u6237\uff0c\u5176\u8868\u73b0\u5f62\u5f0f\u663e\u5f97\u5f88\u4e0d\u53cb\u597d\uff0c\u4e0e\u73b0\u4ee3Web UI\u7684\u5bcc\u8868\u73b0\u6280\u672f\u76f8\u6bd4\uff0c\u8fc7\u4e8e\u5355\u8584\u3002\u518d\u8005\uff0c\u4f7f\u7528\u5bc6\u7801\u6587\u4ef6\u7684\u65b9\u5f0f\u7ba1\u7406\u6743\u9650\uff0c\u8fc7\u4e8e\u7b28\u91cd\uff0c\u5f53\u5f85\u7ba1\u7406\u7684\u6743\u9650\u4f53\u91cf\u8fc7\u5927\u65f6\uff0c\u4f1a\u9020\u6210\u5f88\u5927\u7684\u4e0d\u53d8\u3002","title":"10Nginx\u5b89\u5168\u8ba4\u8bc1"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/#_1","text":"","title":"\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u6a21\u5757 \u8bed\u6cd5\u53ca\u8bed\u4e49"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/#auth_basic","text":"\u8bed\u6cd5\uff1aauth_basic string | off; \u8bed\u4e49\uff1a\u4f7f\u7528\"HTTP\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\"\u534f\u8bae\u542f\u7528\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u9a8c\u8bc1\u3002\u6307\u5b9a\u7684\u53c2\u6570\u7528\u4f5crealm\uff0c\u53c2\u6570\u503c\u53ef\u4ee5\u5305\u542b\u53d8\u91cf\uff081.3.10\u30011.2.7\uff09\u3002\u8bbe\u7f6e\u7279\u6b8a\u503coff\u5c06\u5173\u95ed\u8eab\u4efd\u8ba4\u8bc1\u3002 \u53c2\u6570\u503c\u4f1a\u4f5c\u4e3a\u63d0\u793a\u663e\u793a\u5728\u8ba4\u8bc1\u5bf9\u8bdd\u6846\u6807\u9898\u680f\u4e2d\u3002","title":"auth_basic"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/#auth_basic_user_file","text":"\u8bed\u6cd5\uff1aauth_basic_user_file file; \u8bed\u4e49\uff1a \u6307\u5b9a\u5b58\u50a8\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u6587\u4ef6\u683c\u5f0f\uff1a 1 2 3 4 5 # comment name1:password1 name2:password2:comment name3:password3 1234 \u5bc6\u7801\u652f\u6301\u4ee5\u4e0b\u7c7b\u578b\uff1a \u00b7 \u4f7f\u7528crypt()\u51fd\u6570\u52a0\u5bc6\u3002\u53ef\u4ee5\u4f7f\u7528Apache Http Server\u53d1\u884c\u7248\u4e2d\u7684\u201chtpasswd\u201d\u5b9e\u7528\u7a0b\u5e8f\u6216\u201copenssl passwd\u201d\u547d\u4ee4\u751f\u6210\u3002 \u00b7 \u4f7f\u7528\u57fa\u4e8eMD5\u7684\u5bc6\u7801\u7b97\u6cd5\uff08apr1\uff09\u7684Apache\u53d8\u4f53\u8fdb\u884c\u6563\u5217\uff1b\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u5de5\u5177\u751f\u6210\u3002 \u00b7 \u7531RFC2307\u4e2d\u63cf\u8ff0\u7684\"{scheme}data\"\u8bed\u6cd5\uff081.0.3+\uff09\u6307\u5b9a\u3002\u5f53\u524d\u5b9e\u73b0\u65b9\u6848\u5305\u62ec\u6587\u672c\uff08\u7528\u4e8e\u793a\u4f8b\uff0c\u4e0d\u5e94\u4f7f\u7528\uff09\u3001SHA(1.3.13)(SHA-1\u54c8\u5e0c\u6587\u672c\uff0c\u4e0d\u5e94\u4f7f\u7528)\u3001SSHA\uff08SHA-1\u52a0\u76d0\u54c8\u5e0c\uff0c\u88abOpenLDAP\u3001Dovecot\u7b49\u8f6f\u4ef6\u5305\u4f7f\u7528\uff09\u3002","title":"auth_basic_user_file"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/#htpasswd","text":"htpasswd\u662f\u5f00\u6e90Http\u670d\u52a1\u5668Apache Http Server\u7684\u4e00\u4e2a\u547d\u4ee4\u5de5\u5177\uff0c\u6240\u4ee5\u672c\u673a\u5982\u679c\u6ca1\u6709\u8be5\u547d\u4ee4\uff0c\u9700\u8981\u5148\u5b89\u88c5\u3002 1 2 yum install httpd-tools -y 1 htpasswd\u6307\u4ee4\u7528\u6765\u521b\u5efa\u548c\u66f4\u65b0\u7528\u4e8e\u57fa\u672c\u8ba4\u8bc1\u7684\u7528\u6237\u8ba4\u8bc1\u5bc6\u7801\u6587\u4ef6\u3002htpasswd\u6307\u4ee4\u5fc5\u987b\u5bf9\u5bc6\u7801\u6587\u4ef6\u6709\u8bfb\u5199\u6743\u9650\uff0c\u5426\u5219\u4f1a\u8fd4\u56de\u9519\u8bef\u7801\u3002","title":"htpasswd \u751f\u6210\u5bc6\u7801\u6587\u4ef6"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/#htpasswd_1","text":"\u53c2\u6570 \u53c2\u6570\u8bf4\u660e -b \u5bc6\u7801\u76f4\u63a5\u5199\u5728\u547d\u4ee4\u884c\u4e2d\uff0c\u800c\u975e\u4f7f\u7528\u63d0\u793a\u8f93\u5165\u7684\u65b9\u5f0f -c \u521b\u5efa\u5bc6\u7801\u6587\u4ef6\uff0c\u82e5\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u8986\u76d6\u6587\u4ef6\u91cd\u65b0\u5199\u5165 -n \u4e0d\u66f4\u65b0\u5bc6\u7801\u6587\u4ef6\uff0c\u5c06\u7528\u6237\u540d\u5bc6\u7801\u8fdb\u884c\u6807\u51c6\u8f93\u51fa -m \u4f7f\u7528MD5\u7b97\u6cd5\u5bf9\u5bc6\u7801\u8fdb\u884c\u5904\u7406 -d \u4f7f\u7528CRYPT\u7b97\u6cd5\u5bf9\u5bc6\u7801\u8fdb\u884c\u5904\u7406 -s \u4f7f\u7528SHA\u7b97\u6cd5\u5bf9\u5bc6\u7801\u8fdb\u884c\u5904\u7406 -p \u4e0d\u5bf9\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\u5904\u7406\uff0c\u4f7f\u7528\u660e\u6587\u5bc6\u7801 -D \u4ece\u5bc6\u7801\u6587\u4ef6\u4e2d\u5220\u9664\u6307\u5b9a\u7528\u6237\u8bb0\u5f55 htpasswd\u751f\u6210Nginx\u5bc6\u7801\u6587\u4ef6\uff1a 1 2 htpasswd -bc /usr/local/nginx/conf/nginxpasswd Securitit 000000 1 \u6b64\u65f6\u67e5\u770b/usr/local/nginx/conf/nginxpasswd\u6587\u4ef6\uff1a 1 2 Securitit: $apr1$nuJ /GIEt $nH8z8kk0EFVq5oo9 .qRzI/ 1 \u82e5\u8981\u5728\u5df2\u6709Nginx\u5bc6\u7801\u6587\u4ef6\u4e2d\u8ffd\u52a0\u7528\u6237\uff0c\u5219\u65e0\u9700-c\u53c2\u6570\uff1a 1 2 htpasswd -b /usr/local/nginx/conf/nginxpasswd Csdn 111111 1 \u6b64\u65f6\u67e5\u770b/usr/local/nginx/conf/nginxpasswd\u6587\u4ef6\uff1a 1 2 3 Securitit: $apr1$nuJ /GIEt $nH8z8kk0EFVq5oo9 .qRzI/ Csdn: $apr1$1 IWZsiJl $q1K5CwAboegG1LO18Jdta0 12","title":"htpasswd\u53c2\u6570\u5217\u8868\uff1a"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/#_2","text":"\u57fa\u4e8e\u9ed8\u8ba4nginx.conf\u8fdb\u884c\u4fee\u6539\uff0c\u4f7f\u7528\u4e0a\u9762\u751f\u6210\u7684\u5bc6\u7801\u6587\u4ef6\u8fdb\u884c\u8ba4\u8bc1\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 worker_processes 1 ; error_log logs/error.log ; events { worker_connections 1024 ; } http { include mime.types ; default_type application/octet-stream ; sendfile on ; keepalive_timeout 65 ; server { listen 80 ; server_name securitit ; location / { auth_basic \"Please Input UserName And Password!\" ; auth_basic_user_file nginxpasswd ; } } } \u901a\u8fc7./nginx -s reload\u5e73\u6ed1\u91cd\u542fNginx\uff0c\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95eehttp://192.168.20.9/\uff0c\u4f1a\u51fa\u73b0\u5982\u4e0b\u7684\u6548\u679c\uff1a \u6ce8\uff1a\u56fe\u6807\u7ea2\u8272\u6807\u8bb0\u7684\u5373\u662fauth_basic\u914d\u7f6e\u7684\u53c2\u6570\u503c\u3002 \u6b64\u65f6\uff0c\u9700\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\u8bbf\u95ee\u8d44\u6e90\uff0c\u82e5\u70b9\u51fb\"\u53d6\u6d88\"\uff0c\u5219\u4f1a\u63d0\u793a\u8bbf\u95ee\u53d7\u9650\uff1a \u8f93\u5165\u6b63\u786e\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u53ef\u4ee5\u6b63\u786e\u8bbf\u95ee\u76ee\u6807\u8d44\u6e90\uff1a","title":"\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u6a21\u5757 \u793a\u4f8b"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/#_3","text":"\u53c2\u7167 Nginx \u76ee\u5f55\u6d4f\u89c8\u6a21\u5757 \u4e2d\u6587\u4e71\u7801 \u8bbf\u95ee\u8ba4\u8bc1 ngx_http_autoindex_module \uff0c\u8fdb\u884c\u914d\u7f6e\uff0cNginx\u53ef\u4ee5\u8fdb\u884c\u76ee\u5f55\u68c0\u7d22\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u76ee\u5f55\uff0c\u8bbe\u7f6e\u4e0d\u540c\u7684\u6743\u9650\uff0c\u5b9e\u73b0\u8d44\u6e90\u8bbf\u95ee\u63a7\u5236\u3002 \u8bbf\u95ee\u65f6\uff0c\u8fdb\u884c\u8eab\u4efd\u8ba4\u8bc1\uff1a \u8eab\u4efd\u8ba4\u8bc1\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5bf9\u5e94\u7684\u76ee\u5f55\u53ca\u8d44\u6e90\uff1a \u6b64\u65f6\uff0c\u5bf9\u4e8e\u76ee\u5f55\u7684\u5206\u5c42\u3001\u5206\u7c7b\u3001\u6743\u9650\u5206\u79bb\u5c31\u663e\u5f97\u5f88\u91cd\u8981\u4e86\u3002","title":"\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u6a21\u5757 \u76ee\u5f55\u68c0\u7d22\u793a\u4f8b"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/#_4","text":"\u5e94\u7528\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u4e8e\u76ee\u5f55\u7684\u8bbf\u95ee\u6743\u9650\u8bbe\u7f6e\u540c\u6837\u91cd\u8981\uff0c\u4f46\u662f\u4e00\u822c\u4e0d\u4f1a\u4f7f\u7528\"HTTP\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\"\u8fd9\u79cd\u65b9\u5f0f\u3002\u9996\u5148\uff0c\u9762\u5bf9\u5927\u4f17\u7528\u6237\uff0c\u5176\u8868\u73b0\u5f62\u5f0f\u663e\u5f97\u5f88\u4e0d\u53cb\u597d\uff0c\u4e0e\u73b0\u4ee3Web UI\u7684\u5bcc\u8868\u73b0\u6280\u672f\u76f8\u6bd4\uff0c\u8fc7\u4e8e\u5355\u8584\u3002\u518d\u8005\uff0c\u4f7f\u7528\u5bc6\u7801\u6587\u4ef6\u7684\u65b9\u5f0f\u7ba1\u7406\u6743\u9650\uff0c\u8fc7\u4e8e\u7b28\u91cd\uff0c\u5f53\u5f85\u7ba1\u7406\u7684\u6743\u9650\u4f53\u91cf\u8fc7\u5927\u65f6\uff0c\u4f1a\u9020\u6210\u5f88\u5927\u7684\u4e0d\u53d8\u3002","title":"\u603b\u7ed3"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/","text":"Redis\u662f\u5355\u7ebf\u7a0b\u8fd8\u662f\u591a\u7ebf\u7a0b Redis\u5355\u7ebf\u7a0b\u4e3a\u4ec0\u4e48\u8fd8\u80fd\u8fd9\u4e48\u5feb Redis\u5e95\u5c42\u6570\u636e\u662f\u5982\u4f55\u7528\u8df3\u8868\u6765\u5b58\u50a8\u7684 Redis Key\u8fc7\u671f\u4e86\u4e3a\u4ec0\u4e48\u5185\u5b58\u6ca1\u91ca\u653e Redis Key\u6ca1\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\u4e3a\u4ec0\u4e48\u88abRedis\u4e3b\u52a8\u5220\u9664\u4e86 Redis\u6dd8\u6c70Key\u7684\u7b97\u6cd5LRU\u4e0eLFU\u533a\u522b \u5220\u9664Key\u7684\u547d\u4ee4\u4f1a\u963b\u585eRedis\u5417 \u5220\u9664\u5355\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684key\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3ao(1) \u5220\u9664\u5355\u4e2a\u5217\u8868\u3001\u96c6\u5408\u3001\u6709\u5e8f\u96c6\u5408\u6216\u54c8\u5e0c\u8868\u7c7b\u578b\u7684key\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(M)\uff0cM\u4e3a\u4ee5\u4e0a\u6570\u636e\u7ed3\u6784\u5185\u7684\u5143\u7d20\u6570\u636e Redis\u4e3b\u4ece\u3001\u54e8\u5175\u3001\u96c6\u7fa4\u67b6\u6784\u4f18\u7f3a\u70b9\u6bd4\u8f83 Redis\u96c6\u7fa4\u6570\u636ehash\u5206\u7247\u7b97\u6cd5\u662f\u600e\u4e48\u56de\u4e8b Redis\u6267\u884c\u547d\u4ee4\u7adf\u7136\u6709\u6b7b\u5faa\u73af\u963b\u585eBug \u4e00\u6b21\u7ebf\u4e0a\u4e8b\u6545\uff0cRedis\u4e3b\u4ece\u5207\u6362\u5bfc\u81f4\u4e86\u7f13\u5b58\u96ea\u5d29 Redis\u6301\u4e45\u5316RDB\u3001AOF\u3001\u6df7\u5408\u6301\u4e45\u5316\u662f\u600e\u4e48\u56de\u4e8b \u7ebf\u4e0aRedis\u6301\u4e45\u5316\u7b56\u7565\u4e00\u822c\u5982\u4f55\u8bbe\u7f6e \u5982\u679c\u5bf9\u6027\u80fd\u8981\u6c42\u8f83\u9ad8\uff0c\u5728Master\u6700\u597d\u4e0d\u8981\u505a\u6301\u4e45\u5316\uff0c\u53ef\u4ee5\u5728\u67d0\u4e2aSalve\u5f00\u542fAOF\u5907\u4efd\u6570\u636e\uff0c\u7b56\u7565\u8bbe\u7f6e\u4e3a\u6bcf\u79d2\u540c\u6b65\u4e00\u6b21\u5373\u53ef\u3002 \u4e00\u6b21\u7ebf\u4e0a\u4e8b\u6545\uff0cRedis\u4e3b\u8282\u70b9\u5b95\u673a\u5bfc\u81f4\u6570\u636e\u5168\u90e8\u4e22\u5931 Redis\u7ebf\u4e0a\u6570\u636e\u5982\u4f55\u5907\u4efd Redis\u4e3b\u4ece\u590d\u5236\u98ce\u66b4\u662f\u600e\u4e48\u56de\u4e8b Redis\u96c6\u7fa4\u7f51\u7edc\u6296\u52a8\u5bfc\u81f4\u9891\u7e41\u4e3b\u4ece\u5207\u6362\u600e\u4e48\u5904\u7406 Redis\u96c6\u7fa4\u4e3a\u4ec0\u4e48\u81f3\u5c11\u9700\u8981\u4e09\u4e2amaster\u8282\u70b9 Redis\u96c6\u7fa4\u4e3a\u4ec0\u4e48\u63a8\u8350\u5947\u6570\u4e2a\u8282\u70b9 Redis\u96c6\u7fa4\u652f\u6301\u6279\u91cf\u64cd\u4f5c\u547d\u4ee4\u5417","title":"Redis\u9762\u8bd5\u7a81\u51fb"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redis","text":"","title":"Redis\u662f\u5355\u7ebf\u7a0b\u8fd8\u662f\u591a\u7ebf\u7a0b"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redis_1","text":"","title":"Redis\u5355\u7ebf\u7a0b\u4e3a\u4ec0\u4e48\u8fd8\u80fd\u8fd9\u4e48\u5feb"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redis_2","text":"","title":"Redis\u5e95\u5c42\u6570\u636e\u662f\u5982\u4f55\u7528\u8df3\u8868\u6765\u5b58\u50a8\u7684"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redis-key","text":"","title":"Redis Key\u8fc7\u671f\u4e86\u4e3a\u4ec0\u4e48\u5185\u5b58\u6ca1\u91ca\u653e"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redis-keyredis","text":"","title":"Redis Key\u6ca1\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\u4e3a\u4ec0\u4e48\u88abRedis\u4e3b\u52a8\u5220\u9664\u4e86"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#rediskeylrulfu","text":"","title":"Redis\u6dd8\u6c70Key\u7684\u7b97\u6cd5LRU\u4e0eLFU\u533a\u522b"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#keyredis","text":"\u5220\u9664\u5355\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684key\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3ao(1) \u5220\u9664\u5355\u4e2a\u5217\u8868\u3001\u96c6\u5408\u3001\u6709\u5e8f\u96c6\u5408\u6216\u54c8\u5e0c\u8868\u7c7b\u578b\u7684key\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(M)\uff0cM\u4e3a\u4ee5\u4e0a\u6570\u636e\u7ed3\u6784\u5185\u7684\u5143\u7d20\u6570\u636e","title":"\u5220\u9664Key\u7684\u547d\u4ee4\u4f1a\u963b\u585eRedis\u5417"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redis_3","text":"","title":"Redis\u4e3b\u4ece\u3001\u54e8\u5175\u3001\u96c6\u7fa4\u67b6\u6784\u4f18\u7f3a\u70b9\u6bd4\u8f83"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redishash","text":"","title":"Redis\u96c6\u7fa4\u6570\u636ehash\u5206\u7247\u7b97\u6cd5\u662f\u600e\u4e48\u56de\u4e8b"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redisbug","text":"","title":"Redis\u6267\u884c\u547d\u4ee4\u7adf\u7136\u6709\u6b7b\u5faa\u73af\u963b\u585eBug"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redis_4","text":"","title":"\u4e00\u6b21\u7ebf\u4e0a\u4e8b\u6545\uff0cRedis\u4e3b\u4ece\u5207\u6362\u5bfc\u81f4\u4e86\u7f13\u5b58\u96ea\u5d29"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redisrdbaof","text":"","title":"Redis\u6301\u4e45\u5316RDB\u3001AOF\u3001\u6df7\u5408\u6301\u4e45\u5316\u662f\u600e\u4e48\u56de\u4e8b"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redis_5","text":"\u5982\u679c\u5bf9\u6027\u80fd\u8981\u6c42\u8f83\u9ad8\uff0c\u5728Master\u6700\u597d\u4e0d\u8981\u505a\u6301\u4e45\u5316\uff0c\u53ef\u4ee5\u5728\u67d0\u4e2aSalve\u5f00\u542fAOF\u5907\u4efd\u6570\u636e\uff0c\u7b56\u7565\u8bbe\u7f6e\u4e3a\u6bcf\u79d2\u540c\u6b65\u4e00\u6b21\u5373\u53ef\u3002","title":"\u7ebf\u4e0aRedis\u6301\u4e45\u5316\u7b56\u7565\u4e00\u822c\u5982\u4f55\u8bbe\u7f6e"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redis_6","text":"","title":"\u4e00\u6b21\u7ebf\u4e0a\u4e8b\u6545\uff0cRedis\u4e3b\u8282\u70b9\u5b95\u673a\u5bfc\u81f4\u6570\u636e\u5168\u90e8\u4e22\u5931"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redis_7","text":"","title":"Redis\u7ebf\u4e0a\u6570\u636e\u5982\u4f55\u5907\u4efd"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redis_8","text":"","title":"Redis\u4e3b\u4ece\u590d\u5236\u98ce\u66b4\u662f\u600e\u4e48\u56de\u4e8b"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redis_9","text":"","title":"Redis\u96c6\u7fa4\u7f51\u7edc\u6296\u52a8\u5bfc\u81f4\u9891\u7e41\u4e3b\u4ece\u5207\u6362\u600e\u4e48\u5904\u7406"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redismaster","text":"","title":"Redis\u96c6\u7fa4\u4e3a\u4ec0\u4e48\u81f3\u5c11\u9700\u8981\u4e09\u4e2amaster\u8282\u70b9"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redis_10","text":"","title":"Redis\u96c6\u7fa4\u4e3a\u4ec0\u4e48\u63a8\u8350\u5947\u6570\u4e2a\u8282\u70b9"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB/#redis_11","text":"","title":"Redis\u96c6\u7fa4\u652f\u6301\u6279\u91cf\u64cd\u4f5c\u547d\u4ee4\u5417"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB2/","text":"Lua\u811a\u672c\u80fd\u5728Redis\u96c6\u7fa4\u91cc\u6267\u884c\u5417 Redis\u4e3b\u4ece\u5207\u6362\u5bfc\u81f4\u5206\u5e03\u5f0f\u9501\u4e22\u5931\u95ee\u9898\u662f\u600e\u4e48\u56de\u4e8b \u52a0\u9501\u6210\u529f\u540e\u4e3b\u8282\u70b9\u5d29\u6e83\uff0c\u5bfc\u81f4\u4e4b\u540e\u9009\u4e3e\u51fa\u6765\u7684\u4e3b\u8282\u70b9\u65e0\u52a0\u9501\u6807\u8bc6\uff0c\u53ef\u4ee5\u91cd\u590d\u52a0\u9501 \u7f13\u5b58\u7a7f\u900f \u7f13\u5b58\u7a7f\u900f\u662f\u6307\u67e5\u8be2\u4e00\u4e2a\u6839\u672c\u4e0d\u5b58\u5728\u7684\u6570\u636e\uff0c \u7f13\u5b58\u5c42\u548c\u5b58\u50a8\u5c42\u90fd\u4e0d\u4f1a\u547d\u4e2d\uff0c \u901a\u5e38\u51fa\u4e8e\u5bb9\u9519\u7684\u8003\u8651\uff0c \u5982\u679c\u4ece\u5b58\u50a8 \u5c42\u67e5\u4e0d\u5230\u6570\u636e\u5219\u4e0d\u5199\u5165\u7f13\u5b58\u5c42\u3002 \u7f13\u5b58\u7a7f\u900f\u5c06\u5bfc\u81f4\u4e0d\u5b58\u5728\u7684\u6570\u636e\u6bcf\u6b21\u8bf7\u6c42\u90fd\u8981\u5230\u5b58\u50a8\u5c42\u53bb\u67e5\u8be2\uff0c \u5931\u53bb\u4e86\u7f13\u5b58\u4fdd\u62a4\u540e\u7aef\u5b58\u50a8\u7684\u610f\u4e49\u3002 \u9020\u6210\u7f13\u5b58\u7a7f\u900f\u7684\u57fa\u672c\u539f\u56e0\u6709\u4e24\u4e2a\uff1a \u7b2c\u4e00\uff0c \u81ea\u8eab\u4e1a\u52a1\u4ee3\u7801\u6216\u8005\u6570\u636e\u51fa\u73b0\u95ee\u9898\u3002 \u7b2c\u4e8c\uff0c \u4e00\u4e9b\u6076\u610f\u653b\u51fb\u3001 \u722c\u866b\u7b49\u9020\u6210\u5927\u91cf\u7a7a\u547d\u4e2d\u3002 \u7f13\u5b58\u7a7f\u900f\u95ee\u9898\u89e3\u51b3\u65b9\u6848\uff1a 1\u3001\u7f13\u5b58\u7a7a\u5bf9\u8c61 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 String get ( String key ) { // \u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6\u6570\u636e String cacheValue = cache . get ( key ); // \u7f13\u5b58\u4e3a\u7a7a if ( StringUtils . isBlank ( cacheValue )) { // \u4ece\u5b58\u50a8\u4e2d\u83b7\u53d6 String storageValue = storage . get ( key ); cache . set ( key , storageValue ); // \u5982\u679c\u5b58\u50a8\u6570\u636e\u4e3a\u7a7a\uff0c \u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u8fc7\u671f\u65f6\u95f4(300\u79d2) if ( storageValue == null ) { cache . expire ( key , 60 * 5 ); } return storageValue ; } else { // \u7f13\u5b58\u975e\u7a7a return cacheValue ; } } 2\u3001\u5e03\u9686\u8fc7\u6ee4\u5668 \u5bf9\u4e8e\u6076\u610f\u653b\u51fb\uff0c\u5411\u670d\u52a1\u5668\u8bf7\u6c42\u5927\u91cf\u4e0d\u5b58\u5728\u7684\u6570\u636e\u9020\u6210\u7684\u7f13\u5b58\u7a7f\u900f\uff0c\u8fd8\u53ef\u4ee5\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\u5148\u505a\u4e00\u6b21\u8fc7\u6ee4\uff0c\u5bf9\u4e8e\u4e0d\u5b58\u5728\u7684\u6570\u636e\u5e03\u9686\u8fc7\u6ee4\u5668\u4e00\u822c\u90fd\u80fd\u591f\u8fc7\u6ee4\u6389\uff0c\u4e0d\u8ba9\u8bf7\u6c42\u518d\u5f80\u540e\u7aef\u53d1\u9001\u3002\u5f53\u5e03\u9686\u8fc7\u6ee4\u5668\u8bf4\u67d0\u4e2a\u503c\u5b58\u5728\u65f6\uff0c\u8fd9\u4e2a\u503c\u53ef\u80fd\u4e0d\u5b58\u5728\uff1b\u5f53\u5b83\u8bf4\u4e0d\u5b58\u5728\u65f6\uff0c\u90a3\u5c31\u80af\u5b9a\u4e0d\u5b58\u5728\u3002 \u5e03\u9686\u8fc7\u6ee4\u5668\u5c31\u662f\u4e00\u4e2a\u5927\u578b\u7684\u4f4d\u6570\u7ec4\u548c\u51e0\u4e2a\u4e0d\u4e00\u6837\u7684\u65e0\u504f hash \u51fd\u6570\u3002\u6240\u8c13\u65e0\u504f\u5c31\u662f\u80fd\u591f\u628a\u5143\u7d20\u7684 hash \u503c\u7b97\u5f97 \u6bd4\u8f83\u5747\u5300\u3002 \u5411\u5e03\u9686\u8fc7\u6ee4\u5668\u4e2d\u6dfb\u52a0 key \u65f6\uff0c\u4f1a\u4f7f\u7528\u591a\u4e2a hash \u51fd\u6570\u5bf9 key \u8fdb\u884c hash \u7b97\u5f97\u4e00\u4e2a\u6574\u6570\u7d22\u5f15\u503c\u7136\u540e\u5bf9\u4f4d\u6570\u7ec4\u957f\u5ea6 \u8fdb\u884c\u53d6\u6a21\u8fd0\u7b97\u5f97\u5230\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6bcf\u4e2a hash \u51fd\u6570\u90fd\u4f1a\u7b97\u5f97\u4e00\u4e2a\u4e0d\u540c\u7684\u4f4d\u7f6e\u3002\u518d\u628a\u4f4d\u6570\u7ec4\u7684\u8fd9\u51e0\u4e2a\u4f4d\u7f6e\u90fd\u7f6e\u4e3a 1 \u5c31 \u5b8c\u6210\u4e86 add \u64cd\u4f5c\u3002 \u5411\u5e03\u9686\u8fc7\u6ee4\u5668\u8be2\u95ee key \u662f\u5426\u5b58\u5728\u65f6\uff0c\u8ddf add \u4e00\u6837\uff0c\u4e5f\u4f1a\u628a hash \u7684\u51e0\u4e2a\u4f4d\u7f6e\u90fd\u7b97\u51fa\u6765\uff0c\u770b\u770b\u4f4d\u6570\u7ec4\u4e2d\u8fd9\u51e0\u4e2a \u4f4d\u7f6e\u662f\u5426\u90fd\u4e3a 1\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u4f4d\u4e3a 0\uff0c\u90a3\u4e48\u8bf4\u660e\u5e03\u9686\u8fc7\u6ee4\u5668\u4e2d\u8fd9\u4e2akey \u4e0d\u5b58\u5728\u3002\u5982\u679c\u90fd\u662f 1\uff0c\u8fd9\u5e76\u4e0d\u80fd\u8bf4\u660e\u8fd9 \u4e2a key \u5c31\u4e00\u5b9a\u5b58\u5728\uff0c\u53ea\u662f\u6781\u6709\u53ef\u80fd\u5b58\u5728\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u4f4d\u88ab\u7f6e\u4e3a 1 \u53ef\u80fd\u662f\u56e0\u4e3a\u5176\u5b83\u7684 key \u5b58\u5728\u6240\u81f4\u3002\u5982\u679c\u8fd9\u4e2a\u4f4d \u6570\u7ec4\u6bd4\u8f83\u7a00\u758f\uff0c\u8fd9\u4e2a\u6982\u7387\u5c31\u4f1a\u5f88\u5927\uff0c\u5982\u679c\u8fd9\u4e2a\u4f4d\u6570\u7ec4\u6bd4\u8f83\u62e5\u6324\uff0c\u8fd9\u4e2a\u6982\u7387\u5c31\u4f1a\u964d\u4f4e\u3002 \u8fd9\u79cd\u65b9\u6cd5\u9002\u7528\u4e8e\u6570\u636e\u547d\u4e2d\u4e0d\u9ad8\u3001 \u6570\u636e\u76f8\u5bf9\u56fa\u5b9a\u3001 \u5b9e\u65f6\u6027\u4f4e\uff08\u901a\u5e38\u662f\u6570\u636e\u96c6\u8f83\u5927\uff09 \u7684\u5e94\u7528\u573a\u666f\uff0c \u4ee3\u7801\u7ef4\u62a4\u8f83\u4e3a \u590d\u6742\uff0c \u4f46\u662f\u7f13\u5b58\u7a7a\u95f4\u5360\u7528\u5f88\u5c11\u3002 \u53ef\u4ee5\u7528redisson\u5b9e\u73b0\u5e03\u9686\u8fc7\u6ee4\u5668\uff0c\u5f15\u5165\u4f9d\u8d56\uff1a \u793a\u4f8b\u4f2a\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public class RedissonBloomFilter { public static void main ( String [] args ) { Config config = new Config (); config . useSingleServer (). setAddress ( \"redis://localhost:6379\" ); //\u6784\u9020Redisson RedissonClient redisson = Redisson . create ( config ); RBloomFilter < String > bloomFilter = redisson . getBloomFilter ( \"nameList\" ); //\u521d\u59cb\u5316\u5e03\u9686\u8fc7\u6ee4\u5668\uff1a\u9884\u8ba1\u5143\u7d20\u4e3a100000000L,\u8bef\u5dee\u7387\u4e3a3%,\u6839\u636e\u8fd9\u4e24\u4e2a\u53c2\u6570\u4f1a\u8ba1\u7b97\u51fa\u5e95\u5c42\u7684bit\u6570\u7ec4\u5927\u5c0f bloomFilter . tryInit ( 100000000L , 0.03 ); //\u5c06zhuge\u63d2\u5165\u5230\u5e03\u9686\u8fc7\u6ee4\u5668\u4e2d bloomFilter . add ( \"zhuge\" ); //\u5224\u65ad\u4e0b\u9762\u53f7\u7801\u662f\u5426\u5728\u5e03\u9686\u8fc7\u6ee4\u5668\u4e2d System . out . println ( bloomFilter . contains ( \"guojia\" )); //false System . out . println ( bloomFilter . contains ( \"baiqi\" )); //false System . out . println ( bloomFilter . contains ( \"zhuge\" )); //true } } \u4f7f\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\u9700\u8981\u628a\u6240\u6709\u6570\u636e\u63d0\u524d\u653e\u5165\u5e03\u9686\u8fc7\u6ee4\u5668\uff0c\u5e76\u4e14\u5728\u589e\u52a0\u6570\u636e\u65f6\u4e5f\u8981\u5f80\u5e03\u9686\u8fc7\u6ee4\u5668\u91cc\u653e\uff0c\u5e03\u9686\u8fc7\u6ee4\u5668 \u7f13\u5b58\u8fc7\u6ee4\u4f2a\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 //\u521d\u59cb\u5316\u5e03\u9686\u8fc7\u6ee4\u5668 RBloomFilter < String > bloomFilter = redisson . getBloomFilter ( \"nameList\" ); //\u521d\u59cb\u5316\u5e03\u9686\u8fc7\u6ee4\u5668\uff1a\u9884\u8ba1\u5143\u7d20\u4e3a100000000L,\u8bef\u5dee\u7387\u4e3a3% bloomFilter . tryInit ( 100000000L , 0.03 ); //\u628a\u6240\u6709\u6570\u636e\u5b58\u5165\u5e03\u9686\u8fc7\u6ee4\u5668 void init () { for ( String key : keys ) { bloomFilter . put ( key ); } } String get ( String key ){ // \u4ece\u5e03\u9686\u8fc7\u6ee4\u5668\u8fd9\u4e00\u7ea7\u7f13\u5b58\u5224\u65ad\u4e0bkey\u662f\u5426\u5b58\u5728 Boolean exist = bloomFilter . contains ( key ); if ( ! exist ) { return \"\" ; } // \u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6\u6570\u636e String cacheValue = cache . get ( key ); // \u7f13\u5b58\u4e3a\u7a7a if ( StringUtils . isBlank ( cacheValue )) { // \u4ece\u5b58\u50a8\u4e2d\u83b7\u53d6 String storageValue = storage . get ( key ); cache . set ( key , storageValue ); // \u5982\u679c\u5b58\u50a8\u6570\u636e\u4e3a\u7a7a\uff0c \u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u8fc7\u671f\u65f6\u95f4(300\u79d2) if ( storageValue == null ) { cache . expire ( key , 60 * 5 ); } return storageValue ; 1 } else { // \u7f13\u5b58\u975e\u7a7a return cacheValue ; } } \u6ce8\u610f\uff1a\u5e03\u9686\u8fc7\u6ee4\u5668\u4e0d\u80fd\u5220\u9664\u6570\u636e\uff0c\u5982\u679c\u8981\u5220\u9664\u5f97\u91cd\u65b0\u521d\u59cb\u5316\u6570\u636e\u3002 \u7f13\u5b58\u5931\u6548(\u51fb\u7a7f) \u7531\u4e8e\u5927\u6279\u91cf\u7f13\u5b58\u5728\u540c\u4e00\u65f6\u95f4\u5931\u6548\u53ef\u80fd\u5bfc\u81f4\u5927\u91cf\u8bf7\u6c42\u540c\u65f6\u7a7f\u900f\u7f13\u5b58\u76f4\u8fbe\u6570\u636e\u5e93\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u6570\u636e\u5e93\u77ac\u95f4\u538b\u529b\u8fc7\u5927 \u751a\u81f3\u6302\u6389\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u5728\u6279\u91cf\u589e\u52a0\u7f13\u5b58\u65f6\u6700\u597d\u5c06\u8fd9\u4e00\u6279\u6570\u636e\u7684\u7f13\u5b58\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u65f6\u95f4\u6bb5\u5185\u7684\u4e0d\u540c \u65f6\u95f4\u3002 \u793a\u4f8b\u4f2a\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 String get ( String key ){ // \u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6\u6570\u636e String cacheValue = cache . get ( key ); // \u7f13\u5b58\u4e3a\u7a7a if ( StringUtils . isBlank ( cacheValue )) { // \u4ece\u5b58\u50a8\u4e2d\u83b7\u53d6 String storageValue = storage . get ( key ); cache . set ( key , storageValue ); //\u8bbe\u7f6e\u4e00\u4e2a\u8fc7\u671f\u65f6\u95f4(300\u5230600\u4e4b\u95f4\u7684\u4e00\u4e2a\u968f\u673a\u6570) int expireTime = new Random (). nextInt ( 300 ) + 300 ; if ( storageValue == null ) { cache . expire ( key , expireTime ); } return storageValue ; } else { // \u7f13\u5b58\u975e\u7a7a return cacheValue ; } } \u7f13\u5b58\u96ea\u5d29 \u7f13\u5b58\u96ea\u5d29\u6307\u7684\u662f\u7f13\u5b58\u5c42\u652f\u6491\u4e0d\u4f4f\u6216\u5b95\u6389\u540e\uff0c \u6d41\u91cf\u4f1a\u50cf\u5954\u9003\u7684\u91ce\u725b\u4e00\u6837\uff0c \u6253\u5411\u540e\u7aef\u5b58\u50a8\u5c42\u3002 \u7531\u4e8e\u7f13\u5b58\u5c42\u627f\u8f7d\u7740\u5927\u91cf\u8bf7\u6c42\uff0c \u6709\u6548\u5730\u4fdd\u62a4\u4e86\u5b58\u50a8\u5c42\uff0c \u4f46\u662f\u5982\u679c\u7f13\u5b58\u5c42\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\u4e0d\u80fd\u63d0\u4f9b\u670d\u52a1(\u6bd4\u5982\u8d85\u5927\u5e76 \u53d1\u8fc7\u6765\uff0c\u7f13\u5b58\u5c42\u652f\u6491\u4e0d\u4f4f\uff0c\u6216\u8005\u7531\u4e8e\u7f13\u5b58\u8bbe\u8ba1\u4e0d\u597d\uff0c\u7c7b\u4f3c\u5927\u91cf\u8bf7\u6c42\u8bbf\u95eebigkey\uff0c\u5bfc\u81f4\u7f13\u5b58\u80fd\u652f\u6491\u7684\u5e76\u53d1\u6025\u5267\u4e0b \u964d)\uff0c \u4e8e\u662f\u5927\u91cf\u8bf7\u6c42\u90fd\u4f1a\u6253\u5230\u5b58\u50a8\u5c42\uff0c \u5b58\u50a8\u5c42\u7684\u8c03\u7528\u91cf\u4f1a\u66b4\u589e\uff0c \u9020\u6210\u5b58\u50a8\u5c42\u4e5f\u4f1a\u7ea7\u8054\u5b95\u673a\u7684\u60c5\u51b5\u3002 \u9884\u9632\u548c\u89e3\u51b3\u7f13\u5b58\u96ea\u5d29\u95ee\u9898\uff0c \u53ef\u4ee5\u4ece\u4ee5\u4e0b\u4e09\u4e2a\u65b9\u9762\u8fdb\u884c\u7740\u624b\u3002 1\uff09 \u4fdd\u8bc1\u7f13\u5b58\u5c42\u670d\u52a1\u9ad8\u53ef\u7528\u6027\uff0c\u6bd4\u5982\u4f7f\u7528Redis Sentinel\u6216Redis Cluster\u3002 2\uff09 \u4f9d\u8d56\u9694\u79bb\u7ec4\u4ef6\u4e3a\u540e\u7aef\u9650\u6d41\u7194\u65ad\u5e76\u964d\u7ea7\u3002\u6bd4\u5982\u4f7f\u7528Sentinel\u6216Hystrix\u9650\u6d41\u964d\u7ea7\u7ec4\u4ef6\u3002 \u6bd4\u5982\u670d\u52a1\u964d\u7ea7\uff0c\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u7684\u6570\u636e\u91c7\u53d6\u4e0d\u540c\u7684\u5904\u7406\u65b9\u5f0f\u3002\u5f53\u4e1a\u52a1\u5e94\u7528\u8bbf\u95ee\u7684\u662f\u975e\u6838\u5fc3\u6570\u636e\uff08\u4f8b\u5982\u7535\u5546\u5546 \u54c1\u5c5e\u6027\uff0c\u7528\u6237\u4fe1\u606f\u7b49\uff09\u65f6\uff0c\u6682\u65f6\u505c\u6b62\u4ece\u7f13\u5b58\u4e2d\u67e5\u8be2\u8fd9\u4e9b\u6570\u636e\uff0c\u800c\u662f\u76f4\u63a5\u8fd4\u56de\u9884\u5b9a\u4e49\u7684\u9ed8\u8ba4\u964d\u7ea7\u4fe1\u606f\u3001\u7a7a\u503c\u6216\u662f \u9519\u8bef\u63d0\u793a\u4fe1\u606f\uff1b\u5f53\u4e1a\u52a1\u5e94\u7528\u8bbf\u95ee\u7684\u662f\u6838\u5fc3\u6570\u636e\uff08\u4f8b\u5982\u7535\u5546\u5546\u54c1\u5e93\u5b58\uff09\u65f6\uff0c\u4ecd\u7136\u5141\u8bb8\u67e5\u8be2\u7f13\u5b58\uff0c\u5982\u679c\u7f13\u5b58\u7f3a\u5931\uff0c \u4e5f\u53ef\u4ee5\u7ee7\u7eed\u901a\u8fc7\u6570\u636e\u5e93\u8bfb\u53d6\u3002 3\uff09 \u63d0\u524d\u6f14\u7ec3\u3002 \u5728\u9879\u76ee\u4e0a\u7ebf\u524d\uff0c \u6f14\u7ec3\u7f13\u5b58\u5c42\u5b95\u6389\u540e\uff0c \u5e94\u7528\u4ee5\u53ca\u540e\u7aef\u7684\u8d1f\u8f7d\u60c5\u51b5\u4ee5\u53ca\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\uff0c \u5728\u6b64\u57fa \u7840\u4e0a\u505a\u4e00\u4e9b\u9884\u6848\u8bbe\u5b9a\u3002 \u70ed\u70b9\u7f13\u5b58key\u91cd\u5efa\u4f18\u5316 \u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u201c\u7f13\u5b58+\u8fc7\u671f\u65f6\u95f4\u201d\u7684\u7b56\u7565\u65e2\u53ef\u4ee5\u52a0\u901f\u6570\u636e\u8bfb\u5199\uff0c \u53c8\u4fdd\u8bc1\u6570\u636e\u7684\u5b9a\u671f\u66f4\u65b0\uff0c \u8fd9\u79cd\u6a21\u5f0f\u57fa\u672c\u80fd\u591f \u6ee1\u8db3\u7edd\u5927\u90e8\u5206\u9700\u6c42\u3002 \u4f46\u662f\u6709\u4e24\u4e2a\u95ee\u9898\u5982\u679c\u540c\u65f6\u51fa\u73b0\uff0c \u53ef\u80fd\u5c31\u4f1a\u5bf9\u5e94\u7528\u9020\u6210\u81f4\u547d\u7684\u5371\u5bb3\uff1a \u5f53\u524dkey\u662f\u4e00\u4e2a\u70ed\u70b9key\uff08\u4f8b\u5982\u4e00\u4e2a\u70ed\u95e8\u7684\u5a31\u4e50\u65b0\u95fb\uff09\uff0c\u5e76\u53d1\u91cf\u975e\u5e38\u5927\u3002 \u91cd\u5efa\u7f13\u5b58\u4e0d\u80fd\u5728\u77ed\u65f6\u95f4\u5b8c\u6210\uff0c \u53ef\u80fd\u662f\u4e00\u4e2a\u590d\u6742\u8ba1\u7b97\uff0c \u4f8b\u5982\u590d\u6742\u7684SQL\u3001 \u591a\u6b21IO\u3001 \u591a\u4e2a\u4f9d\u8d56\u7b49\u3002 \u5728\u7f13\u5b58\u5931\u6548\u7684\u77ac\u95f4\uff0c \u6709\u5927\u91cf\u7ebf\u7a0b\u6765\u91cd\u5efa\u7f13\u5b58\uff0c \u9020\u6210\u540e\u7aef\u8d1f\u8f7d\u52a0\u5927\uff0c \u751a\u81f3\u53ef\u80fd\u4f1a\u8ba9\u5e94\u7528\u5d29\u6e83\u3002 \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e3b\u8981\u5c31\u662f\u8981\u907f\u514d\u5927\u91cf\u7ebf\u7a0b\u540c\u65f6\u91cd\u5efa\u7f13\u5b58\u3002 \u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e92\u65a5\u9501\u6765\u89e3\u51b3\uff0c\u6b64\u65b9\u6cd5\u53ea\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u91cd\u5efa\u7f13\u5b58\uff0c \u5176\u4ed6\u7ebf\u7a0b\u7b49\u5f85\u91cd\u5efa\u7f13\u5b58\u7684\u7ebf\u7a0b\u6267\u884c\u5b8c\uff0c \u91cd\u65b0 \u4ece\u7f13\u5b58\u83b7\u53d6\u6570\u636e\u5373\u53ef\u3002 \u793a\u4f8b\u4f2a\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 String get ( String key ){ // \u4eceRedis\u4e2d\u83b7\u53d6\u6570\u636e String value = redis . get ( key ); // \u5982\u679cvalue\u4e3a\u7a7a\uff0c \u5219\u5f00\u59cb\u91cd\u6784\u7f13\u5b58 if ( value == null ) { // \u53ea\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u91cd\u5efa\u7f13\u5b58\uff0c \u4f7f\u7528nx\uff0c \u5e76\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4ex String mutexKey = \"mutext:key:\" + key ; if ( redis . set ( mutexKey , \"1\" , \"ex 180\" , \"nx\" )) { // \u4ece\u6570\u636e\u6e90\u83b7\u53d6\u6570\u636e value = db . get ( key ); // \u56de\u5199Redis\uff0c \u5e76\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4 redis . setex ( key , timeout , value ); // \u5220\u9664key_mutex redis . delete ( mutexKey ); } // \u5176\u4ed6\u7ebf\u7a0b\u4f11\u606f50\u6beb\u79d2\u540e\u91cd\u8bd5 else { Thread . sleep ( 50 ); get ( key ); } } return value ; } \u7f13\u5b58\u4e0e\u6570\u636e\u5e93\u53cc\u5199\u4e0d\u4e00\u81f4 \u5728\u5927\u5e76\u53d1\u4e0b\uff0c\u540c\u65f6\u64cd\u4f5c\u6570\u636e\u5e93\u4e0e\u7f13\u5b58\u4f1a\u5b58\u5728\u6570\u636e\u4e0d\u4e00\u81f4\u6027\u95ee\u9898 1\u3001\u53cc\u5199\u4e0d\u4e00\u81f4\u60c5\u51b5 2\u3001\u8bfb\u5199\u5e76\u53d1\u4e0d\u4e00\u81f4 \u89e3\u51b3\u65b9\u6848\uff1a 1\u3001\u5bf9\u4e8e\u5e76\u53d1\u51e0\u7387\u5f88\u5c0f\u7684\u6570\u636e(\u5982\u4e2a\u4eba\u7ef4\u5ea6\u7684\u8ba2\u5355\u6570\u636e\u3001\u7528\u6237\u6570\u636e\u7b49)\uff0c\u8fd9\u79cd\u51e0\u4e4e\u4e0d\u7528\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f88\u5c11\u4f1a\u53d1\u751f \u7f13\u5b58\u4e0d\u4e00\u81f4\uff0c\u53ef\u4ee5\u7ed9\u7f13\u5b58\u6570\u636e\u52a0\u4e0a\u8fc7\u671f\u65f6\u95f4\uff0c\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u89e6\u53d1\u8bfb\u7684\u4e3b\u52a8\u66f4\u65b0\u5373\u53ef\u3002 2\u3001\u5c31\u7b97\u5e76\u53d1\u5f88\u9ad8\uff0c\u5982\u679c\u4e1a\u52a1\u4e0a\u80fd\u5bb9\u5fcd\u77ed\u65f6\u95f4\u7684\u7f13\u5b58\u6570\u636e\u4e0d\u4e00\u81f4(\u5982\u5546\u54c1\u540d\u79f0\uff0c\u5546\u54c1\u5206\u7c7b\u83dc\u5355\u7b49)\uff0c\u7f13\u5b58\u52a0\u4e0a\u8fc7\u671f \u65f6\u95f4\u4f9d\u7136\u53ef\u4ee5\u89e3\u51b3\u5927\u90e8\u5206\u4e1a\u52a1\u5bf9\u4e8e\u7f13\u5b58\u7684\u8981\u6c42\u3002 3\u3001\u5982\u679c\u4e0d\u80fd\u5bb9\u5fcd\u7f13\u5b58\u6570\u636e\u4e0d\u4e00\u81f4\uff0c\u53ef\u4ee5\u901a\u8fc7\u52a0\u8bfb\u5199\u9501\u4fdd\u8bc1\u5e76\u53d1\u8bfb\u5199\u6216\u5199\u5199\u7684\u65f6\u5019\u6309\u987a\u5e8f\u6392\u597d\u961f\uff0c\u8bfb\u8bfb\u7684\u65f6\u5019 \u76f8\u5f53\u4e8e\u65e0\u9501\u3002 4\u3001\u4e5f\u53ef\u4ee5\u7528\u963f\u91cc\u5f00\u6e90\u7684canal\u901a\u8fc7\u76d1\u542c\u6570\u636e\u5e93\u7684binlog\u65e5\u5fd7\u53ca\u65f6\u7684\u53bb\u4fee\u6539\u7f13\u5b58\uff0c\u4f46\u662f\u5f15\u5165\u4e86\u65b0\u7684\u4e2d\u95f4\u4ef6\uff0c\u589e\u52a0 \u4e86\u7cfb\u7edf\u7684\u590d\u6742\u5ea6\u3002 \u603b\u7ed3\uff1a \u4ee5\u4e0a\u6211\u4eec\u9488\u5bf9\u7684\u90fd\u662f\u8bfb\u591a\u5199\u5c11\u7684\u60c5\u51b5\u52a0\u5165\u7f13\u5b58\u63d0\u9ad8\u6027\u80fd\uff0c\u5982\u679c\u5199\u591a\u8bfb\u591a\u7684\u60c5\u51b5\u53c8\u4e0d\u80fd\u5bb9\u5fcd\u7f13\u5b58\u6570\u636e\u4e0d\u4e00\u81f4\uff0c\u90a3 \u5c31\u6ca1\u5fc5\u8981\u52a0\u7f13\u5b58\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u6570\u636e\u5e93\u3002\u5f53\u7136\uff0c\u5982\u679c\u6570\u636e\u5e93\u6297\u4e0d\u4f4f\u538b\u529b\uff0c\u8fd8\u53ef\u4ee5\u628a\u7f13\u5b58\u4f5c\u4e3a\u6570\u636e\u8bfb\u5199\u7684\u4e3b\u5b58 \u50a8\uff0c\u5f02\u6b65\u5c06\u6570\u636e\u540c\u6b65\u5230\u6570\u636e\u5e93\uff0c\u6570\u636e\u5e93\u53ea\u662f\u4f5c\u4e3a\u6570\u636e\u7684\u5907\u4efd\u3002 \u653e\u5165\u7f13\u5b58\u7684\u6570\u636e\u5e94\u8be5\u662f\u5bf9\u5b9e\u65f6\u6027\u3001\u4e00\u81f4\u6027\u8981\u6c42\u4e0d\u662f\u5f88\u9ad8\u7684\u6570\u636e\u3002\u5207\u8bb0\u4e0d\u8981\u4e3a\u4e86\u7528\u7f13\u5b58\uff0c\u540c\u65f6\u53c8\u8981\u4fdd\u8bc1\u7edd\u5bf9\u7684\u4e00 \u81f4\u6027\u505a\u5927\u91cf\u7684\u8fc7\u5ea6\u8bbe\u8ba1\u548c\u63a7\u5236\uff0c\u589e\u52a0\u7cfb\u7edf\u590d\u6742\u6027\uff01 \u5f00\u53d1\u89c4\u8303\u4e0e\u6027\u80fd\u4f18\u5316 key\u540d\u8bbe\u8ba1 \u3010\u5efa\u8bae\u3011: \u53ef\u8bfb\u6027\u548c\u53ef\u7ba1\u7406\u6027 \u4ee5\u4e1a\u52a1\u540d(\u6216\u6570\u636e\u5e93\u540d)\u4e3a\u524d\u7f00(\u9632\u6b62key\u51b2\u7a81)\uff0c\u7528\u5192\u53f7\u5206\u9694\uff0c\u6bd4\u5982\u4e1a\u52a1\u540d:\u8868\u540d:id trade:order:1 \u3010\u5efa\u8bae\u3011\uff1a\u7b80\u6d01\u6027 \u4fdd\u8bc1\u8bed\u4e49\u7684\u524d\u63d0\u4e0b\uff0c\u63a7\u5236key\u7684\u957f\u5ea6\uff0c\u5f53key\u8f83\u591a\u65f6\uff0c\u5185\u5b58\u5360\u7528\u4e5f\u4e0d\u5bb9\u5ffd\u89c6\uff0c\u4f8b\u5982\uff1a user:{uid}:friends:messages:{mid} \u7b80\u5316\u4e3a u:{uid}:fr:m:{mid} \u3010\u5f3a\u5236\u3011\uff1a\u4e0d\u8981\u5305\u542b\u7279\u6b8a\u5b57\u7b26 \u53cd\u4f8b\uff1a\u5305\u542b\u7a7a\u683c\u3001\u6362\u884c\u3001\u5355\u53cc\u5f15\u53f7\u4ee5\u53ca\u5176\u4ed6\u8f6c\u4e49\u5b57\u7b26 value\u8bbe\u8ba1 \u3010\u5f3a\u5236\u3011\uff1a\u62d2\u7eddbigkey(\u9632\u6b62\u7f51\u5361\u6d41\u91cf\u3001\u6162\u67e5\u8be2) \u5728Redis\u4e2d\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6700\u5927512MB\uff0c\u4e00\u4e2a\u4e8c\u7ea7\u6570\u636e\u7ed3\u6784\uff08\u4f8b\u5982hash\u3001list\u3001set\u3001zset\uff09\u53ef\u4ee5\u5b58 \u50a8\u5927\u7ea640\u4ebf\u4e2a(2^32-1)\u4e2a\u5143\u7d20\uff0c\u4f46\u5b9e\u9645\u4e2d\u5982\u679c\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5\uff0c\u6211\u5c31\u4f1a\u8ba4\u4e3a\u5b83\u662fbigkey\u3002 \u5b57\u7b26\u4e32\u7c7b\u578b\uff1a\u5b83\u7684big\u4f53\u73b0\u5728\u5355\u4e2avalue\u503c\u5f88\u5927\uff0c\u4e00\u822c\u8ba4\u4e3a\u8d85\u8fc710KB\u5c31\u662fbigkey\u3002 \u975e\u5b57\u7b26\u4e32\u7c7b\u578b\uff1a\u54c8\u5e0c\u3001\u5217\u8868\u3001\u96c6\u5408\u3001\u6709\u5e8f\u96c6\u5408\uff0c\u5b83\u4eec\u7684big\u4f53\u73b0\u5728\u5143\u7d20\u4e2a\u6570\u592a\u591a\u3002 \u4e00\u822c\u6765\u8bf4\uff0cstring\u7c7b\u578b\u63a7\u5236\u572810KB\u4ee5\u5185\uff0chash\u3001list\u3001set\u3001zset\u5143\u7d20\u4e2a\u6570\u4e0d\u8981\u8d85\u8fc75000\u3002 \u53cd\u4f8b\uff1a\u4e00\u4e2a\u5305\u542b200\u4e07\u4e2a\u5143\u7d20\u7684list\u3002 \u975e\u5b57\u7b26\u4e32\u7684bigkey\uff0c\u4e0d\u8981\u4f7f\u7528del\u5220\u9664\uff0c\u4f7f\u7528hscan\u3001sscan\u3001zscan\u65b9\u5f0f\u6e10\u8fdb\u5f0f\u5220\u9664\uff0c\u540c\u65f6\u8981\u6ce8 \u610f\u9632\u6b62bigkey\u8fc7\u671f\u65f6\u95f4\u81ea\u52a8\u5220\u9664\u95ee\u9898(\u4f8b\u5982\u4e00\u4e2a200\u4e07\u7684zset\u8bbe\u7f6e1\u5c0f\u65f6\u8fc7\u671f\uff0c\u4f1a\u89e6\u53d1del\u64cd\u4f5c\uff0c \u9020\u6210\u963b\u585e\uff09 bigkey\u7684\u5371\u5bb3 1.\u5bfc\u81f4redis\u963b\u585e 2.\u7f51\u7edc\u62e5\u585e bigkey\u4e5f\u5c31\u610f\u5473\u7740\u6bcf\u6b21\u83b7\u53d6\u8981\u4ea7\u751f\u7684\u7f51\u7edc\u6d41\u91cf\u8f83\u5927\uff0c\u5047\u8bbe\u4e00\u4e2abigkey\u4e3a1MB\uff0c\u5ba2\u6237\u7aef\u6bcf\u79d2\u8bbf\u95ee\u91cf\u4e3a1000\uff0c\u90a3\u4e48\u6bcf\u79d2\u4ea7\u751f1000MB\u7684\u6d41\u91cf\uff0c\u5bf9\u4e8e\u666e\u901a\u7684\u5343\u5146\u7f51\u5361(\u6309\u7167\u5b57\u8282\u7b97\u662f128MB/s)\u7684\u670d\u52a1\u5668\u6765\u8bf4\u7b80\u76f4\u662f\u706d\u9876\u4e4b\u707e\uff0c\u800c\u4e14\u4e00\u822c\u670d\u52a1\u5668\u4f1a\u91c7\u7528\u5355\u673a\u591a\u5b9e\u4f8b\u7684\u65b9\u5f0f\u6765\u90e8\u7f72\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2abigkey\u53ef\u80fd\u4f1a\u5bf9\u5176\u4ed6\u5b9e\u4f8b\u4e5f\u9020\u6210\u5f71\u54cd\uff0c\u5176\u540e\u679c\u4e0d\u582a\u8bbe\u60f3\u3002 3.\u8fc7\u671f\u5220\u9664 \u6709\u4e2abigkey\uff0c\u5b83\u5b89\u5206\u5b88\u5df1\uff08\u53ea\u6267\u884c\u7b80\u5355\u7684\u547d\u4ee4\uff0c\u4f8b\u5982hget\u3001lpop\u3001zscore\u7b49\uff09\uff0c\u4f46\u5b83\u8bbe\u7f6e\u4e86 \u671f\u65f6\u95f4\uff0c\u5f53\u5b83\u8fc7\u671f\u540e\uff0c\u4f1a\u88ab\u5220\u9664\uff0c\u5982\u679c\u6ca1\u6709\u4f7f\u7528Redis 4.0\u7684\u8fc7\u671f\u5f02\u6b65\u5220\u9664(lazyfree-lazyexpire yes)\uff0c\u5c31\u4f1a\u5b58\u5728\u963b\u585eRedis\u7684\u53ef\u80fd\u6027\u3002 bigkey\u7684\u4ea7\u751f \u4e00\u822c\u6765\u8bf4\uff0cbigkey\u7684\u4ea7\u751f\u90fd\u662f\u7531\u4e8e\u7a0b\u5e8f\u8bbe\u8ba1\u4e0d\u5f53\uff0c\u6216\u8005\u5bf9\u4e8e\u6570\u636e\u89c4\u6a21\u9884\u6599\u4e0d\u6e05\u695a\u9020\u6210\u7684\uff0c\u6765\u770b\u51e0\u4e2a\u4f8b\u5b50\uff1a (1) \u793e\u4ea4\u7c7b\uff1a\u7c89\u4e1d\u5217\u8868\uff0c\u5982\u679c\u67d0\u4e9b\u660e\u661f\u6216\u8005\u5927v\u4e0d\u7cbe\u5fc3\u8bbe\u8ba1\u4e0b\uff0c\u5fc5\u662fbigkey\u3002 (2) \u7edf\u8ba1\u7c7b\uff1a\u4f8b\u5982\u6309\u5929\u5b58\u50a8\u67d0\u9879\u529f\u80fd\u6216\u8005\u7f51\u7ad9\u7684\u7528\u6237\u96c6\u5408\uff0c\u9664\u975e\u6ca1\u51e0\u4e2a\u4eba\u7528\uff0c\u5426\u5219\u5fc5\u662fbigkey\u3002 (3) \u7f13\u5b58\u7c7b\uff1a\u5c06\u6570\u636e\u4ece\u6570\u636e\u5e93load\u51fa\u6765\u5e8f\u5217\u5316\u653e\u5230Redis\u91cc\uff0c\u8fd9\u4e2a\u65b9\u5f0f\u975e\u5e38\u5e38\u7528\uff0c\u4f46\u6709\u4e24\u4e2a\u5730\u65b9\u9700\u8981\u6ce8\u610f\uff0c \u7b2c\u4e00\uff0c\u662f\u4e0d\u662f\u6709\u5fc5\u8981\u628a\u6240\u6709\u5b57\u6bb5\u90fd\u7f13\u5b58\uff1b \u7b2c\u4e8c\uff0c\u6709\u6ca1\u6709\u76f8\u5173\u5173\u8054\u7684\u6570\u636e\uff0c\u6709\u7684\u540c\u5b66\u4e3a\u4e86\u56fe\u65b9\u4fbf\u628a\u76f8\u5173\u6570\u636e\u90fd\u5b58\u4e00\u4e2akey\u4e0b\uff0c\u4ea7\u751fbigkey\u3002 \u5982\u4f55\u4f18\u5316bigkey \u62c6 big list\uff1a list1\u3001list2\u3001...listN big hash\uff1a\u53ef\u4ee5\u8bb2\u6570\u636e\u5206\u6bb5\u5b58\u50a8\uff0c\u6bd4\u5982\u4e00\u4e2a\u5927\u7684key\uff0c\u5047\u8bbe\u5b58\u4e861\u767e\u4e07\u7684\u7528\u6237\u6570\u636e\uff0c\u53ef\u4ee5\u62c6\u5206\u6210 200\u4e2akey\uff0c\u6bcf\u4e2akey\u4e0b\u9762\u5b58\u653e5000\u4e2a\u7528\u6237\u6570\u636e \u5982\u679cbigkey\u4e0d\u53ef\u907f\u514d \uff0c\u4e5f\u8981\u601d\u8003\u4e00\u4e0b\u8981\u4e0d\u8981\u6bcf\u6b21\u628a\u6240\u6709\u5143\u7d20\u90fd\u53d6\u51fa\u6765(\u4f8b\u5982\u6709\u65f6\u5019\u4ec5\u4ec5\u9700\u8981 hmget\uff0c\u800c\u4e0d\u662fhgetall)\uff0c\u5220\u9664\u4e5f\u662f\u4e00\u6837\uff0c\u5c3d\u91cf\u4f7f\u7528\u4f18\u96c5\u7684\u65b9\u5f0f\u6765\u5904\u7406\u3002 \u3010\u63a8\u8350\u3011 \uff1a\u9009\u62e9\u9002\u5408\u7684\u6570\u636e\u7c7b\u578b\u3002 \u4f8b\u5982\uff1a\u5b9e\u4f53\u7c7b\u578b(\u8981\u5408\u7406\u63a7\u5236\u548c\u4f7f\u7528\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u4e5f\u8981\u6ce8\u610f\u8282\u7701\u5185\u5b58\u548c\u6027\u80fd\u4e4b\u95f4\u7684\u5e73\u8861) \u53cd\u4f8b\uff1a 1 2 3 set user:1:name tom set user:1:age 19 set user:1:favor football \u6b63\u4f8b: 1 hmset user:1 name tom age 19 favor football \u3010\u63a8\u8350\u3011 \uff1a\u63a7\u5236key\u7684\u751f\u547d\u5468\u671f\uff0credis\u4e0d\u662f\u5783\u573e\u6876\u3002 \u5efa\u8bae\u4f7f\u7528expire\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4(\u6761\u4ef6\u5141\u8bb8\u53ef\u4ee5\u6253\u6563\u8fc7\u671f\u65f6\u95f4\uff0c\u9632\u6b62\u96c6\u4e2d\u8fc7\u671f)\u3002 \u547d\u4ee4\u4f7f\u7528 1.\u3010\u63a8\u8350\u3011 O(N)\u547d\u4ee4\u5173\u6ce8N\u7684\u6570\u91cf \u4f8b\u5982hgetall\u3001lrange\u3001smembers\u3001zrange\u3001sinter\u7b49\u5e76\u975e\u4e0d\u80fd\u4f7f\u7528\uff0c\u4f46\u662f\u9700\u8981\u660e\u786eN\u7684\u503c\u3002\u6709 \u904d\u5386\u7684\u9700\u6c42\u53ef\u4ee5\u4f7f\u7528hscan\u3001sscan\u3001zscan\u4ee3\u66ff\u3002 2.\u3010\u63a8\u8350\u3011\uff1a\u7981\u7528\u547d\u4ee4 \u7981\u6b62\u7ebf\u4e0a\u4f7f\u7528keys\u3001flushall\u3001flushdb\u7b49\uff0c\u901a\u8fc7redis\u7684rename\u673a\u5236\u7981\u6389\u547d\u4ee4\uff0c\u6216\u8005\u4f7f\u7528scan\u7684 \u65b9\u5f0f\u6e10\u8fdb\u5f0f\u5904\u7406\u3002 3.\u3010\u63a8\u8350\u3011\u5408\u7406\u4f7f\u7528select redis\u7684\u591a\u6570\u636e\u5e93\u8f83\u5f31\uff0c\u4f7f\u7528\u6570\u5b57\u8fdb\u884c\u533a\u5206\uff0c\u5f88\u591a\u5ba2\u6237\u7aef\u652f\u6301\u8f83\u5dee\uff0c\u540c\u65f6\u591a\u4e1a\u52a1\u7528\u591a\u6570\u636e\u5e93\u5b9e\u9645 \u8fd8\u662f\u5355\u7ebf\u7a0b\u5904\u7406\uff0c\u4f1a\u6709\u5e72\u6270\u3002 4.\u3010\u63a8\u8350\u3011\u4f7f\u7528\u6279\u91cf\u64cd\u4f5c\u63d0\u9ad8\u6548\u7387 1 \u539f\u751f\u547d\u4ee4\uff1a\u4f8b\u5982mget\u3001mset\u3002 2 \u975e\u539f\u751f\u547d\u4ee4\uff1a\u53ef\u4ee5\u4f7f\u7528pipeline\u63d0\u9ad8\u6548\u7387\u3002 \u4f46\u8981\u6ce8\u610f\u63a7\u5236\u4e00\u6b21\u6279\u91cf\u64cd\u4f5c\u7684\u5143\u7d20\u4e2a\u6570(\u4f8b\u5982500\u4ee5\u5185\uff0c\u5b9e\u9645\u4e5f\u548c\u5143\u7d20\u5b57\u8282\u6570\u6709\u5173)\u3002 \u6ce8\u610f\u4e24\u8005\u4e0d\u540c\uff1a 1 \u539f\u751f\u547d\u4ee4\u662f\u539f\u5b50\u64cd\u4f5c\uff0cpipeline\u662f\u975e\u539f\u5b50\u64cd\u4f5c\u3002 2 pipeline\u53ef\u4ee5\u6253\u5305\u4e0d\u540c\u7684\u547d\u4ee4\uff0c\u539f\u751f\u547d\u4ee4\u505a\u4e0d\u5230 3 pipeline\u9700\u8981\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u540c\u65f6\u652f\u6301\u3002 5.\u3010\u5efa\u8bae\u3011Redis\u4e8b\u52a1\u529f\u80fd\u8f83\u5f31\uff0c\u4e0d\u5efa\u8bae\u8fc7\u591a\u4f7f\u7528\uff0c\u53ef\u4ee5\u7528lua\u66ff\u4ee3","title":"Redis\u9762\u8bd5\u7a81\u51fb2"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB2/#luaredis","text":"","title":"Lua\u811a\u672c\u80fd\u5728Redis\u96c6\u7fa4\u91cc\u6267\u884c\u5417"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB2/#redis","text":"\u52a0\u9501\u6210\u529f\u540e\u4e3b\u8282\u70b9\u5d29\u6e83\uff0c\u5bfc\u81f4\u4e4b\u540e\u9009\u4e3e\u51fa\u6765\u7684\u4e3b\u8282\u70b9\u65e0\u52a0\u9501\u6807\u8bc6\uff0c\u53ef\u4ee5\u91cd\u590d\u52a0\u9501","title":"Redis\u4e3b\u4ece\u5207\u6362\u5bfc\u81f4\u5206\u5e03\u5f0f\u9501\u4e22\u5931\u95ee\u9898\u662f\u600e\u4e48\u56de\u4e8b"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB2/#_1","text":"\u7f13\u5b58\u7a7f\u900f\u662f\u6307\u67e5\u8be2\u4e00\u4e2a\u6839\u672c\u4e0d\u5b58\u5728\u7684\u6570\u636e\uff0c \u7f13\u5b58\u5c42\u548c\u5b58\u50a8\u5c42\u90fd\u4e0d\u4f1a\u547d\u4e2d\uff0c \u901a\u5e38\u51fa\u4e8e\u5bb9\u9519\u7684\u8003\u8651\uff0c \u5982\u679c\u4ece\u5b58\u50a8 \u5c42\u67e5\u4e0d\u5230\u6570\u636e\u5219\u4e0d\u5199\u5165\u7f13\u5b58\u5c42\u3002 \u7f13\u5b58\u7a7f\u900f\u5c06\u5bfc\u81f4\u4e0d\u5b58\u5728\u7684\u6570\u636e\u6bcf\u6b21\u8bf7\u6c42\u90fd\u8981\u5230\u5b58\u50a8\u5c42\u53bb\u67e5\u8be2\uff0c \u5931\u53bb\u4e86\u7f13\u5b58\u4fdd\u62a4\u540e\u7aef\u5b58\u50a8\u7684\u610f\u4e49\u3002 \u9020\u6210\u7f13\u5b58\u7a7f\u900f\u7684\u57fa\u672c\u539f\u56e0\u6709\u4e24\u4e2a\uff1a \u7b2c\u4e00\uff0c \u81ea\u8eab\u4e1a\u52a1\u4ee3\u7801\u6216\u8005\u6570\u636e\u51fa\u73b0\u95ee\u9898\u3002 \u7b2c\u4e8c\uff0c \u4e00\u4e9b\u6076\u610f\u653b\u51fb\u3001 \u722c\u866b\u7b49\u9020\u6210\u5927\u91cf\u7a7a\u547d\u4e2d\u3002 \u7f13\u5b58\u7a7f\u900f\u95ee\u9898\u89e3\u51b3\u65b9\u6848\uff1a 1\u3001\u7f13\u5b58\u7a7a\u5bf9\u8c61 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 String get ( String key ) { // \u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6\u6570\u636e String cacheValue = cache . get ( key ); // \u7f13\u5b58\u4e3a\u7a7a if ( StringUtils . isBlank ( cacheValue )) { // \u4ece\u5b58\u50a8\u4e2d\u83b7\u53d6 String storageValue = storage . get ( key ); cache . set ( key , storageValue ); // \u5982\u679c\u5b58\u50a8\u6570\u636e\u4e3a\u7a7a\uff0c \u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u8fc7\u671f\u65f6\u95f4(300\u79d2) if ( storageValue == null ) { cache . expire ( key , 60 * 5 ); } return storageValue ; } else { // \u7f13\u5b58\u975e\u7a7a return cacheValue ; } } 2\u3001\u5e03\u9686\u8fc7\u6ee4\u5668 \u5bf9\u4e8e\u6076\u610f\u653b\u51fb\uff0c\u5411\u670d\u52a1\u5668\u8bf7\u6c42\u5927\u91cf\u4e0d\u5b58\u5728\u7684\u6570\u636e\u9020\u6210\u7684\u7f13\u5b58\u7a7f\u900f\uff0c\u8fd8\u53ef\u4ee5\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\u5148\u505a\u4e00\u6b21\u8fc7\u6ee4\uff0c\u5bf9\u4e8e\u4e0d\u5b58\u5728\u7684\u6570\u636e\u5e03\u9686\u8fc7\u6ee4\u5668\u4e00\u822c\u90fd\u80fd\u591f\u8fc7\u6ee4\u6389\uff0c\u4e0d\u8ba9\u8bf7\u6c42\u518d\u5f80\u540e\u7aef\u53d1\u9001\u3002\u5f53\u5e03\u9686\u8fc7\u6ee4\u5668\u8bf4\u67d0\u4e2a\u503c\u5b58\u5728\u65f6\uff0c\u8fd9\u4e2a\u503c\u53ef\u80fd\u4e0d\u5b58\u5728\uff1b\u5f53\u5b83\u8bf4\u4e0d\u5b58\u5728\u65f6\uff0c\u90a3\u5c31\u80af\u5b9a\u4e0d\u5b58\u5728\u3002 \u5e03\u9686\u8fc7\u6ee4\u5668\u5c31\u662f\u4e00\u4e2a\u5927\u578b\u7684\u4f4d\u6570\u7ec4\u548c\u51e0\u4e2a\u4e0d\u4e00\u6837\u7684\u65e0\u504f hash \u51fd\u6570\u3002\u6240\u8c13\u65e0\u504f\u5c31\u662f\u80fd\u591f\u628a\u5143\u7d20\u7684 hash \u503c\u7b97\u5f97 \u6bd4\u8f83\u5747\u5300\u3002 \u5411\u5e03\u9686\u8fc7\u6ee4\u5668\u4e2d\u6dfb\u52a0 key \u65f6\uff0c\u4f1a\u4f7f\u7528\u591a\u4e2a hash \u51fd\u6570\u5bf9 key \u8fdb\u884c hash \u7b97\u5f97\u4e00\u4e2a\u6574\u6570\u7d22\u5f15\u503c\u7136\u540e\u5bf9\u4f4d\u6570\u7ec4\u957f\u5ea6 \u8fdb\u884c\u53d6\u6a21\u8fd0\u7b97\u5f97\u5230\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6bcf\u4e2a hash \u51fd\u6570\u90fd\u4f1a\u7b97\u5f97\u4e00\u4e2a\u4e0d\u540c\u7684\u4f4d\u7f6e\u3002\u518d\u628a\u4f4d\u6570\u7ec4\u7684\u8fd9\u51e0\u4e2a\u4f4d\u7f6e\u90fd\u7f6e\u4e3a 1 \u5c31 \u5b8c\u6210\u4e86 add \u64cd\u4f5c\u3002 \u5411\u5e03\u9686\u8fc7\u6ee4\u5668\u8be2\u95ee key \u662f\u5426\u5b58\u5728\u65f6\uff0c\u8ddf add \u4e00\u6837\uff0c\u4e5f\u4f1a\u628a hash \u7684\u51e0\u4e2a\u4f4d\u7f6e\u90fd\u7b97\u51fa\u6765\uff0c\u770b\u770b\u4f4d\u6570\u7ec4\u4e2d\u8fd9\u51e0\u4e2a \u4f4d\u7f6e\u662f\u5426\u90fd\u4e3a 1\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u4f4d\u4e3a 0\uff0c\u90a3\u4e48\u8bf4\u660e\u5e03\u9686\u8fc7\u6ee4\u5668\u4e2d\u8fd9\u4e2akey \u4e0d\u5b58\u5728\u3002\u5982\u679c\u90fd\u662f 1\uff0c\u8fd9\u5e76\u4e0d\u80fd\u8bf4\u660e\u8fd9 \u4e2a key \u5c31\u4e00\u5b9a\u5b58\u5728\uff0c\u53ea\u662f\u6781\u6709\u53ef\u80fd\u5b58\u5728\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u4f4d\u88ab\u7f6e\u4e3a 1 \u53ef\u80fd\u662f\u56e0\u4e3a\u5176\u5b83\u7684 key \u5b58\u5728\u6240\u81f4\u3002\u5982\u679c\u8fd9\u4e2a\u4f4d \u6570\u7ec4\u6bd4\u8f83\u7a00\u758f\uff0c\u8fd9\u4e2a\u6982\u7387\u5c31\u4f1a\u5f88\u5927\uff0c\u5982\u679c\u8fd9\u4e2a\u4f4d\u6570\u7ec4\u6bd4\u8f83\u62e5\u6324\uff0c\u8fd9\u4e2a\u6982\u7387\u5c31\u4f1a\u964d\u4f4e\u3002 \u8fd9\u79cd\u65b9\u6cd5\u9002\u7528\u4e8e\u6570\u636e\u547d\u4e2d\u4e0d\u9ad8\u3001 \u6570\u636e\u76f8\u5bf9\u56fa\u5b9a\u3001 \u5b9e\u65f6\u6027\u4f4e\uff08\u901a\u5e38\u662f\u6570\u636e\u96c6\u8f83\u5927\uff09 \u7684\u5e94\u7528\u573a\u666f\uff0c \u4ee3\u7801\u7ef4\u62a4\u8f83\u4e3a \u590d\u6742\uff0c \u4f46\u662f\u7f13\u5b58\u7a7a\u95f4\u5360\u7528\u5f88\u5c11\u3002 \u53ef\u4ee5\u7528redisson\u5b9e\u73b0\u5e03\u9686\u8fc7\u6ee4\u5668\uff0c\u5f15\u5165\u4f9d\u8d56\uff1a \u793a\u4f8b\u4f2a\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public class RedissonBloomFilter { public static void main ( String [] args ) { Config config = new Config (); config . useSingleServer (). setAddress ( \"redis://localhost:6379\" ); //\u6784\u9020Redisson RedissonClient redisson = Redisson . create ( config ); RBloomFilter < String > bloomFilter = redisson . getBloomFilter ( \"nameList\" ); //\u521d\u59cb\u5316\u5e03\u9686\u8fc7\u6ee4\u5668\uff1a\u9884\u8ba1\u5143\u7d20\u4e3a100000000L,\u8bef\u5dee\u7387\u4e3a3%,\u6839\u636e\u8fd9\u4e24\u4e2a\u53c2\u6570\u4f1a\u8ba1\u7b97\u51fa\u5e95\u5c42\u7684bit\u6570\u7ec4\u5927\u5c0f bloomFilter . tryInit ( 100000000L , 0.03 ); //\u5c06zhuge\u63d2\u5165\u5230\u5e03\u9686\u8fc7\u6ee4\u5668\u4e2d bloomFilter . add ( \"zhuge\" ); //\u5224\u65ad\u4e0b\u9762\u53f7\u7801\u662f\u5426\u5728\u5e03\u9686\u8fc7\u6ee4\u5668\u4e2d System . out . println ( bloomFilter . contains ( \"guojia\" )); //false System . out . println ( bloomFilter . contains ( \"baiqi\" )); //false System . out . println ( bloomFilter . contains ( \"zhuge\" )); //true } } \u4f7f\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\u9700\u8981\u628a\u6240\u6709\u6570\u636e\u63d0\u524d\u653e\u5165\u5e03\u9686\u8fc7\u6ee4\u5668\uff0c\u5e76\u4e14\u5728\u589e\u52a0\u6570\u636e\u65f6\u4e5f\u8981\u5f80\u5e03\u9686\u8fc7\u6ee4\u5668\u91cc\u653e\uff0c\u5e03\u9686\u8fc7\u6ee4\u5668 \u7f13\u5b58\u8fc7\u6ee4\u4f2a\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 //\u521d\u59cb\u5316\u5e03\u9686\u8fc7\u6ee4\u5668 RBloomFilter < String > bloomFilter = redisson . getBloomFilter ( \"nameList\" ); //\u521d\u59cb\u5316\u5e03\u9686\u8fc7\u6ee4\u5668\uff1a\u9884\u8ba1\u5143\u7d20\u4e3a100000000L,\u8bef\u5dee\u7387\u4e3a3% bloomFilter . tryInit ( 100000000L , 0.03 ); //\u628a\u6240\u6709\u6570\u636e\u5b58\u5165\u5e03\u9686\u8fc7\u6ee4\u5668 void init () { for ( String key : keys ) { bloomFilter . put ( key ); } } String get ( String key ){ // \u4ece\u5e03\u9686\u8fc7\u6ee4\u5668\u8fd9\u4e00\u7ea7\u7f13\u5b58\u5224\u65ad\u4e0bkey\u662f\u5426\u5b58\u5728 Boolean exist = bloomFilter . contains ( key ); if ( ! exist ) { return \"\" ; } // \u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6\u6570\u636e String cacheValue = cache . get ( key ); // \u7f13\u5b58\u4e3a\u7a7a if ( StringUtils . isBlank ( cacheValue )) { // \u4ece\u5b58\u50a8\u4e2d\u83b7\u53d6 String storageValue = storage . get ( key ); cache . set ( key , storageValue ); // \u5982\u679c\u5b58\u50a8\u6570\u636e\u4e3a\u7a7a\uff0c \u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u8fc7\u671f\u65f6\u95f4(300\u79d2) if ( storageValue == null ) { cache . expire ( key , 60 * 5 ); } return storageValue ; 1 } else { // \u7f13\u5b58\u975e\u7a7a return cacheValue ; } } \u6ce8\u610f\uff1a\u5e03\u9686\u8fc7\u6ee4\u5668\u4e0d\u80fd\u5220\u9664\u6570\u636e\uff0c\u5982\u679c\u8981\u5220\u9664\u5f97\u91cd\u65b0\u521d\u59cb\u5316\u6570\u636e\u3002","title":"\u7f13\u5b58\u7a7f\u900f"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB2/#_2","text":"\u7531\u4e8e\u5927\u6279\u91cf\u7f13\u5b58\u5728\u540c\u4e00\u65f6\u95f4\u5931\u6548\u53ef\u80fd\u5bfc\u81f4\u5927\u91cf\u8bf7\u6c42\u540c\u65f6\u7a7f\u900f\u7f13\u5b58\u76f4\u8fbe\u6570\u636e\u5e93\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u6570\u636e\u5e93\u77ac\u95f4\u538b\u529b\u8fc7\u5927 \u751a\u81f3\u6302\u6389\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u5728\u6279\u91cf\u589e\u52a0\u7f13\u5b58\u65f6\u6700\u597d\u5c06\u8fd9\u4e00\u6279\u6570\u636e\u7684\u7f13\u5b58\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u65f6\u95f4\u6bb5\u5185\u7684\u4e0d\u540c \u65f6\u95f4\u3002 \u793a\u4f8b\u4f2a\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 String get ( String key ){ // \u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6\u6570\u636e String cacheValue = cache . get ( key ); // \u7f13\u5b58\u4e3a\u7a7a if ( StringUtils . isBlank ( cacheValue )) { // \u4ece\u5b58\u50a8\u4e2d\u83b7\u53d6 String storageValue = storage . get ( key ); cache . set ( key , storageValue ); //\u8bbe\u7f6e\u4e00\u4e2a\u8fc7\u671f\u65f6\u95f4(300\u5230600\u4e4b\u95f4\u7684\u4e00\u4e2a\u968f\u673a\u6570) int expireTime = new Random (). nextInt ( 300 ) + 300 ; if ( storageValue == null ) { cache . expire ( key , expireTime ); } return storageValue ; } else { // \u7f13\u5b58\u975e\u7a7a return cacheValue ; } }","title":"\u7f13\u5b58\u5931\u6548(\u51fb\u7a7f)"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB2/#_3","text":"\u7f13\u5b58\u96ea\u5d29\u6307\u7684\u662f\u7f13\u5b58\u5c42\u652f\u6491\u4e0d\u4f4f\u6216\u5b95\u6389\u540e\uff0c \u6d41\u91cf\u4f1a\u50cf\u5954\u9003\u7684\u91ce\u725b\u4e00\u6837\uff0c \u6253\u5411\u540e\u7aef\u5b58\u50a8\u5c42\u3002 \u7531\u4e8e\u7f13\u5b58\u5c42\u627f\u8f7d\u7740\u5927\u91cf\u8bf7\u6c42\uff0c \u6709\u6548\u5730\u4fdd\u62a4\u4e86\u5b58\u50a8\u5c42\uff0c \u4f46\u662f\u5982\u679c\u7f13\u5b58\u5c42\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\u4e0d\u80fd\u63d0\u4f9b\u670d\u52a1(\u6bd4\u5982\u8d85\u5927\u5e76 \u53d1\u8fc7\u6765\uff0c\u7f13\u5b58\u5c42\u652f\u6491\u4e0d\u4f4f\uff0c\u6216\u8005\u7531\u4e8e\u7f13\u5b58\u8bbe\u8ba1\u4e0d\u597d\uff0c\u7c7b\u4f3c\u5927\u91cf\u8bf7\u6c42\u8bbf\u95eebigkey\uff0c\u5bfc\u81f4\u7f13\u5b58\u80fd\u652f\u6491\u7684\u5e76\u53d1\u6025\u5267\u4e0b \u964d)\uff0c \u4e8e\u662f\u5927\u91cf\u8bf7\u6c42\u90fd\u4f1a\u6253\u5230\u5b58\u50a8\u5c42\uff0c \u5b58\u50a8\u5c42\u7684\u8c03\u7528\u91cf\u4f1a\u66b4\u589e\uff0c \u9020\u6210\u5b58\u50a8\u5c42\u4e5f\u4f1a\u7ea7\u8054\u5b95\u673a\u7684\u60c5\u51b5\u3002 \u9884\u9632\u548c\u89e3\u51b3\u7f13\u5b58\u96ea\u5d29\u95ee\u9898\uff0c \u53ef\u4ee5\u4ece\u4ee5\u4e0b\u4e09\u4e2a\u65b9\u9762\u8fdb\u884c\u7740\u624b\u3002 1\uff09 \u4fdd\u8bc1\u7f13\u5b58\u5c42\u670d\u52a1\u9ad8\u53ef\u7528\u6027\uff0c\u6bd4\u5982\u4f7f\u7528Redis Sentinel\u6216Redis Cluster\u3002 2\uff09 \u4f9d\u8d56\u9694\u79bb\u7ec4\u4ef6\u4e3a\u540e\u7aef\u9650\u6d41\u7194\u65ad\u5e76\u964d\u7ea7\u3002\u6bd4\u5982\u4f7f\u7528Sentinel\u6216Hystrix\u9650\u6d41\u964d\u7ea7\u7ec4\u4ef6\u3002 \u6bd4\u5982\u670d\u52a1\u964d\u7ea7\uff0c\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u7684\u6570\u636e\u91c7\u53d6\u4e0d\u540c\u7684\u5904\u7406\u65b9\u5f0f\u3002\u5f53\u4e1a\u52a1\u5e94\u7528\u8bbf\u95ee\u7684\u662f\u975e\u6838\u5fc3\u6570\u636e\uff08\u4f8b\u5982\u7535\u5546\u5546 \u54c1\u5c5e\u6027\uff0c\u7528\u6237\u4fe1\u606f\u7b49\uff09\u65f6\uff0c\u6682\u65f6\u505c\u6b62\u4ece\u7f13\u5b58\u4e2d\u67e5\u8be2\u8fd9\u4e9b\u6570\u636e\uff0c\u800c\u662f\u76f4\u63a5\u8fd4\u56de\u9884\u5b9a\u4e49\u7684\u9ed8\u8ba4\u964d\u7ea7\u4fe1\u606f\u3001\u7a7a\u503c\u6216\u662f \u9519\u8bef\u63d0\u793a\u4fe1\u606f\uff1b\u5f53\u4e1a\u52a1\u5e94\u7528\u8bbf\u95ee\u7684\u662f\u6838\u5fc3\u6570\u636e\uff08\u4f8b\u5982\u7535\u5546\u5546\u54c1\u5e93\u5b58\uff09\u65f6\uff0c\u4ecd\u7136\u5141\u8bb8\u67e5\u8be2\u7f13\u5b58\uff0c\u5982\u679c\u7f13\u5b58\u7f3a\u5931\uff0c \u4e5f\u53ef\u4ee5\u7ee7\u7eed\u901a\u8fc7\u6570\u636e\u5e93\u8bfb\u53d6\u3002 3\uff09 \u63d0\u524d\u6f14\u7ec3\u3002 \u5728\u9879\u76ee\u4e0a\u7ebf\u524d\uff0c \u6f14\u7ec3\u7f13\u5b58\u5c42\u5b95\u6389\u540e\uff0c \u5e94\u7528\u4ee5\u53ca\u540e\u7aef\u7684\u8d1f\u8f7d\u60c5\u51b5\u4ee5\u53ca\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\uff0c \u5728\u6b64\u57fa \u7840\u4e0a\u505a\u4e00\u4e9b\u9884\u6848\u8bbe\u5b9a\u3002","title":"\u7f13\u5b58\u96ea\u5d29"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB2/#key","text":"\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u201c\u7f13\u5b58+\u8fc7\u671f\u65f6\u95f4\u201d\u7684\u7b56\u7565\u65e2\u53ef\u4ee5\u52a0\u901f\u6570\u636e\u8bfb\u5199\uff0c \u53c8\u4fdd\u8bc1\u6570\u636e\u7684\u5b9a\u671f\u66f4\u65b0\uff0c \u8fd9\u79cd\u6a21\u5f0f\u57fa\u672c\u80fd\u591f \u6ee1\u8db3\u7edd\u5927\u90e8\u5206\u9700\u6c42\u3002 \u4f46\u662f\u6709\u4e24\u4e2a\u95ee\u9898\u5982\u679c\u540c\u65f6\u51fa\u73b0\uff0c \u53ef\u80fd\u5c31\u4f1a\u5bf9\u5e94\u7528\u9020\u6210\u81f4\u547d\u7684\u5371\u5bb3\uff1a \u5f53\u524dkey\u662f\u4e00\u4e2a\u70ed\u70b9key\uff08\u4f8b\u5982\u4e00\u4e2a\u70ed\u95e8\u7684\u5a31\u4e50\u65b0\u95fb\uff09\uff0c\u5e76\u53d1\u91cf\u975e\u5e38\u5927\u3002 \u91cd\u5efa\u7f13\u5b58\u4e0d\u80fd\u5728\u77ed\u65f6\u95f4\u5b8c\u6210\uff0c \u53ef\u80fd\u662f\u4e00\u4e2a\u590d\u6742\u8ba1\u7b97\uff0c \u4f8b\u5982\u590d\u6742\u7684SQL\u3001 \u591a\u6b21IO\u3001 \u591a\u4e2a\u4f9d\u8d56\u7b49\u3002 \u5728\u7f13\u5b58\u5931\u6548\u7684\u77ac\u95f4\uff0c \u6709\u5927\u91cf\u7ebf\u7a0b\u6765\u91cd\u5efa\u7f13\u5b58\uff0c \u9020\u6210\u540e\u7aef\u8d1f\u8f7d\u52a0\u5927\uff0c \u751a\u81f3\u53ef\u80fd\u4f1a\u8ba9\u5e94\u7528\u5d29\u6e83\u3002 \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e3b\u8981\u5c31\u662f\u8981\u907f\u514d\u5927\u91cf\u7ebf\u7a0b\u540c\u65f6\u91cd\u5efa\u7f13\u5b58\u3002 \u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e92\u65a5\u9501\u6765\u89e3\u51b3\uff0c\u6b64\u65b9\u6cd5\u53ea\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u91cd\u5efa\u7f13\u5b58\uff0c \u5176\u4ed6\u7ebf\u7a0b\u7b49\u5f85\u91cd\u5efa\u7f13\u5b58\u7684\u7ebf\u7a0b\u6267\u884c\u5b8c\uff0c \u91cd\u65b0 \u4ece\u7f13\u5b58\u83b7\u53d6\u6570\u636e\u5373\u53ef\u3002 \u793a\u4f8b\u4f2a\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 String get ( String key ){ // \u4eceRedis\u4e2d\u83b7\u53d6\u6570\u636e String value = redis . get ( key ); // \u5982\u679cvalue\u4e3a\u7a7a\uff0c \u5219\u5f00\u59cb\u91cd\u6784\u7f13\u5b58 if ( value == null ) { // \u53ea\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u91cd\u5efa\u7f13\u5b58\uff0c \u4f7f\u7528nx\uff0c \u5e76\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4ex String mutexKey = \"mutext:key:\" + key ; if ( redis . set ( mutexKey , \"1\" , \"ex 180\" , \"nx\" )) { // \u4ece\u6570\u636e\u6e90\u83b7\u53d6\u6570\u636e value = db . get ( key ); // \u56de\u5199Redis\uff0c \u5e76\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4 redis . setex ( key , timeout , value ); // \u5220\u9664key_mutex redis . delete ( mutexKey ); } // \u5176\u4ed6\u7ebf\u7a0b\u4f11\u606f50\u6beb\u79d2\u540e\u91cd\u8bd5 else { Thread . sleep ( 50 ); get ( key ); } } return value ; }","title":"\u70ed\u70b9\u7f13\u5b58key\u91cd\u5efa\u4f18\u5316"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB2/#_4","text":"\u5728\u5927\u5e76\u53d1\u4e0b\uff0c\u540c\u65f6\u64cd\u4f5c\u6570\u636e\u5e93\u4e0e\u7f13\u5b58\u4f1a\u5b58\u5728\u6570\u636e\u4e0d\u4e00\u81f4\u6027\u95ee\u9898 1\u3001\u53cc\u5199\u4e0d\u4e00\u81f4\u60c5\u51b5 2\u3001\u8bfb\u5199\u5e76\u53d1\u4e0d\u4e00\u81f4 \u89e3\u51b3\u65b9\u6848\uff1a 1\u3001\u5bf9\u4e8e\u5e76\u53d1\u51e0\u7387\u5f88\u5c0f\u7684\u6570\u636e(\u5982\u4e2a\u4eba\u7ef4\u5ea6\u7684\u8ba2\u5355\u6570\u636e\u3001\u7528\u6237\u6570\u636e\u7b49)\uff0c\u8fd9\u79cd\u51e0\u4e4e\u4e0d\u7528\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f88\u5c11\u4f1a\u53d1\u751f \u7f13\u5b58\u4e0d\u4e00\u81f4\uff0c\u53ef\u4ee5\u7ed9\u7f13\u5b58\u6570\u636e\u52a0\u4e0a\u8fc7\u671f\u65f6\u95f4\uff0c\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u89e6\u53d1\u8bfb\u7684\u4e3b\u52a8\u66f4\u65b0\u5373\u53ef\u3002 2\u3001\u5c31\u7b97\u5e76\u53d1\u5f88\u9ad8\uff0c\u5982\u679c\u4e1a\u52a1\u4e0a\u80fd\u5bb9\u5fcd\u77ed\u65f6\u95f4\u7684\u7f13\u5b58\u6570\u636e\u4e0d\u4e00\u81f4(\u5982\u5546\u54c1\u540d\u79f0\uff0c\u5546\u54c1\u5206\u7c7b\u83dc\u5355\u7b49)\uff0c\u7f13\u5b58\u52a0\u4e0a\u8fc7\u671f \u65f6\u95f4\u4f9d\u7136\u53ef\u4ee5\u89e3\u51b3\u5927\u90e8\u5206\u4e1a\u52a1\u5bf9\u4e8e\u7f13\u5b58\u7684\u8981\u6c42\u3002 3\u3001\u5982\u679c\u4e0d\u80fd\u5bb9\u5fcd\u7f13\u5b58\u6570\u636e\u4e0d\u4e00\u81f4\uff0c\u53ef\u4ee5\u901a\u8fc7\u52a0\u8bfb\u5199\u9501\u4fdd\u8bc1\u5e76\u53d1\u8bfb\u5199\u6216\u5199\u5199\u7684\u65f6\u5019\u6309\u987a\u5e8f\u6392\u597d\u961f\uff0c\u8bfb\u8bfb\u7684\u65f6\u5019 \u76f8\u5f53\u4e8e\u65e0\u9501\u3002 4\u3001\u4e5f\u53ef\u4ee5\u7528\u963f\u91cc\u5f00\u6e90\u7684canal\u901a\u8fc7\u76d1\u542c\u6570\u636e\u5e93\u7684binlog\u65e5\u5fd7\u53ca\u65f6\u7684\u53bb\u4fee\u6539\u7f13\u5b58\uff0c\u4f46\u662f\u5f15\u5165\u4e86\u65b0\u7684\u4e2d\u95f4\u4ef6\uff0c\u589e\u52a0 \u4e86\u7cfb\u7edf\u7684\u590d\u6742\u5ea6\u3002 \u603b\u7ed3\uff1a \u4ee5\u4e0a\u6211\u4eec\u9488\u5bf9\u7684\u90fd\u662f\u8bfb\u591a\u5199\u5c11\u7684\u60c5\u51b5\u52a0\u5165\u7f13\u5b58\u63d0\u9ad8\u6027\u80fd\uff0c\u5982\u679c\u5199\u591a\u8bfb\u591a\u7684\u60c5\u51b5\u53c8\u4e0d\u80fd\u5bb9\u5fcd\u7f13\u5b58\u6570\u636e\u4e0d\u4e00\u81f4\uff0c\u90a3 \u5c31\u6ca1\u5fc5\u8981\u52a0\u7f13\u5b58\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u6570\u636e\u5e93\u3002\u5f53\u7136\uff0c\u5982\u679c\u6570\u636e\u5e93\u6297\u4e0d\u4f4f\u538b\u529b\uff0c\u8fd8\u53ef\u4ee5\u628a\u7f13\u5b58\u4f5c\u4e3a\u6570\u636e\u8bfb\u5199\u7684\u4e3b\u5b58 \u50a8\uff0c\u5f02\u6b65\u5c06\u6570\u636e\u540c\u6b65\u5230\u6570\u636e\u5e93\uff0c\u6570\u636e\u5e93\u53ea\u662f\u4f5c\u4e3a\u6570\u636e\u7684\u5907\u4efd\u3002 \u653e\u5165\u7f13\u5b58\u7684\u6570\u636e\u5e94\u8be5\u662f\u5bf9\u5b9e\u65f6\u6027\u3001\u4e00\u81f4\u6027\u8981\u6c42\u4e0d\u662f\u5f88\u9ad8\u7684\u6570\u636e\u3002\u5207\u8bb0\u4e0d\u8981\u4e3a\u4e86\u7528\u7f13\u5b58\uff0c\u540c\u65f6\u53c8\u8981\u4fdd\u8bc1\u7edd\u5bf9\u7684\u4e00 \u81f4\u6027\u505a\u5927\u91cf\u7684\u8fc7\u5ea6\u8bbe\u8ba1\u548c\u63a7\u5236\uff0c\u589e\u52a0\u7cfb\u7edf\u590d\u6742\u6027\uff01","title":"\u7f13\u5b58\u4e0e\u6570\u636e\u5e93\u53cc\u5199\u4e0d\u4e00\u81f4"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB2/#_5","text":"","title":"\u5f00\u53d1\u89c4\u8303\u4e0e\u6027\u80fd\u4f18\u5316"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB2/#key_1","text":"\u3010\u5efa\u8bae\u3011: \u53ef\u8bfb\u6027\u548c\u53ef\u7ba1\u7406\u6027 \u4ee5\u4e1a\u52a1\u540d(\u6216\u6570\u636e\u5e93\u540d)\u4e3a\u524d\u7f00(\u9632\u6b62key\u51b2\u7a81)\uff0c\u7528\u5192\u53f7\u5206\u9694\uff0c\u6bd4\u5982\u4e1a\u52a1\u540d:\u8868\u540d:id trade:order:1 \u3010\u5efa\u8bae\u3011\uff1a\u7b80\u6d01\u6027 \u4fdd\u8bc1\u8bed\u4e49\u7684\u524d\u63d0\u4e0b\uff0c\u63a7\u5236key\u7684\u957f\u5ea6\uff0c\u5f53key\u8f83\u591a\u65f6\uff0c\u5185\u5b58\u5360\u7528\u4e5f\u4e0d\u5bb9\u5ffd\u89c6\uff0c\u4f8b\u5982\uff1a user:{uid}:friends:messages:{mid} \u7b80\u5316\u4e3a u:{uid}:fr:m:{mid} \u3010\u5f3a\u5236\u3011\uff1a\u4e0d\u8981\u5305\u542b\u7279\u6b8a\u5b57\u7b26 \u53cd\u4f8b\uff1a\u5305\u542b\u7a7a\u683c\u3001\u6362\u884c\u3001\u5355\u53cc\u5f15\u53f7\u4ee5\u53ca\u5176\u4ed6\u8f6c\u4e49\u5b57\u7b26","title":"key\u540d\u8bbe\u8ba1"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB2/#value","text":"\u3010\u5f3a\u5236\u3011\uff1a\u62d2\u7eddbigkey(\u9632\u6b62\u7f51\u5361\u6d41\u91cf\u3001\u6162\u67e5\u8be2) \u5728Redis\u4e2d\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6700\u5927512MB\uff0c\u4e00\u4e2a\u4e8c\u7ea7\u6570\u636e\u7ed3\u6784\uff08\u4f8b\u5982hash\u3001list\u3001set\u3001zset\uff09\u53ef\u4ee5\u5b58 \u50a8\u5927\u7ea640\u4ebf\u4e2a(2^32-1)\u4e2a\u5143\u7d20\uff0c\u4f46\u5b9e\u9645\u4e2d\u5982\u679c\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5\uff0c\u6211\u5c31\u4f1a\u8ba4\u4e3a\u5b83\u662fbigkey\u3002 \u5b57\u7b26\u4e32\u7c7b\u578b\uff1a\u5b83\u7684big\u4f53\u73b0\u5728\u5355\u4e2avalue\u503c\u5f88\u5927\uff0c\u4e00\u822c\u8ba4\u4e3a\u8d85\u8fc710KB\u5c31\u662fbigkey\u3002 \u975e\u5b57\u7b26\u4e32\u7c7b\u578b\uff1a\u54c8\u5e0c\u3001\u5217\u8868\u3001\u96c6\u5408\u3001\u6709\u5e8f\u96c6\u5408\uff0c\u5b83\u4eec\u7684big\u4f53\u73b0\u5728\u5143\u7d20\u4e2a\u6570\u592a\u591a\u3002 \u4e00\u822c\u6765\u8bf4\uff0cstring\u7c7b\u578b\u63a7\u5236\u572810KB\u4ee5\u5185\uff0chash\u3001list\u3001set\u3001zset\u5143\u7d20\u4e2a\u6570\u4e0d\u8981\u8d85\u8fc75000\u3002 \u53cd\u4f8b\uff1a\u4e00\u4e2a\u5305\u542b200\u4e07\u4e2a\u5143\u7d20\u7684list\u3002 \u975e\u5b57\u7b26\u4e32\u7684bigkey\uff0c\u4e0d\u8981\u4f7f\u7528del\u5220\u9664\uff0c\u4f7f\u7528hscan\u3001sscan\u3001zscan\u65b9\u5f0f\u6e10\u8fdb\u5f0f\u5220\u9664\uff0c\u540c\u65f6\u8981\u6ce8 \u610f\u9632\u6b62bigkey\u8fc7\u671f\u65f6\u95f4\u81ea\u52a8\u5220\u9664\u95ee\u9898(\u4f8b\u5982\u4e00\u4e2a200\u4e07\u7684zset\u8bbe\u7f6e1\u5c0f\u65f6\u8fc7\u671f\uff0c\u4f1a\u89e6\u53d1del\u64cd\u4f5c\uff0c \u9020\u6210\u963b\u585e\uff09","title":"value\u8bbe\u8ba1"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB2/#bigkey","text":"1.\u5bfc\u81f4redis\u963b\u585e 2.\u7f51\u7edc\u62e5\u585e bigkey\u4e5f\u5c31\u610f\u5473\u7740\u6bcf\u6b21\u83b7\u53d6\u8981\u4ea7\u751f\u7684\u7f51\u7edc\u6d41\u91cf\u8f83\u5927\uff0c\u5047\u8bbe\u4e00\u4e2abigkey\u4e3a1MB\uff0c\u5ba2\u6237\u7aef\u6bcf\u79d2\u8bbf\u95ee\u91cf\u4e3a1000\uff0c\u90a3\u4e48\u6bcf\u79d2\u4ea7\u751f1000MB\u7684\u6d41\u91cf\uff0c\u5bf9\u4e8e\u666e\u901a\u7684\u5343\u5146\u7f51\u5361(\u6309\u7167\u5b57\u8282\u7b97\u662f128MB/s)\u7684\u670d\u52a1\u5668\u6765\u8bf4\u7b80\u76f4\u662f\u706d\u9876\u4e4b\u707e\uff0c\u800c\u4e14\u4e00\u822c\u670d\u52a1\u5668\u4f1a\u91c7\u7528\u5355\u673a\u591a\u5b9e\u4f8b\u7684\u65b9\u5f0f\u6765\u90e8\u7f72\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2abigkey\u53ef\u80fd\u4f1a\u5bf9\u5176\u4ed6\u5b9e\u4f8b\u4e5f\u9020\u6210\u5f71\u54cd\uff0c\u5176\u540e\u679c\u4e0d\u582a\u8bbe\u60f3\u3002 3.\u8fc7\u671f\u5220\u9664 \u6709\u4e2abigkey\uff0c\u5b83\u5b89\u5206\u5b88\u5df1\uff08\u53ea\u6267\u884c\u7b80\u5355\u7684\u547d\u4ee4\uff0c\u4f8b\u5982hget\u3001lpop\u3001zscore\u7b49\uff09\uff0c\u4f46\u5b83\u8bbe\u7f6e\u4e86 \u671f\u65f6\u95f4\uff0c\u5f53\u5b83\u8fc7\u671f\u540e\uff0c\u4f1a\u88ab\u5220\u9664\uff0c\u5982\u679c\u6ca1\u6709\u4f7f\u7528Redis 4.0\u7684\u8fc7\u671f\u5f02\u6b65\u5220\u9664(lazyfree-lazyexpire yes)\uff0c\u5c31\u4f1a\u5b58\u5728\u963b\u585eRedis\u7684\u53ef\u80fd\u6027\u3002","title":"bigkey\u7684\u5371\u5bb3"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB2/#bigkey_1","text":"\u4e00\u822c\u6765\u8bf4\uff0cbigkey\u7684\u4ea7\u751f\u90fd\u662f\u7531\u4e8e\u7a0b\u5e8f\u8bbe\u8ba1\u4e0d\u5f53\uff0c\u6216\u8005\u5bf9\u4e8e\u6570\u636e\u89c4\u6a21\u9884\u6599\u4e0d\u6e05\u695a\u9020\u6210\u7684\uff0c\u6765\u770b\u51e0\u4e2a\u4f8b\u5b50\uff1a (1) \u793e\u4ea4\u7c7b\uff1a\u7c89\u4e1d\u5217\u8868\uff0c\u5982\u679c\u67d0\u4e9b\u660e\u661f\u6216\u8005\u5927v\u4e0d\u7cbe\u5fc3\u8bbe\u8ba1\u4e0b\uff0c\u5fc5\u662fbigkey\u3002 (2) \u7edf\u8ba1\u7c7b\uff1a\u4f8b\u5982\u6309\u5929\u5b58\u50a8\u67d0\u9879\u529f\u80fd\u6216\u8005\u7f51\u7ad9\u7684\u7528\u6237\u96c6\u5408\uff0c\u9664\u975e\u6ca1\u51e0\u4e2a\u4eba\u7528\uff0c\u5426\u5219\u5fc5\u662fbigkey\u3002 (3) \u7f13\u5b58\u7c7b\uff1a\u5c06\u6570\u636e\u4ece\u6570\u636e\u5e93load\u51fa\u6765\u5e8f\u5217\u5316\u653e\u5230Redis\u91cc\uff0c\u8fd9\u4e2a\u65b9\u5f0f\u975e\u5e38\u5e38\u7528\uff0c\u4f46\u6709\u4e24\u4e2a\u5730\u65b9\u9700\u8981\u6ce8\u610f\uff0c \u7b2c\u4e00\uff0c\u662f\u4e0d\u662f\u6709\u5fc5\u8981\u628a\u6240\u6709\u5b57\u6bb5\u90fd\u7f13\u5b58\uff1b \u7b2c\u4e8c\uff0c\u6709\u6ca1\u6709\u76f8\u5173\u5173\u8054\u7684\u6570\u636e\uff0c\u6709\u7684\u540c\u5b66\u4e3a\u4e86\u56fe\u65b9\u4fbf\u628a\u76f8\u5173\u6570\u636e\u90fd\u5b58\u4e00\u4e2akey\u4e0b\uff0c\u4ea7\u751fbigkey\u3002","title":"bigkey\u7684\u4ea7\u751f"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB2/#bigkey_2","text":"\u62c6 big list\uff1a list1\u3001list2\u3001...listN big hash\uff1a\u53ef\u4ee5\u8bb2\u6570\u636e\u5206\u6bb5\u5b58\u50a8\uff0c\u6bd4\u5982\u4e00\u4e2a\u5927\u7684key\uff0c\u5047\u8bbe\u5b58\u4e861\u767e\u4e07\u7684\u7528\u6237\u6570\u636e\uff0c\u53ef\u4ee5\u62c6\u5206\u6210 200\u4e2akey\uff0c\u6bcf\u4e2akey\u4e0b\u9762\u5b58\u653e5000\u4e2a\u7528\u6237\u6570\u636e \u5982\u679cbigkey\u4e0d\u53ef\u907f\u514d \uff0c\u4e5f\u8981\u601d\u8003\u4e00\u4e0b\u8981\u4e0d\u8981\u6bcf\u6b21\u628a\u6240\u6709\u5143\u7d20\u90fd\u53d6\u51fa\u6765(\u4f8b\u5982\u6709\u65f6\u5019\u4ec5\u4ec5\u9700\u8981 hmget\uff0c\u800c\u4e0d\u662fhgetall)\uff0c\u5220\u9664\u4e5f\u662f\u4e00\u6837\uff0c\u5c3d\u91cf\u4f7f\u7528\u4f18\u96c5\u7684\u65b9\u5f0f\u6765\u5904\u7406\u3002 \u3010\u63a8\u8350\u3011 \uff1a\u9009\u62e9\u9002\u5408\u7684\u6570\u636e\u7c7b\u578b\u3002 \u4f8b\u5982\uff1a\u5b9e\u4f53\u7c7b\u578b(\u8981\u5408\u7406\u63a7\u5236\u548c\u4f7f\u7528\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u4e5f\u8981\u6ce8\u610f\u8282\u7701\u5185\u5b58\u548c\u6027\u80fd\u4e4b\u95f4\u7684\u5e73\u8861) \u53cd\u4f8b\uff1a 1 2 3 set user:1:name tom set user:1:age 19 set user:1:favor football \u6b63\u4f8b: 1 hmset user:1 name tom age 19 favor football \u3010\u63a8\u8350\u3011 \uff1a\u63a7\u5236key\u7684\u751f\u547d\u5468\u671f\uff0credis\u4e0d\u662f\u5783\u573e\u6876\u3002 \u5efa\u8bae\u4f7f\u7528expire\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4(\u6761\u4ef6\u5141\u8bb8\u53ef\u4ee5\u6253\u6563\u8fc7\u671f\u65f6\u95f4\uff0c\u9632\u6b62\u96c6\u4e2d\u8fc7\u671f)\u3002","title":"\u5982\u4f55\u4f18\u5316bigkey"},{"location":"Redis/Redis%E9%9D%A2%E8%AF%95%E7%AA%81%E5%87%BB2/#_6","text":"1.\u3010\u63a8\u8350\u3011 O(N)\u547d\u4ee4\u5173\u6ce8N\u7684\u6570\u91cf \u4f8b\u5982hgetall\u3001lrange\u3001smembers\u3001zrange\u3001sinter\u7b49\u5e76\u975e\u4e0d\u80fd\u4f7f\u7528\uff0c\u4f46\u662f\u9700\u8981\u660e\u786eN\u7684\u503c\u3002\u6709 \u904d\u5386\u7684\u9700\u6c42\u53ef\u4ee5\u4f7f\u7528hscan\u3001sscan\u3001zscan\u4ee3\u66ff\u3002 2.\u3010\u63a8\u8350\u3011\uff1a\u7981\u7528\u547d\u4ee4 \u7981\u6b62\u7ebf\u4e0a\u4f7f\u7528keys\u3001flushall\u3001flushdb\u7b49\uff0c\u901a\u8fc7redis\u7684rename\u673a\u5236\u7981\u6389\u547d\u4ee4\uff0c\u6216\u8005\u4f7f\u7528scan\u7684 \u65b9\u5f0f\u6e10\u8fdb\u5f0f\u5904\u7406\u3002 3.\u3010\u63a8\u8350\u3011\u5408\u7406\u4f7f\u7528select redis\u7684\u591a\u6570\u636e\u5e93\u8f83\u5f31\uff0c\u4f7f\u7528\u6570\u5b57\u8fdb\u884c\u533a\u5206\uff0c\u5f88\u591a\u5ba2\u6237\u7aef\u652f\u6301\u8f83\u5dee\uff0c\u540c\u65f6\u591a\u4e1a\u52a1\u7528\u591a\u6570\u636e\u5e93\u5b9e\u9645 \u8fd8\u662f\u5355\u7ebf\u7a0b\u5904\u7406\uff0c\u4f1a\u6709\u5e72\u6270\u3002 4.\u3010\u63a8\u8350\u3011\u4f7f\u7528\u6279\u91cf\u64cd\u4f5c\u63d0\u9ad8\u6548\u7387 1 \u539f\u751f\u547d\u4ee4\uff1a\u4f8b\u5982mget\u3001mset\u3002 2 \u975e\u539f\u751f\u547d\u4ee4\uff1a\u53ef\u4ee5\u4f7f\u7528pipeline\u63d0\u9ad8\u6548\u7387\u3002 \u4f46\u8981\u6ce8\u610f\u63a7\u5236\u4e00\u6b21\u6279\u91cf\u64cd\u4f5c\u7684\u5143\u7d20\u4e2a\u6570(\u4f8b\u5982500\u4ee5\u5185\uff0c\u5b9e\u9645\u4e5f\u548c\u5143\u7d20\u5b57\u8282\u6570\u6709\u5173)\u3002 \u6ce8\u610f\u4e24\u8005\u4e0d\u540c\uff1a 1 \u539f\u751f\u547d\u4ee4\u662f\u539f\u5b50\u64cd\u4f5c\uff0cpipeline\u662f\u975e\u539f\u5b50\u64cd\u4f5c\u3002 2 pipeline\u53ef\u4ee5\u6253\u5305\u4e0d\u540c\u7684\u547d\u4ee4\uff0c\u539f\u751f\u547d\u4ee4\u505a\u4e0d\u5230 3 pipeline\u9700\u8981\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u540c\u65f6\u652f\u6301\u3002 5.\u3010\u5efa\u8bae\u3011Redis\u4e8b\u52a1\u529f\u80fd\u8f83\u5f31\uff0c\u4e0d\u5efa\u8bae\u8fc7\u591a\u4f7f\u7528\uff0c\u53ef\u4ee5\u7528lua\u66ff\u4ee3","title":"\u547d\u4ee4\u4f7f\u7528"},{"location":"SpringCloudAlibaba/04%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E7%BB%84%E4%BB%B6Feign/","text":"JAVA \u9879\u76ee\u4e2d\u5982\u4f55\u5b9e\u73b0\u63a5\u53e3\u8c03\u7528\uff1f 1\uff09Httpclient HttpClient \u662f Apache Jakarta Common \u4e0b\u7684\u5b50\u9879\u76ee\uff0c\u7528\u6765\u63d0\u4f9b\u9ad8\u6548\u7684\u3001\u6700\u65b0\u7684\u3001\u529f\u80fd\u4e30\u5bcc \u7684\u652f\u6301 Http \u534f\u8bae\u7684\u5ba2\u6237\u7aef\u7f16\u7a0b\u5de5\u5177\u5305\uff0c\u5e76\u4e14\u5b83\u652f\u6301 HTTP \u534f\u8bae\u6700\u65b0\u7248\u672c\u548c\u5efa\u8bae\u3002HttpClient \u76f8\u6bd4\u4f20\u7edf JDK \u81ea\u5e26\u7684 URLConnection\uff0c\u63d0\u5347\u4e86\u6613\u7528\u6027\u548c\u7075\u6d3b\u6027\uff0c\u4f7f\u5ba2\u6237\u7aef\u53d1\u9001 HTTP \u8bf7\u6c42\u53d8 \u5f97\u5bb9\u6613\uff0c\u63d0\u9ad8\u4e86\u5f00\u53d1\u7684\u6548\u7387\u3002 2\uff09Okhttp \u4e00\u4e2a\u5904\u7406\u7f51\u7edc\u8bf7\u6c42\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u662f\u5b89\u5353\u7aef\u6700\u706b\u7684\u8f7b\u91cf\u7ea7\u6846\u67b6\uff0c\u7531 Square \u516c\u53f8\u8d21\u732e\uff0c\u7528\u4e8e\u66ff\u4ee3 HttpUrlConnection \u548c Apache HttpClient\u3002OkHttp \u62e5\u6709\u7b80\u6d01\u7684 API\u3001\u9ad8\u6548\u7684\u6027\u80fd\uff0c\u5e76\u652f\u6301 \u591a\u79cd\u534f\u8bae\uff08HTTP/2 \u548c SPDY\uff09\u3002 3\uff09HttpURLConnection HttpURLConnection \u662f Java \u7684\u6807\u51c6\u7c7b\uff0c\u5b83\u7ee7\u627f\u81ea URLConnection\uff0c\u53ef\u7528\u4e8e\u5411\u6307\u5b9a\u7f51\u7ad9\u53d1\u9001 GET \u8bf7\u6c42\u3001POST \u8bf7\u6c42\u3002HttpURLConnection \u4f7f\u7528\u6bd4\u8f83\u590d\u6742\uff0c\u4e0d\u50cf HttpClient \u90a3\u6837\u5bb9\u6613\u4f7f\u7528\u3002 4\uff09RestTemplate WebClient RestTemplate \u662f Spring \u63d0\u4f9b\u7684\u7528\u4e8e\u8bbf\u95ee Rest \u670d\u52a1\u7684\u5ba2\u6237\u7aef\uff0cRestTemplate \u63d0\u4f9b\u4e86\u591a\u79cd\u4fbf \u6377\u8bbf\u95ee\u8fdc\u7a0b HTTP \u670d\u52a1\u7684\u65b9\u6cd5\uff0c\u80fd\u591f\u5927\u5927\u63d0\u9ad8\u5ba2\u6237\u7aef\u7684\u7f16\u5199\u6548\u7387\u3002 \u4e0a\u9762\u4ecb\u7ecd\u7684\u662f\u6700\u5e38\u89c1\u7684\u51e0\u79cd\u8c03\u7528\u63a5\u53e3\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u4e0b\u9762\u8981\u4ecb\u7ecd\u7684\u65b9\u6cd5\u6bd4\u4e0a\u9762\u7684\u66f4\u7b80\u5355\u3001\u65b9\u4fbf\uff0c \u5b83\u5c31\u662f Feign\u3002 \u4ec0\u4e48\u662fFeign Feign\u662fNetflix\u5f00\u53d1\u7684\u58f0\u660e\u5f0f\u3001\u6a21\u677f\u5316\u7684HTTP\u5ba2\u6237\u7aef\uff0c\u5176\u7075\u611f\u6765\u81eaRetrofit\u3001JAXRS-2.0\u4ee5\u53ca WebSocket\u3002Feign\u53ef\u5e2e\u52a9\u6211\u4eec\u66f4\u52a0\u4fbf\u6377\u3001\u4f18\u96c5\u5730\u8c03\u7528HTTP API\u3002 Feign\u652f\u6301\u591a\u79cd\u6ce8\u89e3\uff0c\u4f8b\u5982Feign\u81ea\u5e26\u7684\u6ce8\u89e3\u6216\u8005JAX-RS\u6ce8\u89e3\u7b49\u3002 Spring Cloud openfeign\u5bf9Feign\u8fdb\u884c\u4e86\u589e\u5f3a\uff0c\u4f7f\u5176\u652f\u6301Spring MVC\u6ce8\u89e3\uff0c\u53e6\u5916\u8fd8\u6574\u5408\u4e86Ribbon\u548cNacos\uff0c\u4ece\u800c\u4f7f\u5f97Feign\u7684\u4f7f\u7528\u66f4\u52a0\u65b9\u4fbf \u4f18\u52bf Feign\u53ef\u4ee5\u505a\u5230\u4f7f\u7528 HTTP \u8bf7\u6c42\u8fdc\u7a0b\u670d\u52a1\u65f6\u5c31\u50cf\u8c03\u7528\u672c\u5730\u65b9\u6cd5\u4e00\u6837\u7684\u4f53\u9a8c\uff0c\u5f00\u53d1\u8005\u5b8c\u5168\u611f\u77e5\u4e0d\u5230\u8fd9\u662f\u8fdc\u7a0b\u65b9\u6cd5\uff0c\u66f4\u611f\u77e5\u4e0d\u5230\u8fd9\u662f\u4e2a HTTP \u8bf7\u6c42\u3002\u5b83\u50cf Dubbo \u4e00\u6837\uff0cconsumer \u76f4\u63a5\u8c03\u7528\u63a5\u53e3\u65b9\u6cd5\u8c03\u7528 provider\uff0c\u800c\u4e0d\u9700\u8981\u901a\u8fc7\u5e38\u89c4\u7684 Http Client \u6784\u9020\u8bf7\u6c42\u518d\u89e3\u6790\u8fd4\u56de\u6570\u636e\u3002\u5b83\u89e3\u51b3\u4e86\u8ba9\u5f00\u53d1\u8005\u8c03\u7528\u8fdc\u7a0b\u63a5\u53e3\u5c31\u8ddf\u8c03\u7528\u672c\u5730\u65b9\u6cd5\u4e00\u6837\uff0c\u65e0\u9700\u5173\u6ce8\u4e0e\u8fdc\u7a0b\u7684\u4ea4\u4e92\u7ec6\u8282\uff0c\u66f4\u65e0\u9700\u5173\u6ce8\u5206\u5e03\u5f0f\u73af\u5883\u5f00\u53d1\u3002 Spring Cloud Alibaba\u5feb\u901f\u6574\u5408OpenFeign 1\uff09\u5f15\u5165\u4f9d\u8d56 1 2 3 4 < dependency > < groupId > org . springframework . cloud </ groupId > < artifactId > spring - cloud - starter - openfeign </ artifactId > </ dependency > 2\uff09\u7f16\u5199\u8c03\u7528\u63a5\u53e3+@FeignClient\u6ce8\u89e3 1 2 3 4 5 6 @FeignClient ( value = \"mall\u2010order\" , path = \"/order\" ) public interface OrderFeignService { @RequestMapping ( \"/findOrderByUserId/{userId}\" ) public R findOrderByUserId ( @PathVariable ( \"userId\" ) Integer userId ); } 3\uff09\u8c03\u7528\u7aef\u5728\u542f\u52a8\u7c7b\u4e0a\u6dfb\u52a0@EnableFeignClients\u6ce8\u89e3 1 2 3 4 5 6 7 @SpringBootApplication @EnableFeignClients public class MallUserFeignDemoApplication { public static void main ( String [] args ) { SpringApplication . run ( MallUserFeignDemoApplication . class , args ); } } 4\uff09\u53d1\u8d77\u8c03\u7528\uff0c\u50cf\u8c03\u7528\u672c\u5730\u65b9\u5f0f\u4e00\u6837\u8c03\u7528\u8fdc\u7a0b\u670d\u52a1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 @RestController @RequestMapping ( \"/user\" ) public class UserController { @Autowired OrderFeignService orderFeignService ; @RequestMapping ( value = \"/findOrderByUserId/{id}\" ) public R findOrderByUserId ( @PathVariable ( \"id\" ) Integer id ) { //feign\u8c03\u7528 R result = orderFeignService . findOrderByUserId ( id ); return result ; } } Spring Cloud Feign\u7684\u81ea\u5b9a\u4e49\u914d\u7f6e\u53ca\u4f7f\u7528 Feign \u63d0\u4f9b\u4e86\u5f88\u591a\u7684\u6269\u5c55\u673a\u5236\uff0c\u8ba9\u7528\u6237\u53ef\u4ee5\u66f4\u52a0\u7075\u6d3b\u7684\u4f7f\u7528\u3002 3.1 \u65e5\u5fd7\u914d\u7f6e \u6709\u65f6\u5019\u6211\u4eec\u9047\u5230 Bug\uff0c\u6bd4\u5982\u63a5\u53e3\u8c03\u7528\u5931\u8d25\u3001\u53c2\u6570\u6ca1\u6536\u5230\u7b49\u95ee\u9898\uff0c\u6216\u8005\u60f3\u770b\u770b\u8c03\u7528\u6027\u80fd\uff0c\u5c31\u9700\u8981 \u914d\u7f6e Feign \u7684\u65e5\u5fd7\u4e86\uff0c\u4ee5\u6b64\u8ba9 Feign \u628a\u8bf7\u6c42\u4fe1\u606f\u8f93\u51fa\u6765\u3002 1\uff09\u5b9a\u4e49\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff0c\u6307\u5b9a\u65e5\u5fd7\u7ea7\u522b 1 2 3 4 5 6 7 8 9 10 11 12 // \u6ce8\u610f\uff1a \u6b64\u5904\u914d\u7f6e@Configuration\u6ce8\u89e3\u5c31\u4f1a\u5168\u5c40\u751f\u6548\uff0c\u5982\u679c\u60f3\u6307\u5b9a\u5bf9\u5e94\u5fae\u670d\u52a1\u751f\u6548\uff0c\u5c31\u4e0d\u80fd\u914d\u7f6e public class FeignConfig { /** * \u65e5\u5fd7\u7ea7\u522b * * @return */ @Bean public Logger . Level feignLoggerLevel () { return Logger . Level . FULL ; } } \u901a\u8fc7\u6e90\u7801\u53ef\u4ee5\u770b\u5230\u65e5\u5fd7\u7b49\u7ea7\u6709 4 \u79cd\uff0c\u5206\u522b\u662f\uff1a NONE\u3010\u6027\u80fd\u6700\u4f73\uff0c\u9002\u7528\u4e8e\u751f\u4ea7\u3011\uff1a\u4e0d\u8bb0\u5f55\u4efb\u4f55\u65e5\u5fd7\uff08\u9ed8\u8ba4\u503c\uff09\u3002 BASIC\u3010\u9002\u7528\u4e8e\u751f\u4ea7\u73af\u5883\u8ffd\u8e2a\u95ee\u9898\u3011\uff1a\u4ec5\u8bb0\u5f55\u8bf7\u6c42\u65b9\u6cd5\u3001URL\u3001\u54cd\u5e94\u72b6\u6001\u4ee3\u7801\u4ee5\u53ca\u6267\u884c\u65f6\u95f4\u3002 HEADERS\uff1a\u8bb0\u5f55BASIC\u7ea7\u522b\u7684\u57fa\u7840\u4e0a\uff0c\u8bb0\u5f55\u8bf7\u6c42\u548c\u54cd\u5e94\u7684header\u3002 FULL\u3010\u6bd4\u8f83\u9002\u7528\u4e8e\u5f00\u53d1\u53ca\u6d4b\u8bd5\u73af\u5883\u5b9a\u4f4d\u95ee\u9898\u3011\uff1a\u8bb0\u5f55\u8bf7\u6c42\u548c\u54cd\u5e94\u7684header\u3001body\u548c\u5143\u6570\u636e\u3002 2\uff09\u5c40\u90e8\u914d\u7f6e\uff0c\u8ba9\u8c03\u7528\u7684\u5fae\u670d\u52a1\u751f\u6548\uff0c\u5728@FeignClient \u6ce8\u89e3\u4e2d\u6307\u5b9a\u4f7f\u7528\u7684\u914d\u7f6e\u7c7b 3\uff09\u5728yml\u914d\u7f6e\u6587\u4ef6\u4e2d\u6267\u884c Client \u7684\u65e5\u5fd7\u7ea7\u522b\u624d\u80fd\u6b63\u5e38\u8f93\u51fa\u65e5\u5fd7\uff0c\u683c\u5f0f\u662f\"logging.level.feign\u63a5\u53e3\u5305\u8def\u5f84 =debug\" 1 2 3 logging : level : com . tuling . mall . feigndemo . feign : debug \u6d4b\u8bd5\uff1aBASIC\u7ea7\u522b\u65e5\u5fd7 \u8865\u5145\uff1a\u5c40\u90e8\u914d\u7f6e\u53ef\u4ee5\u5728yml\u4e2d\u914d\u7f6e\u5bf9\u5e94\u5c5e\u6027\u914d\u7f6e\u7c7b\uff1a org.springframework.cloud.openfeign.FeignClientProperties.FeignClientConfiguration 1 2 3 4 5 feign : client : config : mall \u2010 order : # \u5bf9\u5e94\u5fae\u670d\u52a1 loggerLevel : FULL 3.2 \u5951\u7ea6\u914d\u7f6e Spring Cloud \u5728 Feign \u7684\u57fa\u7840\u4e0a\u505a\u4e86\u6269\u5c55\uff0c\u4f7f\u7528 Spring MVC \u7684\u6ce8\u89e3\u6765\u5b8c\u6210Feign\u7684\u529f \u80fd\u3002\u539f\u751f\u7684 Feign \u662f\u4e0d\u652f\u6301 Spring MVC \u6ce8\u89e3\u7684\uff0c\u5982\u679c\u4f60\u60f3\u5728 Spring Cloud \u4e2d\u4f7f\u7528\u539f\u751f\u7684 \u6ce8\u89e3\u65b9\u5f0f\u6765\u5b9a\u4e49\u5ba2\u6237\u7aef\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u901a\u8fc7\u914d\u7f6e\u5951\u7ea6\u6765\u6539\u53d8\u8fd9\u4e2a\u914d\u7f6e\uff0cSpring Cloud \u4e2d\u9ed8\u8ba4\u7684 \u662f SpringMvcContract\u3002 Spring Cloud 1 \u65e9\u671f\u7248\u672c\u5c31\u662f\u7528\u7684\u539f\u751fFegin. \u968f\u7740netflix\u7684\u505c\u66f4\u66ff\u6362\u6210\u4e86Open feign 1\uff09\u4fee\u6539\u5951\u7ea6\u914d\u7f6e\uff0c\u652f\u6301Feign\u539f\u751f\u7684\u6ce8\u89e3 1 2 3 4 5 6 7 8 9 /** * \u4fee\u6539\u5951\u7ea6\u914d\u7f6e\uff0c\u652f\u6301Feign\u539f\u751f\u7684\u6ce8\u89e3 * * @return */ @Bean public Contract feignContract () { return new Contract . Default (); } \u6ce8\u610f\uff1a\u4fee\u6539\u5951\u7ea6\u914d\u7f6e\u540e\uff0cOrderFeignService \u4e0d\u518d\u652f\u6301springmvc\u7684\u6ce8\u89e3\uff0c\u9700\u8981\u4f7f\u7528Feign\u539f \u751f\u7684\u6ce8\u89e3 2\uff09OrderFeignService \u4e2d\u914d\u7f6e\u4f7f\u7528Feign\u539f\u751f\u7684\u6ce8\u89e3 1 2 3 4 5 @FeignClient ( value = \"mall\u2010order\" , path = \"/order\" ) public interface OrderFeignService { @RequestLine ( \"GET /findOrderByUserId/{userId}\" ) public R findOrderByUserId ( @Param ( \"userId\" ) Integer userId ); } 3\uff09\u8865\u5145\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7yml\u914d\u7f6e\u5951\u7ea6 1 2 3 4 5 6 feign : client : config : mall \u2010 order : # \u5bf9\u5e94\u5fae\u670d\u52a1 loggerLevel : FULL contract : feign . Contract . Default # \u6307\u5b9aFeign\u539f\u751f\u6ce8\u89e3\u5951\u7ea6\u914d\u7f6e 3.3\u81ea\u5b9a\u4e49\u62e6\u622a\u5668\u5b9e\u73b0\u8ba4\u8bc1\u903b\u8f91 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 public class FeignAuthRequestInterceptor implements RequestInterceptor { @Override public void apply ( RequestTemplate template ) { // \u4e1a\u52a1\u903b\u8f91 String access_token = UUID . randomUUID (). toString (); template . header ( \"Authorization\" , access_token ); } } @Configuration // \u5168\u5c40\u914d\u7f6e public class FeignConfig { @Bean public Logger . Level feignLoggerLevel () { return Logger . Level . FULL ; } /** * \u81ea\u5b9a\u4e49\u62e6\u622a\u5668 * * @return */ @Bean public FeignAuthRequestInterceptor feignAuthRequestInterceptor () { return new FeignAuthRequestInterceptor (); } } \u6d4b\u8bd5 \u8865\u5145\uff1a\u53ef\u4ee5\u5728yml\u4e2d\u914d\u7f6e 1 2 3 4 5 6 feign : client : config : mall\u2010order : #\u5bf9\u5e94\u5fae\u670d\u52a1 requestInterceptors[0] : #\u914d\u7f6e\u62e6\u622a\u5668 com.tuling.mall.feigndemo.interceptor.FeignAuthRequestInterceptor mall-order\u7aef\u53ef\u4ee5\u901a\u8fc7 @RequestHeader\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570 \u5efa\u8bae\u5728filter,interceptor\u4e2d\u5904\u7406 3.4 \u8d85\u65f6\u65f6\u95f4\u914d\u7f6e \u901a\u8fc7 Options \u53ef\u4ee5\u914d\u7f6e\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\u548c\u8bfb\u53d6\u8d85\u65f6\u65f6\u95f4\uff0cOptions \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8fde\u63a5\u7684\u8d85\u65f6 \u65f6\u95f4\uff08ms\uff09\uff0c\u9ed8\u8ba4\u503c\u662f 2s\uff1b\u7b2c\u4e8c\u4e2a\u662f\u8bf7\u6c42\u5904\u7406\u7684\u8d85\u65f6\u65f6\u95f4\uff08ms\uff09\uff0c\u9ed8\u8ba4\u503c\u662f 5s\u3002 \u5168\u5c40\u914d\u7f6e 1 2 3 4 5 6 7 @Configuration public class FeignConfig { @Bean public Request . Options options () { return new Request . Options ( 5000 , 10000 ); } } yml\u4e2d\u914d\u7f6e 1 2 3 4 5 6 7 8 feign : client : config : mall\u2010order : #\u5bf9\u5e94\u5fae\u670d\u52a1 # \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba42s connectTimeout : 5000 # \u8bf7\u6c42\u5904\u7406\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba45s readTimeout : 10000 \u8865\u5145\u8bf4\u660e\uff1a Feign\u7684\u5e95\u5c42\u7528\u7684\u662fRibbon\uff0c\u4f46\u8d85\u65f6\u65f6\u95f4\u4ee5Feign\u914d\u7f6e\u4e3a\u51c6 3.5 \u5ba2\u6237\u7aef\u7ec4\u4ef6\u914d\u7f6e Feign \u4e2d\u9ed8\u8ba4\u4f7f\u7528 JDK \u539f\u751f\u7684 URLConnection \u53d1\u9001 HTTP \u8bf7\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u96c6\u6210\u522b\u7684\u7ec4\u4ef6\u6765 \u66ff\u6362\u6389 URLConnection\uff0c\u6bd4\u5982 Apache HttpClient\uff0cOkHttp\u3002 Feign\u53d1\u8d77\u8c03\u7528\u771f\u6b63\u6267\u884c\u903b\u8f91\uff1afeign.Client#execute \uff08\u6269\u5c55\u70b9\uff09 3.5.1 \u914d\u7f6eApache HttpClient \u5f15\u5165\u4f9d\u8d56 1 2 3 4 5 6 7 8 9 10 11 12 <!\u2010\u2010 Apache HttpClient \u2010\u2010> <dependency> <groupId> org.apache.httpcomponents </groupId> <artifactId> httpclient </artifactId> <version> 4.5.7 </version> </dependency> <dependency> <groupId> io.github.openfeign </groupId> <artifactId> feign\u2010httpclient </artifactId> <version> 10.1.0 </version> </dependency> \u7136\u540e\u4fee\u6539yml\u914d\u7f6e\uff0c\u5c06 Feign \u7684 Apache HttpClient\u542f\u7528 \uff1a 1 2 3 4 feign : #feign \u4f7f\u7528 Apache HttpClient \u53ef\u4ee5\u5ffd\u7565\uff0c\u9ed8\u8ba4\u5f00\u542f httpclient : enabled : true \u5173\u4e8e\u914d\u7f6e\u53ef\u53c2\u8003\u6e90\u7801\uff1a org.springframework.cloud.openfeign.FeignAutoConfiguration \u6d4b\u8bd5\uff1a\u8c03\u7528\u4f1a\u8fdb\u5165feign.httpclient.ApacheHttpClient#execute 3.5.2 \u914d\u7f6e OkHttp \u5f15\u5165\u4f9d\u8d56 1 2 3 4 <dependency> <groupId> io.github.openfeign </groupId> <artifactId> feign\u2010okhttp </artifactId> </dependency> \u7136\u540e\u4fee\u6539yml\u914d\u7f6e\uff0c\u5c06 Feign \u7684 HttpClient \u7981\u7528\uff0c\u542f\u7528 OkHttp\uff0c\u914d\u7f6e\u5982\u4e0b\uff1a 1 2 3 4 5 6 feign : #feign \u4f7f\u7528 okhttp httpclient : enabled : false okhttp : enabled : true \u5173\u4e8e\u914d\u7f6e\u53ef\u53c2\u8003\u6e90\u7801\uff1a org.springframework.cloud.openfeign.FeignAutoConfiguration \u6d4b\u8bd5\uff1a\u8c03\u7528\u4f1a\u8fdb\u5165feign.okhttp.OkHttpClient#execute 3.6 GZIP \u538b\u7f29\u914d\u7f6e \u5f00\u542f\u538b\u7f29\u53ef\u4ee5\u6709\u6548\u8282\u7ea6\u7f51\u7edc\u8d44\u6e90\uff0c\u63d0\u5347\u63a5\u53e3\u6027\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u914d\u7f6e GZIP \u6765\u538b\u7f29\u6570\u636e\uff1a 1 2 3 4 5 6 7 8 9 10 11 feign : # \u914d\u7f6e GZIP \u6765\u538b\u7f29\u6570\u636e compression : request : enabled : true # \u914d\u7f6e\u538b\u7f29\u7684\u7c7b\u578b mime\u2010types : text/xml,application/xml,application/json # \u6700\u5c0f\u538b\u7f29\u503c min\u2010request\u2010size : 2048 response : enabled : true \u6ce8\u610f\uff1a\u53ea\u6709\u5f53 Feign \u7684 Http Client \u4e0d\u662f okhttp3 \u7684\u65f6\u5019\uff0c\u538b\u7f29\u624d\u4f1a\u751f\u6548\uff0c\u914d\u7f6e\u6e90\u7801\u5728 FeignAcceptGzipEncodingAutoConfiguration\u3002 \u6838\u5fc3\u4ee3\u7801\u5c31\u662f @ConditionalOnMissingBean\uff08type=\"okhttp3.OkHttpClient\"\uff09\uff0c\u8868\u793a Spring BeanFactory \u4e2d\u4e0d\u5305\u542b\u6307\u5b9a\u7684 bean \u65f6\u6761\u4ef6\u5339\u914d\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u542f\u7528 okhttp3 \u65f6\u624d\u4f1a\u8fdb \u884c\u538b\u7f29\u914d\u7f6e\u3002","title":"04\u5fae\u670d\u52a1\u8c03\u7528\u7ec4\u4ef6Feign"},{"location":"SpringCloudAlibaba/04%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E7%BB%84%E4%BB%B6Feign/#java","text":"1\uff09Httpclient HttpClient \u662f Apache Jakarta Common \u4e0b\u7684\u5b50\u9879\u76ee\uff0c\u7528\u6765\u63d0\u4f9b\u9ad8\u6548\u7684\u3001\u6700\u65b0\u7684\u3001\u529f\u80fd\u4e30\u5bcc \u7684\u652f\u6301 Http \u534f\u8bae\u7684\u5ba2\u6237\u7aef\u7f16\u7a0b\u5de5\u5177\u5305\uff0c\u5e76\u4e14\u5b83\u652f\u6301 HTTP \u534f\u8bae\u6700\u65b0\u7248\u672c\u548c\u5efa\u8bae\u3002HttpClient \u76f8\u6bd4\u4f20\u7edf JDK \u81ea\u5e26\u7684 URLConnection\uff0c\u63d0\u5347\u4e86\u6613\u7528\u6027\u548c\u7075\u6d3b\u6027\uff0c\u4f7f\u5ba2\u6237\u7aef\u53d1\u9001 HTTP \u8bf7\u6c42\u53d8 \u5f97\u5bb9\u6613\uff0c\u63d0\u9ad8\u4e86\u5f00\u53d1\u7684\u6548\u7387\u3002 2\uff09Okhttp \u4e00\u4e2a\u5904\u7406\u7f51\u7edc\u8bf7\u6c42\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u662f\u5b89\u5353\u7aef\u6700\u706b\u7684\u8f7b\u91cf\u7ea7\u6846\u67b6\uff0c\u7531 Square \u516c\u53f8\u8d21\u732e\uff0c\u7528\u4e8e\u66ff\u4ee3 HttpUrlConnection \u548c Apache HttpClient\u3002OkHttp \u62e5\u6709\u7b80\u6d01\u7684 API\u3001\u9ad8\u6548\u7684\u6027\u80fd\uff0c\u5e76\u652f\u6301 \u591a\u79cd\u534f\u8bae\uff08HTTP/2 \u548c SPDY\uff09\u3002 3\uff09HttpURLConnection HttpURLConnection \u662f Java \u7684\u6807\u51c6\u7c7b\uff0c\u5b83\u7ee7\u627f\u81ea URLConnection\uff0c\u53ef\u7528\u4e8e\u5411\u6307\u5b9a\u7f51\u7ad9\u53d1\u9001 GET \u8bf7\u6c42\u3001POST \u8bf7\u6c42\u3002HttpURLConnection \u4f7f\u7528\u6bd4\u8f83\u590d\u6742\uff0c\u4e0d\u50cf HttpClient \u90a3\u6837\u5bb9\u6613\u4f7f\u7528\u3002 4\uff09RestTemplate WebClient RestTemplate \u662f Spring \u63d0\u4f9b\u7684\u7528\u4e8e\u8bbf\u95ee Rest \u670d\u52a1\u7684\u5ba2\u6237\u7aef\uff0cRestTemplate \u63d0\u4f9b\u4e86\u591a\u79cd\u4fbf \u6377\u8bbf\u95ee\u8fdc\u7a0b HTTP \u670d\u52a1\u7684\u65b9\u6cd5\uff0c\u80fd\u591f\u5927\u5927\u63d0\u9ad8\u5ba2\u6237\u7aef\u7684\u7f16\u5199\u6548\u7387\u3002 \u4e0a\u9762\u4ecb\u7ecd\u7684\u662f\u6700\u5e38\u89c1\u7684\u51e0\u79cd\u8c03\u7528\u63a5\u53e3\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u4e0b\u9762\u8981\u4ecb\u7ecd\u7684\u65b9\u6cd5\u6bd4\u4e0a\u9762\u7684\u66f4\u7b80\u5355\u3001\u65b9\u4fbf\uff0c \u5b83\u5c31\u662f Feign\u3002","title":"JAVA \u9879\u76ee\u4e2d\u5982\u4f55\u5b9e\u73b0\u63a5\u53e3\u8c03\u7528\uff1f"},{"location":"SpringCloudAlibaba/04%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E7%BB%84%E4%BB%B6Feign/#feign","text":"Feign\u662fNetflix\u5f00\u53d1\u7684\u58f0\u660e\u5f0f\u3001\u6a21\u677f\u5316\u7684HTTP\u5ba2\u6237\u7aef\uff0c\u5176\u7075\u611f\u6765\u81eaRetrofit\u3001JAXRS-2.0\u4ee5\u53ca WebSocket\u3002Feign\u53ef\u5e2e\u52a9\u6211\u4eec\u66f4\u52a0\u4fbf\u6377\u3001\u4f18\u96c5\u5730\u8c03\u7528HTTP API\u3002 Feign\u652f\u6301\u591a\u79cd\u6ce8\u89e3\uff0c\u4f8b\u5982Feign\u81ea\u5e26\u7684\u6ce8\u89e3\u6216\u8005JAX-RS\u6ce8\u89e3\u7b49\u3002 Spring Cloud openfeign\u5bf9Feign\u8fdb\u884c\u4e86\u589e\u5f3a\uff0c\u4f7f\u5176\u652f\u6301Spring MVC\u6ce8\u89e3\uff0c\u53e6\u5916\u8fd8\u6574\u5408\u4e86Ribbon\u548cNacos\uff0c\u4ece\u800c\u4f7f\u5f97Feign\u7684\u4f7f\u7528\u66f4\u52a0\u65b9\u4fbf","title":"\u4ec0\u4e48\u662fFeign"},{"location":"SpringCloudAlibaba/04%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E7%BB%84%E4%BB%B6Feign/#_1","text":"Feign\u53ef\u4ee5\u505a\u5230\u4f7f\u7528 HTTP \u8bf7\u6c42\u8fdc\u7a0b\u670d\u52a1\u65f6\u5c31\u50cf\u8c03\u7528\u672c\u5730\u65b9\u6cd5\u4e00\u6837\u7684\u4f53\u9a8c\uff0c\u5f00\u53d1\u8005\u5b8c\u5168\u611f\u77e5\u4e0d\u5230\u8fd9\u662f\u8fdc\u7a0b\u65b9\u6cd5\uff0c\u66f4\u611f\u77e5\u4e0d\u5230\u8fd9\u662f\u4e2a HTTP \u8bf7\u6c42\u3002\u5b83\u50cf Dubbo \u4e00\u6837\uff0cconsumer \u76f4\u63a5\u8c03\u7528\u63a5\u53e3\u65b9\u6cd5\u8c03\u7528 provider\uff0c\u800c\u4e0d\u9700\u8981\u901a\u8fc7\u5e38\u89c4\u7684 Http Client \u6784\u9020\u8bf7\u6c42\u518d\u89e3\u6790\u8fd4\u56de\u6570\u636e\u3002\u5b83\u89e3\u51b3\u4e86\u8ba9\u5f00\u53d1\u8005\u8c03\u7528\u8fdc\u7a0b\u63a5\u53e3\u5c31\u8ddf\u8c03\u7528\u672c\u5730\u65b9\u6cd5\u4e00\u6837\uff0c\u65e0\u9700\u5173\u6ce8\u4e0e\u8fdc\u7a0b\u7684\u4ea4\u4e92\u7ec6\u8282\uff0c\u66f4\u65e0\u9700\u5173\u6ce8\u5206\u5e03\u5f0f\u73af\u5883\u5f00\u53d1\u3002","title":"\u4f18\u52bf"},{"location":"SpringCloudAlibaba/04%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E7%BB%84%E4%BB%B6Feign/#spring-cloud-alibabaopenfeign","text":"1\uff09\u5f15\u5165\u4f9d\u8d56 1 2 3 4 < dependency > < groupId > org . springframework . cloud </ groupId > < artifactId > spring - cloud - starter - openfeign </ artifactId > </ dependency > 2\uff09\u7f16\u5199\u8c03\u7528\u63a5\u53e3+@FeignClient\u6ce8\u89e3 1 2 3 4 5 6 @FeignClient ( value = \"mall\u2010order\" , path = \"/order\" ) public interface OrderFeignService { @RequestMapping ( \"/findOrderByUserId/{userId}\" ) public R findOrderByUserId ( @PathVariable ( \"userId\" ) Integer userId ); } 3\uff09\u8c03\u7528\u7aef\u5728\u542f\u52a8\u7c7b\u4e0a\u6dfb\u52a0@EnableFeignClients\u6ce8\u89e3 1 2 3 4 5 6 7 @SpringBootApplication @EnableFeignClients public class MallUserFeignDemoApplication { public static void main ( String [] args ) { SpringApplication . run ( MallUserFeignDemoApplication . class , args ); } } 4\uff09\u53d1\u8d77\u8c03\u7528\uff0c\u50cf\u8c03\u7528\u672c\u5730\u65b9\u5f0f\u4e00\u6837\u8c03\u7528\u8fdc\u7a0b\u670d\u52a1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 @RestController @RequestMapping ( \"/user\" ) public class UserController { @Autowired OrderFeignService orderFeignService ; @RequestMapping ( value = \"/findOrderByUserId/{id}\" ) public R findOrderByUserId ( @PathVariable ( \"id\" ) Integer id ) { //feign\u8c03\u7528 R result = orderFeignService . findOrderByUserId ( id ); return result ; } }","title":"Spring Cloud Alibaba\u5feb\u901f\u6574\u5408OpenFeign"},{"location":"SpringCloudAlibaba/04%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E7%BB%84%E4%BB%B6Feign/#spring-cloud-feign","text":"Feign \u63d0\u4f9b\u4e86\u5f88\u591a\u7684\u6269\u5c55\u673a\u5236\uff0c\u8ba9\u7528\u6237\u53ef\u4ee5\u66f4\u52a0\u7075\u6d3b\u7684\u4f7f\u7528\u3002","title":"Spring Cloud Feign\u7684\u81ea\u5b9a\u4e49\u914d\u7f6e\u53ca\u4f7f\u7528"},{"location":"SpringCloudAlibaba/04%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E7%BB%84%E4%BB%B6Feign/#31","text":"\u6709\u65f6\u5019\u6211\u4eec\u9047\u5230 Bug\uff0c\u6bd4\u5982\u63a5\u53e3\u8c03\u7528\u5931\u8d25\u3001\u53c2\u6570\u6ca1\u6536\u5230\u7b49\u95ee\u9898\uff0c\u6216\u8005\u60f3\u770b\u770b\u8c03\u7528\u6027\u80fd\uff0c\u5c31\u9700\u8981 \u914d\u7f6e Feign \u7684\u65e5\u5fd7\u4e86\uff0c\u4ee5\u6b64\u8ba9 Feign \u628a\u8bf7\u6c42\u4fe1\u606f\u8f93\u51fa\u6765\u3002 1\uff09\u5b9a\u4e49\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff0c\u6307\u5b9a\u65e5\u5fd7\u7ea7\u522b 1 2 3 4 5 6 7 8 9 10 11 12 // \u6ce8\u610f\uff1a \u6b64\u5904\u914d\u7f6e@Configuration\u6ce8\u89e3\u5c31\u4f1a\u5168\u5c40\u751f\u6548\uff0c\u5982\u679c\u60f3\u6307\u5b9a\u5bf9\u5e94\u5fae\u670d\u52a1\u751f\u6548\uff0c\u5c31\u4e0d\u80fd\u914d\u7f6e public class FeignConfig { /** * \u65e5\u5fd7\u7ea7\u522b * * @return */ @Bean public Logger . Level feignLoggerLevel () { return Logger . Level . FULL ; } } \u901a\u8fc7\u6e90\u7801\u53ef\u4ee5\u770b\u5230\u65e5\u5fd7\u7b49\u7ea7\u6709 4 \u79cd\uff0c\u5206\u522b\u662f\uff1a NONE\u3010\u6027\u80fd\u6700\u4f73\uff0c\u9002\u7528\u4e8e\u751f\u4ea7\u3011\uff1a\u4e0d\u8bb0\u5f55\u4efb\u4f55\u65e5\u5fd7\uff08\u9ed8\u8ba4\u503c\uff09\u3002 BASIC\u3010\u9002\u7528\u4e8e\u751f\u4ea7\u73af\u5883\u8ffd\u8e2a\u95ee\u9898\u3011\uff1a\u4ec5\u8bb0\u5f55\u8bf7\u6c42\u65b9\u6cd5\u3001URL\u3001\u54cd\u5e94\u72b6\u6001\u4ee3\u7801\u4ee5\u53ca\u6267\u884c\u65f6\u95f4\u3002 HEADERS\uff1a\u8bb0\u5f55BASIC\u7ea7\u522b\u7684\u57fa\u7840\u4e0a\uff0c\u8bb0\u5f55\u8bf7\u6c42\u548c\u54cd\u5e94\u7684header\u3002 FULL\u3010\u6bd4\u8f83\u9002\u7528\u4e8e\u5f00\u53d1\u53ca\u6d4b\u8bd5\u73af\u5883\u5b9a\u4f4d\u95ee\u9898\u3011\uff1a\u8bb0\u5f55\u8bf7\u6c42\u548c\u54cd\u5e94\u7684header\u3001body\u548c\u5143\u6570\u636e\u3002 2\uff09\u5c40\u90e8\u914d\u7f6e\uff0c\u8ba9\u8c03\u7528\u7684\u5fae\u670d\u52a1\u751f\u6548\uff0c\u5728@FeignClient \u6ce8\u89e3\u4e2d\u6307\u5b9a\u4f7f\u7528\u7684\u914d\u7f6e\u7c7b 3\uff09\u5728yml\u914d\u7f6e\u6587\u4ef6\u4e2d\u6267\u884c Client \u7684\u65e5\u5fd7\u7ea7\u522b\u624d\u80fd\u6b63\u5e38\u8f93\u51fa\u65e5\u5fd7\uff0c\u683c\u5f0f\u662f\"logging.level.feign\u63a5\u53e3\u5305\u8def\u5f84 =debug\" 1 2 3 logging : level : com . tuling . mall . feigndemo . feign : debug \u6d4b\u8bd5\uff1aBASIC\u7ea7\u522b\u65e5\u5fd7 \u8865\u5145\uff1a\u5c40\u90e8\u914d\u7f6e\u53ef\u4ee5\u5728yml\u4e2d\u914d\u7f6e\u5bf9\u5e94\u5c5e\u6027\u914d\u7f6e\u7c7b\uff1a org.springframework.cloud.openfeign.FeignClientProperties.FeignClientConfiguration 1 2 3 4 5 feign : client : config : mall \u2010 order : # \u5bf9\u5e94\u5fae\u670d\u52a1 loggerLevel : FULL","title":"3.1 \u65e5\u5fd7\u914d\u7f6e"},{"location":"SpringCloudAlibaba/04%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E7%BB%84%E4%BB%B6Feign/#32","text":"Spring Cloud \u5728 Feign \u7684\u57fa\u7840\u4e0a\u505a\u4e86\u6269\u5c55\uff0c\u4f7f\u7528 Spring MVC \u7684\u6ce8\u89e3\u6765\u5b8c\u6210Feign\u7684\u529f \u80fd\u3002\u539f\u751f\u7684 Feign \u662f\u4e0d\u652f\u6301 Spring MVC \u6ce8\u89e3\u7684\uff0c\u5982\u679c\u4f60\u60f3\u5728 Spring Cloud \u4e2d\u4f7f\u7528\u539f\u751f\u7684 \u6ce8\u89e3\u65b9\u5f0f\u6765\u5b9a\u4e49\u5ba2\u6237\u7aef\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u901a\u8fc7\u914d\u7f6e\u5951\u7ea6\u6765\u6539\u53d8\u8fd9\u4e2a\u914d\u7f6e\uff0cSpring Cloud \u4e2d\u9ed8\u8ba4\u7684 \u662f SpringMvcContract\u3002 Spring Cloud 1 \u65e9\u671f\u7248\u672c\u5c31\u662f\u7528\u7684\u539f\u751fFegin. \u968f\u7740netflix\u7684\u505c\u66f4\u66ff\u6362\u6210\u4e86Open feign 1\uff09\u4fee\u6539\u5951\u7ea6\u914d\u7f6e\uff0c\u652f\u6301Feign\u539f\u751f\u7684\u6ce8\u89e3 1 2 3 4 5 6 7 8 9 /** * \u4fee\u6539\u5951\u7ea6\u914d\u7f6e\uff0c\u652f\u6301Feign\u539f\u751f\u7684\u6ce8\u89e3 * * @return */ @Bean public Contract feignContract () { return new Contract . Default (); } \u6ce8\u610f\uff1a\u4fee\u6539\u5951\u7ea6\u914d\u7f6e\u540e\uff0cOrderFeignService \u4e0d\u518d\u652f\u6301springmvc\u7684\u6ce8\u89e3\uff0c\u9700\u8981\u4f7f\u7528Feign\u539f \u751f\u7684\u6ce8\u89e3 2\uff09OrderFeignService \u4e2d\u914d\u7f6e\u4f7f\u7528Feign\u539f\u751f\u7684\u6ce8\u89e3 1 2 3 4 5 @FeignClient ( value = \"mall\u2010order\" , path = \"/order\" ) public interface OrderFeignService { @RequestLine ( \"GET /findOrderByUserId/{userId}\" ) public R findOrderByUserId ( @Param ( \"userId\" ) Integer userId ); } 3\uff09\u8865\u5145\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7yml\u914d\u7f6e\u5951\u7ea6 1 2 3 4 5 6 feign : client : config : mall \u2010 order : # \u5bf9\u5e94\u5fae\u670d\u52a1 loggerLevel : FULL contract : feign . Contract . Default # \u6307\u5b9aFeign\u539f\u751f\u6ce8\u89e3\u5951\u7ea6\u914d\u7f6e","title":"3.2 \u5951\u7ea6\u914d\u7f6e"},{"location":"SpringCloudAlibaba/04%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E7%BB%84%E4%BB%B6Feign/#33","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 public class FeignAuthRequestInterceptor implements RequestInterceptor { @Override public void apply ( RequestTemplate template ) { // \u4e1a\u52a1\u903b\u8f91 String access_token = UUID . randomUUID (). toString (); template . header ( \"Authorization\" , access_token ); } } @Configuration // \u5168\u5c40\u914d\u7f6e public class FeignConfig { @Bean public Logger . Level feignLoggerLevel () { return Logger . Level . FULL ; } /** * \u81ea\u5b9a\u4e49\u62e6\u622a\u5668 * * @return */ @Bean public FeignAuthRequestInterceptor feignAuthRequestInterceptor () { return new FeignAuthRequestInterceptor (); } } \u6d4b\u8bd5 \u8865\u5145\uff1a\u53ef\u4ee5\u5728yml\u4e2d\u914d\u7f6e 1 2 3 4 5 6 feign : client : config : mall\u2010order : #\u5bf9\u5e94\u5fae\u670d\u52a1 requestInterceptors[0] : #\u914d\u7f6e\u62e6\u622a\u5668 com.tuling.mall.feigndemo.interceptor.FeignAuthRequestInterceptor mall-order\u7aef\u53ef\u4ee5\u901a\u8fc7 @RequestHeader\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570 \u5efa\u8bae\u5728filter,interceptor\u4e2d\u5904\u7406","title":"3.3\u81ea\u5b9a\u4e49\u62e6\u622a\u5668\u5b9e\u73b0\u8ba4\u8bc1\u903b\u8f91"},{"location":"SpringCloudAlibaba/04%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E7%BB%84%E4%BB%B6Feign/#34","text":"\u901a\u8fc7 Options \u53ef\u4ee5\u914d\u7f6e\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\u548c\u8bfb\u53d6\u8d85\u65f6\u65f6\u95f4\uff0cOptions \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8fde\u63a5\u7684\u8d85\u65f6 \u65f6\u95f4\uff08ms\uff09\uff0c\u9ed8\u8ba4\u503c\u662f 2s\uff1b\u7b2c\u4e8c\u4e2a\u662f\u8bf7\u6c42\u5904\u7406\u7684\u8d85\u65f6\u65f6\u95f4\uff08ms\uff09\uff0c\u9ed8\u8ba4\u503c\u662f 5s\u3002 \u5168\u5c40\u914d\u7f6e 1 2 3 4 5 6 7 @Configuration public class FeignConfig { @Bean public Request . Options options () { return new Request . Options ( 5000 , 10000 ); } } yml\u4e2d\u914d\u7f6e 1 2 3 4 5 6 7 8 feign : client : config : mall\u2010order : #\u5bf9\u5e94\u5fae\u670d\u52a1 # \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba42s connectTimeout : 5000 # \u8bf7\u6c42\u5904\u7406\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba45s readTimeout : 10000 \u8865\u5145\u8bf4\u660e\uff1a Feign\u7684\u5e95\u5c42\u7528\u7684\u662fRibbon\uff0c\u4f46\u8d85\u65f6\u65f6\u95f4\u4ee5Feign\u914d\u7f6e\u4e3a\u51c6","title":"3.4 \u8d85\u65f6\u65f6\u95f4\u914d\u7f6e"},{"location":"SpringCloudAlibaba/04%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E7%BB%84%E4%BB%B6Feign/#35","text":"Feign \u4e2d\u9ed8\u8ba4\u4f7f\u7528 JDK \u539f\u751f\u7684 URLConnection \u53d1\u9001 HTTP \u8bf7\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u96c6\u6210\u522b\u7684\u7ec4\u4ef6\u6765 \u66ff\u6362\u6389 URLConnection\uff0c\u6bd4\u5982 Apache HttpClient\uff0cOkHttp\u3002 Feign\u53d1\u8d77\u8c03\u7528\u771f\u6b63\u6267\u884c\u903b\u8f91\uff1afeign.Client#execute \uff08\u6269\u5c55\u70b9\uff09 3.5.1 \u914d\u7f6eApache HttpClient \u5f15\u5165\u4f9d\u8d56 1 2 3 4 5 6 7 8 9 10 11 12 <!\u2010\u2010 Apache HttpClient \u2010\u2010> <dependency> <groupId> org.apache.httpcomponents </groupId> <artifactId> httpclient </artifactId> <version> 4.5.7 </version> </dependency> <dependency> <groupId> io.github.openfeign </groupId> <artifactId> feign\u2010httpclient </artifactId> <version> 10.1.0 </version> </dependency> \u7136\u540e\u4fee\u6539yml\u914d\u7f6e\uff0c\u5c06 Feign \u7684 Apache HttpClient\u542f\u7528 \uff1a 1 2 3 4 feign : #feign \u4f7f\u7528 Apache HttpClient \u53ef\u4ee5\u5ffd\u7565\uff0c\u9ed8\u8ba4\u5f00\u542f httpclient : enabled : true \u5173\u4e8e\u914d\u7f6e\u53ef\u53c2\u8003\u6e90\u7801\uff1a org.springframework.cloud.openfeign.FeignAutoConfiguration \u6d4b\u8bd5\uff1a\u8c03\u7528\u4f1a\u8fdb\u5165feign.httpclient.ApacheHttpClient#execute 3.5.2 \u914d\u7f6e OkHttp \u5f15\u5165\u4f9d\u8d56 1 2 3 4 <dependency> <groupId> io.github.openfeign </groupId> <artifactId> feign\u2010okhttp </artifactId> </dependency> \u7136\u540e\u4fee\u6539yml\u914d\u7f6e\uff0c\u5c06 Feign \u7684 HttpClient \u7981\u7528\uff0c\u542f\u7528 OkHttp\uff0c\u914d\u7f6e\u5982\u4e0b\uff1a 1 2 3 4 5 6 feign : #feign \u4f7f\u7528 okhttp httpclient : enabled : false okhttp : enabled : true \u5173\u4e8e\u914d\u7f6e\u53ef\u53c2\u8003\u6e90\u7801\uff1a org.springframework.cloud.openfeign.FeignAutoConfiguration \u6d4b\u8bd5\uff1a\u8c03\u7528\u4f1a\u8fdb\u5165feign.okhttp.OkHttpClient#execute","title":"3.5 \u5ba2\u6237\u7aef\u7ec4\u4ef6\u914d\u7f6e"},{"location":"SpringCloudAlibaba/04%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E7%BB%84%E4%BB%B6Feign/#36-gzip","text":"\u5f00\u542f\u538b\u7f29\u53ef\u4ee5\u6709\u6548\u8282\u7ea6\u7f51\u7edc\u8d44\u6e90\uff0c\u63d0\u5347\u63a5\u53e3\u6027\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u914d\u7f6e GZIP \u6765\u538b\u7f29\u6570\u636e\uff1a 1 2 3 4 5 6 7 8 9 10 11 feign : # \u914d\u7f6e GZIP \u6765\u538b\u7f29\u6570\u636e compression : request : enabled : true # \u914d\u7f6e\u538b\u7f29\u7684\u7c7b\u578b mime\u2010types : text/xml,application/xml,application/json # \u6700\u5c0f\u538b\u7f29\u503c min\u2010request\u2010size : 2048 response : enabled : true \u6ce8\u610f\uff1a\u53ea\u6709\u5f53 Feign \u7684 Http Client \u4e0d\u662f okhttp3 \u7684\u65f6\u5019\uff0c\u538b\u7f29\u624d\u4f1a\u751f\u6548\uff0c\u914d\u7f6e\u6e90\u7801\u5728 FeignAcceptGzipEncodingAutoConfiguration\u3002 \u6838\u5fc3\u4ee3\u7801\u5c31\u662f @ConditionalOnMissingBean\uff08type=\"okhttp3.OkHttpClient\"\uff09\uff0c\u8868\u793a Spring BeanFactory \u4e2d\u4e0d\u5305\u542b\u6307\u5b9a\u7684 bean \u65f6\u6761\u4ef6\u5339\u914d\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u542f\u7528 okhttp3 \u65f6\u624d\u4f1a\u8fdb \u884c\u538b\u7f29\u914d\u7f6e\u3002","title":"3.6 GZIP \u538b\u7f29\u914d\u7f6e"},{"location":"SpringCloudAlibaba/06Alibaba%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BB%84%E4%BB%B6Sentinel/","text":"1\u3001\u5206\u5e03\u5f0f\u7cfb\u7edf\u9047\u5230\u7684\u95ee\u9898 \u670d\u52a1\u7684\u53ef\u7528\u6027\u95ee\u9898 \u670d\u52a1\u7684\u53ef\u7528\u6027\u573a\u666f \u5728\u4e00\u4e2a\u9ad8\u5ea6\u670d\u52a1\u5316\u7684\u7cfb\u7edf\u4e2d,\u6211\u4eec\u5b9e\u73b0\u7684\u4e00\u4e2a\u4e1a\u52a1\u903b\u8f91\u901a\u5e38\u4f1a\u4f9d\u8d56\u591a\u4e2a\u670d\u52a1, \u5982\u56fe\u6240\u793a: \u5982\u679c\u5176\u4e2d\u7684\u4e0b\u5355\u670d\u52a1\u4e0d\u53ef\u7528, \u5c31\u4f1a\u51fa\u73b0\u7ebf\u7a0b\u6c60\u91cc\u6240\u6709\u7ebf\u7a0b\u90fd\u56e0\u7b49\u5f85\u54cd\u5e94\u800c\u88ab\u963b\u585e, \u4ece\u800c\u9020\u6210\u6574\u4e2a\u670d\u52a1\u94fe\u8def\u4e0d\u53ef\u7528\uff0c \u8fdb\u800c\u5bfc\u81f4\u6574\u4e2a\u7cfb\u7edf\u7684\u670d\u52a1\u96ea\u5d29. \u5982\u56fe\u6240\u793a: \u670d\u52a1\u96ea\u5d29\u6548\u5e94\uff1a \u56e0\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u4e0d\u53ef\u7528\u5bfc\u81f4\u670d\u52a1\u8c03\u7528\u8005\u7684\u4e0d\u53ef\u7528,\u5e76\u5c06\u4e0d\u53ef\u7528\u9010\u6e10\u653e\u5927\u7684\u8fc7\u7a0b\uff0c\u5c31\u53eb\u670d\u52a1\u96ea\u5d29\u6548\u5e94 \u5bfc\u81f4\u670d\u52a1\u4e0d\u53ef\u7528\u7684\u539f\u56e0\uff1a \u5728\u670d\u52a1\u63d0\u4f9b\u8005\u4e0d\u53ef\u7528\u7684\u65f6\u5019\uff0c\u4f1a\u51fa\u73b0\u5927\u91cf\u91cd\u8bd5\u7684\u60c5\u51b5\uff1a\u7528\u6237\u91cd\u8bd5\u3001\u4ee3\u7801\u903b\u8f91\u91cd\u8bd5\uff0c\u8fd9\u4e9b\u91cd\u8bd5\u6700\u7ec8\u5bfc\u81f4\uff1a\u8fdb\u4e00\u6b65\u52a0\u5927\u8bf7\u6c42\u6d41\u91cf\u3002\u6240\u4ee5\u5f52\u6839\u7ed3\u5e95\u5bfc\u81f4\u96ea\u5d29\u6548\u5e94\u7684\u6700\u6839\u672c\u539f\u56e0\u662f\uff1a\u5927\u91cf\u8bf7\u6c42\u7ebf\u7a0b\u540c\u6b65\u7b49\u5f85\u9020\u6210\u7684\u8d44\u6e90\u8017\u5c3d\u3002\u5f53\u670d\u52a1\u8c03\u7528\u8005\u4f7f\u7528\u540c\u6b65\u8c03\u7528\u65f6, \u4f1a\u4ea7\u751f\u5927\u91cf\u7684\u7b49\u5f85\u7ebf\u7a0b\u5360\u7528\u7cfb\u7edf\u8d44\u6e90\u3002\u4e00\u65e6\u7ebf\u7a0b\u8d44\u6e90\u88ab\u8017\u5c3d,\u670d\u52a1\u8c03\u7528\u8005\u63d0\u4f9b\u7684\u670d\u52a1\u4e5f\u5c06\u5904\u4e8e\u4e0d\u53ef\u7528\u72b6\u6001, \u4e8e\u662f\u670d\u52a1\u96ea\u5d29\u6548\u5e94\u4ea7\u751f\u4e86\u3002 2\u3001\u89e3\u51b3\u65b9\u6848 \u7a33\u5b9a\u6027\u3001\u6062\u590d\u6027 \u5e38\u89c1\u7684\u5bb9\u9519\u673a\u5236\uff1a \u8d85\u65f6\u673a\u5236 \u5728\u4e0d\u505a\u4efb\u4f55\u5904\u7406\u7684\u60c5\u51b5\u4e0b\uff0c\u670d\u52a1\u63d0\u4f9b\u8005\u4e0d\u53ef\u7528\u4f1a\u5bfc\u81f4\u6d88\u8d39\u8005\u8bf7\u6c42\u7ebf\u7a0b\u5f3a\u5236\u7b49\u5f85\uff0c\u800c\u9020\u6210\u7cfb\u7edf\u8d44\u6e90\u8017\u5c3d\u3002\u52a0\u5165\u8d85\u65f6\u673a\u5236\uff0c\u4e00\u65e6\u8d85\u65f6\uff0c\u5c31\u91ca\u653e\u8d44\u6e90\u3002\u7531\u4e8e\u91ca\u653e\u8d44\u6e90\u901f\u5ea6\u8f83\u5feb\uff0c\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u6291\u5236\u8d44\u6e90\u8017\u5c3d\u7684\u95ee\u9898\u3002 \u670d\u52a1\u9650\u6d41 \u9694\u79bb \u539f\u7406\uff1a\u7528\u6237\u7684\u8bf7\u6c42\u5c06\u4e0d\u518d\u76f4\u63a5\u8bbf\u95ee\u670d\u52a1\uff0c\u800c\u662f\u901a\u8fc7\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7a7a\u95f2\u7ebf\u7a0b\u6765\u8bbf\u95ee\u670d\u52a1\uff0c\u5982\u679c\u7ebf\u7a0b\u6c60\u5df2\u6ee1\uff0c\u5219\u4f1a\u8fdb\u884c\u964d\u7ea7\u5904\u7406\uff0c\u7528\u6237\u7684\u8bf7\u6c42\u4e0d\u4f1a\u88ab\u963b\u585e\uff0c\u81f3\u5c11\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u6267\u884c\u7ed3\u679c\uff08\u4f8b\u5982\u8fd4\u56de\u53cb\u597d\u7684\u63d0\u793a\u4fe1\u606f\uff09\uff0c\u800c\u4e0d\u662f\u65e0\u4f11\u6b62\u7684\u7b49\u5f85\u6216\u8005\u770b\u5230\u7cfb\u7edf\u5d29\u6e83\u3002 \u9694\u79bb\u524d\uff1a \u9694\u79bb\u540e\uff1a \u4fe1\u53f7\u9694\u79bb\uff1a \u4fe1\u53f7\u9694\u79bb\u4e5f\u53ef\u4ee5\u7528\u4e8e\u9650\u5236\u5e76\u53d1\u8bbf\u95ee\uff0c\u9632\u6b62\u963b\u585e\u6269\u6563, \u4e0e\u7ebf\u7a0b\u9694\u79bb\u6700\u5927\u4e0d\u540c\u5728\u4e8e\u6267\u884c\u4f9d\u8d56\u4ee3\u7801\u7684\u7ebf\u7a0b\u4f9d\u7136\u662f\u8bf7\u6c42\u7ebf\u7a0b\uff08\u8be5\u7ebf\u7a0b\u9700\u8981\u901a\u8fc7\u4fe1\u53f7\u7533\u8bf7, \u5982\u679c\u5ba2\u6237\u7aef\u662f\u53ef\u4fe1\u7684\u4e14\u53ef\u4ee5\u5feb\u901f\u8fd4\u56de\uff0c\u53ef\u4ee5\u4f7f\u7528\u4fe1\u53f7\u9694\u79bb\u66ff\u6362\u7ebf\u7a0b\u9694\u79bb,\u964d\u4f4e\u5f00\u9500\u3002\u4fe1\u53f7\u91cf\u7684\u5927\u5c0f\u53ef\u4ee5\u52a8\u6001\u8c03\u6574, \u7ebf\u7a0b\u6c60\u5927\u5c0f\u4e0d\u53ef\u4ee5\u3002 \u670d\u52a1\u7194\u65ad \u8fdc\u7a0b\u670d\u52a1\u4e0d\u7a33\u5b9a\u6216\u7f51\u7edc\u6296\u52a8\u65f6\u6682\u65f6\u5173\u95ed\uff0c\u5c31\u53eb\u670d\u52a1\u7194\u65ad\u3002 \u73b0\u5b9e\u4e16\u754c\u7684\u65ad\u8def\u5668\u5927\u5bb6\u80af\u5b9a\u90fd\u5f88\u4e86\u89e3\uff0c\u65ad\u8def\u5668\u5b9e\u65f6\u76d1\u63a7\u7535\u8def\u7684\u60c5\u51b5\uff0c\u5982\u679c\u53d1\u73b0\u7535\u8def\u7535\u6d41\u5f02\u5e38\uff0c\u5c31\u4f1a\u8df3\u95f8\uff0c\u4ece\u800c\u9632\u6b62\u7535\u8def\u88ab\u70e7\u6bc1\u3002 \u8f6f\u4ef6\u4e16\u754c\u7684\u65ad\u8def\u5668\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1a\u5b9e\u65f6\u76d1\u6d4b\u5e94\u7528\uff0c\u5982\u679c\u53d1\u73b0\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u5931\u8d25\u6b21\u6570/\u5931\u8d25\u7387\u8fbe\u5230\u4e00\u5b9a\u9608\u503c\uff0c\u5c31\u201c\u8df3\u95f8\u201d\uff0c\u65ad\u8def\u5668\u6253\u5f00\u2014\u2014\u6b64\u65f6\uff0c\u8bf7\u6c42\u76f4\u63a5\u8fd4\u56de\uff0c\u800c\u4e0d\u53bb\u8c03\u7528\u539f\u672c\u8c03\u7528\u7684\u903b\u8f91\u3002\u8df3\u95f8\u4e00\u6bb5\u65f6\u95f4\u540e\uff08\u4f8b\u598210\u79d2\uff09\uff0c\u65ad\u8def\u5668\u4f1a\u8fdb\u5165\u534a\u5f00\u72b6\u6001\uff0c\u8fd9\u662f\u4e00\u4e2a\u77ac\u95f4\u6001\uff0c\u6b64\u65f6\u5141\u8bb8\u4e00\u6b21\u8bf7\u6c42\u8c03\u7528\u8be5\u8c03\u7684\u903b\u8f91\uff0c\u5982\u679c\u6210\u529f\uff0c\u5219\u65ad\u8def\u5668\u5173\u95ed\uff0c\u5e94\u7528\u6b63\u5e38\u8c03\u7528\uff1b\u5982\u679c\u8c03\u7528\u4f9d\u7136\u4e0d\u6210\u529f\uff0c\u65ad\u8def\u5668\u7ee7\u7eed\u56de\u5230\u6253\u5f00\u72b6\u6001\uff0c\u8fc7\u6bb5\u65f6\u95f4\u518d\u8fdb\u5165\u534a\u5f00\u72b6\u6001\u5c1d\u8bd5\u2014\u2014\u901a\u8fc7\u201d\u8df3\u95f8\u201c\uff0c\u5e94\u7528\u53ef\u4ee5\u4fdd\u62a4\u81ea\u5df1\uff0c\u800c\u4e14\u907f\u514d\u6d6a\u8d39\u8d44\u6e90\uff1b\u800c\u901a\u8fc7\u534a\u5f00\u7684\u8bbe\u8ba1\uff0c\u53ef\u5b9e\u73b0\u5e94\u7528\u7684\u201c\u81ea\u6211\u4fee\u590d\u201c\u3002 \u6240\u4ee5\uff0c\u540c\u6837\u7684\u9053\u7406\uff0c\u5f53\u4f9d\u8d56\u7684\u670d\u52a1\u6709\u5927\u91cf\u8d85\u65f6\u65f6\uff0c\u5728\u8ba9\u65b0\u7684\u8bf7\u6c42\u53bb\u8bbf\u95ee\u6839\u672c\u6ca1\u6709\u610f\u4e49\uff0c\u53ea\u4f1a\u65e0\u754f\u7684\u6d88\u8017\u73b0\u6709\u8d44\u6e90\u3002\u6bd4\u5982\u6211\u4eec\u8bbe\u7f6e\u4e86\u8d85\u65f6\u65f6\u95f4\u4e3a1s,\u5982\u679c\u77ed\u65f6\u95f4\u5185\u6709\u5927\u91cf\u8bf7\u6c42\u57281s\u5185\u90fd\u5f97\u4e0d\u5230\u54cd\u5e94\uff0c\u5c31\u610f\u5473\u7740\u8fd9\u4e2a\u670d\u52a1\u51fa\u73b0\u4e86\u5f02\u5e38\uff0c\u6b64\u65f6\u5c31\u6ca1\u6709\u5fc5\u8981\u518d\u8ba9\u5176\u4ed6\u7684\u8bf7\u6c42\u53bb\u8bbf\u95ee\u8fd9\u4e2a\u4f9d\u8d56\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u5e94\u8be5\u4f7f\u7528\u65ad\u8def\u5668\u907f\u514d\u8d44\u6e90\u6d6a\u8d39\u3002 \u670d\u52a1\u964d\u7ea7 \u6709\u670d\u52a1\u7194\u65ad\uff0c\u5fc5\u7136\u8981\u6709\u670d\u52a1\u964d\u7ea7\u3002 \u6240\u8c13\u964d\u7ea7\uff0c\u5c31\u662f\u5f53\u67d0\u4e2a\u670d\u52a1\u7194\u65ad\u4e4b\u540e\uff0c\u670d\u52a1\u5c06\u4e0d\u518d\u88ab\u8c03\u7528\uff0c\u6b64\u65f6\u5ba2\u6237\u7aef\u53ef\u4ee5\u81ea\u5df1\u51c6\u5907\u4e00\u4e2a\u672c\u5730\u7684fallback\uff08\u56de\u9000\uff09\u56de\u8c03\uff0c\u8fd4\u56de\u4e00\u4e2a\u7f3a\u7701\u503c\u3002 \u4f8b\u5982\uff1a(\u5907\u7528\u63a5\u53e3/\u7f13\u5b58/mock\u6570\u636e) \u3002\u8fd9\u6837\u505a\uff0c\u867d\u7136\u670d\u52a1\u6c34\u5e73\u4e0b\u964d\uff0c\u4f46\u597d\u6b79\u53ef\u7528\uff0c\u6bd4\u76f4\u63a5\u6302\u6389\u8981\u5f3a\uff0c\u5f53\u7136\u8fd9\u4e5f\u8981\u770b\u9002\u5408\u7684\u4e1a\u52a1\u573a\u666f\u3002 3\u3001Sentinel: \u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u6d41\u91cf\u9632\u536b\u5175 Sentinel \u662f\u4ec0\u4e48 \u968f\u7740\u5fae\u670d\u52a1\u7684\u6d41\u884c\uff0c\u670d\u52a1\u548c\u670d\u52a1\u4e4b\u95f4\u7684\u7a33\u5b9a\u6027\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981\u3002Sentinel \u662f\u9762\u5411\u5206\u5e03\u5f0f\u670d\u52a1\u67b6\u6784\u7684\u6d41\u91cf\u63a7\u5236\u7ec4\u4ef6\uff0c\u4e3b\u8981\u4ee5\u6d41\u91cf\u4e3a\u5207\u5165\u70b9\uff0c\u4ece\u9650\u6d41\u3001\u6d41\u91cf\u6574\u5f62\u3001\u7194\u65ad\u964d\u7ea7\u3001\u7cfb\u7edf\u8d1f\u8f7d\u4fdd\u62a4\u3001\u70ed\u70b9\u9632\u62a4\u7b49\u591a\u4e2a\u7ef4\u5ea6\u6765\u5e2e\u52a9\u5f00\u53d1\u8005\u4fdd\u969c\u5fae\u670d\u52a1\u7684\u7a33\u5b9a\u6027\u3002 \u6e90\u7801\u5730\u5740\uff1a https://github.com/alibaba/Sentinel \u5b98\u65b9\u6587\u6863\uff1a https://github.com/alibaba/Sentinel/wiki Sentinel\u5177\u6709\u4ee5\u4e0b\u7279\u5f81: \u4e30\u5bcc\u7684\u5e94\u7528\u573a\u666f\uff1a Sentinel \u627f\u63a5\u4e86\u963f\u91cc\u5df4\u5df4\u8fd1 10 \u5e74\u7684\u53cc\u5341\u4e00\u5927\u4fc3\u6d41\u91cf\u7684\u6838\u5fc3\u573a\u666f\uff0c\u4f8b\u5982\u79d2\u6740\uff08\u5373\u7a81\u53d1\u6d41\u91cf\u63a7\u5236\u5728\u7cfb\u7edf\u5bb9\u91cf\u53ef\u4ee5\u627f\u53d7\u7684\u8303\u56f4\uff09\u3001\u6d88\u606f\u524a\u5cf0\u586b\u8c37\u3001\u5b9e\u65f6\u7194\u65ad\u4e0b\u6e38\u4e0d\u53ef\u7528\u5e94\u7528\u7b49\u3002 \u5b8c\u5907\u7684\u5b9e\u65f6\u76d1\u63a7\uff1a Sentinel \u540c\u65f6\u63d0\u4f9b\u5b9e\u65f6\u7684\u76d1\u63a7\u529f\u80fd\u3002\u60a8\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u4e2d\u770b\u5230\u63a5\u5165\u5e94\u7528\u7684\u5355\u53f0\u673a\u5668\u79d2\u7ea7\u6570\u636e\uff0c\u751a\u81f3 500 \u53f0\u4ee5\u4e0b\u89c4\u6a21\u7684\u96c6\u7fa4\u7684\u6c47\u603b\u8fd0\u884c\u60c5\u51b5\u3002 \u5e7f\u6cdb\u7684\u5f00\u6e90\u751f\u6001\uff1a Sentinel \u63d0\u4f9b\u5f00\u7bb1\u5373\u7528\u7684\u4e0e\u5176\u5b83\u5f00\u6e90\u6846\u67b6/\u5e93\u7684\u6574\u5408\u6a21\u5757\uff0c\u4f8b\u5982\u4e0e Spring Cloud\u3001Dubbo\u3001gRPC \u7684\u6574\u5408\u3002\u60a8\u53ea\u9700\u8981\u5f15\u5165\u76f8\u5e94\u7684\u4f9d\u8d56\u5e76\u8fdb\u884c\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\u5feb\u901f\u5730\u63a5\u5165 Sentinel\u3002 \u5b8c\u5584\u7684 SPI \u6269\u5c55\u70b9\uff1a Sentinel \u63d0\u4f9b\u7b80\u5355\u6613\u7528\u3001\u5b8c\u5584\u7684 SPI \u6269\u5c55\u70b9\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u6269\u5c55\u70b9\uff0c\u5feb\u901f\u7684\u5b9a\u5236\u903b\u8f91\u3002\u4f8b\u5982\u5b9a\u5236\u89c4\u5219\u7ba1\u7406\u3001\u9002\u914d\u6570\u636e\u6e90\u7b49\u3002 \u963f\u91cc\u4e91\u63d0\u4f9b\u4e86 \u4f01\u4e1a\u7ea7\u7684 Sentinel \u670d\u52a1\uff0c\u5e94\u7528\u9ad8\u53ef\u7528\u670d\u52a1 AHAS Sentinel\u548cHystrix\u5bf9\u6bd4 https://github.com/alibaba/Sentinel/wiki/Sentinel-%E4%B8%8E-Hystrix-%E7%9A%84%E5%AF%B9%E6%AF%94 4\u3001Sentinel\u5feb\u901f\u5f00\u59cb https://github.com/alibaba/Sentinel/wiki/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8 \u5728\u5b98\u65b9\u6587\u6863\u4e2d\uff0c\u5b9a\u4e49\u7684Sentinel\u8fdb\u884c\u8d44\u6e90\u4fdd\u62a4\u7684\u51e0\u4e2a\u6b65\u9aa4\uff1a \u5b9a\u4e49\u8d44\u6e90 \u5b9a\u4e49\u89c4\u5219 \u68c0\u9a8c\u89c4\u5219\u662f\u5426\u751f\u6548 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Entry entry = null ; // \u52a1\u5fc5\u4fdd\u8bc1 finally \u4f1a\u88ab\u6267\u884c try { // \u8d44\u6e90\u540d\u53ef\u4f7f\u7528\u4efb\u610f\u6709\u4e1a\u52a1\u8bed\u4e49\u7684\u5b57\u7b26\u4e32 \u5f00\u542f\u8d44\u6e90\u7684\u4fdd\u62a4 entry = SphU . entry ( \"\u81ea\u5b9a\u4e49\u8d44\u6e90\u540d\" ); // \u88ab\u4fdd\u62a4\u7684\u4e1a\u52a1\u903b\u8f91 method // do something... } catch ( BlockException ex ) { // \u8d44\u6e90\u8bbf\u95ee\u963b\u6b62\uff0c\u88ab\u9650\u6d41\u6216\u88ab\u964d\u7ea7 Sentinel\u5b9a\u4e49\u5f02\u5e38 \u6d41\u63a7\u89c4\u5219\uff0c\u964d\u7ea7\u89c4\u5219\uff0c\u70ed\u70b9\u53c2\u6570\u89c4\u5219\u3002\u3002\u3002\u3002 \u670d\u52a1\u964d\u7ea7(\u964d\u7ea7\u89c4\u5219) // \u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\u64cd\u4f5c } catch ( Exception ex ) { // \u82e5\u9700\u8981\u914d\u7f6e\u964d\u7ea7\u89c4\u5219\uff0c\u9700\u8981\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u8bb0\u5f55\u4e1a\u52a1\u5f02\u5e38 RuntimeException \u670d\u52a1\u964d\u7ea7 mock feign:fallback Tracer . traceEntry ( ex , entry ); } finally { // \u52a1\u5fc5\u4fdd\u8bc1 exit\uff0c\u52a1\u5fc5\u4fdd\u8bc1\u6bcf\u4e2a entry \u4e0e exit \u914d\u5bf9 if ( entry != null ) { entry . exit (); } } Sentinel\u8d44\u6e90\u4fdd\u62a4\u7684\u65b9\u5f0f API\u5b9e\u73b0 \u5f15\u5165\u4f9d\u8d56 1 2 3 4 5 <dependency> <groupId> com.alibaba.csp </groupId> <artifactId> sentinel-core </artifactId> <version> 1.8.0 </version> </dependency> \u7f16\u5199\u6d4b\u8bd5\u903b\u8f91 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 @RestController @Slf4j public class HelloController { private static final String RESOURCE_NAME = \"hello\" ; @RequestMapping ( value = \"/hello\" ) public String hello () { Entry entry = null ; try { // \u8d44\u6e90\u540d\u53ef\u4f7f\u7528\u4efb\u610f\u6709\u4e1a\u52a1\u8bed\u4e49\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982\u65b9\u6cd5\u540d\u3001\u63a5\u53e3\u540d\u6216\u5176\u5b83\u53ef\u552f\u4e00\u6807\u8bc6\u7684\u5b57\u7b26\u4e32\u3002 entry = SphU . entry ( RESOURCE_NAME ); // \u88ab\u4fdd\u62a4\u7684\u4e1a\u52a1\u903b\u8f91 String str = \"hello world\" ; log . info ( \"=====\" + str ); return str ; } catch ( BlockException e1 ) { // \u8d44\u6e90\u8bbf\u95ee\u963b\u6b62\uff0c\u88ab\u9650\u6d41\u6216\u88ab\u964d\u7ea7 //\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\u64cd\u4f5c log . info ( \"block!\" ); } catch ( Exception ex ) { // \u82e5\u9700\u8981\u914d\u7f6e\u964d\u7ea7\u89c4\u5219\uff0c\u9700\u8981\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u8bb0\u5f55\u4e1a\u52a1\u5f02\u5e38 Tracer . traceEntry ( ex , entry ); } finally { if ( entry != null ) { entry . exit (); } } return null ; } /** * \u5b9a\u4e49\u6d41\u63a7\u89c4\u5219 */ @PostConstruct private static void initFlowRules (){ List < FlowRule > rules = new ArrayList <> (); FlowRule rule = new FlowRule (); //\u8bbe\u7f6e\u53d7\u4fdd\u62a4\u7684\u8d44\u6e90 rule . setResource ( RESOURCE_NAME ); // \u8bbe\u7f6e\u6d41\u63a7\u89c4\u5219 QPS rule . setGrade ( RuleConstant . FLOW_GRADE_QPS ); // \u8bbe\u7f6e\u53d7\u4fdd\u62a4\u7684\u8d44\u6e90\u9608\u503c // Set limit QPS to 20. rule . setCount ( 1 ); rules . add ( rule ); // \u52a0\u8f7d\u914d\u7f6e\u597d\u7684\u89c4\u5219 FlowRuleManager . loadRules ( rules ); } } \u6d4b\u8bd5\u6548\u679c\uff1a \u7f3a\u70b9\uff1a \u4e1a\u52a1\u4fb5\u5165\u6027\u5f88\u5f3a\uff0c\u9700\u8981\u5728controller\u4e2d\u5199\u5165\u975e\u4e1a\u52a1\u4ee3\u7801. \u914d\u7f6e\u4e0d\u7075\u6d3b \u82e5\u9700\u8981\u6dfb\u52a0\u65b0\u7684\u53d7\u4fdd\u62a4\u8d44\u6e90 \u9700\u8981\u624b\u52a8\u6dfb\u52a0 init\u65b9\u6cd5\u6765\u6dfb\u52a0\u6d41\u63a7\u89c4\u5219 @SentinelResource\u6ce8\u89e3\u5b9e\u73b0 @SentinelResource \u6ce8\u89e3\u7528\u6765\u6807\u8bc6\u8d44\u6e90\u662f\u5426\u88ab\u9650\u6d41\u3001\u964d\u7ea7\u3002 blockHandler: \u5b9a\u4e49\u5f53\u8d44\u6e90\u5185\u90e8\u53d1\u751f\u4e86BlockException\u5e94\u8be5\u8fdb\u5165\u7684\u65b9\u6cd5\uff08\u6355\u83b7\u7684\u662fSentinel\u5b9a\u4e49\u7684\u5f02\u5e38\uff09 fallback: \u5b9a\u4e49\u7684\u662f\u8d44\u6e90\u5185\u90e8\u53d1\u751f\u4e86Throwable\u5e94\u8be5\u8fdb\u5165\u7684\u65b9\u6cd5 exceptionsToIgnore\uff1a\u914d\u7f6efallback\u53ef\u4ee5\u5ffd\u7565\u7684\u5f02\u5e38 \u6e90\u7801\u5165\u53e3\uff1acom.alibaba.csp.sentinel.annotation.aspectj.SentinelResourceAspect 1.\u5f15\u5165\u4f9d\u8d56 1 2 3 4 5 <dependency> <groupId> com.alibaba.csp </groupId> <artifactId> sentinel-annotation-aspectj </artifactId> <version> 1.8.0 </version> </dependency> 2.\u914d\u7f6e\u5207\u9762\u652f\u6301 1 2 3 4 5 6 7 @Configuration public class SentinelAspectConfiguration { @Bean public SentinelResourceAspect sentinelResourceAspect () { return new SentinelResourceAspect (); } } 3.UserController\u4e2d\u7f16\u5199\u6d4b\u8bd5\u903b\u8f91\uff0c\u6dfb\u52a0@SentinelResource\uff0c\u5e76\u914d\u7f6eblockHandler\u548cfallback 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 @RequestMapping ( value = \"/findOrderByUserId/{id}\" ) @SentinelResource ( value = \"findOrderByUserId\" , fallback = \"fallback\" , fallbackClass = ExceptionUtil . class , blockHandler = \"handleException\" , blockHandlerClass = ExceptionUtil . class ) public R findOrderByUserId ( @PathVariable ( \"id\" ) Integer id ) { //ribbon\u5b9e\u73b0 String url = \"http://mall-order/order/findOrderByUserId/\" + id ; R result = restTemplate . getForObject ( url , R . class ); if ( id == 4 ){ throw new IllegalArgumentException ( \"\u975e\u6cd5\u53c2\u6570\u5f02\u5e38\" ); } return result ; } 4.\u7f16\u5199ExceptionUtil\uff0c\u6ce8\u610f\u5982\u679c\u6307\u5b9a\u4e86class\uff0c\u65b9\u6cd5\u5fc5\u987b\u662fstatic\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 public class ExceptionUtil { public static R fallback ( Integer id , Throwable e ){ return R . error ( - 2 , \"===\u88ab\u5f02\u5e38\u964d\u7ea7\u5566===\" ); } public static R handleException ( Integer id , BlockException e ){ return R . error ( - 2 , \"===\u88ab\u9650\u6d41\u5566===\" ); } } 5.\u6d41\u63a7\u89c4\u5219\u8bbe\u7f6e\u53ef\u4ee5\u901a\u8fc7Sentinel dashboard\u914d\u7f6e \u5ba2\u6237\u7aef\u9700\u8981\u5f15\u5165 Transport \u6a21\u5757\u6765\u4e0e Sentinel \u63a7\u5236\u53f0\u8fdb\u884c\u901a\u4fe1\u3002 1 2 3 4 5 <dependency> <groupId> com.alibaba.csp </groupId> <artifactId> sentinel-transport-simple-http </artifactId> <version> 1.8.0 </version> </dependency> 1 -Dcsp.sentinel.dashboard.server = consoleIp:port 5\u3001\u542f\u52a8 Sentinel \u63a7\u5236\u53f0 \u4e0b\u8f7d\u63a7\u5236\u53f0 jar \u5305\u5e76\u5728\u672c\u5730\u542f\u52a8\uff1a\u53ef\u4ee5\u53c2\u89c1 \u6b64\u5904\u6587\u6863 https://github.com/alibaba/Sentinel/releases 1 2 3 4 5 6 7 8 #\u542f\u52a8\u63a7\u5236\u53f0\u547d\u4ee4 java -jar sentinel-dashboard-1.8.0.jar \u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u53c2\u6570\u8fdb\u884c\u914d\u7f6e\uff1a -Dsentinel.dashboard.auth.username = sentinel \u7528\u4e8e\u6307\u5b9a\u63a7\u5236\u53f0\u7684\u767b\u5f55\u7528\u6237\u540d\u4e3a sentinel\uff1b -Dsentinel.dashboard.auth.password = 123456 \u7528\u4e8e\u6307\u5b9a\u63a7\u5236\u53f0\u7684\u767b\u5f55\u5bc6\u7801\u4e3a 123456 \uff1b\u5982\u679c\u7701\u7565\u8fd9\u4e24\u4e2a\u53c2\u6570\uff0c\u9ed8\u8ba4\u7528\u6237\u548c\u5bc6\u7801\u5747\u4e3a sentinel\uff1b -Dserver.servlet.session.timeout = 7200 \u7528\u4e8e\u6307\u5b9a Spring Boot \u670d\u52a1\u7aef session \u7684\u8fc7\u671f\u65f6\u95f4\uff0c\u5982 7200 \u8868\u793a 7200 \u79d2\uff1b60m \u8868\u793a 60 \u5206\u949f\uff0c\u9ed8\u8ba4\u4e3a 30 \u5206\u949f\uff1b java -Dserver.port = 8858 -Dsentinel.dashboard.auth.username = xushu -Dsentinel.dashboard.auth.password = 123456 -jar sentinel-dashboard-1.8.0.jar \u4e3a\u4e86\u65b9\u4fbf\u5feb\u6377\u542f\u52a8\u53ef\u4ee5\u5728\u684c\u9762\u521b\u5efa.bat\u6587\u4ef6 1 2 java -Dserver.port = 8858 -Dsentinel.dashboard.auth.username = xushu -Dsentinel.dashboard.auth.password = 123456 -jar D: \\s erver \\s entinel-dashboard-1.8.0.jar pause \u8bbf\u95eehttp://localhost:8080/#/login ,\u9ed8\u8ba4\u7528\u6237\u540d\u5bc6\u7801\uff1a sentinel/sentinel Sentinel \u4f1a\u5728\u5ba2\u6237\u7aef\u9996\u6b21\u8c03\u7528\u7684\u65f6\u5019\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5f00\u59cb\u5411\u63a7\u5236\u53f0\u53d1\u9001\u5fc3\u8df3\u5305\uff0c\u6240\u4ee5\u8981\u786e\u4fdd\u5ba2\u6237\u7aef\u6709\u8bbf\u95ee\u91cf\uff1b 6\u3001Spring Cloud Alibaba\u6574\u5408Sentinel 1.\u5f15\u5165\u4f9d\u8d56 1 2 3 4 <dependency> <groupId> com.alibaba.cloud </groupId> <artifactId> spring-cloud-starter-alibaba-sentinel </artifactId> </dependency> 2.\u6dfb\u52a0yml\u914d\u7f6e\uff0c\u4e3a\u5fae\u670d\u52a1\u8bbe\u7f6esentinel\u63a7\u5236\u53f0\u5730\u5740 \u6dfb\u52a0Sentinel\u540e\uff0c\u9700\u8981\u66b4\u9732/actuator/sentinel\u7aef\u70b9,\u800cSpringboot\u9ed8\u8ba4\u662f\u6ca1\u6709\u66b4\u9732\u8be5\u7aef\u70b9\u7684\uff0c\u6240\u4ee5\u9700\u8981\u8bbe\u7f6e\uff0c\u6d4b\u8bd5http://localhost:8800/actuator/sentinel 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 server : port : 8800 spring : application : name : mall-user-sentinel-demo cloud : nacos : discovery : server-addr : 127.0.0.1:8848 sentinel : transport : # \u6dfb\u52a0sentinel\u7684\u63a7\u5236\u53f0\u5730\u5740 dashboard : 127.0.0.1:8080 # \u6307\u5b9a\u5e94\u7528\u4e0eSentinel\u63a7\u5236\u53f0\u4ea4\u4e92\u7684\u7aef\u53e3\uff0c\u5e94\u7528\u672c\u5730\u4f1a\u8d77\u4e00\u4e2a\u8be5\u7aef\u53e3\u5360\u7528\u7684HttpServer # port: 8719 3.\u5728sentinel\u63a7\u5236\u53f0\u4e2d\u8bbe\u7f6e\u6d41\u63a7\u89c4\u5219 \u8d44\u6e90\u540d: \u63a5\u53e3\u7684API \u9488\u5bf9\u6765\u6e90: \u9ed8\u8ba4\u662fdefault\uff0c\u5f53\u591a\u4e2a\u5fae\u670d\u52a1\u90fd\u8c03\u7528\u8fd9\u4e2a\u8d44\u6e90\u65f6\uff0c\u53ef\u4ee5\u914d\u7f6e\u5fae\u670d\u52a1\u540d\u6765\u5bf9\u6307\u5b9a\u7684\u5fae\u670d\u52a1\u8bbe\u7f6e\u9608\u503c \u9608\u503c\u7c7b\u578b: \u5206\u4e3aQPS\u548c\u7ebf\u7a0b\u6570 \u5047\u8bbe\u9608\u503c\u4e3a10 QPS\u7c7b\u578b: \u53ea\u5f97\u662f\u6bcf\u79d2\u8bbf\u95ee\u63a5\u53e3\u7684\u6b21\u6570>10\u5c31\u8fdb\u884c\u9650\u6d41 \u7ebf\u7a0b\u6570: \u4e3a\u63a5\u53d7\u8bf7\u6c42\u8be5\u8d44\u6e90\u5206\u914d\u7684\u7ebf\u7a0b\u6570>10\u5c31\u8fdb\u884c\u9650\u6d41 \u6d4b\u8bd5\uff1a \u56e0\u4e3aQPS\u662f1\uff0c\u6240\u4ee51\u79d2\u5185\u591a\u6b21\u8bbf\u95ee\u4f1a\u51fa\u73b0\u5982\u4e0b\u60c5\u5f62\uff1a \u8bbf\u95eehttp://localhost:8800/actuator/sentinel\uff0c \u53ef\u4ee5\u67e5\u770bflowRules \u5fae\u670d\u52a1\u548cSentinel Dashboard\u901a\u4fe1\u539f\u7406 Sentinel\u63a7\u5236\u53f0\u4e0e\u5fae\u670d\u52a1\u7aef\u4e4b\u95f4\uff0c\u5b9e\u73b0\u4e86\u4e00\u5957\u670d\u52a1\u53d1\u73b0\u673a\u5236\uff0c\u96c6\u6210\u4e86Sentinel\u7684\u5fae\u670d\u52a1\u90fd\u4f1a\u5c06\u5143\u6570\u636e\u4f20\u9012\u7ed9Sentinel\u63a7\u5236\u53f0\uff0c\u67b6\u6784\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u6d41\u63a7\u9488\u5bf9privoder \u7194\u65ad\u964d\u7ea7 \u9488\u5bf9consumer","title":"06Alibaba\u5fae\u670d\u52a1\u7ec4\u4ef6Sentinel"},{"location":"SpringCloudAlibaba/06Alibaba%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BB%84%E4%BB%B6Sentinel/#1","text":"\u670d\u52a1\u7684\u53ef\u7528\u6027\u95ee\u9898 \u670d\u52a1\u7684\u53ef\u7528\u6027\u573a\u666f \u5728\u4e00\u4e2a\u9ad8\u5ea6\u670d\u52a1\u5316\u7684\u7cfb\u7edf\u4e2d,\u6211\u4eec\u5b9e\u73b0\u7684\u4e00\u4e2a\u4e1a\u52a1\u903b\u8f91\u901a\u5e38\u4f1a\u4f9d\u8d56\u591a\u4e2a\u670d\u52a1, \u5982\u56fe\u6240\u793a: \u5982\u679c\u5176\u4e2d\u7684\u4e0b\u5355\u670d\u52a1\u4e0d\u53ef\u7528, \u5c31\u4f1a\u51fa\u73b0\u7ebf\u7a0b\u6c60\u91cc\u6240\u6709\u7ebf\u7a0b\u90fd\u56e0\u7b49\u5f85\u54cd\u5e94\u800c\u88ab\u963b\u585e, \u4ece\u800c\u9020\u6210\u6574\u4e2a\u670d\u52a1\u94fe\u8def\u4e0d\u53ef\u7528\uff0c \u8fdb\u800c\u5bfc\u81f4\u6574\u4e2a\u7cfb\u7edf\u7684\u670d\u52a1\u96ea\u5d29. \u5982\u56fe\u6240\u793a: \u670d\u52a1\u96ea\u5d29\u6548\u5e94\uff1a \u56e0\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u4e0d\u53ef\u7528\u5bfc\u81f4\u670d\u52a1\u8c03\u7528\u8005\u7684\u4e0d\u53ef\u7528,\u5e76\u5c06\u4e0d\u53ef\u7528\u9010\u6e10\u653e\u5927\u7684\u8fc7\u7a0b\uff0c\u5c31\u53eb\u670d\u52a1\u96ea\u5d29\u6548\u5e94 \u5bfc\u81f4\u670d\u52a1\u4e0d\u53ef\u7528\u7684\u539f\u56e0\uff1a \u5728\u670d\u52a1\u63d0\u4f9b\u8005\u4e0d\u53ef\u7528\u7684\u65f6\u5019\uff0c\u4f1a\u51fa\u73b0\u5927\u91cf\u91cd\u8bd5\u7684\u60c5\u51b5\uff1a\u7528\u6237\u91cd\u8bd5\u3001\u4ee3\u7801\u903b\u8f91\u91cd\u8bd5\uff0c\u8fd9\u4e9b\u91cd\u8bd5\u6700\u7ec8\u5bfc\u81f4\uff1a\u8fdb\u4e00\u6b65\u52a0\u5927\u8bf7\u6c42\u6d41\u91cf\u3002\u6240\u4ee5\u5f52\u6839\u7ed3\u5e95\u5bfc\u81f4\u96ea\u5d29\u6548\u5e94\u7684\u6700\u6839\u672c\u539f\u56e0\u662f\uff1a\u5927\u91cf\u8bf7\u6c42\u7ebf\u7a0b\u540c\u6b65\u7b49\u5f85\u9020\u6210\u7684\u8d44\u6e90\u8017\u5c3d\u3002\u5f53\u670d\u52a1\u8c03\u7528\u8005\u4f7f\u7528\u540c\u6b65\u8c03\u7528\u65f6, \u4f1a\u4ea7\u751f\u5927\u91cf\u7684\u7b49\u5f85\u7ebf\u7a0b\u5360\u7528\u7cfb\u7edf\u8d44\u6e90\u3002\u4e00\u65e6\u7ebf\u7a0b\u8d44\u6e90\u88ab\u8017\u5c3d,\u670d\u52a1\u8c03\u7528\u8005\u63d0\u4f9b\u7684\u670d\u52a1\u4e5f\u5c06\u5904\u4e8e\u4e0d\u53ef\u7528\u72b6\u6001, \u4e8e\u662f\u670d\u52a1\u96ea\u5d29\u6548\u5e94\u4ea7\u751f\u4e86\u3002","title":"1\u3001\u5206\u5e03\u5f0f\u7cfb\u7edf\u9047\u5230\u7684\u95ee\u9898"},{"location":"SpringCloudAlibaba/06Alibaba%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BB%84%E4%BB%B6Sentinel/#2","text":"","title":"2\u3001\u89e3\u51b3\u65b9\u6848"},{"location":"SpringCloudAlibaba/06Alibaba%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BB%84%E4%BB%B6Sentinel/#_1","text":"","title":"\u7a33\u5b9a\u6027\u3001\u6062\u590d\u6027"},{"location":"SpringCloudAlibaba/06Alibaba%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BB%84%E4%BB%B6Sentinel/#_2","text":"\u8d85\u65f6\u673a\u5236 \u5728\u4e0d\u505a\u4efb\u4f55\u5904\u7406\u7684\u60c5\u51b5\u4e0b\uff0c\u670d\u52a1\u63d0\u4f9b\u8005\u4e0d\u53ef\u7528\u4f1a\u5bfc\u81f4\u6d88\u8d39\u8005\u8bf7\u6c42\u7ebf\u7a0b\u5f3a\u5236\u7b49\u5f85\uff0c\u800c\u9020\u6210\u7cfb\u7edf\u8d44\u6e90\u8017\u5c3d\u3002\u52a0\u5165\u8d85\u65f6\u673a\u5236\uff0c\u4e00\u65e6\u8d85\u65f6\uff0c\u5c31\u91ca\u653e\u8d44\u6e90\u3002\u7531\u4e8e\u91ca\u653e\u8d44\u6e90\u901f\u5ea6\u8f83\u5feb\uff0c\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u6291\u5236\u8d44\u6e90\u8017\u5c3d\u7684\u95ee\u9898\u3002 \u670d\u52a1\u9650\u6d41 \u9694\u79bb \u539f\u7406\uff1a\u7528\u6237\u7684\u8bf7\u6c42\u5c06\u4e0d\u518d\u76f4\u63a5\u8bbf\u95ee\u670d\u52a1\uff0c\u800c\u662f\u901a\u8fc7\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7a7a\u95f2\u7ebf\u7a0b\u6765\u8bbf\u95ee\u670d\u52a1\uff0c\u5982\u679c\u7ebf\u7a0b\u6c60\u5df2\u6ee1\uff0c\u5219\u4f1a\u8fdb\u884c\u964d\u7ea7\u5904\u7406\uff0c\u7528\u6237\u7684\u8bf7\u6c42\u4e0d\u4f1a\u88ab\u963b\u585e\uff0c\u81f3\u5c11\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u6267\u884c\u7ed3\u679c\uff08\u4f8b\u5982\u8fd4\u56de\u53cb\u597d\u7684\u63d0\u793a\u4fe1\u606f\uff09\uff0c\u800c\u4e0d\u662f\u65e0\u4f11\u6b62\u7684\u7b49\u5f85\u6216\u8005\u770b\u5230\u7cfb\u7edf\u5d29\u6e83\u3002 \u9694\u79bb\u524d\uff1a \u9694\u79bb\u540e\uff1a \u4fe1\u53f7\u9694\u79bb\uff1a \u4fe1\u53f7\u9694\u79bb\u4e5f\u53ef\u4ee5\u7528\u4e8e\u9650\u5236\u5e76\u53d1\u8bbf\u95ee\uff0c\u9632\u6b62\u963b\u585e\u6269\u6563, \u4e0e\u7ebf\u7a0b\u9694\u79bb\u6700\u5927\u4e0d\u540c\u5728\u4e8e\u6267\u884c\u4f9d\u8d56\u4ee3\u7801\u7684\u7ebf\u7a0b\u4f9d\u7136\u662f\u8bf7\u6c42\u7ebf\u7a0b\uff08\u8be5\u7ebf\u7a0b\u9700\u8981\u901a\u8fc7\u4fe1\u53f7\u7533\u8bf7, \u5982\u679c\u5ba2\u6237\u7aef\u662f\u53ef\u4fe1\u7684\u4e14\u53ef\u4ee5\u5feb\u901f\u8fd4\u56de\uff0c\u53ef\u4ee5\u4f7f\u7528\u4fe1\u53f7\u9694\u79bb\u66ff\u6362\u7ebf\u7a0b\u9694\u79bb,\u964d\u4f4e\u5f00\u9500\u3002\u4fe1\u53f7\u91cf\u7684\u5927\u5c0f\u53ef\u4ee5\u52a8\u6001\u8c03\u6574, \u7ebf\u7a0b\u6c60\u5927\u5c0f\u4e0d\u53ef\u4ee5\u3002 \u670d\u52a1\u7194\u65ad \u8fdc\u7a0b\u670d\u52a1\u4e0d\u7a33\u5b9a\u6216\u7f51\u7edc\u6296\u52a8\u65f6\u6682\u65f6\u5173\u95ed\uff0c\u5c31\u53eb\u670d\u52a1\u7194\u65ad\u3002 \u73b0\u5b9e\u4e16\u754c\u7684\u65ad\u8def\u5668\u5927\u5bb6\u80af\u5b9a\u90fd\u5f88\u4e86\u89e3\uff0c\u65ad\u8def\u5668\u5b9e\u65f6\u76d1\u63a7\u7535\u8def\u7684\u60c5\u51b5\uff0c\u5982\u679c\u53d1\u73b0\u7535\u8def\u7535\u6d41\u5f02\u5e38\uff0c\u5c31\u4f1a\u8df3\u95f8\uff0c\u4ece\u800c\u9632\u6b62\u7535\u8def\u88ab\u70e7\u6bc1\u3002 \u8f6f\u4ef6\u4e16\u754c\u7684\u65ad\u8def\u5668\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1a\u5b9e\u65f6\u76d1\u6d4b\u5e94\u7528\uff0c\u5982\u679c\u53d1\u73b0\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u5931\u8d25\u6b21\u6570/\u5931\u8d25\u7387\u8fbe\u5230\u4e00\u5b9a\u9608\u503c\uff0c\u5c31\u201c\u8df3\u95f8\u201d\uff0c\u65ad\u8def\u5668\u6253\u5f00\u2014\u2014\u6b64\u65f6\uff0c\u8bf7\u6c42\u76f4\u63a5\u8fd4\u56de\uff0c\u800c\u4e0d\u53bb\u8c03\u7528\u539f\u672c\u8c03\u7528\u7684\u903b\u8f91\u3002\u8df3\u95f8\u4e00\u6bb5\u65f6\u95f4\u540e\uff08\u4f8b\u598210\u79d2\uff09\uff0c\u65ad\u8def\u5668\u4f1a\u8fdb\u5165\u534a\u5f00\u72b6\u6001\uff0c\u8fd9\u662f\u4e00\u4e2a\u77ac\u95f4\u6001\uff0c\u6b64\u65f6\u5141\u8bb8\u4e00\u6b21\u8bf7\u6c42\u8c03\u7528\u8be5\u8c03\u7684\u903b\u8f91\uff0c\u5982\u679c\u6210\u529f\uff0c\u5219\u65ad\u8def\u5668\u5173\u95ed\uff0c\u5e94\u7528\u6b63\u5e38\u8c03\u7528\uff1b\u5982\u679c\u8c03\u7528\u4f9d\u7136\u4e0d\u6210\u529f\uff0c\u65ad\u8def\u5668\u7ee7\u7eed\u56de\u5230\u6253\u5f00\u72b6\u6001\uff0c\u8fc7\u6bb5\u65f6\u95f4\u518d\u8fdb\u5165\u534a\u5f00\u72b6\u6001\u5c1d\u8bd5\u2014\u2014\u901a\u8fc7\u201d\u8df3\u95f8\u201c\uff0c\u5e94\u7528\u53ef\u4ee5\u4fdd\u62a4\u81ea\u5df1\uff0c\u800c\u4e14\u907f\u514d\u6d6a\u8d39\u8d44\u6e90\uff1b\u800c\u901a\u8fc7\u534a\u5f00\u7684\u8bbe\u8ba1\uff0c\u53ef\u5b9e\u73b0\u5e94\u7528\u7684\u201c\u81ea\u6211\u4fee\u590d\u201c\u3002 \u6240\u4ee5\uff0c\u540c\u6837\u7684\u9053\u7406\uff0c\u5f53\u4f9d\u8d56\u7684\u670d\u52a1\u6709\u5927\u91cf\u8d85\u65f6\u65f6\uff0c\u5728\u8ba9\u65b0\u7684\u8bf7\u6c42\u53bb\u8bbf\u95ee\u6839\u672c\u6ca1\u6709\u610f\u4e49\uff0c\u53ea\u4f1a\u65e0\u754f\u7684\u6d88\u8017\u73b0\u6709\u8d44\u6e90\u3002\u6bd4\u5982\u6211\u4eec\u8bbe\u7f6e\u4e86\u8d85\u65f6\u65f6\u95f4\u4e3a1s,\u5982\u679c\u77ed\u65f6\u95f4\u5185\u6709\u5927\u91cf\u8bf7\u6c42\u57281s\u5185\u90fd\u5f97\u4e0d\u5230\u54cd\u5e94\uff0c\u5c31\u610f\u5473\u7740\u8fd9\u4e2a\u670d\u52a1\u51fa\u73b0\u4e86\u5f02\u5e38\uff0c\u6b64\u65f6\u5c31\u6ca1\u6709\u5fc5\u8981\u518d\u8ba9\u5176\u4ed6\u7684\u8bf7\u6c42\u53bb\u8bbf\u95ee\u8fd9\u4e2a\u4f9d\u8d56\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u5e94\u8be5\u4f7f\u7528\u65ad\u8def\u5668\u907f\u514d\u8d44\u6e90\u6d6a\u8d39\u3002 \u670d\u52a1\u964d\u7ea7 \u6709\u670d\u52a1\u7194\u65ad\uff0c\u5fc5\u7136\u8981\u6709\u670d\u52a1\u964d\u7ea7\u3002 \u6240\u8c13\u964d\u7ea7\uff0c\u5c31\u662f\u5f53\u67d0\u4e2a\u670d\u52a1\u7194\u65ad\u4e4b\u540e\uff0c\u670d\u52a1\u5c06\u4e0d\u518d\u88ab\u8c03\u7528\uff0c\u6b64\u65f6\u5ba2\u6237\u7aef\u53ef\u4ee5\u81ea\u5df1\u51c6\u5907\u4e00\u4e2a\u672c\u5730\u7684fallback\uff08\u56de\u9000\uff09\u56de\u8c03\uff0c\u8fd4\u56de\u4e00\u4e2a\u7f3a\u7701\u503c\u3002 \u4f8b\u5982\uff1a(\u5907\u7528\u63a5\u53e3/\u7f13\u5b58/mock\u6570\u636e) \u3002\u8fd9\u6837\u505a\uff0c\u867d\u7136\u670d\u52a1\u6c34\u5e73\u4e0b\u964d\uff0c\u4f46\u597d\u6b79\u53ef\u7528\uff0c\u6bd4\u76f4\u63a5\u6302\u6389\u8981\u5f3a\uff0c\u5f53\u7136\u8fd9\u4e5f\u8981\u770b\u9002\u5408\u7684\u4e1a\u52a1\u573a\u666f\u3002","title":"\u5e38\u89c1\u7684\u5bb9\u9519\u673a\u5236\uff1a"},{"location":"SpringCloudAlibaba/06Alibaba%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BB%84%E4%BB%B6Sentinel/#3sentinel","text":"","title":"3\u3001Sentinel: \u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u6d41\u91cf\u9632\u536b\u5175"},{"location":"SpringCloudAlibaba/06Alibaba%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BB%84%E4%BB%B6Sentinel/#sentinel","text":"\u968f\u7740\u5fae\u670d\u52a1\u7684\u6d41\u884c\uff0c\u670d\u52a1\u548c\u670d\u52a1\u4e4b\u95f4\u7684\u7a33\u5b9a\u6027\u53d8\u5f97\u8d8a\u6765\u8d8a\u91cd\u8981\u3002Sentinel \u662f\u9762\u5411\u5206\u5e03\u5f0f\u670d\u52a1\u67b6\u6784\u7684\u6d41\u91cf\u63a7\u5236\u7ec4\u4ef6\uff0c\u4e3b\u8981\u4ee5\u6d41\u91cf\u4e3a\u5207\u5165\u70b9\uff0c\u4ece\u9650\u6d41\u3001\u6d41\u91cf\u6574\u5f62\u3001\u7194\u65ad\u964d\u7ea7\u3001\u7cfb\u7edf\u8d1f\u8f7d\u4fdd\u62a4\u3001\u70ed\u70b9\u9632\u62a4\u7b49\u591a\u4e2a\u7ef4\u5ea6\u6765\u5e2e\u52a9\u5f00\u53d1\u8005\u4fdd\u969c\u5fae\u670d\u52a1\u7684\u7a33\u5b9a\u6027\u3002 \u6e90\u7801\u5730\u5740\uff1a https://github.com/alibaba/Sentinel \u5b98\u65b9\u6587\u6863\uff1a https://github.com/alibaba/Sentinel/wiki Sentinel\u5177\u6709\u4ee5\u4e0b\u7279\u5f81: \u4e30\u5bcc\u7684\u5e94\u7528\u573a\u666f\uff1a Sentinel \u627f\u63a5\u4e86\u963f\u91cc\u5df4\u5df4\u8fd1 10 \u5e74\u7684\u53cc\u5341\u4e00\u5927\u4fc3\u6d41\u91cf\u7684\u6838\u5fc3\u573a\u666f\uff0c\u4f8b\u5982\u79d2\u6740\uff08\u5373\u7a81\u53d1\u6d41\u91cf\u63a7\u5236\u5728\u7cfb\u7edf\u5bb9\u91cf\u53ef\u4ee5\u627f\u53d7\u7684\u8303\u56f4\uff09\u3001\u6d88\u606f\u524a\u5cf0\u586b\u8c37\u3001\u5b9e\u65f6\u7194\u65ad\u4e0b\u6e38\u4e0d\u53ef\u7528\u5e94\u7528\u7b49\u3002 \u5b8c\u5907\u7684\u5b9e\u65f6\u76d1\u63a7\uff1a Sentinel \u540c\u65f6\u63d0\u4f9b\u5b9e\u65f6\u7684\u76d1\u63a7\u529f\u80fd\u3002\u60a8\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u4e2d\u770b\u5230\u63a5\u5165\u5e94\u7528\u7684\u5355\u53f0\u673a\u5668\u79d2\u7ea7\u6570\u636e\uff0c\u751a\u81f3 500 \u53f0\u4ee5\u4e0b\u89c4\u6a21\u7684\u96c6\u7fa4\u7684\u6c47\u603b\u8fd0\u884c\u60c5\u51b5\u3002 \u5e7f\u6cdb\u7684\u5f00\u6e90\u751f\u6001\uff1a Sentinel \u63d0\u4f9b\u5f00\u7bb1\u5373\u7528\u7684\u4e0e\u5176\u5b83\u5f00\u6e90\u6846\u67b6/\u5e93\u7684\u6574\u5408\u6a21\u5757\uff0c\u4f8b\u5982\u4e0e Spring Cloud\u3001Dubbo\u3001gRPC \u7684\u6574\u5408\u3002\u60a8\u53ea\u9700\u8981\u5f15\u5165\u76f8\u5e94\u7684\u4f9d\u8d56\u5e76\u8fdb\u884c\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\u5feb\u901f\u5730\u63a5\u5165 Sentinel\u3002 \u5b8c\u5584\u7684 SPI \u6269\u5c55\u70b9\uff1a Sentinel \u63d0\u4f9b\u7b80\u5355\u6613\u7528\u3001\u5b8c\u5584\u7684 SPI \u6269\u5c55\u70b9\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u6269\u5c55\u70b9\uff0c\u5feb\u901f\u7684\u5b9a\u5236\u903b\u8f91\u3002\u4f8b\u5982\u5b9a\u5236\u89c4\u5219\u7ba1\u7406\u3001\u9002\u914d\u6570\u636e\u6e90\u7b49\u3002 \u963f\u91cc\u4e91\u63d0\u4f9b\u4e86 \u4f01\u4e1a\u7ea7\u7684 Sentinel \u670d\u52a1\uff0c\u5e94\u7528\u9ad8\u53ef\u7528\u670d\u52a1 AHAS Sentinel\u548cHystrix\u5bf9\u6bd4 https://github.com/alibaba/Sentinel/wiki/Sentinel-%E4%B8%8E-Hystrix-%E7%9A%84%E5%AF%B9%E6%AF%94","title":"Sentinel \u662f\u4ec0\u4e48"},{"location":"SpringCloudAlibaba/06Alibaba%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BB%84%E4%BB%B6Sentinel/#4sentinel","text":"https://github.com/alibaba/Sentinel/wiki/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8 \u5728\u5b98\u65b9\u6587\u6863\u4e2d\uff0c\u5b9a\u4e49\u7684Sentinel\u8fdb\u884c\u8d44\u6e90\u4fdd\u62a4\u7684\u51e0\u4e2a\u6b65\u9aa4\uff1a \u5b9a\u4e49\u8d44\u6e90 \u5b9a\u4e49\u89c4\u5219 \u68c0\u9a8c\u89c4\u5219\u662f\u5426\u751f\u6548 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Entry entry = null ; // \u52a1\u5fc5\u4fdd\u8bc1 finally \u4f1a\u88ab\u6267\u884c try { // \u8d44\u6e90\u540d\u53ef\u4f7f\u7528\u4efb\u610f\u6709\u4e1a\u52a1\u8bed\u4e49\u7684\u5b57\u7b26\u4e32 \u5f00\u542f\u8d44\u6e90\u7684\u4fdd\u62a4 entry = SphU . entry ( \"\u81ea\u5b9a\u4e49\u8d44\u6e90\u540d\" ); // \u88ab\u4fdd\u62a4\u7684\u4e1a\u52a1\u903b\u8f91 method // do something... } catch ( BlockException ex ) { // \u8d44\u6e90\u8bbf\u95ee\u963b\u6b62\uff0c\u88ab\u9650\u6d41\u6216\u88ab\u964d\u7ea7 Sentinel\u5b9a\u4e49\u5f02\u5e38 \u6d41\u63a7\u89c4\u5219\uff0c\u964d\u7ea7\u89c4\u5219\uff0c\u70ed\u70b9\u53c2\u6570\u89c4\u5219\u3002\u3002\u3002\u3002 \u670d\u52a1\u964d\u7ea7(\u964d\u7ea7\u89c4\u5219) // \u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\u64cd\u4f5c } catch ( Exception ex ) { // \u82e5\u9700\u8981\u914d\u7f6e\u964d\u7ea7\u89c4\u5219\uff0c\u9700\u8981\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u8bb0\u5f55\u4e1a\u52a1\u5f02\u5e38 RuntimeException \u670d\u52a1\u964d\u7ea7 mock feign:fallback Tracer . traceEntry ( ex , entry ); } finally { // \u52a1\u5fc5\u4fdd\u8bc1 exit\uff0c\u52a1\u5fc5\u4fdd\u8bc1\u6bcf\u4e2a entry \u4e0e exit \u914d\u5bf9 if ( entry != null ) { entry . exit (); } } Sentinel\u8d44\u6e90\u4fdd\u62a4\u7684\u65b9\u5f0f","title":"4\u3001Sentinel\u5feb\u901f\u5f00\u59cb"},{"location":"SpringCloudAlibaba/06Alibaba%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BB%84%E4%BB%B6Sentinel/#api","text":"\u5f15\u5165\u4f9d\u8d56 1 2 3 4 5 <dependency> <groupId> com.alibaba.csp </groupId> <artifactId> sentinel-core </artifactId> <version> 1.8.0 </version> </dependency> \u7f16\u5199\u6d4b\u8bd5\u903b\u8f91 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 @RestController @Slf4j public class HelloController { private static final String RESOURCE_NAME = \"hello\" ; @RequestMapping ( value = \"/hello\" ) public String hello () { Entry entry = null ; try { // \u8d44\u6e90\u540d\u53ef\u4f7f\u7528\u4efb\u610f\u6709\u4e1a\u52a1\u8bed\u4e49\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982\u65b9\u6cd5\u540d\u3001\u63a5\u53e3\u540d\u6216\u5176\u5b83\u53ef\u552f\u4e00\u6807\u8bc6\u7684\u5b57\u7b26\u4e32\u3002 entry = SphU . entry ( RESOURCE_NAME ); // \u88ab\u4fdd\u62a4\u7684\u4e1a\u52a1\u903b\u8f91 String str = \"hello world\" ; log . info ( \"=====\" + str ); return str ; } catch ( BlockException e1 ) { // \u8d44\u6e90\u8bbf\u95ee\u963b\u6b62\uff0c\u88ab\u9650\u6d41\u6216\u88ab\u964d\u7ea7 //\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\u64cd\u4f5c log . info ( \"block!\" ); } catch ( Exception ex ) { // \u82e5\u9700\u8981\u914d\u7f6e\u964d\u7ea7\u89c4\u5219\uff0c\u9700\u8981\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u8bb0\u5f55\u4e1a\u52a1\u5f02\u5e38 Tracer . traceEntry ( ex , entry ); } finally { if ( entry != null ) { entry . exit (); } } return null ; } /** * \u5b9a\u4e49\u6d41\u63a7\u89c4\u5219 */ @PostConstruct private static void initFlowRules (){ List < FlowRule > rules = new ArrayList <> (); FlowRule rule = new FlowRule (); //\u8bbe\u7f6e\u53d7\u4fdd\u62a4\u7684\u8d44\u6e90 rule . setResource ( RESOURCE_NAME ); // \u8bbe\u7f6e\u6d41\u63a7\u89c4\u5219 QPS rule . setGrade ( RuleConstant . FLOW_GRADE_QPS ); // \u8bbe\u7f6e\u53d7\u4fdd\u62a4\u7684\u8d44\u6e90\u9608\u503c // Set limit QPS to 20. rule . setCount ( 1 ); rules . add ( rule ); // \u52a0\u8f7d\u914d\u7f6e\u597d\u7684\u89c4\u5219 FlowRuleManager . loadRules ( rules ); } } \u6d4b\u8bd5\u6548\u679c\uff1a \u7f3a\u70b9\uff1a \u4e1a\u52a1\u4fb5\u5165\u6027\u5f88\u5f3a\uff0c\u9700\u8981\u5728controller\u4e2d\u5199\u5165\u975e\u4e1a\u52a1\u4ee3\u7801. \u914d\u7f6e\u4e0d\u7075\u6d3b \u82e5\u9700\u8981\u6dfb\u52a0\u65b0\u7684\u53d7\u4fdd\u62a4\u8d44\u6e90 \u9700\u8981\u624b\u52a8\u6dfb\u52a0 init\u65b9\u6cd5\u6765\u6dfb\u52a0\u6d41\u63a7\u89c4\u5219","title":"API\u5b9e\u73b0"},{"location":"SpringCloudAlibaba/06Alibaba%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BB%84%E4%BB%B6Sentinel/#sentinelresource","text":"@SentinelResource \u6ce8\u89e3\u7528\u6765\u6807\u8bc6\u8d44\u6e90\u662f\u5426\u88ab\u9650\u6d41\u3001\u964d\u7ea7\u3002 blockHandler: \u5b9a\u4e49\u5f53\u8d44\u6e90\u5185\u90e8\u53d1\u751f\u4e86BlockException\u5e94\u8be5\u8fdb\u5165\u7684\u65b9\u6cd5\uff08\u6355\u83b7\u7684\u662fSentinel\u5b9a\u4e49\u7684\u5f02\u5e38\uff09 fallback: \u5b9a\u4e49\u7684\u662f\u8d44\u6e90\u5185\u90e8\u53d1\u751f\u4e86Throwable\u5e94\u8be5\u8fdb\u5165\u7684\u65b9\u6cd5 exceptionsToIgnore\uff1a\u914d\u7f6efallback\u53ef\u4ee5\u5ffd\u7565\u7684\u5f02\u5e38 \u6e90\u7801\u5165\u53e3\uff1acom.alibaba.csp.sentinel.annotation.aspectj.SentinelResourceAspect 1.\u5f15\u5165\u4f9d\u8d56 1 2 3 4 5 <dependency> <groupId> com.alibaba.csp </groupId> <artifactId> sentinel-annotation-aspectj </artifactId> <version> 1.8.0 </version> </dependency> 2.\u914d\u7f6e\u5207\u9762\u652f\u6301 1 2 3 4 5 6 7 @Configuration public class SentinelAspectConfiguration { @Bean public SentinelResourceAspect sentinelResourceAspect () { return new SentinelResourceAspect (); } } 3.UserController\u4e2d\u7f16\u5199\u6d4b\u8bd5\u903b\u8f91\uff0c\u6dfb\u52a0@SentinelResource\uff0c\u5e76\u914d\u7f6eblockHandler\u548cfallback 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 @RequestMapping ( value = \"/findOrderByUserId/{id}\" ) @SentinelResource ( value = \"findOrderByUserId\" , fallback = \"fallback\" , fallbackClass = ExceptionUtil . class , blockHandler = \"handleException\" , blockHandlerClass = ExceptionUtil . class ) public R findOrderByUserId ( @PathVariable ( \"id\" ) Integer id ) { //ribbon\u5b9e\u73b0 String url = \"http://mall-order/order/findOrderByUserId/\" + id ; R result = restTemplate . getForObject ( url , R . class ); if ( id == 4 ){ throw new IllegalArgumentException ( \"\u975e\u6cd5\u53c2\u6570\u5f02\u5e38\" ); } return result ; } 4.\u7f16\u5199ExceptionUtil\uff0c\u6ce8\u610f\u5982\u679c\u6307\u5b9a\u4e86class\uff0c\u65b9\u6cd5\u5fc5\u987b\u662fstatic\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 public class ExceptionUtil { public static R fallback ( Integer id , Throwable e ){ return R . error ( - 2 , \"===\u88ab\u5f02\u5e38\u964d\u7ea7\u5566===\" ); } public static R handleException ( Integer id , BlockException e ){ return R . error ( - 2 , \"===\u88ab\u9650\u6d41\u5566===\" ); } } 5.\u6d41\u63a7\u89c4\u5219\u8bbe\u7f6e\u53ef\u4ee5\u901a\u8fc7Sentinel dashboard\u914d\u7f6e \u5ba2\u6237\u7aef\u9700\u8981\u5f15\u5165 Transport \u6a21\u5757\u6765\u4e0e Sentinel \u63a7\u5236\u53f0\u8fdb\u884c\u901a\u4fe1\u3002 1 2 3 4 5 <dependency> <groupId> com.alibaba.csp </groupId> <artifactId> sentinel-transport-simple-http </artifactId> <version> 1.8.0 </version> </dependency> 1 -Dcsp.sentinel.dashboard.server = consoleIp:port","title":"@SentinelResource\u6ce8\u89e3\u5b9e\u73b0"},{"location":"SpringCloudAlibaba/06Alibaba%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BB%84%E4%BB%B6Sentinel/#5-sentinel","text":"\u4e0b\u8f7d\u63a7\u5236\u53f0 jar \u5305\u5e76\u5728\u672c\u5730\u542f\u52a8\uff1a\u53ef\u4ee5\u53c2\u89c1 \u6b64\u5904\u6587\u6863 https://github.com/alibaba/Sentinel/releases 1 2 3 4 5 6 7 8 #\u542f\u52a8\u63a7\u5236\u53f0\u547d\u4ee4 java -jar sentinel-dashboard-1.8.0.jar \u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u53c2\u6570\u8fdb\u884c\u914d\u7f6e\uff1a -Dsentinel.dashboard.auth.username = sentinel \u7528\u4e8e\u6307\u5b9a\u63a7\u5236\u53f0\u7684\u767b\u5f55\u7528\u6237\u540d\u4e3a sentinel\uff1b -Dsentinel.dashboard.auth.password = 123456 \u7528\u4e8e\u6307\u5b9a\u63a7\u5236\u53f0\u7684\u767b\u5f55\u5bc6\u7801\u4e3a 123456 \uff1b\u5982\u679c\u7701\u7565\u8fd9\u4e24\u4e2a\u53c2\u6570\uff0c\u9ed8\u8ba4\u7528\u6237\u548c\u5bc6\u7801\u5747\u4e3a sentinel\uff1b -Dserver.servlet.session.timeout = 7200 \u7528\u4e8e\u6307\u5b9a Spring Boot \u670d\u52a1\u7aef session \u7684\u8fc7\u671f\u65f6\u95f4\uff0c\u5982 7200 \u8868\u793a 7200 \u79d2\uff1b60m \u8868\u793a 60 \u5206\u949f\uff0c\u9ed8\u8ba4\u4e3a 30 \u5206\u949f\uff1b java -Dserver.port = 8858 -Dsentinel.dashboard.auth.username = xushu -Dsentinel.dashboard.auth.password = 123456 -jar sentinel-dashboard-1.8.0.jar \u4e3a\u4e86\u65b9\u4fbf\u5feb\u6377\u542f\u52a8\u53ef\u4ee5\u5728\u684c\u9762\u521b\u5efa.bat\u6587\u4ef6 1 2 java -Dserver.port = 8858 -Dsentinel.dashboard.auth.username = xushu -Dsentinel.dashboard.auth.password = 123456 -jar D: \\s erver \\s entinel-dashboard-1.8.0.jar pause \u8bbf\u95eehttp://localhost:8080/#/login ,\u9ed8\u8ba4\u7528\u6237\u540d\u5bc6\u7801\uff1a sentinel/sentinel Sentinel \u4f1a\u5728\u5ba2\u6237\u7aef\u9996\u6b21\u8c03\u7528\u7684\u65f6\u5019\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5f00\u59cb\u5411\u63a7\u5236\u53f0\u53d1\u9001\u5fc3\u8df3\u5305\uff0c\u6240\u4ee5\u8981\u786e\u4fdd\u5ba2\u6237\u7aef\u6709\u8bbf\u95ee\u91cf\uff1b","title":"5\u3001\u542f\u52a8 Sentinel \u63a7\u5236\u53f0"},{"location":"SpringCloudAlibaba/06Alibaba%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BB%84%E4%BB%B6Sentinel/#6spring-cloud-alibabasentinel","text":"1.\u5f15\u5165\u4f9d\u8d56 1 2 3 4 <dependency> <groupId> com.alibaba.cloud </groupId> <artifactId> spring-cloud-starter-alibaba-sentinel </artifactId> </dependency> 2.\u6dfb\u52a0yml\u914d\u7f6e\uff0c\u4e3a\u5fae\u670d\u52a1\u8bbe\u7f6esentinel\u63a7\u5236\u53f0\u5730\u5740 \u6dfb\u52a0Sentinel\u540e\uff0c\u9700\u8981\u66b4\u9732/actuator/sentinel\u7aef\u70b9,\u800cSpringboot\u9ed8\u8ba4\u662f\u6ca1\u6709\u66b4\u9732\u8be5\u7aef\u70b9\u7684\uff0c\u6240\u4ee5\u9700\u8981\u8bbe\u7f6e\uff0c\u6d4b\u8bd5http://localhost:8800/actuator/sentinel 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 server : port : 8800 spring : application : name : mall-user-sentinel-demo cloud : nacos : discovery : server-addr : 127.0.0.1:8848 sentinel : transport : # \u6dfb\u52a0sentinel\u7684\u63a7\u5236\u53f0\u5730\u5740 dashboard : 127.0.0.1:8080 # \u6307\u5b9a\u5e94\u7528\u4e0eSentinel\u63a7\u5236\u53f0\u4ea4\u4e92\u7684\u7aef\u53e3\uff0c\u5e94\u7528\u672c\u5730\u4f1a\u8d77\u4e00\u4e2a\u8be5\u7aef\u53e3\u5360\u7528\u7684HttpServer # port: 8719 3.\u5728sentinel\u63a7\u5236\u53f0\u4e2d\u8bbe\u7f6e\u6d41\u63a7\u89c4\u5219 \u8d44\u6e90\u540d: \u63a5\u53e3\u7684API \u9488\u5bf9\u6765\u6e90: \u9ed8\u8ba4\u662fdefault\uff0c\u5f53\u591a\u4e2a\u5fae\u670d\u52a1\u90fd\u8c03\u7528\u8fd9\u4e2a\u8d44\u6e90\u65f6\uff0c\u53ef\u4ee5\u914d\u7f6e\u5fae\u670d\u52a1\u540d\u6765\u5bf9\u6307\u5b9a\u7684\u5fae\u670d\u52a1\u8bbe\u7f6e\u9608\u503c \u9608\u503c\u7c7b\u578b: \u5206\u4e3aQPS\u548c\u7ebf\u7a0b\u6570 \u5047\u8bbe\u9608\u503c\u4e3a10 QPS\u7c7b\u578b: \u53ea\u5f97\u662f\u6bcf\u79d2\u8bbf\u95ee\u63a5\u53e3\u7684\u6b21\u6570>10\u5c31\u8fdb\u884c\u9650\u6d41 \u7ebf\u7a0b\u6570: \u4e3a\u63a5\u53d7\u8bf7\u6c42\u8be5\u8d44\u6e90\u5206\u914d\u7684\u7ebf\u7a0b\u6570>10\u5c31\u8fdb\u884c\u9650\u6d41 \u6d4b\u8bd5\uff1a \u56e0\u4e3aQPS\u662f1\uff0c\u6240\u4ee51\u79d2\u5185\u591a\u6b21\u8bbf\u95ee\u4f1a\u51fa\u73b0\u5982\u4e0b\u60c5\u5f62\uff1a \u8bbf\u95eehttp://localhost:8800/actuator/sentinel\uff0c \u53ef\u4ee5\u67e5\u770bflowRules \u5fae\u670d\u52a1\u548cSentinel Dashboard\u901a\u4fe1\u539f\u7406 Sentinel\u63a7\u5236\u53f0\u4e0e\u5fae\u670d\u52a1\u7aef\u4e4b\u95f4\uff0c\u5b9e\u73b0\u4e86\u4e00\u5957\u670d\u52a1\u53d1\u73b0\u673a\u5236\uff0c\u96c6\u6210\u4e86Sentinel\u7684\u5fae\u670d\u52a1\u90fd\u4f1a\u5c06\u5143\u6570\u636e\u4f20\u9012\u7ed9Sentinel\u63a7\u5236\u53f0\uff0c\u67b6\u6784\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u6d41\u63a7\u9488\u5bf9privoder \u7194\u65ad\u964d\u7ea7 \u9488\u5bf9consumer","title":"6\u3001Spring Cloud Alibaba\u6574\u5408Sentinel"},{"location":"SpringCloudAlibaba/08Spring%20Cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3Gateway%E7%BB%84%E4%BB%B6/","text":"\u7f51\u5173\u7b80\u4ecb \u5927\u5bb6\u90fd\u90fd\u77e5\u9053\u5728\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\uff0c\u4e00\u4e2a\u7cfb\u7edf\u4f1a\u88ab\u62c6\u5206\u4e3a\u5f88\u591a\u4e2a\u5fae\u670d\u52a1\u3002\u90a3\u4e48\u4f5c\u4e3a\u5ba2\u6237\u7aef\u8981\u5982\u4f55\u53bb\u8c03\u7528\u8fd9\u4e48\u591a\u7684\u5fae\u670d\u52a1\u5462\uff1f \u5982\u679c\u6ca1\u6709\u7f51\u5173\u7684\u5b58\u5728\uff0c\u6211\u4eec\u53ea\u80fd\u5728\u5ba2\u6237\u7aef\u8bb0\u5f55\u6bcf\u4e2a\u5fae\u670d\u52a1\u7684\u5730\u5740\uff0c\u7136\u540e\u5206\u522b\u53bb\u7528\u3002 \u8fd9\u6837\u7684\u67b6\u6784\uff0c\u4f1a\u5b58\u5728\u7740\u8bf8\u591a\u7684\u95ee\u9898\uff1a \u6bcf\u4e2a\u4e1a\u52a1\u90fd\u4f1a\u9700\u8981\u9274\u6743\u3001\u9650\u6d41\u3001\u6743\u9650\u6821\u9a8c\u3001\u8de8\u57df\u7b49\u903b\u8f91\uff0c\u5982\u679c\u6bcf\u4e2a\u4e1a\u52a1\u90fd\u5404\u81ea\u4e3a\u6218\uff0c\u81ea\u5df1\u9020\u8f6e\u5b50\u5b9e\u73b0\u4e00\u904d\uff0c\u4f1a\u5f88\u86cb\u75bc\uff0c\u5b8c\u5168\u53ef\u4ee5\u62bd\u51fa\u6765\uff0c\u653e\u5230\u4e00\u4e2a\u7edf\u4e00\u7684\u5730\u65b9\u53bb\u505a\u3002 \u5982\u679c\u4e1a\u52a1\u91cf\u6bd4\u8f83\u7b80\u5355\u7684\u8bdd\uff0c\u8fd9\u79cd\u65b9\u5f0f\u524d\u671f\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u968f\u7740\u4e1a\u52a1\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u6bd4\u5982\u6dd8\u5b9d\u3001\u4e9a\u9a6c\u900a\u6253\u5f00\u4e00\u4e2a\u9875\u9762\u53ef\u80fd\u4f1a\u6d89\u53ca\u5230\u6570\u767e\u4e2a\u5fae\u670d\u52a1\u534f\u540c\u5de5\u4f5c\uff0c\u5982\u679c\u6bcf\u4e00\u4e2a\u5fae\u670d\u52a1\u90fd\u5206\u914d\u4e00\u4e2a\u57df\u540d\u7684\u8bdd\uff0c\u4e00\u65b9\u9762\u5ba2\u6237\u7aef\u4ee3\u7801\u4f1a\u5f88\u96be\u7ef4\u62a4\uff0c\u6d89\u53ca\u5230\u6570\u767e\u4e2a\u57df\u540d\uff0c\u53e6\u4e00\u65b9\u9762\u662f\u8fde\u63a5\u6570\u7684\u74f6\u9888\uff0c\u60f3\u8c61\u4e00\u4e0b\u4f60\u6253\u5f00\u4e00\u4e2aAPP\uff0c\u901a\u8fc7\u6293\u5305\u53d1\u73b0\u6d89\u53ca\u5230\u4e86\u6570\u767e\u4e2a\u8fdc\u7a0b\u8c03\u7528\uff0c\u8fd9\u5728\u79fb\u52a8\u7aef\u4e0b\u4f1a\u663e\u5f97\u975e\u5e38\u4f4e\u6548\u3002 \u540e\u671f\u5982\u679c\u9700\u8981\u5bf9\u5fae\u670d\u52a1\u8fdb\u884c\u91cd\u6784\u7684\u8bdd\uff0c\u4e5f\u4f1a\u53d8\u7684\u975e\u5e38\u9ebb\u70e6\uff0c\u9700\u8981\u5ba2\u6237\u7aef\u914d\u5408\u4f60\u4e00\u8d77\u8fdb\u884c\u6539\u9020\uff0c\u6bd4\u5982\u5546\u54c1\u670d\u52a1\uff0c\u968f\u7740\u4e1a\u52a1\u53d8\u7684\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u540e\u671f\u9700\u8981\u8fdb\u884c\u62c6\u5206\u6210\u591a\u4e2a\u5fae\u670d\u52a1\uff0c\u8fd9\u4e2a\u65f6\u5019\u5bf9\u5916\u63d0\u4f9b\u7684\u670d\u52a1\u4e5f\u9700\u8981\u62c6\u5206\u6210\u591a\u4e2a\uff0c\u540c\u65f6\u9700\u8981\u5ba2\u6237\u7aef\u914d\u5408\u4f60\u8fdb\u884c\u6539\u9020\uff0c\u975e\u5e38\u86cb\u75bc\u3002 \u4e0a\u9762\u7684\u8fd9\u4e9b\u95ee\u9898\u53ef\u4ee5\u501f\u52a9API\u7f51\u5173\u6765\u89e3\u51b3\u3002 \u6240\u8c13\u7684API\u7f51\u5173 \uff0c\u5c31\u662f\u6307\u7cfb\u7edf\u7684\u7edf\u4e00\u5165\u53e3\uff0c\u5b83\u5c01\u88c5\u4e86\u5e94\u7528\u7a0b\u5e8f\u7684\u5185\u90e8\u7ed3\u6784\uff0c\u4e3a\u5ba2\u6237\u7aef\u63d0\u4f9b\u7edf\u4e00\u670d\u52a1\uff0c\u4e00\u4e9b\u4e0e\u4e1a\u52a1\u672c\u8eab\u529f\u80fd\u65e0\u5173\u7684\u516c\u5171\u903b\u8f91\u53ef\u4ee5\u5728\u8fd9\u91cc\u5b9e\u73b0\uff0c\u8bf8\u5982\u8ba4\u8bc1\u3001\u9274\u6743\u3001\u76d1\u63a7\u3001\u8def\u7531\u8f6c\u53d1\u7b49\u7b49\u3002 \u6dfb\u52a0\u4e0aAPI\u7f51\u5173\u4e4b\u540e\uff0c\u7cfb\u7edf\u7684\u67b6\u6784\u56fe\u53d8\u6210\u4e86\u5982\u4e0b\u6240\u793a\uff1a \u6211\u4eec\u4e5f\u53ef\u4ee5\u89c2\u5bdf\u4e0b\uff0c\u6211\u4eec\u73b0\u5728\u7684\u6574\u4f53\u67b6\u6784\u56fe\uff1a 1.\u4ec0\u4e48\u662fSpring Cloud Gateway \u7f51\u5173\u4f5c\u4e3a\u6d41\u91cf\u7684\u5165\u53e3\uff0c\u5e38\u7528\u7684\u529f\u80fd\u5305\u62ec\u8def\u7531\u8f6c\u53d1\uff0c\u6743\u9650\u6821\u9a8c\uff0c\u9650\u6d41\u7b49\u3002 Spring Cloud Gateway \u662fSpring Cloud\u5b98\u65b9\u63a8\u51fa\u7684\u7b2c\u4e8c\u4ee3\u7f51\u5173\u6846\u67b6\uff0c\u5b9a\u4f4d\u4e8e\u53d6\u4ee3 Netflix Zuul1.0\u3002\u76f8\u6bd4 Zuul \u6765\u8bf4\uff0cSpring Cloud Gateway \u63d0\u4f9b\u66f4\u4f18\u79c0\u7684\u6027\u80fd\uff0c\u66f4\u5f3a\u5927\u7684\u6709\u529f\u80fd\u3002 Spring Cloud Gateway \u662f\u7531 WebFlux + Netty + Reactor \u5b9e\u73b0\u7684\u54cd\u5e94\u5f0f\u7684 API \u7f51\u5173\u3002\u5b83\u4e0d\u80fd\u5728\u4f20\u7edf\u7684 servlet \u5bb9\u5668\u4e2d\u5de5\u4f5c\uff0c\u4e5f\u4e0d\u80fd\u6784\u5efa\u6210 war \u5305\u3002 Spring Cloud Gateway \u65e8\u5728\u4e3a\u5fae\u670d\u52a1\u67b6\u6784\u63d0\u4f9b\u4e00\u79cd\u7b80\u5355\u4e14\u6709\u6548\u7684 API \u8def\u7531\u7684\u7ba1\u7406\u65b9\u5f0f\uff0c\u5e76\u57fa\u4e8e Filter \u7684\u65b9\u5f0f\u63d0\u4f9b\u7f51\u5173\u7684\u57fa\u672c\u529f\u80fd\uff0c\u4f8b\u5982\u8bf4\u5b89\u5168\u8ba4\u8bc1\u3001\u76d1\u63a7\u3001\u9650\u6d41\u7b49\u7b49\u3002 \u5176\u4ed6\u7684\u7f51\u5173\u7ec4\u4ef6\uff1a \u5728SpringCloud\u5fae\u670d\u52a1\u4f53\u7cfb\u4e2d\uff0c\u6709\u4e2a\u5f88\u91cd\u8981\u7684\u7ec4\u4ef6\u5c31\u662f\u7f51\u5173\uff0c\u57281.x\u7248\u672c\u4e2d\u90fd\u662f\u91c7\u7528\u7684Zuul\u7f51\u5173\uff1b\u4f46\u57282.x\u7248\u672c\u4e2d\uff0czuul\u7684\u5347\u7ea7\u4e00\u76f4\u8df3\u7968\uff0cSpringCloud\u6700\u540e\u81ea\u5df1\u7814\u53d1\u4e86\u4e00\u4e2a\u7f51\u5173\u66ff\u4ee3Zuul\uff0c\u90a3\u5c31\u662fSpringCloud Gateway \u7f51\u4e0a\u5f88\u591a\u5730\u65b9\u90fd\u8bf4Zuul\u662f\u963b\u585e\u7684\uff0cGateway\u662f\u975e\u963b\u585e\u7684\uff0c\u8fd9\u4e48\u8bf4\u662f\u4e0d\u4e25\u8c28\u7684\uff0c\u51c6\u786e\u7684\u8bb2Zuul1.x\u662f\u963b\u585e\u7684\uff0c\u800c\u57282.x\u7684\u7248\u672c\u4e2d\uff0cZuul\u4e5f\u662f\u57fa\u4e8eNetty\uff0c\u4e5f\u662f\u975e\u963b\u585e\u7684\uff0c\u5982\u679c\u4e00\u5b9a\u8981\u8bf4\u6027\u80fd\uff0c\u5176\u5b9e\u8fd9\u4e2a\u771f\u6ca1\u591a\u5927\u5dee\u8ddd\u3002 \u800c\u5b98\u65b9\u51fa\u8fc7\u4e00\u4e2a\u6d4b\u8bd5\u9879\u76ee\uff0c\u521b\u5efa\u4e86\u4e00\u4e2abenchmark\u7684\u6d4b\u8bd5\u9879\u76ee\uff1aspring-cloud-gateway-bench\uff0c\u5176\u4e2d\u5bf9\u6bd4\u4e86\uff1a \u6027\u80fd\u5f3a\u52b2\uff1a\u662f\u7b2c\u4e00\u4ee3\u7f51\u5173Zuul\u76841.6\u500d \u5b98\u7f51\u6587\u6863\uff1ahttps://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-request-predicates-factories Spring Cloud Gateway \u529f\u80fd\u7279\u5f81 \u57fa\u4e8eSpring Framework 5, Project Reactor \u548c Spring Boot 2.0 \u8fdb\u884c\u6784\u5efa\uff1b \u52a8\u6001\u8def\u7531\uff1a\u80fd\u591f\u5339\u914d\u4efb\u4f55\u8bf7\u6c42\u5c5e\u6027\uff1b \u652f\u6301\u8def\u5f84\u91cd\u5199; \u96c6\u6210 Spring Cloud \u670d\u52a1\u53d1\u73b0\u529f\u80fd\uff08Nacos\u3001Eruka\uff09\uff1b \u53ef\u96c6\u6210\u6d41\u63a7\u964d\u7ea7\u529f\u80fd\uff08Sentinel\u3001Hystrix\uff09\uff1b \u53ef\u4ee5\u5bf9\u8def\u7531\u6307\u5b9a\u6613\u4e8e\u7f16\u5199\u7684 Predicate\uff08\u65ad\u8a00\uff09\u548c Filter\uff08\u8fc7\u6ee4\u5668\uff09\uff1b 1.1 \u6838\u5fc3\u6982\u5ff5 \u8def\u7531\uff08route) \u8def\u7531\u662f\u7f51\u5173\u4e2d\u6700\u57fa\u7840\u7684\u90e8\u5206\uff0c\u8def\u7531\u4fe1\u606f\u5305\u62ec\u4e00\u4e2aID\u3001\u4e00\u4e2a\u76ee\u7684URI\u3001\u4e00\u7ec4\u65ad\u8a00\u5de5\u5382\u3001\u4e00\u7ec4Filter\u7ec4\u6210\u3002\u5982\u679c\u65ad\u8a00\u4e3a\u771f\uff0c\u5219\u8bf4\u660e\u8bf7\u6c42\u7684URL\u548c\u914d\u7f6e\u7684\u8def\u7531\u5339\u914d\u3002 \u65ad\u8a00(predicates) Java8\u4e2d\u7684\u65ad\u8a00\u51fd\u6570\uff0cSpringCloud Gateway\u4e2d\u7684\u65ad\u8a00\u51fd\u6570\u7c7b\u578b\u662fSpring5.0\u6846\u67b6\u4e2d\u7684ServerWebExchange\u3002\u65ad\u8a00\u51fd\u6570\u5141\u8bb8\u5f00\u53d1\u8005\u53bb\u5b9a\u4e49\u5339\u914dHttp request\u4e2d\u7684\u4efb\u4f55\u4fe1\u606f\uff0c\u6bd4\u5982\u8bf7\u6c42\u5934\u548c\u53c2\u6570\u7b49\u3002 \u8fc7\u6ee4\u5668\uff08Filter) SpringCloud Gateway\u4e2d\u7684filter\u5206\u4e3aGateway FilIer\u548cGlobal Filter\u3002Filter\u53ef\u4ee5\u5bf9\u8bf7\u6c42\u548c\u54cd\u5e94\u8fdb\u884c\u5904\u7406\u3002 1.2 \u5de5\u4f5c\u539f\u7406 \u6267\u884c\u6d41\u7a0b\u5927\u4f53\u5982\u4e0b\uff1a Gateway Client\u5411Gateway Server\u53d1\u9001\u8bf7\u6c42 \u8bf7\u6c42\u9996\u5148\u4f1a\u88abHttpWebHandlerAdapter\u8fdb\u884c\u63d0\u53d6\u7ec4\u88c5\u6210\u7f51\u5173\u4e0a\u4e0b\u6587 \u7136\u540e\u7f51\u5173\u7684\u4e0a\u4e0b\u6587\u4f1a\u4f20\u9012\u5230DispatcherHandler\uff0c\u5b83\u8d1f\u8d23\u5c06\u8bf7\u6c42\u5206\u53d1\u7ed9RoutePredicateHandlerMapping RoutePredicateHandlerMapping\u8d1f\u8d23\u8def\u7531\u67e5\u627e\uff0c\u5e76\u6839\u636e\u8def\u7531\u65ad\u8a00\u5224\u65ad\u8def\u7531\u662f\u5426\u53ef\u7528 \u5982\u679c\u8fc7\u65ad\u8a00\u6210\u529f\uff0c\u7531FilteringWebHandler\u521b\u5efa\u8fc7\u6ee4\u5668\u94fe\u5e76\u8c03\u7528 \u8bf7\u6c42\u4f1a\u4e00\u6b21\u7ecf\u8fc7PreFilter--\u5fae\u670d\u52a1--PostFilter\u7684\u65b9\u6cd5\uff0c\u6700\u7ec8\u8fd4\u56de\u54cd\u5e94 2.Spring Cloud Gateway\u5feb\u901f\u5f00\u59cb 2.1 \u73af\u5883\u642d\u5efa \u5f15\u5165\u4f9d\u8d56 1 2 3 4 5 <!-- gateway\u7f51\u5173 --> <dependency> <groupId> org.springframework.cloud </groupId> <artifactId> spring-cloud-starter-gateway </artifactId> </dependency> \u6ce8\u610f\uff1a\u4f1a\u548cspring-webmvc\u7684\u4f9d\u8d56\u51b2\u7a81\uff0c\u9700\u8981\u6392\u9664spring-webmvc \u7f16\u5199yml\u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 server : port : 8888 spring : application : name : api-gateway cloud : gateway : routes : # \u8def\u7531\u6570\u7ec4[\u8def\u7531 \u5c31\u662f\u6307\u5b9a\u5f53\u8bf7\u6c42\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\u7684\u65f6\u5019\u8f6c\u5230\u54ea\u4e2a\u5fae\u670d\u52a1] - id : product_route # \u5f53\u524d\u8def\u7531\u7684\u6807\u8bc6, \u8981\u6c42\u552f\u4e00 uri : http://localhost:8081 # \u8bf7\u6c42\u8981\u8f6c\u53d1\u5230\u7684\u5730\u5740 order : 1 # \u8def\u7531\u7684\u4f18\u5148\u7ea7,\u6570\u5b57\u8d8a\u5c0f\u7ea7\u522b\u8d8a\u9ad8 predicates : # \u65ad\u8a00(\u5c31\u662f\u8def\u7531\u8f6c\u53d1\u8981\u6ee1\u8db3\u7684\u6761\u4ef6) - Path=/product-serv/** # \u5f53\u8bf7\u6c42\u8def\u5f84\u6ee1\u8db3Path\u6307\u5b9a\u7684\u89c4\u5219\u65f6,\u624d\u8fdb\u884c\u8def\u7531\u8f6c\u53d1 filters : # \u8fc7\u6ee4\u5668,\u8bf7\u6c42\u5728\u4f20\u9012\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u901a\u8fc7\u8fc7\u6ee4\u5668\u5bf9\u5176\u8fdb\u884c\u4e00\u5b9a\u7684\u4fee\u6539 - StripPrefix=1 # \u8f6c\u53d1\u4e4b\u524d\u53bb\u63891\u5c42\u8def\u5f84. \u96c6\u6210Nacos \u73b0\u5728\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u5199\u6b7b\u4e86\u8f6c\u53d1\u8def\u5f84\u7684\u5730\u5740, \u524d\u9762\u6211\u4eec\u5df2\u7ecf\u5206\u6790\u8fc7\u5730\u5740\u5199\u6b7b\u5e26\u6765\u7684\u95ee\u9898, \u63a5\u4e0b\u6765\u6211\u4eec\u4ece\u6ce8\u518c\u4e2d\u5fc3\u83b7\u53d6\u6b64\u5730\u5740\u3002 \u5f15\u5165\u4f9d\u8d56 1 2 3 4 5 <!-- nacos\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0 --> <dependency> <groupId> com.alibaba.cloud </groupId> <artifactId> spring-cloud-starter-alibaba-nacos-discovery </artifactId> </dependency> \u7f16\u5199yml\u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 server : port : 8888 spring : application : name : api-gateway cloud : nacos : discovery : server-addr : 127.0.0.1:8848 gateway : routes : - id : product_route uri : lb://service-product # lb\u6307\u7684\u662f\u4ecenacos\u4e2d\u6309\u7167\u540d\u79f0\u83b7\u53d6\u5fae\u670d\u52a1,\u5e76\u9075\u5faa\u8d1f\u8f7d\u5747\u8861\u7b56\u7565 predicates : - Path=/product-serve/** filters : - StripPrefix=1 \u7b80\u5199\uff1a \u53bb\u6389\u5173\u4e8e\u8def\u7531\u7684\u914d\u7f6e\uff0c\u81ea\u52a8\u5bfb\u627e\u670d\u52a1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 server: port: 8888 spring: application: name: api-gateway cloud: nacos: discovery: server-addr: 127.0.0.1:8848 gateway: discovery: locator: enabled: true \u6d4b\u8bd5 \u8fd9\u65f6\u5019\uff0c\u5c31\u53d1\u73b0\u53ea\u8981\u6309\u7167\u7f51\u5173\u5730\u5740/\u5fae\u670d\u52a1/\u63a5\u53e3\u7684\u683c\u5f0f\u53bb\u8bbf\u95ee\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6210\u529f\u54cd\u5e94\u3002 2.2 \u8def\u7531\u65ad\u8a00\u5de5\u5382\uff08Route Predicate Factories\uff09\u914d\u7f6e https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-request-predicates-factories \u4f5c\u7528\uff1a \u5f53\u8bf7\u6c42gateway\u7684\u65f6\u5019\uff0c \u4f7f\u7528\u65ad\u8a00\u5bf9\u8bf7\u6c42\u8fdb\u884c\u5339\u914d\uff0c \u5982\u679c\u5339\u914d\u6210\u529f\u5c31\u8def\u7531\u8f6c\u53d1\uff0c \u5982\u679c\u5339\u914d\u5931\u8d25\u5c31\u8fd4\u56de404 \u7c7b\u578b\uff1a\u5185\u7f6e\uff0c\u81ea\u5b9a\u4e49 SpringCloud Gateway\u5305\u62ec\u8bb8\u591a\u5185\u7f6e\u7684\u65ad\u8a00\u5de5\u5382\uff0c\u6240\u6709\u8fd9\u4e9b\u65ad\u8a00\u90fd\u4e0eHTTP\u8bf7\u6c42\u7684\u4e0d\u540c\u5c5e\u6027\u5339\u914d\u3002\u5177\u4f53\u5982\u4e0b\uff1a \u57fa\u4e8eDatetime\u7c7b\u578b\u7684\u65ad\u8a00\u5de5\u5382 \u6b64\u7c7b\u578b\u7684\u65ad\u8a00\u6839\u636e\u65f6\u95f4\u505a\u5224\u65ad\uff0c\u4e3b\u8981\u6709\u4e09\u4e2a\uff1a AfterRoutePredicateFactory\uff1a \u63a5\u6536\u4e00\u4e2a\u65e5\u671f\u53c2\u6570\uff0c\u5224\u65ad\u8bf7\u6c42\u65e5\u671f\u662f\u5426\u665a\u4e8e\u6307\u5b9a\u65e5\u671f BeforeRoutePredicateFactory\uff1a \u63a5\u6536\u4e00\u4e2a\u65e5\u671f\u53c2\u6570\uff0c\u5224\u65ad\u8bf7\u6c42\u65e5\u671f\u662f\u5426\u65e9\u4e8e\u6307\u5b9a\u65e5\u671f BetweenRoutePredicateFactory\uff1a \u63a5\u6536\u4e24\u4e2a\u65e5\u671f\u53c2\u6570\uff0c\u5224\u65ad\u8bf7\u6c42\u65e5\u671f\u662f\u5426\u5728\u6307\u5b9a\u65f6\u95f4\u6bb5\u5185 ZonedDateTime.now() 1 After=2019-12-31T23:59:59.789+08:00[Asia/Shanghai] \u57fa\u4e8e\u8fdc\u7a0b\u5730\u5740\u7684\u65ad\u8a00\u5de5\u5382 RemoteAddrRoutePredicateFactory\uff1a\u63a5\u6536\u4e00\u4e2aIP\u5730\u5740\u6bb5\uff0c\u5224\u65ad\u8bf7\u6c42\u4e3b\u673a\u5730\u5740\u662f\u5426\u5728\u5730\u5740\u6bb5\u4e2d 1 RemoteAddr=192.168.1.1/24 \u57fa\u4e8eCookie\u7684\u65ad\u8a00\u5de5\u5382 CookieRoutePredicateFactory\uff1a\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0ccookie \u540d\u5b57\u548c\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u5224\u65ad\u8bf7\u6c42 cookie\u662f\u5426\u5177\u6709\u7ed9\u5b9a\u540d\u79f0\u4e14\u503c\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u3002 1 - Cookie=chocolate, ch. \u57fa\u4e8eHeader\u7684\u65ad\u8a00\u5de5\u5382 HeaderRoutePredicateFactory\uff1a\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u6807\u9898\u540d\u79f0\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u5224\u65ad\u8bf7\u6c42Header\u662f\u5426\u5177\u6709\u7ed9\u5b9a\u540d\u79f0\u4e14\u503c\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u3002 1 -Header=X-Request-Id, \\d+ \u57fa\u4e8eHost\u7684\u65ad\u8a00\u5de5\u5382 HostRoutePredicateFactory\uff1a\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff0c\u4e3b\u673a\u540d\u6a21\u5f0f\u3002\u5224\u65ad\u8bf7\u6c42\u7684Host\u662f\u5426\u6ee1\u8db3\u5339\u914d\u89c4\u5219\u3002 1 -Host=**.testhost.org \u57fa\u4e8eMethod\u8bf7\u6c42\u65b9\u6cd5\u7684\u65ad\u8a00\u5de5\u5382 MethodRoutePredicateFactory\uff1a\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff0c\u5224\u65ad\u8bf7\u6c42\u7c7b\u578b\u662f\u5426\u8ddf\u6307\u5b9a\u7684\u7c7b\u578b\u5339\u914d\u3002 1 -Method=GET \u57fa\u4e8ePath\u8bf7\u6c42\u8def\u5f84\u7684\u65ad\u8a00\u5de5\u5382 PathRoutePredicateFactory\uff1a\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff0c\u5224\u65ad\u8bf7\u6c42\u7684URI\u90e8\u5206\u662f\u5426\u6ee1\u8db3\u8def\u5f84\u89c4\u5219\u3002 1 -Path=/foo/{segment} \u57fa\u4e8eQuery\u8bf7\u6c42\u53c2\u6570\u7684\u65ad\u8a00\u5de5\u5382 QueryRoutePredicateFactory \uff1a\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u8bf7\u6c42param\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c \u5224\u65ad\u8bf7\u6c42\u53c2\u6570\u662f\u5426\u5177\u6709\u7ed9\u5b9a\u540d\u79f0\u4e14\u503c\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u3002 1 -Query=baz, ba. \u57fa\u4e8e\u8def\u7531\u6743\u91cd\u7684\u65ad\u8a00\u5de5\u5382 WeightRoutePredicateFactory\uff1a\u63a5\u6536\u4e00\u4e2a[\u7ec4\u540d,\u6743\u91cd], \u7136\u540e\u5bf9\u4e8e\u540c\u4e00\u4e2a\u7ec4\u5185\u7684\u8def\u7531\u6309\u7167\u6743\u91cd\u8f6c\u53d1 1 2 3 4 5 6 7 8 9 10 11 routes: -id: weight_route1 uri: host1 predicates: -Path=/product/** -Weight=group3, 1 -id: weight_route2 uri: host2 predicates: -Path=/product/** -Weight= group3, 9 2.2.1 \u81ea\u5b9a\u4e49\u8def\u7531\u65ad\u8a00\u5de5\u5382 \u81ea\u5b9a\u4e49\u8def\u7531\u65ad\u8a00\u5de5\u5382\u9700\u8981\u7ee7\u627f AbstractRoutePredicateFactory \u7c7b\uff0c\u91cd\u5199 apply \u65b9\u6cd5\u7684\u903b\u8f91\u3002\u5728 apply \u65b9\u6cd5\u4e2d\u53ef\u4ee5\u901a\u8fc7 exchange.getRequest() \u62ff\u5230 ServerHttpRequest \u5bf9\u8c61\uff0c\u4ece\u800c\u53ef\u4ee5\u83b7\u53d6\u5230\u8bf7\u6c42\u7684\u53c2\u6570\u3001\u8bf7\u6c42\u65b9\u5f0f\u3001\u8bf7\u6c42\u5934\u7b49\u4fe1\u606f\u3002 \u5fc5\u987bspring\u7ec4\u4ef6 bean \u7c7b\u5fc5\u987b\u52a0\u4e0aRoutePredicateFactory\u4f5c\u4e3a\u7ed3\u5c3e \u5fc5\u987b\u7ee7\u627fAbstractRoutePredicateFactory \u5fc5\u987b\u58f0\u660e\u9759\u6001\u5185\u90e8\u7c7b \u58f0\u660e\u5c5e\u6027\u6765\u63a5\u6536 \u914d\u7f6e\u6587\u4ef6\u4e2d\u5bf9\u5e94\u7684\u65ad\u8a00\u7684\u4fe1\u606f \u9700\u8981\u7ed3\u5408shortcutFieldOrder\u8fdb\u884c\u7ed1\u5b9a \u901a\u8fc7apply\u8fdb\u884c\u903b\u8f91\u5224\u65ad true\u5c31\u662f\u5339\u914d\u6210\u529f false\u5339\u914d\u5931\u8d25 \u6ce8\u610f\uff1a \u547d\u540d\u9700\u8981\u4ee5 RoutePredicateFactory \u7ed3\u5c3e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 @Component @Slf4j public class CheckAuthRoutePredicateFactory extends AbstractRoutePredicateFactory < CheckAuthRoutePredicateFactory . Config > { public CheckAuthRoutePredicateFactory () { super ( Config . class ); } @Override public Predicate < ServerWebExchange > apply ( Config config ) { return new GatewayPredicate () { @Override public boolean test ( ServerWebExchange serverWebExchange ) { log . info ( \"\u8c03\u7528CheckAuthRoutePredicateFactory\" + config . getName ()); if ( config . getName (). equals ( \"xushu\" )){ return true ; } return false ; } }; } /** * \u5feb\u6377\u914d\u7f6e * @return */ @Override public List < String > shortcutFieldOrder () { return Collections . singletonList ( \"name\" ); } public static class Config { private String name ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } } } yml\u4e2d\u914d\u7f6e 1 2 3 4 5 6 7 8 9 10 11 12 13 spring : cloud : gateway : #\u8bbe\u7f6e\u8def\u7531\uff1a\u8def\u7531id\u3001\u8def\u7531\u5230\u5fae\u670d\u52a1\u7684uri\u3001\u65ad\u8a00 routes : - id : order_route #\u8def\u7531ID\uff0c\u5168\u5c40\u552f\u4e00 uri : http://localhost:8020 #\u76ee\u6807\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u5730\u5740\u548c\u7aef\u53e3 predicates : # \u6d4b\u8bd5\uff1ahttp://localhost:8888/order/findOrderByUserId/1 - Path=/order/** #Path\u8def\u5f84\u5339\u914d #\u81ea\u5b9a\u4e49CheckAuth\u65ad\u8a00\u5de5\u5382 - CheckAuth=xushu 2.3 \u8fc7\u6ee4\u5668\u5de5\u5382\uff08 GatewayFilter Factories\uff09\u914d\u7f6e Gateway \u5185\u7f6e\u4e86\u5f88\u591a\u7684\u8fc7\u6ee4\u5668\u5de5\u5382\uff0c\u6211\u4eec\u901a\u8fc7\u4e00\u4e9b\u8fc7\u6ee4\u5668\u5de5\u5382\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u4e1a\u52a1\u903b\u8f91\u5904\u7406\u5668\uff0c\u6bd4\u5982\u6dfb\u52a0\u5254\u9664\u54cd\u5e94\u5934\uff0c\u6dfb\u52a0\u53bb\u9664\u53c2\u6570\u7b49 \u8fc7\u6ee4\u5668\u5de5\u5382 \u4f5c\u7528 \u53c2\u6570 AddRequestHeader \u4e3a\u539f\u59cb\u8bf7\u6c42\u6dfb\u52a0Header Header\u7684\u540d\u79f0\u53ca\u503c AddRequestParameter \u4e3a\u539f\u59cb\u8bf7\u6c42\u6dfb\u52a0\u8bf7\u6c42\u53c2\u6570 \u53c2\u6570\u540d\u79f0\u53ca\u503c AddResponseHeader \u4e3a\u539f\u59cb\u54cd\u5e94\u6dfb\u52a0Header Header\u7684\u540d\u79f0\u53ca\u503c DedupeResponseHeader \u5254\u9664\u54cd\u5e94\u5934\u4e2d\u91cd\u590d\u7684\u503c \u9700\u8981\u53bb\u91cd\u7684Header\u540d\u79f0\u53ca\u53bb\u91cd\u7b56\u7565 Hystrix \u4e3a\u8def\u7531\u5f15\u5165Hystrix\u7684\u65ad\u8def\u5668\u4fdd\u62a4 HystrixCommand \u7684\u540d\u79f0 FallbackHeaders \u4e3afallbackUri\u7684\u8bf7\u6c42\u5934\u4e2d\u6dfb\u52a0\u5177\u4f53\u7684\u5f02\u5e38\u4fe1\u606f Header\u7684\u540d\u79f0 Pre\ufb01xPath \u4e3a\u539f\u59cb\u8bf7\u6c42\u8def\u5f84\u6dfb\u52a0\u524d\u7f00 \u524d\u7f00\u8def\u5f84 PreserveHostHeader \u4e3a\u8bf7\u6c42\u6dfb\u52a0\u4e00\u4e2apreserveHostHeader=true \u7684 \u5c5e \u6027\uff0c\u8def\u7531\u8fc7\u6ee4\u5668\u4f1a\u68c0\u67e5\u8be5\u5c5e\u6027\u4ee5\u51b3\u5b9a\u662f\u5426\u8981\u53d1\u9001\u539f\u59cb\u7684Host \u65e0 RequestRateLimiter \u7528\u4e8e\u5bf9\u8bf7\u6c42\u9650\u6d41\uff0c\u9650\u6d41\u7b97\u6cd5\u4e3a\u4ee4\u724c\u6876 keyResolver\u3001rateLimiter\u3001statusCode\u3001denyEmptyKey\u3001emptyKeyStatus RedirectTo \u5c06\u539f\u59cb\u8bf7\u6c42\u91cd\u5b9a\u5411\u5230\u6307\u5b9a\u7684URL http\u72b6\u6001\u7801\u53ca\u91cd\u5b9a\u5411\u7684url RemoveHopByHopHeadersFilter \u4e3a\u539f\u59cb\u8bf7\u6c42\u5220\u9664IETF\u7ec4\u7ec7\u89c4\u5b9a\u7684\u4e00\u7cfb\u5217Header \u9ed8\u8ba4\u5c31\u4f1a\u542f\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6307\u5b9a\u4ec5\u5220\u9664\u54ea\u4e9bHeader RemoveRequestHeader \u4e3a\u539f\u59cb\u8bf7\u6c42\u5220\u9664\u67d0\u4e2aHeader Header\u540d\u79f0 RemoveResponseHeader \u4e3a\u539f\u59cb\u54cd\u5e94\u5220\u9664\u67d0\u4e2aHeader Header\u540d\u79f0 RewritePath \u91cd\u5199\u539f\u59cb\u7684\u8bf7\u6c42\u8def\u5f84 \u539f\u59cb\u8def\u5f84\u6b63\u5219\u8868\u8fbe\u5f0f\u4ee5\u53ca\u91cd\u5199\u540e\u8def\u5f84\u7684\u6b63\u5219\u8868\u8fbe\u5f0f RewriteResponseHeader \u91cd\u5199\u539f\u59cb\u54cd\u5e94\u4e2d\u7684\u67d0\u4e2aHeader Header\u540d\u79f0\uff0c\u503c\u7684\u6b63 \u5219\u8868\u8fbe\u5f0f\uff0c\u91cd\u5199\u540e\u7684\u503c SaveSession \u5728\u8f6c\u53d1\u8bf7\u6c42\u4e4b\u524d\uff0c\u5f3a\u5236\u6267\u884cWebSession::save \u64cd\u4f5c \u65e0 secureHeaders \u4e3a\u539f\u59cb\u54cd\u5e94\u6dfb\u52a0\u4e00\u7cfb\u5217\u8d77\u5b89\u5168\u4f5c\u7528\u7684\u54cd\u5e94\u5934 \u65e0\uff0c\u652f\u6301\u4fee\u6539\u8fd9\u4e9b\u5b89\u5168\u54cd\u5e94\u5934\u7684\u503c SetPath \u4fee\u6539\u539f\u59cb\u7684\u8bf7\u6c42\u8def\u5f84 \u4fee\u6539\u540e\u7684\u8def\u5f84 SetResponseHeader \u4fee\u6539\u539f\u59cb\u54cd\u5e94\u4e2d\u67d0\u4e2aHeader\u7684\u503c Header\u540d\u79f0\uff0c\u4fee\u6539\u540e\u7684\u503c SetStatus \u4fee\u6539\u539f\u59cb\u54cd\u5e94\u7684\u72b6\u6001\u7801 HTTP \u72b6\u6001\u7801\uff0c\u53ef\u4ee5\u662f\u6570\u5b57\uff0c\u4e5f\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32 StripPre\ufb01x \u7528\u4e8e\u622a\u65ad\u539f\u59cb\u8bf7\u6c42\u7684\u8def\u5f84 \u4f7f\u7528\u6570\u5b57\u8868\u793a\u8981\u622a\u65ad\u7684\u8def\u5f84\u7684\u6570\u91cf Retry \u9488\u5bf9\u4e0d\u540c\u7684\u54cd\u5e94\u8fdb\u884c\u91cd\u8bd5 retries\u3001statuses\u3001methods\u3001series RequestSize \u8bbe\u7f6e\u5141\u8bb8\u63a5\u6536\u6700\u5927\u8bf7\u6c42\u5305\u7684\u5927 \u5c0f\u3002\u5982\u679c\u8bf7\u6c42\u5305\u5927\u5c0f\u8d85\u8fc7\u8bbe\u7f6e\u7684\u503c\uff0c\u5219\u8fd4\u56de 413 Payload TooLarge \u8bf7\u6c42\u5305\u5927\u5c0f\uff0c\u5355\u4f4d\u4e3a\u5b57\u8282\uff0c\u9ed8\u8ba4\u503c\u4e3a5M ModifyRequestBody \u5728\u8f6c\u53d1\u8bf7\u6c42\u4e4b\u524d\u4fee\u6539\u539f\u59cb\u8bf7\u6c42\u4f53\u5185\u5bb9 \u4fee\u6539\u540e\u7684\u8bf7\u6c42\u4f53\u5185\u5bb9 ModifyResponseBody \u4fee\u6539\u539f\u59cb\u54cd\u5e94\u4f53\u7684\u5185\u5bb9 \u4fee\u6539\u540e\u7684\u54cd\u5e94\u4f53\u5185\u5bb9 https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gatewayfilter-factories 2.3.1 \u6dfb\u52a0\u8bf7\u6c42\u5934 1 2 3 4 5 6 7 8 9 10 11 spring : cloud : gateway : #\u8bbe\u7f6e\u8def\u7531\uff1a\u8def\u7531id\u3001\u8def\u7531\u5230\u5fae\u670d\u52a1\u7684uri\u3001\u65ad\u8a00 routes : - id : order_route #\u8def\u7531ID\uff0c\u5168\u5c40\u552f\u4e00 uri : http://localhost:8020 #\u76ee\u6807\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u5730\u5740\u548c\u7aef\u53e3 #\u914d\u7f6e\u8fc7\u6ee4\u5668\u5de5\u5382 filters : - AddRequestHeader=X-Request-color, red #\u6dfb\u52a0\u8bf7\u6c42\u5934 \u6d4b\u8bd5http://localhost:8888/order/testgateway 1 2 3 4 5 6 7 8 9 10 11 @GetMapping ( \"/testgateway\" ) public String testGateway ( HttpServletRequest request ) throws Exception { log . info ( \"gateWay\u83b7\u53d6\u8bf7\u6c42\u5934X-Request-color\uff1a\" + request . getHeader ( \"X-Request-color\" )); return \"success\" ; } @GetMapping ( \"/testgateway2\" ) public String testGateway ( @RequestHeader ( \"X-Request-color\" ) String color ) throws Exception { log . info ( \"gateWay\u83b7\u53d6\u8bf7\u6c42\u5934X-Request-color\uff1a\" + color ); return \"success\" ; } 2.3.2 \u6dfb\u52a0\u8bf7\u6c42\u53c2\u6570 1 2 3 4 5 6 7 8 9 10 11 spring : cloud : gateway : #\u8bbe\u7f6e\u8def\u7531\uff1a\u8def\u7531id\u3001\u8def\u7531\u5230\u5fae\u670d\u52a1\u7684uri\u3001\u65ad\u8a00 routes : - id : order_route #\u8def\u7531ID\uff0c\u5168\u5c40\u552f\u4e00 uri : http://localhost:8020 #\u76ee\u6807\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u5730\u5740\u548c\u7aef\u53e3 #\u914d\u7f6e\u8fc7\u6ee4\u5668\u5de5\u5382 filters : - AddRequestParameter=color, blue # \u6dfb\u52a0\u8bf7\u6c42\u53c2\u6570 \u6d4b\u8bd5http://localhost:8888/order/testgateway3 1 2 3 4 5 @GetMapping ( \"/testgateway3\" ) public String testGateway3 ( @RequestParam ( \"color\" ) String color ) throws Exception { log . info ( \"gateWay\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570color:\" + color ); return \"success\" ; } 2.3.3 \u4e3a\u5339\u914d\u7684\u8def\u7531\u7edf\u4e00\u6dfb\u52a0\u524d\u7f00 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 spring : cloud : gateway : #\u8bbe\u7f6e\u8def\u7531\uff1a\u8def\u7531id\u3001\u8def\u7531\u5230\u5fae\u670d\u52a1\u7684uri\u3001\u65ad\u8a00 routes : - id : order_route #\u8def\u7531ID\uff0c\u5168\u5c40\u552f\u4e00 uri : http://localhost:8020 #\u76ee\u6807\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u5730\u5740\u548c\u7aef\u53e3 #\u914d\u7f6e\u8fc7\u6ee4\u5668\u5de5\u5382 filters : - PrefixPath=/mall-order # \u6dfb\u52a0\u524d\u7f00 \u5bf9\u5e94\u5fae\u670d\u52a1\u9700\u8981\u914d\u7f6econtext-path mall-order\u4e2d\u9700\u8981\u914d\u7f6e server : servlet : context-path : /mall-order \u6d4b\u8bd5\uff1a http://localhost:8888/order/findOrderByUserId/1 ====\u300b http://localhost:8020/mall-order/order/findOrderByUserId/1 2.3.4 \u91cd\u5b9a\u5411\u64cd\u4f5c 1 2 3 4 5 6 7 8 9 10 spring: cloud: gateway: #\u8bbe\u7f6e\u8def\u7531\uff1a\u8def\u7531id\u3001\u8def\u7531\u5230\u5fae\u670d\u52a1\u7684uri\u3001\u65ad\u8a00 routes: - id: order_route #\u8def\u7531ID\uff0c\u5168\u5c40\u552f\u4e00 uri: http://localhost:8020 #\u76ee\u6807\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u5730\u5740\u548c\u7aef\u53e3 #\u914d\u7f6e\u8fc7\u6ee4\u5668\u5de5\u5382 filters: - RedirectTo=302, https://www.baidu.com/ #\u91cd\u5b9a\u5411\u5230\u767e\u5ea6 \u6d4b\u8bd5\uff1ahttp://localhost:8888/order/findOrderByUserId/1 2.3.5 \u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668\u5de5\u5382 \u7ee7\u627fAbstractNameValueGatewayFilterFactory\u4e14\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u540d\u79f0\u5fc5\u987b\u8981\u4ee5GatewayFilterFactory\u7ed3\u5c3e\u5e76\u4ea4\u7ed9spring\u7ba1\u7406\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 @Component @Slf4j public class CheckAuthGatewayFilterFactory extends AbstractNameValueGatewayFilterFactory { @Override public GatewayFilter apply ( NameValueConfig config ) { return ( exchange , chain ) -> { log . info ( \"\u8c03\u7528CheckAuthGatewayFilterFactory===\" + config . getName () + \":\" + config . getValue ()); return chain . filter ( exchange ); }; } } \u914d\u7f6e\u81ea\u5b9a\u4e49\u7684\u8fc7\u6ee4\u5668\u5de5\u5382 1 2 3 4 5 6 7 8 9 10 11 spring: cloud: gateway: #\u8bbe\u7f6e\u8def\u7531\uff1a\u8def\u7531id\u3001\u8def\u7531\u5230\u5fae\u670d\u52a1\u7684uri\u3001\u65ad\u8a00 routes: - id: order_route #\u8def\u7531ID\uff0c\u5168\u5c40\u552f\u4e00 uri: http://localhost:8020 #\u76ee\u6807\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u5730\u5740\u548c\u7aef\u53e3 #\u914d\u7f6e\u8fc7\u6ee4\u5668\u5de5\u5382 filters: - CheckAuth=fox,\u7537 \u6d4b\u8bd5 2.4 \u5168\u5c40\u8fc7\u6ee4\u5668\uff08Global Filters\uff09\u914d\u7f6e \u5c40\u90e8\u8fc7\u6ee4\u5668\u548c\u5168\u5c40\u8fc7\u6ee4\u5668\u533a\u522b\uff1a \u5c40\u90e8\uff1a\u5c40\u90e8\u9488\u5bf9\u67d0\u4e2a\u8def\u7531\uff0c \u9700\u8981\u5728\u8def\u7531\u4e2d\u8fdb\u884c\u914d\u7f6e \u5168\u5c40\uff1a\u9488\u5bf9\u6240\u6709\u8def\u7531\u8bf7\u6c42\uff0c \u4e00\u65e6\u5b9a\u4e49\u5c31\u4f1a\u6295\u5165\u4f7f\u7528 GlobalFilter \u63a5\u53e3\u548c GatewayFilter \u6709\u4e00\u6837\u7684\u63a5\u53e3\u5b9a\u4e49\uff0c\u53ea\u4e0d\u8fc7\uff0c GlobalFilter \u4f1a\u4f5c\u7528\u4e8e\u6240\u6709\u8def\u7531\u3002 2.4.1 LoadBalancerClientFilter LoadBalancerClientFilter \u4f1a\u67e5\u770bexchange\u7684\u5c5e\u6027 ServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR \u7684\u503c\uff08\u4e00\u4e2aURI\uff09\uff0c\u5982\u679c\u8be5\u503c\u7684scheme\u662f lb\uff0c\u6bd4\u5982\uff1alb://myservice \uff0c\u5b83\u5c06\u4f1a\u4f7f\u7528Spring Cloud\u7684LoadBalancerClient \u6765\u5c06 myservice \u89e3\u6790\u6210\u5b9e\u9645\u7684host\u548cport\uff0c\u5e76\u66ff\u6362\u6389 ServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR \u7684\u5185\u5bb9\u3002 \u5176\u5b9e\u5c31\u662f\u7528\u6765\u6574\u5408\u8d1f\u8f7d\u5747\u8861\u5668Ribbon\u7684 1 2 3 4 5 6 7 8 9 spring : cloud : gateway : routes : - id : order_route uri : lb://mall-order predicates : - Path=/order/** 2.4.2 \u81ea\u5b9a\u4e49\u5168\u5c40\u8fc7\u6ee4\u5668 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 /*** * @Author \u5f90\u5eb6 QQ:1092002729 * @Slogan \u81f4\u656c\u5927\u5e08\uff0c\u81f4\u656c\u672a\u6765\u7684\u4f60 */ @Component public class LogFilter implements GlobalFilter { Logger log = LoggerFactory . getLogger ( this . getClass ()); @Override public Mono < Void > filter ( ServerWebExchange exchange , GatewayFilterChain chain ) { log . info ( exchange . getRequest (). getPath (). value ()); return chain . filter ( exchange ); } } Reactor Netty \u8bbf\u95ee\u65e5\u5fd7 \u8981\u542f\u7528 Reactor Netty \u8bbf\u95ee\u65e5\u5fd7\uff0c\u8bf7\u8bbe\u7f6e-Dreactor.netty.http.server.accessLogEnabled=true. \u5b83\u5fc5\u987b\u662f Java \u7cfb\u7edf\u5c5e\u6027\uff0c\u800c\u4e0d\u662f Spring Boot \u5c5e\u6027\u3002 \u60a8\u53ef\u4ee5\u5c06\u65e5\u5fd7\u8bb0\u5f55\u7cfb\u7edf\u914d\u7f6e\u4e3a\u5177\u6709\u5355\u72ec\u7684\u8bbf\u95ee\u65e5\u5fd7\u6587\u4ef6\u3002\u4ee5\u4e0b\u793a\u4f8b\u521b\u5efa\u4e00\u4e2a Logback \u914d\u7f6e\uff1a \u4f8b 67.logback.xml 1 2 3 4 5 6 7 8 9 10 11 12 <appender name= \"accessLog\" class= \"ch.qos.logback.core.FileAppender\" > <file> access_log.log </file> <encoder> <pattern> %msg%n </pattern> </encoder> </appender> <appender name= \"async\" class= \"ch.qos.logback.classic.AsyncAppender\" > <appender-ref ref= \"accessLog\" /> </appender> <logger name= \"reactor.netty.http.server.AccessLog\" level= \"INFO\" additivity= \"false\" > <appender-ref ref= \"async\" /> </logger> 2.5 Gateway\u8de8\u57df\u914d\u7f6e\uff08CORS Configuration\uff09 \u901a\u8fc7yml\u914d\u7f6e\u7684\u65b9\u5f0f https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#cors-configuration 1 2 3 4 5 6 7 8 9 10 11 12 13 spring : cloud : gateway : globalcors : cors-configurations : '[/**]' : allowedOrigins : \"*\" allowedMethods : - GET - POST - DELETE - PUT - OPTION \u901a\u8fc7java\u914d\u7f6e\u7684\u65b9\u5f0f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @Configuration public class CorsConfig { @Bean public CorsWebFilter corsFilter () { CorsConfiguration config = new CorsConfiguration (); config . addAllowedMethod ( \"*\" ); config . addAllowedOrigin ( \"*\" ); config . addAllowedHeader ( \"*\" ); UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource ( new PathPatternParser ()); source . registerCorsConfiguration ( \"/**\" , config ); return new CorsWebFilter ( source ); } } 2.6 gateway\u6574\u5408sentinel\u6d41\u63a7\u964d\u7ea7 \u7f51\u5173\u4f5c\u4e3a\u5185\u90e8\u7cfb\u7edf\u5916\u7684\u4e00\u5c42\u5c4f\u969c, \u5bf9\u5185\u8d77\u5230\u4e00\u5b9a\u7684\u4fdd\u62a4\u4f5c\u7528, \u9650\u6d41\u4fbf\u662f\u5176\u4e2d\u4e4b\u4e00. \u7f51\u5173\u5c42\u7684\u9650\u6d41\u53ef\u4ee5\u7b80\u5355\u5730\u9488\u5bf9\u4e0d\u540c\u8def\u7531\u8fdb\u884c\u9650\u6d41, \u4e5f\u53ef\u9488\u5bf9\u4e1a\u52a1\u7684\u63a5\u53e3\u8fdb\u884c\u9650\u6d41\uff0c\u6216\u8005\u6839\u636e\u63a5\u53e3\u7684\u7279\u5f81\u5206\u7ec4\u9650\u6d41\u3002 https://github.com/alibaba/Sentinel/wiki/%E7%BD%91%E5%85%B3%E9%99%90%E6%B5%81 \u6dfb\u52a0\u4f9d\u8d56 1 2 3 4 5 6 7 8 9 <dependency> <groupId> com.alibaba.cloud </groupId> <artifactId> spring-cloud-alibaba-sentinel-gateway </artifactId> </dependency> <dependency> <groupId> com.alibaba.cloud </groupId> <artifactId> spring-cloud-starter-alibaba-sentinel </artifactId> </dependency> 2.\u6dfb\u52a0\u914d\u7f6e 1 2 3 4 5 6 sentinel : transport : # \u6dfb\u52a0sentinel\u7684\u63a7\u5236\u53f0\u5730\u5740 dashboard : 127.0.0.1:8080 2.6.1 \u63a7\u5236\u53f0\u5b9e\u73b0\u65b9\u5f0f\uff1a Sentinel 1.6.3 \u5f15\u5165\u4e86\u7f51\u5173\u6d41\u63a7\u63a7\u5236\u53f0\u7684\u652f\u6301\uff0c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u5728 Sentinel \u63a7\u5236\u53f0\u4e0a\u67e5\u770b API Gateway \u5b9e\u65f6\u7684 route \u548c\u81ea\u5b9a\u4e49 API \u5206\u7ec4\u76d1\u63a7\uff0c\u7ba1\u7406\u7f51\u5173\u89c4\u5219\u548c API \u5206\u7ec4\u914d\u7f6e\u3002 \u4ece 1.6.0 \u7248\u672c\u5f00\u59cb\uff0cSentinel \u63d0\u4f9b\u4e86 Spring Cloud Gateway \u7684\u9002\u914d\u6a21\u5757\uff0c\u53ef\u4ee5\u63d0\u4f9b\u4e24\u79cd\u8d44\u6e90\u7ef4\u5ea6\u7684\u9650\u6d41\uff1a route \u7ef4\u5ea6\uff1a\u5373\u5728 Spring \u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u8def\u7531\u6761\u76ee\uff0c\u8d44\u6e90\u540d\u4e3a\u5bf9\u5e94\u7684 routeId \u81ea\u5b9a\u4e49 API \u7ef4\u5ea6\uff1a\u7528\u6237\u53ef\u4ee5\u5229\u7528 Sentinel \u63d0\u4f9b\u7684 API \u6765\u81ea\u5b9a\u4e49\u4e00\u4e9b API \u5206\u7ec4 \u81ea\u5b9a\u4e49\u5f02\u5e38\u65b9\u5f0f\uff1a 1.\u901a\u8fc7yml 1 2 spring:cloud.sentinel.scg.fallback.mode = response spring.cloud.sentinel.scg.fallback.response-body = '{\"code\":403,\"mes\":\"\u9650\u6d41\u4e86\"}' 2.\u901a\u8fc7GatewayCallbackManager 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 /*** * @Author \u5f90\u5eb6 QQ:1092002729 * @Slogan \u81f4\u656c\u5927\u5e08\uff0c\u81f4\u656c\u672a\u6765\u7684\u4f60 */ @Configuration public class GatewayConfig { @PostConstruct public void init (){ BlockRequestHandler blockRequestHandler = new BlockRequestHandler () { @Override public Mono < ServerResponse > handleRequest ( ServerWebExchange exchange , Throwable throwable ) { return ServerResponse . status ( HttpStatus . OK ) . contentType ( MediaType . APPLICATION_JSON ) . body ( BodyInserters . fromValue ( \"\u964d\u7ea7\u4e86!\" )); } }; GatewayCallbackManager . setBlockHandler ( blockRequestHandler ); } } 2.6.2 \u4ee3\u7801\u5b9e\u73b0\u65b9\u5f0f\uff1a\uff08\u4e86\u89e3\uff09 \u7528\u6237\u53ef\u4ee5\u901a\u8fc7 GatewayRuleManager.loadRules(rules) \u624b\u52a8\u52a0\u8f7d\u7f51\u5173\u89c4\u5219 GatewayConfiguration\u4e2d\u6dfb\u52a0 1 2 3 4 5 6 7 @PostConstruct public void doInit () { //\u521d\u59cb\u5316\u7f51\u5173\u9650\u6d41\u89c4\u5219 initGatewayRules (); //\u81ea\u5b9a\u4e49\u9650\u6d41\u5f02\u5e38\u5904\u7406\u5668 initBlockRequestHandler (); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 private void initGatewayRules () { Set < GatewayFlowRule > rules = new HashSet <> (); //resource\uff1a\u8d44\u6e90\u540d\u79f0\uff0c\u53ef\u4ee5\u662f\u7f51\u5173\u4e2d\u7684 route \u540d\u79f0\u6216\u8005\u7528\u6237\u81ea\u5b9a\u4e49\u7684 API \u5206\u7ec4\u540d\u79f0\u3002 //count\uff1a\u9650\u6d41\u9608\u503c //intervalSec\uff1a\u7edf\u8ba1\u65f6\u95f4\u7a97\u53e3\uff0c\u5355\u4f4d\u662f\u79d2\uff0c\u9ed8\u8ba4\u662f 1 \u79d2\u3002 rules . add ( new GatewayFlowRule ( \"order_route\" ) . setCount ( 2 ) . setIntervalSec ( 1 ) ); rules . add ( new GatewayFlowRule ( \"user_service_api\" ) . setCount ( 2 ) . setIntervalSec ( 1 ) ); // \u52a0\u8f7d\u7f51\u5173\u89c4\u5219 GatewayRuleManager . loadRules ( rules ); } private void initBlockRequestHandler () { BlockRequestHandler blockRequestHandler = new BlockRequestHandler () { @Override public Mono < ServerResponse > handleRequest ( ServerWebExchange exchange , Throwable t ) { HashMap < String , String > result = new HashMap <> (); result . put ( \"code\" , String . valueOf ( HttpStatus . TOO_MANY_REQUESTS . value ())); result . put ( \"msg\" , HttpStatus . TOO_MANY_REQUESTS . getReasonPhrase ()); return ServerResponse . status ( HttpStatus . TOO_MANY_REQUESTS ) . contentType ( MediaType . APPLICATION_JSON ) . body ( BodyInserters . fromValue ( result )); } }; //\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u5f02\u5e38\u5904\u7406\u5668 GatewayCallbackManager . setBlockHandler ( blockRequestHandler ); } 2.7 \u7f51\u5173\u9ad8\u53ef\u7528 \u4e3a\u4e86\u4fdd\u8bc1 Gateway \u7684\u9ad8\u53ef\u7528\u6027\uff0c\u53ef\u4ee5\u540c\u65f6\u542f\u52a8\u591a\u4e2a Gateway \u5b9e\u4f8b\u8fdb\u884c\u8d1f\u8f7d\uff0c\u5728 Gateway \u7684\u4e0a\u6e38\u4f7f\u7528 Nginx \u6216\u8005 F5 \u8fdb\u884c\u8d1f\u8f7d\u8f6c\u53d1\u4ee5\u8fbe\u5230\u9ad8\u53ef\u7528\u3002","title":"08Spring Cloud\u5fae\u670d\u52a1\u7f51\u5173Gateway\u7ec4\u4ef6"},{"location":"SpringCloudAlibaba/08Spring%20Cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3Gateway%E7%BB%84%E4%BB%B6/#_1","text":"\u5927\u5bb6\u90fd\u90fd\u77e5\u9053\u5728\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\uff0c\u4e00\u4e2a\u7cfb\u7edf\u4f1a\u88ab\u62c6\u5206\u4e3a\u5f88\u591a\u4e2a\u5fae\u670d\u52a1\u3002\u90a3\u4e48\u4f5c\u4e3a\u5ba2\u6237\u7aef\u8981\u5982\u4f55\u53bb\u8c03\u7528\u8fd9\u4e48\u591a\u7684\u5fae\u670d\u52a1\u5462\uff1f \u5982\u679c\u6ca1\u6709\u7f51\u5173\u7684\u5b58\u5728\uff0c\u6211\u4eec\u53ea\u80fd\u5728\u5ba2\u6237\u7aef\u8bb0\u5f55\u6bcf\u4e2a\u5fae\u670d\u52a1\u7684\u5730\u5740\uff0c\u7136\u540e\u5206\u522b\u53bb\u7528\u3002 \u8fd9\u6837\u7684\u67b6\u6784\uff0c\u4f1a\u5b58\u5728\u7740\u8bf8\u591a\u7684\u95ee\u9898\uff1a \u6bcf\u4e2a\u4e1a\u52a1\u90fd\u4f1a\u9700\u8981\u9274\u6743\u3001\u9650\u6d41\u3001\u6743\u9650\u6821\u9a8c\u3001\u8de8\u57df\u7b49\u903b\u8f91\uff0c\u5982\u679c\u6bcf\u4e2a\u4e1a\u52a1\u90fd\u5404\u81ea\u4e3a\u6218\uff0c\u81ea\u5df1\u9020\u8f6e\u5b50\u5b9e\u73b0\u4e00\u904d\uff0c\u4f1a\u5f88\u86cb\u75bc\uff0c\u5b8c\u5168\u53ef\u4ee5\u62bd\u51fa\u6765\uff0c\u653e\u5230\u4e00\u4e2a\u7edf\u4e00\u7684\u5730\u65b9\u53bb\u505a\u3002 \u5982\u679c\u4e1a\u52a1\u91cf\u6bd4\u8f83\u7b80\u5355\u7684\u8bdd\uff0c\u8fd9\u79cd\u65b9\u5f0f\u524d\u671f\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u968f\u7740\u4e1a\u52a1\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u6bd4\u5982\u6dd8\u5b9d\u3001\u4e9a\u9a6c\u900a\u6253\u5f00\u4e00\u4e2a\u9875\u9762\u53ef\u80fd\u4f1a\u6d89\u53ca\u5230\u6570\u767e\u4e2a\u5fae\u670d\u52a1\u534f\u540c\u5de5\u4f5c\uff0c\u5982\u679c\u6bcf\u4e00\u4e2a\u5fae\u670d\u52a1\u90fd\u5206\u914d\u4e00\u4e2a\u57df\u540d\u7684\u8bdd\uff0c\u4e00\u65b9\u9762\u5ba2\u6237\u7aef\u4ee3\u7801\u4f1a\u5f88\u96be\u7ef4\u62a4\uff0c\u6d89\u53ca\u5230\u6570\u767e\u4e2a\u57df\u540d\uff0c\u53e6\u4e00\u65b9\u9762\u662f\u8fde\u63a5\u6570\u7684\u74f6\u9888\uff0c\u60f3\u8c61\u4e00\u4e0b\u4f60\u6253\u5f00\u4e00\u4e2aAPP\uff0c\u901a\u8fc7\u6293\u5305\u53d1\u73b0\u6d89\u53ca\u5230\u4e86\u6570\u767e\u4e2a\u8fdc\u7a0b\u8c03\u7528\uff0c\u8fd9\u5728\u79fb\u52a8\u7aef\u4e0b\u4f1a\u663e\u5f97\u975e\u5e38\u4f4e\u6548\u3002 \u540e\u671f\u5982\u679c\u9700\u8981\u5bf9\u5fae\u670d\u52a1\u8fdb\u884c\u91cd\u6784\u7684\u8bdd\uff0c\u4e5f\u4f1a\u53d8\u7684\u975e\u5e38\u9ebb\u70e6\uff0c\u9700\u8981\u5ba2\u6237\u7aef\u914d\u5408\u4f60\u4e00\u8d77\u8fdb\u884c\u6539\u9020\uff0c\u6bd4\u5982\u5546\u54c1\u670d\u52a1\uff0c\u968f\u7740\u4e1a\u52a1\u53d8\u7684\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u540e\u671f\u9700\u8981\u8fdb\u884c\u62c6\u5206\u6210\u591a\u4e2a\u5fae\u670d\u52a1\uff0c\u8fd9\u4e2a\u65f6\u5019\u5bf9\u5916\u63d0\u4f9b\u7684\u670d\u52a1\u4e5f\u9700\u8981\u62c6\u5206\u6210\u591a\u4e2a\uff0c\u540c\u65f6\u9700\u8981\u5ba2\u6237\u7aef\u914d\u5408\u4f60\u8fdb\u884c\u6539\u9020\uff0c\u975e\u5e38\u86cb\u75bc\u3002 \u4e0a\u9762\u7684\u8fd9\u4e9b\u95ee\u9898\u53ef\u4ee5\u501f\u52a9API\u7f51\u5173\u6765\u89e3\u51b3\u3002 \u6240\u8c13\u7684API\u7f51\u5173 \uff0c\u5c31\u662f\u6307\u7cfb\u7edf\u7684\u7edf\u4e00\u5165\u53e3\uff0c\u5b83\u5c01\u88c5\u4e86\u5e94\u7528\u7a0b\u5e8f\u7684\u5185\u90e8\u7ed3\u6784\uff0c\u4e3a\u5ba2\u6237\u7aef\u63d0\u4f9b\u7edf\u4e00\u670d\u52a1\uff0c\u4e00\u4e9b\u4e0e\u4e1a\u52a1\u672c\u8eab\u529f\u80fd\u65e0\u5173\u7684\u516c\u5171\u903b\u8f91\u53ef\u4ee5\u5728\u8fd9\u91cc\u5b9e\u73b0\uff0c\u8bf8\u5982\u8ba4\u8bc1\u3001\u9274\u6743\u3001\u76d1\u63a7\u3001\u8def\u7531\u8f6c\u53d1\u7b49\u7b49\u3002 \u6dfb\u52a0\u4e0aAPI\u7f51\u5173\u4e4b\u540e\uff0c\u7cfb\u7edf\u7684\u67b6\u6784\u56fe\u53d8\u6210\u4e86\u5982\u4e0b\u6240\u793a\uff1a \u6211\u4eec\u4e5f\u53ef\u4ee5\u89c2\u5bdf\u4e0b\uff0c\u6211\u4eec\u73b0\u5728\u7684\u6574\u4f53\u67b6\u6784\u56fe\uff1a","title":"\u7f51\u5173\u7b80\u4ecb"},{"location":"SpringCloudAlibaba/08Spring%20Cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3Gateway%E7%BB%84%E4%BB%B6/#1spring-cloud-gateway","text":"\u7f51\u5173\u4f5c\u4e3a\u6d41\u91cf\u7684\u5165\u53e3\uff0c\u5e38\u7528\u7684\u529f\u80fd\u5305\u62ec\u8def\u7531\u8f6c\u53d1\uff0c\u6743\u9650\u6821\u9a8c\uff0c\u9650\u6d41\u7b49\u3002 Spring Cloud Gateway \u662fSpring Cloud\u5b98\u65b9\u63a8\u51fa\u7684\u7b2c\u4e8c\u4ee3\u7f51\u5173\u6846\u67b6\uff0c\u5b9a\u4f4d\u4e8e\u53d6\u4ee3 Netflix Zuul1.0\u3002\u76f8\u6bd4 Zuul \u6765\u8bf4\uff0cSpring Cloud Gateway \u63d0\u4f9b\u66f4\u4f18\u79c0\u7684\u6027\u80fd\uff0c\u66f4\u5f3a\u5927\u7684\u6709\u529f\u80fd\u3002 Spring Cloud Gateway \u662f\u7531 WebFlux + Netty + Reactor \u5b9e\u73b0\u7684\u54cd\u5e94\u5f0f\u7684 API \u7f51\u5173\u3002\u5b83\u4e0d\u80fd\u5728\u4f20\u7edf\u7684 servlet \u5bb9\u5668\u4e2d\u5de5\u4f5c\uff0c\u4e5f\u4e0d\u80fd\u6784\u5efa\u6210 war \u5305\u3002 Spring Cloud Gateway \u65e8\u5728\u4e3a\u5fae\u670d\u52a1\u67b6\u6784\u63d0\u4f9b\u4e00\u79cd\u7b80\u5355\u4e14\u6709\u6548\u7684 API \u8def\u7531\u7684\u7ba1\u7406\u65b9\u5f0f\uff0c\u5e76\u57fa\u4e8e Filter \u7684\u65b9\u5f0f\u63d0\u4f9b\u7f51\u5173\u7684\u57fa\u672c\u529f\u80fd\uff0c\u4f8b\u5982\u8bf4\u5b89\u5168\u8ba4\u8bc1\u3001\u76d1\u63a7\u3001\u9650\u6d41\u7b49\u7b49\u3002 \u5176\u4ed6\u7684\u7f51\u5173\u7ec4\u4ef6\uff1a \u5728SpringCloud\u5fae\u670d\u52a1\u4f53\u7cfb\u4e2d\uff0c\u6709\u4e2a\u5f88\u91cd\u8981\u7684\u7ec4\u4ef6\u5c31\u662f\u7f51\u5173\uff0c\u57281.x\u7248\u672c\u4e2d\u90fd\u662f\u91c7\u7528\u7684Zuul\u7f51\u5173\uff1b\u4f46\u57282.x\u7248\u672c\u4e2d\uff0czuul\u7684\u5347\u7ea7\u4e00\u76f4\u8df3\u7968\uff0cSpringCloud\u6700\u540e\u81ea\u5df1\u7814\u53d1\u4e86\u4e00\u4e2a\u7f51\u5173\u66ff\u4ee3Zuul\uff0c\u90a3\u5c31\u662fSpringCloud Gateway \u7f51\u4e0a\u5f88\u591a\u5730\u65b9\u90fd\u8bf4Zuul\u662f\u963b\u585e\u7684\uff0cGateway\u662f\u975e\u963b\u585e\u7684\uff0c\u8fd9\u4e48\u8bf4\u662f\u4e0d\u4e25\u8c28\u7684\uff0c\u51c6\u786e\u7684\u8bb2Zuul1.x\u662f\u963b\u585e\u7684\uff0c\u800c\u57282.x\u7684\u7248\u672c\u4e2d\uff0cZuul\u4e5f\u662f\u57fa\u4e8eNetty\uff0c\u4e5f\u662f\u975e\u963b\u585e\u7684\uff0c\u5982\u679c\u4e00\u5b9a\u8981\u8bf4\u6027\u80fd\uff0c\u5176\u5b9e\u8fd9\u4e2a\u771f\u6ca1\u591a\u5927\u5dee\u8ddd\u3002 \u800c\u5b98\u65b9\u51fa\u8fc7\u4e00\u4e2a\u6d4b\u8bd5\u9879\u76ee\uff0c\u521b\u5efa\u4e86\u4e00\u4e2abenchmark\u7684\u6d4b\u8bd5\u9879\u76ee\uff1aspring-cloud-gateway-bench\uff0c\u5176\u4e2d\u5bf9\u6bd4\u4e86\uff1a \u6027\u80fd\u5f3a\u52b2\uff1a\u662f\u7b2c\u4e00\u4ee3\u7f51\u5173Zuul\u76841.6\u500d \u5b98\u7f51\u6587\u6863\uff1ahttps://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-request-predicates-factories Spring Cloud Gateway \u529f\u80fd\u7279\u5f81 \u57fa\u4e8eSpring Framework 5, Project Reactor \u548c Spring Boot 2.0 \u8fdb\u884c\u6784\u5efa\uff1b \u52a8\u6001\u8def\u7531\uff1a\u80fd\u591f\u5339\u914d\u4efb\u4f55\u8bf7\u6c42\u5c5e\u6027\uff1b \u652f\u6301\u8def\u5f84\u91cd\u5199; \u96c6\u6210 Spring Cloud \u670d\u52a1\u53d1\u73b0\u529f\u80fd\uff08Nacos\u3001Eruka\uff09\uff1b \u53ef\u96c6\u6210\u6d41\u63a7\u964d\u7ea7\u529f\u80fd\uff08Sentinel\u3001Hystrix\uff09\uff1b \u53ef\u4ee5\u5bf9\u8def\u7531\u6307\u5b9a\u6613\u4e8e\u7f16\u5199\u7684 Predicate\uff08\u65ad\u8a00\uff09\u548c Filter\uff08\u8fc7\u6ee4\u5668\uff09\uff1b","title":"1.\u4ec0\u4e48\u662fSpring Cloud Gateway"},{"location":"SpringCloudAlibaba/08Spring%20Cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3Gateway%E7%BB%84%E4%BB%B6/#11","text":"\u8def\u7531\uff08route) \u8def\u7531\u662f\u7f51\u5173\u4e2d\u6700\u57fa\u7840\u7684\u90e8\u5206\uff0c\u8def\u7531\u4fe1\u606f\u5305\u62ec\u4e00\u4e2aID\u3001\u4e00\u4e2a\u76ee\u7684URI\u3001\u4e00\u7ec4\u65ad\u8a00\u5de5\u5382\u3001\u4e00\u7ec4Filter\u7ec4\u6210\u3002\u5982\u679c\u65ad\u8a00\u4e3a\u771f\uff0c\u5219\u8bf4\u660e\u8bf7\u6c42\u7684URL\u548c\u914d\u7f6e\u7684\u8def\u7531\u5339\u914d\u3002 \u65ad\u8a00(predicates) Java8\u4e2d\u7684\u65ad\u8a00\u51fd\u6570\uff0cSpringCloud Gateway\u4e2d\u7684\u65ad\u8a00\u51fd\u6570\u7c7b\u578b\u662fSpring5.0\u6846\u67b6\u4e2d\u7684ServerWebExchange\u3002\u65ad\u8a00\u51fd\u6570\u5141\u8bb8\u5f00\u53d1\u8005\u53bb\u5b9a\u4e49\u5339\u914dHttp request\u4e2d\u7684\u4efb\u4f55\u4fe1\u606f\uff0c\u6bd4\u5982\u8bf7\u6c42\u5934\u548c\u53c2\u6570\u7b49\u3002 \u8fc7\u6ee4\u5668\uff08Filter) SpringCloud Gateway\u4e2d\u7684filter\u5206\u4e3aGateway FilIer\u548cGlobal Filter\u3002Filter\u53ef\u4ee5\u5bf9\u8bf7\u6c42\u548c\u54cd\u5e94\u8fdb\u884c\u5904\u7406\u3002","title":"1.1 \u6838\u5fc3\u6982\u5ff5"},{"location":"SpringCloudAlibaba/08Spring%20Cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3Gateway%E7%BB%84%E4%BB%B6/#12","text":"\u6267\u884c\u6d41\u7a0b\u5927\u4f53\u5982\u4e0b\uff1a Gateway Client\u5411Gateway Server\u53d1\u9001\u8bf7\u6c42 \u8bf7\u6c42\u9996\u5148\u4f1a\u88abHttpWebHandlerAdapter\u8fdb\u884c\u63d0\u53d6\u7ec4\u88c5\u6210\u7f51\u5173\u4e0a\u4e0b\u6587 \u7136\u540e\u7f51\u5173\u7684\u4e0a\u4e0b\u6587\u4f1a\u4f20\u9012\u5230DispatcherHandler\uff0c\u5b83\u8d1f\u8d23\u5c06\u8bf7\u6c42\u5206\u53d1\u7ed9RoutePredicateHandlerMapping RoutePredicateHandlerMapping\u8d1f\u8d23\u8def\u7531\u67e5\u627e\uff0c\u5e76\u6839\u636e\u8def\u7531\u65ad\u8a00\u5224\u65ad\u8def\u7531\u662f\u5426\u53ef\u7528 \u5982\u679c\u8fc7\u65ad\u8a00\u6210\u529f\uff0c\u7531FilteringWebHandler\u521b\u5efa\u8fc7\u6ee4\u5668\u94fe\u5e76\u8c03\u7528 \u8bf7\u6c42\u4f1a\u4e00\u6b21\u7ecf\u8fc7PreFilter--\u5fae\u670d\u52a1--PostFilter\u7684\u65b9\u6cd5\uff0c\u6700\u7ec8\u8fd4\u56de\u54cd\u5e94","title":"1.2 \u5de5\u4f5c\u539f\u7406"},{"location":"SpringCloudAlibaba/08Spring%20Cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3Gateway%E7%BB%84%E4%BB%B6/#2spring-cloud-gateway","text":"","title":"2.Spring Cloud Gateway\u5feb\u901f\u5f00\u59cb"},{"location":"SpringCloudAlibaba/08Spring%20Cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3Gateway%E7%BB%84%E4%BB%B6/#21","text":"\u5f15\u5165\u4f9d\u8d56 1 2 3 4 5 <!-- gateway\u7f51\u5173 --> <dependency> <groupId> org.springframework.cloud </groupId> <artifactId> spring-cloud-starter-gateway </artifactId> </dependency> \u6ce8\u610f\uff1a\u4f1a\u548cspring-webmvc\u7684\u4f9d\u8d56\u51b2\u7a81\uff0c\u9700\u8981\u6392\u9664spring-webmvc \u7f16\u5199yml\u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 server : port : 8888 spring : application : name : api-gateway cloud : gateway : routes : # \u8def\u7531\u6570\u7ec4[\u8def\u7531 \u5c31\u662f\u6307\u5b9a\u5f53\u8bf7\u6c42\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\u7684\u65f6\u5019\u8f6c\u5230\u54ea\u4e2a\u5fae\u670d\u52a1] - id : product_route # \u5f53\u524d\u8def\u7531\u7684\u6807\u8bc6, \u8981\u6c42\u552f\u4e00 uri : http://localhost:8081 # \u8bf7\u6c42\u8981\u8f6c\u53d1\u5230\u7684\u5730\u5740 order : 1 # \u8def\u7531\u7684\u4f18\u5148\u7ea7,\u6570\u5b57\u8d8a\u5c0f\u7ea7\u522b\u8d8a\u9ad8 predicates : # \u65ad\u8a00(\u5c31\u662f\u8def\u7531\u8f6c\u53d1\u8981\u6ee1\u8db3\u7684\u6761\u4ef6) - Path=/product-serv/** # \u5f53\u8bf7\u6c42\u8def\u5f84\u6ee1\u8db3Path\u6307\u5b9a\u7684\u89c4\u5219\u65f6,\u624d\u8fdb\u884c\u8def\u7531\u8f6c\u53d1 filters : # \u8fc7\u6ee4\u5668,\u8bf7\u6c42\u5728\u4f20\u9012\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u901a\u8fc7\u8fc7\u6ee4\u5668\u5bf9\u5176\u8fdb\u884c\u4e00\u5b9a\u7684\u4fee\u6539 - StripPrefix=1 # \u8f6c\u53d1\u4e4b\u524d\u53bb\u63891\u5c42\u8def\u5f84. \u96c6\u6210Nacos \u73b0\u5728\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u5199\u6b7b\u4e86\u8f6c\u53d1\u8def\u5f84\u7684\u5730\u5740, \u524d\u9762\u6211\u4eec\u5df2\u7ecf\u5206\u6790\u8fc7\u5730\u5740\u5199\u6b7b\u5e26\u6765\u7684\u95ee\u9898, \u63a5\u4e0b\u6765\u6211\u4eec\u4ece\u6ce8\u518c\u4e2d\u5fc3\u83b7\u53d6\u6b64\u5730\u5740\u3002 \u5f15\u5165\u4f9d\u8d56 1 2 3 4 5 <!-- nacos\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0 --> <dependency> <groupId> com.alibaba.cloud </groupId> <artifactId> spring-cloud-starter-alibaba-nacos-discovery </artifactId> </dependency> \u7f16\u5199yml\u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 server : port : 8888 spring : application : name : api-gateway cloud : nacos : discovery : server-addr : 127.0.0.1:8848 gateway : routes : - id : product_route uri : lb://service-product # lb\u6307\u7684\u662f\u4ecenacos\u4e2d\u6309\u7167\u540d\u79f0\u83b7\u53d6\u5fae\u670d\u52a1,\u5e76\u9075\u5faa\u8d1f\u8f7d\u5747\u8861\u7b56\u7565 predicates : - Path=/product-serve/** filters : - StripPrefix=1 \u7b80\u5199\uff1a \u53bb\u6389\u5173\u4e8e\u8def\u7531\u7684\u914d\u7f6e\uff0c\u81ea\u52a8\u5bfb\u627e\u670d\u52a1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 server: port: 8888 spring: application: name: api-gateway cloud: nacos: discovery: server-addr: 127.0.0.1:8848 gateway: discovery: locator: enabled: true \u6d4b\u8bd5 \u8fd9\u65f6\u5019\uff0c\u5c31\u53d1\u73b0\u53ea\u8981\u6309\u7167\u7f51\u5173\u5730\u5740/\u5fae\u670d\u52a1/\u63a5\u53e3\u7684\u683c\u5f0f\u53bb\u8bbf\u95ee\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6210\u529f\u54cd\u5e94\u3002","title":"2.1  \u73af\u5883\u642d\u5efa"},{"location":"SpringCloudAlibaba/08Spring%20Cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3Gateway%E7%BB%84%E4%BB%B6/#22-route-predicate-factories","text":"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-request-predicates-factories \u4f5c\u7528\uff1a \u5f53\u8bf7\u6c42gateway\u7684\u65f6\u5019\uff0c \u4f7f\u7528\u65ad\u8a00\u5bf9\u8bf7\u6c42\u8fdb\u884c\u5339\u914d\uff0c \u5982\u679c\u5339\u914d\u6210\u529f\u5c31\u8def\u7531\u8f6c\u53d1\uff0c \u5982\u679c\u5339\u914d\u5931\u8d25\u5c31\u8fd4\u56de404 \u7c7b\u578b\uff1a\u5185\u7f6e\uff0c\u81ea\u5b9a\u4e49 SpringCloud Gateway\u5305\u62ec\u8bb8\u591a\u5185\u7f6e\u7684\u65ad\u8a00\u5de5\u5382\uff0c\u6240\u6709\u8fd9\u4e9b\u65ad\u8a00\u90fd\u4e0eHTTP\u8bf7\u6c42\u7684\u4e0d\u540c\u5c5e\u6027\u5339\u914d\u3002\u5177\u4f53\u5982\u4e0b\uff1a \u57fa\u4e8eDatetime\u7c7b\u578b\u7684\u65ad\u8a00\u5de5\u5382 \u6b64\u7c7b\u578b\u7684\u65ad\u8a00\u6839\u636e\u65f6\u95f4\u505a\u5224\u65ad\uff0c\u4e3b\u8981\u6709\u4e09\u4e2a\uff1a AfterRoutePredicateFactory\uff1a \u63a5\u6536\u4e00\u4e2a\u65e5\u671f\u53c2\u6570\uff0c\u5224\u65ad\u8bf7\u6c42\u65e5\u671f\u662f\u5426\u665a\u4e8e\u6307\u5b9a\u65e5\u671f BeforeRoutePredicateFactory\uff1a \u63a5\u6536\u4e00\u4e2a\u65e5\u671f\u53c2\u6570\uff0c\u5224\u65ad\u8bf7\u6c42\u65e5\u671f\u662f\u5426\u65e9\u4e8e\u6307\u5b9a\u65e5\u671f BetweenRoutePredicateFactory\uff1a \u63a5\u6536\u4e24\u4e2a\u65e5\u671f\u53c2\u6570\uff0c\u5224\u65ad\u8bf7\u6c42\u65e5\u671f\u662f\u5426\u5728\u6307\u5b9a\u65f6\u95f4\u6bb5\u5185 ZonedDateTime.now() 1 After=2019-12-31T23:59:59.789+08:00[Asia/Shanghai] \u57fa\u4e8e\u8fdc\u7a0b\u5730\u5740\u7684\u65ad\u8a00\u5de5\u5382 RemoteAddrRoutePredicateFactory\uff1a\u63a5\u6536\u4e00\u4e2aIP\u5730\u5740\u6bb5\uff0c\u5224\u65ad\u8bf7\u6c42\u4e3b\u673a\u5730\u5740\u662f\u5426\u5728\u5730\u5740\u6bb5\u4e2d 1 RemoteAddr=192.168.1.1/24 \u57fa\u4e8eCookie\u7684\u65ad\u8a00\u5de5\u5382 CookieRoutePredicateFactory\uff1a\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0ccookie \u540d\u5b57\u548c\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u5224\u65ad\u8bf7\u6c42 cookie\u662f\u5426\u5177\u6709\u7ed9\u5b9a\u540d\u79f0\u4e14\u503c\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u3002 1 - Cookie=chocolate, ch. \u57fa\u4e8eHeader\u7684\u65ad\u8a00\u5de5\u5382 HeaderRoutePredicateFactory\uff1a\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u6807\u9898\u540d\u79f0\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u5224\u65ad\u8bf7\u6c42Header\u662f\u5426\u5177\u6709\u7ed9\u5b9a\u540d\u79f0\u4e14\u503c\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u3002 1 -Header=X-Request-Id, \\d+ \u57fa\u4e8eHost\u7684\u65ad\u8a00\u5de5\u5382 HostRoutePredicateFactory\uff1a\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff0c\u4e3b\u673a\u540d\u6a21\u5f0f\u3002\u5224\u65ad\u8bf7\u6c42\u7684Host\u662f\u5426\u6ee1\u8db3\u5339\u914d\u89c4\u5219\u3002 1 -Host=**.testhost.org \u57fa\u4e8eMethod\u8bf7\u6c42\u65b9\u6cd5\u7684\u65ad\u8a00\u5de5\u5382 MethodRoutePredicateFactory\uff1a\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff0c\u5224\u65ad\u8bf7\u6c42\u7c7b\u578b\u662f\u5426\u8ddf\u6307\u5b9a\u7684\u7c7b\u578b\u5339\u914d\u3002 1 -Method=GET \u57fa\u4e8ePath\u8bf7\u6c42\u8def\u5f84\u7684\u65ad\u8a00\u5de5\u5382 PathRoutePredicateFactory\uff1a\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff0c\u5224\u65ad\u8bf7\u6c42\u7684URI\u90e8\u5206\u662f\u5426\u6ee1\u8db3\u8def\u5f84\u89c4\u5219\u3002 1 -Path=/foo/{segment} \u57fa\u4e8eQuery\u8bf7\u6c42\u53c2\u6570\u7684\u65ad\u8a00\u5de5\u5382 QueryRoutePredicateFactory \uff1a\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u8bf7\u6c42param\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c \u5224\u65ad\u8bf7\u6c42\u53c2\u6570\u662f\u5426\u5177\u6709\u7ed9\u5b9a\u540d\u79f0\u4e14\u503c\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u3002 1 -Query=baz, ba. \u57fa\u4e8e\u8def\u7531\u6743\u91cd\u7684\u65ad\u8a00\u5de5\u5382 WeightRoutePredicateFactory\uff1a\u63a5\u6536\u4e00\u4e2a[\u7ec4\u540d,\u6743\u91cd], \u7136\u540e\u5bf9\u4e8e\u540c\u4e00\u4e2a\u7ec4\u5185\u7684\u8def\u7531\u6309\u7167\u6743\u91cd\u8f6c\u53d1 1 2 3 4 5 6 7 8 9 10 11 routes: -id: weight_route1 uri: host1 predicates: -Path=/product/** -Weight=group3, 1 -id: weight_route2 uri: host2 predicates: -Path=/product/** -Weight= group3, 9 2.2.1 \u81ea\u5b9a\u4e49\u8def\u7531\u65ad\u8a00\u5de5\u5382 \u81ea\u5b9a\u4e49\u8def\u7531\u65ad\u8a00\u5de5\u5382\u9700\u8981\u7ee7\u627f AbstractRoutePredicateFactory \u7c7b\uff0c\u91cd\u5199 apply \u65b9\u6cd5\u7684\u903b\u8f91\u3002\u5728 apply \u65b9\u6cd5\u4e2d\u53ef\u4ee5\u901a\u8fc7 exchange.getRequest() \u62ff\u5230 ServerHttpRequest \u5bf9\u8c61\uff0c\u4ece\u800c\u53ef\u4ee5\u83b7\u53d6\u5230\u8bf7\u6c42\u7684\u53c2\u6570\u3001\u8bf7\u6c42\u65b9\u5f0f\u3001\u8bf7\u6c42\u5934\u7b49\u4fe1\u606f\u3002 \u5fc5\u987bspring\u7ec4\u4ef6 bean \u7c7b\u5fc5\u987b\u52a0\u4e0aRoutePredicateFactory\u4f5c\u4e3a\u7ed3\u5c3e \u5fc5\u987b\u7ee7\u627fAbstractRoutePredicateFactory \u5fc5\u987b\u58f0\u660e\u9759\u6001\u5185\u90e8\u7c7b \u58f0\u660e\u5c5e\u6027\u6765\u63a5\u6536 \u914d\u7f6e\u6587\u4ef6\u4e2d\u5bf9\u5e94\u7684\u65ad\u8a00\u7684\u4fe1\u606f \u9700\u8981\u7ed3\u5408shortcutFieldOrder\u8fdb\u884c\u7ed1\u5b9a \u901a\u8fc7apply\u8fdb\u884c\u903b\u8f91\u5224\u65ad true\u5c31\u662f\u5339\u914d\u6210\u529f false\u5339\u914d\u5931\u8d25 \u6ce8\u610f\uff1a \u547d\u540d\u9700\u8981\u4ee5 RoutePredicateFactory \u7ed3\u5c3e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 @Component @Slf4j public class CheckAuthRoutePredicateFactory extends AbstractRoutePredicateFactory < CheckAuthRoutePredicateFactory . Config > { public CheckAuthRoutePredicateFactory () { super ( Config . class ); } @Override public Predicate < ServerWebExchange > apply ( Config config ) { return new GatewayPredicate () { @Override public boolean test ( ServerWebExchange serverWebExchange ) { log . info ( \"\u8c03\u7528CheckAuthRoutePredicateFactory\" + config . getName ()); if ( config . getName (). equals ( \"xushu\" )){ return true ; } return false ; } }; } /** * \u5feb\u6377\u914d\u7f6e * @return */ @Override public List < String > shortcutFieldOrder () { return Collections . singletonList ( \"name\" ); } public static class Config { private String name ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } } } yml\u4e2d\u914d\u7f6e 1 2 3 4 5 6 7 8 9 10 11 12 13 spring : cloud : gateway : #\u8bbe\u7f6e\u8def\u7531\uff1a\u8def\u7531id\u3001\u8def\u7531\u5230\u5fae\u670d\u52a1\u7684uri\u3001\u65ad\u8a00 routes : - id : order_route #\u8def\u7531ID\uff0c\u5168\u5c40\u552f\u4e00 uri : http://localhost:8020 #\u76ee\u6807\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u5730\u5740\u548c\u7aef\u53e3 predicates : # \u6d4b\u8bd5\uff1ahttp://localhost:8888/order/findOrderByUserId/1 - Path=/order/** #Path\u8def\u5f84\u5339\u914d #\u81ea\u5b9a\u4e49CheckAuth\u65ad\u8a00\u5de5\u5382 - CheckAuth=xushu","title":"2.2 \u8def\u7531\u65ad\u8a00\u5de5\u5382\uff08Route Predicate Factories\uff09\u914d\u7f6e"},{"location":"SpringCloudAlibaba/08Spring%20Cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3Gateway%E7%BB%84%E4%BB%B6/#23-gatewayfilter-factories","text":"Gateway \u5185\u7f6e\u4e86\u5f88\u591a\u7684\u8fc7\u6ee4\u5668\u5de5\u5382\uff0c\u6211\u4eec\u901a\u8fc7\u4e00\u4e9b\u8fc7\u6ee4\u5668\u5de5\u5382\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u4e1a\u52a1\u903b\u8f91\u5904\u7406\u5668\uff0c\u6bd4\u5982\u6dfb\u52a0\u5254\u9664\u54cd\u5e94\u5934\uff0c\u6dfb\u52a0\u53bb\u9664\u53c2\u6570\u7b49 \u8fc7\u6ee4\u5668\u5de5\u5382 \u4f5c\u7528 \u53c2\u6570 AddRequestHeader \u4e3a\u539f\u59cb\u8bf7\u6c42\u6dfb\u52a0Header Header\u7684\u540d\u79f0\u53ca\u503c AddRequestParameter \u4e3a\u539f\u59cb\u8bf7\u6c42\u6dfb\u52a0\u8bf7\u6c42\u53c2\u6570 \u53c2\u6570\u540d\u79f0\u53ca\u503c AddResponseHeader \u4e3a\u539f\u59cb\u54cd\u5e94\u6dfb\u52a0Header Header\u7684\u540d\u79f0\u53ca\u503c DedupeResponseHeader \u5254\u9664\u54cd\u5e94\u5934\u4e2d\u91cd\u590d\u7684\u503c \u9700\u8981\u53bb\u91cd\u7684Header\u540d\u79f0\u53ca\u53bb\u91cd\u7b56\u7565 Hystrix \u4e3a\u8def\u7531\u5f15\u5165Hystrix\u7684\u65ad\u8def\u5668\u4fdd\u62a4 HystrixCommand \u7684\u540d\u79f0 FallbackHeaders \u4e3afallbackUri\u7684\u8bf7\u6c42\u5934\u4e2d\u6dfb\u52a0\u5177\u4f53\u7684\u5f02\u5e38\u4fe1\u606f Header\u7684\u540d\u79f0 Pre\ufb01xPath \u4e3a\u539f\u59cb\u8bf7\u6c42\u8def\u5f84\u6dfb\u52a0\u524d\u7f00 \u524d\u7f00\u8def\u5f84 PreserveHostHeader \u4e3a\u8bf7\u6c42\u6dfb\u52a0\u4e00\u4e2apreserveHostHeader=true \u7684 \u5c5e \u6027\uff0c\u8def\u7531\u8fc7\u6ee4\u5668\u4f1a\u68c0\u67e5\u8be5\u5c5e\u6027\u4ee5\u51b3\u5b9a\u662f\u5426\u8981\u53d1\u9001\u539f\u59cb\u7684Host \u65e0 RequestRateLimiter \u7528\u4e8e\u5bf9\u8bf7\u6c42\u9650\u6d41\uff0c\u9650\u6d41\u7b97\u6cd5\u4e3a\u4ee4\u724c\u6876 keyResolver\u3001rateLimiter\u3001statusCode\u3001denyEmptyKey\u3001emptyKeyStatus RedirectTo \u5c06\u539f\u59cb\u8bf7\u6c42\u91cd\u5b9a\u5411\u5230\u6307\u5b9a\u7684URL http\u72b6\u6001\u7801\u53ca\u91cd\u5b9a\u5411\u7684url RemoveHopByHopHeadersFilter \u4e3a\u539f\u59cb\u8bf7\u6c42\u5220\u9664IETF\u7ec4\u7ec7\u89c4\u5b9a\u7684\u4e00\u7cfb\u5217Header \u9ed8\u8ba4\u5c31\u4f1a\u542f\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6307\u5b9a\u4ec5\u5220\u9664\u54ea\u4e9bHeader RemoveRequestHeader \u4e3a\u539f\u59cb\u8bf7\u6c42\u5220\u9664\u67d0\u4e2aHeader Header\u540d\u79f0 RemoveResponseHeader \u4e3a\u539f\u59cb\u54cd\u5e94\u5220\u9664\u67d0\u4e2aHeader Header\u540d\u79f0 RewritePath \u91cd\u5199\u539f\u59cb\u7684\u8bf7\u6c42\u8def\u5f84 \u539f\u59cb\u8def\u5f84\u6b63\u5219\u8868\u8fbe\u5f0f\u4ee5\u53ca\u91cd\u5199\u540e\u8def\u5f84\u7684\u6b63\u5219\u8868\u8fbe\u5f0f RewriteResponseHeader \u91cd\u5199\u539f\u59cb\u54cd\u5e94\u4e2d\u7684\u67d0\u4e2aHeader Header\u540d\u79f0\uff0c\u503c\u7684\u6b63 \u5219\u8868\u8fbe\u5f0f\uff0c\u91cd\u5199\u540e\u7684\u503c SaveSession \u5728\u8f6c\u53d1\u8bf7\u6c42\u4e4b\u524d\uff0c\u5f3a\u5236\u6267\u884cWebSession::save \u64cd\u4f5c \u65e0 secureHeaders \u4e3a\u539f\u59cb\u54cd\u5e94\u6dfb\u52a0\u4e00\u7cfb\u5217\u8d77\u5b89\u5168\u4f5c\u7528\u7684\u54cd\u5e94\u5934 \u65e0\uff0c\u652f\u6301\u4fee\u6539\u8fd9\u4e9b\u5b89\u5168\u54cd\u5e94\u5934\u7684\u503c SetPath \u4fee\u6539\u539f\u59cb\u7684\u8bf7\u6c42\u8def\u5f84 \u4fee\u6539\u540e\u7684\u8def\u5f84 SetResponseHeader \u4fee\u6539\u539f\u59cb\u54cd\u5e94\u4e2d\u67d0\u4e2aHeader\u7684\u503c Header\u540d\u79f0\uff0c\u4fee\u6539\u540e\u7684\u503c SetStatus \u4fee\u6539\u539f\u59cb\u54cd\u5e94\u7684\u72b6\u6001\u7801 HTTP \u72b6\u6001\u7801\uff0c\u53ef\u4ee5\u662f\u6570\u5b57\uff0c\u4e5f\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32 StripPre\ufb01x \u7528\u4e8e\u622a\u65ad\u539f\u59cb\u8bf7\u6c42\u7684\u8def\u5f84 \u4f7f\u7528\u6570\u5b57\u8868\u793a\u8981\u622a\u65ad\u7684\u8def\u5f84\u7684\u6570\u91cf Retry \u9488\u5bf9\u4e0d\u540c\u7684\u54cd\u5e94\u8fdb\u884c\u91cd\u8bd5 retries\u3001statuses\u3001methods\u3001series RequestSize \u8bbe\u7f6e\u5141\u8bb8\u63a5\u6536\u6700\u5927\u8bf7\u6c42\u5305\u7684\u5927 \u5c0f\u3002\u5982\u679c\u8bf7\u6c42\u5305\u5927\u5c0f\u8d85\u8fc7\u8bbe\u7f6e\u7684\u503c\uff0c\u5219\u8fd4\u56de 413 Payload TooLarge \u8bf7\u6c42\u5305\u5927\u5c0f\uff0c\u5355\u4f4d\u4e3a\u5b57\u8282\uff0c\u9ed8\u8ba4\u503c\u4e3a5M ModifyRequestBody \u5728\u8f6c\u53d1\u8bf7\u6c42\u4e4b\u524d\u4fee\u6539\u539f\u59cb\u8bf7\u6c42\u4f53\u5185\u5bb9 \u4fee\u6539\u540e\u7684\u8bf7\u6c42\u4f53\u5185\u5bb9 ModifyResponseBody \u4fee\u6539\u539f\u59cb\u54cd\u5e94\u4f53\u7684\u5185\u5bb9 \u4fee\u6539\u540e\u7684\u54cd\u5e94\u4f53\u5185\u5bb9 https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gatewayfilter-factories 2.3.1 \u6dfb\u52a0\u8bf7\u6c42\u5934 1 2 3 4 5 6 7 8 9 10 11 spring : cloud : gateway : #\u8bbe\u7f6e\u8def\u7531\uff1a\u8def\u7531id\u3001\u8def\u7531\u5230\u5fae\u670d\u52a1\u7684uri\u3001\u65ad\u8a00 routes : - id : order_route #\u8def\u7531ID\uff0c\u5168\u5c40\u552f\u4e00 uri : http://localhost:8020 #\u76ee\u6807\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u5730\u5740\u548c\u7aef\u53e3 #\u914d\u7f6e\u8fc7\u6ee4\u5668\u5de5\u5382 filters : - AddRequestHeader=X-Request-color, red #\u6dfb\u52a0\u8bf7\u6c42\u5934 \u6d4b\u8bd5http://localhost:8888/order/testgateway 1 2 3 4 5 6 7 8 9 10 11 @GetMapping ( \"/testgateway\" ) public String testGateway ( HttpServletRequest request ) throws Exception { log . info ( \"gateWay\u83b7\u53d6\u8bf7\u6c42\u5934X-Request-color\uff1a\" + request . getHeader ( \"X-Request-color\" )); return \"success\" ; } @GetMapping ( \"/testgateway2\" ) public String testGateway ( @RequestHeader ( \"X-Request-color\" ) String color ) throws Exception { log . info ( \"gateWay\u83b7\u53d6\u8bf7\u6c42\u5934X-Request-color\uff1a\" + color ); return \"success\" ; } 2.3.2 \u6dfb\u52a0\u8bf7\u6c42\u53c2\u6570 1 2 3 4 5 6 7 8 9 10 11 spring : cloud : gateway : #\u8bbe\u7f6e\u8def\u7531\uff1a\u8def\u7531id\u3001\u8def\u7531\u5230\u5fae\u670d\u52a1\u7684uri\u3001\u65ad\u8a00 routes : - id : order_route #\u8def\u7531ID\uff0c\u5168\u5c40\u552f\u4e00 uri : http://localhost:8020 #\u76ee\u6807\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u5730\u5740\u548c\u7aef\u53e3 #\u914d\u7f6e\u8fc7\u6ee4\u5668\u5de5\u5382 filters : - AddRequestParameter=color, blue # \u6dfb\u52a0\u8bf7\u6c42\u53c2\u6570 \u6d4b\u8bd5http://localhost:8888/order/testgateway3 1 2 3 4 5 @GetMapping ( \"/testgateway3\" ) public String testGateway3 ( @RequestParam ( \"color\" ) String color ) throws Exception { log . info ( \"gateWay\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570color:\" + color ); return \"success\" ; } 2.3.3 \u4e3a\u5339\u914d\u7684\u8def\u7531\u7edf\u4e00\u6dfb\u52a0\u524d\u7f00 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 spring : cloud : gateway : #\u8bbe\u7f6e\u8def\u7531\uff1a\u8def\u7531id\u3001\u8def\u7531\u5230\u5fae\u670d\u52a1\u7684uri\u3001\u65ad\u8a00 routes : - id : order_route #\u8def\u7531ID\uff0c\u5168\u5c40\u552f\u4e00 uri : http://localhost:8020 #\u76ee\u6807\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u5730\u5740\u548c\u7aef\u53e3 #\u914d\u7f6e\u8fc7\u6ee4\u5668\u5de5\u5382 filters : - PrefixPath=/mall-order # \u6dfb\u52a0\u524d\u7f00 \u5bf9\u5e94\u5fae\u670d\u52a1\u9700\u8981\u914d\u7f6econtext-path mall-order\u4e2d\u9700\u8981\u914d\u7f6e server : servlet : context-path : /mall-order \u6d4b\u8bd5\uff1a http://localhost:8888/order/findOrderByUserId/1 ====\u300b http://localhost:8020/mall-order/order/findOrderByUserId/1 2.3.4 \u91cd\u5b9a\u5411\u64cd\u4f5c 1 2 3 4 5 6 7 8 9 10 spring: cloud: gateway: #\u8bbe\u7f6e\u8def\u7531\uff1a\u8def\u7531id\u3001\u8def\u7531\u5230\u5fae\u670d\u52a1\u7684uri\u3001\u65ad\u8a00 routes: - id: order_route #\u8def\u7531ID\uff0c\u5168\u5c40\u552f\u4e00 uri: http://localhost:8020 #\u76ee\u6807\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u5730\u5740\u548c\u7aef\u53e3 #\u914d\u7f6e\u8fc7\u6ee4\u5668\u5de5\u5382 filters: - RedirectTo=302, https://www.baidu.com/ #\u91cd\u5b9a\u5411\u5230\u767e\u5ea6 \u6d4b\u8bd5\uff1ahttp://localhost:8888/order/findOrderByUserId/1 2.3.5 \u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668\u5de5\u5382 \u7ee7\u627fAbstractNameValueGatewayFilterFactory\u4e14\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u540d\u79f0\u5fc5\u987b\u8981\u4ee5GatewayFilterFactory\u7ed3\u5c3e\u5e76\u4ea4\u7ed9spring\u7ba1\u7406\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 @Component @Slf4j public class CheckAuthGatewayFilterFactory extends AbstractNameValueGatewayFilterFactory { @Override public GatewayFilter apply ( NameValueConfig config ) { return ( exchange , chain ) -> { log . info ( \"\u8c03\u7528CheckAuthGatewayFilterFactory===\" + config . getName () + \":\" + config . getValue ()); return chain . filter ( exchange ); }; } } \u914d\u7f6e\u81ea\u5b9a\u4e49\u7684\u8fc7\u6ee4\u5668\u5de5\u5382 1 2 3 4 5 6 7 8 9 10 11 spring: cloud: gateway: #\u8bbe\u7f6e\u8def\u7531\uff1a\u8def\u7531id\u3001\u8def\u7531\u5230\u5fae\u670d\u52a1\u7684uri\u3001\u65ad\u8a00 routes: - id: order_route #\u8def\u7531ID\uff0c\u5168\u5c40\u552f\u4e00 uri: http://localhost:8020 #\u76ee\u6807\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u5730\u5740\u548c\u7aef\u53e3 #\u914d\u7f6e\u8fc7\u6ee4\u5668\u5de5\u5382 filters: - CheckAuth=fox,\u7537 \u6d4b\u8bd5","title":"2.3 \u8fc7\u6ee4\u5668\u5de5\u5382\uff08 GatewayFilter Factories\uff09\u914d\u7f6e"},{"location":"SpringCloudAlibaba/08Spring%20Cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3Gateway%E7%BB%84%E4%BB%B6/#24-global-filters","text":"\u5c40\u90e8\u8fc7\u6ee4\u5668\u548c\u5168\u5c40\u8fc7\u6ee4\u5668\u533a\u522b\uff1a \u5c40\u90e8\uff1a\u5c40\u90e8\u9488\u5bf9\u67d0\u4e2a\u8def\u7531\uff0c \u9700\u8981\u5728\u8def\u7531\u4e2d\u8fdb\u884c\u914d\u7f6e \u5168\u5c40\uff1a\u9488\u5bf9\u6240\u6709\u8def\u7531\u8bf7\u6c42\uff0c \u4e00\u65e6\u5b9a\u4e49\u5c31\u4f1a\u6295\u5165\u4f7f\u7528 GlobalFilter \u63a5\u53e3\u548c GatewayFilter \u6709\u4e00\u6837\u7684\u63a5\u53e3\u5b9a\u4e49\uff0c\u53ea\u4e0d\u8fc7\uff0c GlobalFilter \u4f1a\u4f5c\u7528\u4e8e\u6240\u6709\u8def\u7531\u3002 2.4.1 LoadBalancerClientFilter LoadBalancerClientFilter \u4f1a\u67e5\u770bexchange\u7684\u5c5e\u6027 ServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR \u7684\u503c\uff08\u4e00\u4e2aURI\uff09\uff0c\u5982\u679c\u8be5\u503c\u7684scheme\u662f lb\uff0c\u6bd4\u5982\uff1alb://myservice \uff0c\u5b83\u5c06\u4f1a\u4f7f\u7528Spring Cloud\u7684LoadBalancerClient \u6765\u5c06 myservice \u89e3\u6790\u6210\u5b9e\u9645\u7684host\u548cport\uff0c\u5e76\u66ff\u6362\u6389 ServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR \u7684\u5185\u5bb9\u3002 \u5176\u5b9e\u5c31\u662f\u7528\u6765\u6574\u5408\u8d1f\u8f7d\u5747\u8861\u5668Ribbon\u7684 1 2 3 4 5 6 7 8 9 spring : cloud : gateway : routes : - id : order_route uri : lb://mall-order predicates : - Path=/order/** 2.4.2 \u81ea\u5b9a\u4e49\u5168\u5c40\u8fc7\u6ee4\u5668 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 /*** * @Author \u5f90\u5eb6 QQ:1092002729 * @Slogan \u81f4\u656c\u5927\u5e08\uff0c\u81f4\u656c\u672a\u6765\u7684\u4f60 */ @Component public class LogFilter implements GlobalFilter { Logger log = LoggerFactory . getLogger ( this . getClass ()); @Override public Mono < Void > filter ( ServerWebExchange exchange , GatewayFilterChain chain ) { log . info ( exchange . getRequest (). getPath (). value ()); return chain . filter ( exchange ); } } Reactor Netty \u8bbf\u95ee\u65e5\u5fd7 \u8981\u542f\u7528 Reactor Netty \u8bbf\u95ee\u65e5\u5fd7\uff0c\u8bf7\u8bbe\u7f6e-Dreactor.netty.http.server.accessLogEnabled=true. \u5b83\u5fc5\u987b\u662f Java \u7cfb\u7edf\u5c5e\u6027\uff0c\u800c\u4e0d\u662f Spring Boot \u5c5e\u6027\u3002 \u60a8\u53ef\u4ee5\u5c06\u65e5\u5fd7\u8bb0\u5f55\u7cfb\u7edf\u914d\u7f6e\u4e3a\u5177\u6709\u5355\u72ec\u7684\u8bbf\u95ee\u65e5\u5fd7\u6587\u4ef6\u3002\u4ee5\u4e0b\u793a\u4f8b\u521b\u5efa\u4e00\u4e2a Logback \u914d\u7f6e\uff1a \u4f8b 67.logback.xml 1 2 3 4 5 6 7 8 9 10 11 12 <appender name= \"accessLog\" class= \"ch.qos.logback.core.FileAppender\" > <file> access_log.log </file> <encoder> <pattern> %msg%n </pattern> </encoder> </appender> <appender name= \"async\" class= \"ch.qos.logback.classic.AsyncAppender\" > <appender-ref ref= \"accessLog\" /> </appender> <logger name= \"reactor.netty.http.server.AccessLog\" level= \"INFO\" additivity= \"false\" > <appender-ref ref= \"async\" /> </logger>","title":"2.4 \u5168\u5c40\u8fc7\u6ee4\u5668\uff08Global Filters\uff09\u914d\u7f6e"},{"location":"SpringCloudAlibaba/08Spring%20Cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3Gateway%E7%BB%84%E4%BB%B6/#25-gatewaycors-configuration","text":"\u901a\u8fc7yml\u914d\u7f6e\u7684\u65b9\u5f0f https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#cors-configuration 1 2 3 4 5 6 7 8 9 10 11 12 13 spring : cloud : gateway : globalcors : cors-configurations : '[/**]' : allowedOrigins : \"*\" allowedMethods : - GET - POST - DELETE - PUT - OPTION \u901a\u8fc7java\u914d\u7f6e\u7684\u65b9\u5f0f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @Configuration public class CorsConfig { @Bean public CorsWebFilter corsFilter () { CorsConfiguration config = new CorsConfiguration (); config . addAllowedMethod ( \"*\" ); config . addAllowedOrigin ( \"*\" ); config . addAllowedHeader ( \"*\" ); UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource ( new PathPatternParser ()); source . registerCorsConfiguration ( \"/**\" , config ); return new CorsWebFilter ( source ); } }","title":"2.5 Gateway\u8de8\u57df\u914d\u7f6e\uff08CORS Configuration\uff09"},{"location":"SpringCloudAlibaba/08Spring%20Cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3Gateway%E7%BB%84%E4%BB%B6/#26-gatewaysentinel","text":"\u7f51\u5173\u4f5c\u4e3a\u5185\u90e8\u7cfb\u7edf\u5916\u7684\u4e00\u5c42\u5c4f\u969c, \u5bf9\u5185\u8d77\u5230\u4e00\u5b9a\u7684\u4fdd\u62a4\u4f5c\u7528, \u9650\u6d41\u4fbf\u662f\u5176\u4e2d\u4e4b\u4e00. \u7f51\u5173\u5c42\u7684\u9650\u6d41\u53ef\u4ee5\u7b80\u5355\u5730\u9488\u5bf9\u4e0d\u540c\u8def\u7531\u8fdb\u884c\u9650\u6d41, \u4e5f\u53ef\u9488\u5bf9\u4e1a\u52a1\u7684\u63a5\u53e3\u8fdb\u884c\u9650\u6d41\uff0c\u6216\u8005\u6839\u636e\u63a5\u53e3\u7684\u7279\u5f81\u5206\u7ec4\u9650\u6d41\u3002 https://github.com/alibaba/Sentinel/wiki/%E7%BD%91%E5%85%B3%E9%99%90%E6%B5%81 \u6dfb\u52a0\u4f9d\u8d56 1 2 3 4 5 6 7 8 9 <dependency> <groupId> com.alibaba.cloud </groupId> <artifactId> spring-cloud-alibaba-sentinel-gateway </artifactId> </dependency> <dependency> <groupId> com.alibaba.cloud </groupId> <artifactId> spring-cloud-starter-alibaba-sentinel </artifactId> </dependency> 2.\u6dfb\u52a0\u914d\u7f6e 1 2 3 4 5 6 sentinel : transport : # \u6dfb\u52a0sentinel\u7684\u63a7\u5236\u53f0\u5730\u5740 dashboard : 127.0.0.1:8080 2.6.1 \u63a7\u5236\u53f0\u5b9e\u73b0\u65b9\u5f0f\uff1a Sentinel 1.6.3 \u5f15\u5165\u4e86\u7f51\u5173\u6d41\u63a7\u63a7\u5236\u53f0\u7684\u652f\u6301\uff0c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u5728 Sentinel \u63a7\u5236\u53f0\u4e0a\u67e5\u770b API Gateway \u5b9e\u65f6\u7684 route \u548c\u81ea\u5b9a\u4e49 API \u5206\u7ec4\u76d1\u63a7\uff0c\u7ba1\u7406\u7f51\u5173\u89c4\u5219\u548c API \u5206\u7ec4\u914d\u7f6e\u3002 \u4ece 1.6.0 \u7248\u672c\u5f00\u59cb\uff0cSentinel \u63d0\u4f9b\u4e86 Spring Cloud Gateway \u7684\u9002\u914d\u6a21\u5757\uff0c\u53ef\u4ee5\u63d0\u4f9b\u4e24\u79cd\u8d44\u6e90\u7ef4\u5ea6\u7684\u9650\u6d41\uff1a route \u7ef4\u5ea6\uff1a\u5373\u5728 Spring \u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u8def\u7531\u6761\u76ee\uff0c\u8d44\u6e90\u540d\u4e3a\u5bf9\u5e94\u7684 routeId \u81ea\u5b9a\u4e49 API \u7ef4\u5ea6\uff1a\u7528\u6237\u53ef\u4ee5\u5229\u7528 Sentinel \u63d0\u4f9b\u7684 API \u6765\u81ea\u5b9a\u4e49\u4e00\u4e9b API \u5206\u7ec4 \u81ea\u5b9a\u4e49\u5f02\u5e38\u65b9\u5f0f\uff1a 1.\u901a\u8fc7yml 1 2 spring:cloud.sentinel.scg.fallback.mode = response spring.cloud.sentinel.scg.fallback.response-body = '{\"code\":403,\"mes\":\"\u9650\u6d41\u4e86\"}' 2.\u901a\u8fc7GatewayCallbackManager 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 /*** * @Author \u5f90\u5eb6 QQ:1092002729 * @Slogan \u81f4\u656c\u5927\u5e08\uff0c\u81f4\u656c\u672a\u6765\u7684\u4f60 */ @Configuration public class GatewayConfig { @PostConstruct public void init (){ BlockRequestHandler blockRequestHandler = new BlockRequestHandler () { @Override public Mono < ServerResponse > handleRequest ( ServerWebExchange exchange , Throwable throwable ) { return ServerResponse . status ( HttpStatus . OK ) . contentType ( MediaType . APPLICATION_JSON ) . body ( BodyInserters . fromValue ( \"\u964d\u7ea7\u4e86!\" )); } }; GatewayCallbackManager . setBlockHandler ( blockRequestHandler ); } } 2.6.2 \u4ee3\u7801\u5b9e\u73b0\u65b9\u5f0f\uff1a\uff08\u4e86\u89e3\uff09 \u7528\u6237\u53ef\u4ee5\u901a\u8fc7 GatewayRuleManager.loadRules(rules) \u624b\u52a8\u52a0\u8f7d\u7f51\u5173\u89c4\u5219 GatewayConfiguration\u4e2d\u6dfb\u52a0 1 2 3 4 5 6 7 @PostConstruct public void doInit () { //\u521d\u59cb\u5316\u7f51\u5173\u9650\u6d41\u89c4\u5219 initGatewayRules (); //\u81ea\u5b9a\u4e49\u9650\u6d41\u5f02\u5e38\u5904\u7406\u5668 initBlockRequestHandler (); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 private void initGatewayRules () { Set < GatewayFlowRule > rules = new HashSet <> (); //resource\uff1a\u8d44\u6e90\u540d\u79f0\uff0c\u53ef\u4ee5\u662f\u7f51\u5173\u4e2d\u7684 route \u540d\u79f0\u6216\u8005\u7528\u6237\u81ea\u5b9a\u4e49\u7684 API \u5206\u7ec4\u540d\u79f0\u3002 //count\uff1a\u9650\u6d41\u9608\u503c //intervalSec\uff1a\u7edf\u8ba1\u65f6\u95f4\u7a97\u53e3\uff0c\u5355\u4f4d\u662f\u79d2\uff0c\u9ed8\u8ba4\u662f 1 \u79d2\u3002 rules . add ( new GatewayFlowRule ( \"order_route\" ) . setCount ( 2 ) . setIntervalSec ( 1 ) ); rules . add ( new GatewayFlowRule ( \"user_service_api\" ) . setCount ( 2 ) . setIntervalSec ( 1 ) ); // \u52a0\u8f7d\u7f51\u5173\u89c4\u5219 GatewayRuleManager . loadRules ( rules ); } private void initBlockRequestHandler () { BlockRequestHandler blockRequestHandler = new BlockRequestHandler () { @Override public Mono < ServerResponse > handleRequest ( ServerWebExchange exchange , Throwable t ) { HashMap < String , String > result = new HashMap <> (); result . put ( \"code\" , String . valueOf ( HttpStatus . TOO_MANY_REQUESTS . value ())); result . put ( \"msg\" , HttpStatus . TOO_MANY_REQUESTS . getReasonPhrase ()); return ServerResponse . status ( HttpStatus . TOO_MANY_REQUESTS ) . contentType ( MediaType . APPLICATION_JSON ) . body ( BodyInserters . fromValue ( result )); } }; //\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u5f02\u5e38\u5904\u7406\u5668 GatewayCallbackManager . setBlockHandler ( blockRequestHandler ); }","title":"2.6 gateway\u6574\u5408sentinel\u6d41\u63a7\u964d\u7ea7"},{"location":"SpringCloudAlibaba/08Spring%20Cloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3Gateway%E7%BB%84%E4%BB%B6/#27","text":"\u4e3a\u4e86\u4fdd\u8bc1 Gateway \u7684\u9ad8\u53ef\u7528\u6027\uff0c\u53ef\u4ee5\u540c\u65f6\u542f\u52a8\u591a\u4e2a Gateway \u5b9e\u4f8b\u8fdb\u884c\u8d1f\u8f7d\uff0c\u5728 Gateway \u7684\u4e0a\u6e38\u4f7f\u7528 Nginx \u6216\u8005 F5 \u8fdb\u884c\u8d1f\u8f7d\u8f6c\u53d1\u4ee5\u8fbe\u5230\u9ad8\u53ef\u7528\u3002","title":"2.7 \u7f51\u5173\u9ad8\u53ef\u7528"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalking/","text":"\u94fe\u8def\u8ffd\u8e2a\u4ecb\u7ecd \u5bf9\u4e8e\u4e00\u4e2a\u5927\u578b\u7684\u51e0\u5341\u4e2a\u3001\u51e0\u767e\u4e2a\u5fae\u670d\u52a1\u6784\u6210\u7684\u5fae\u670d\u52a1\u67b6\u6784\u7cfb\u7edf\uff0c\u901a\u5e38\u4f1a\u9047\u5230\u4e0b\u9762\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u5982\uff1a \u5982\u4f55\u4e32\u8054\u6574\u4e2a\u8c03\u7528\u94fe\u8def\uff0c\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898\uff1f \u5982\u4f55\u7f15\u6e05\u5404\u4e2a\u5fae\u670d\u52a1\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff1f \u5982\u4f55\u8fdb\u884c\u5404\u4e2a\u5fae\u670d\u52a1\u63a5\u53e3\u7684\u6027\u80fd\u5206\u6298\uff1f \u5982\u4f55\u8ddf\u8e2a\u6574\u4e2a\u4e1a\u52a1\u6d41\u7a0b\u7684\u8c03\u7528\u5904\u7406\u987a\u5e8f\uff1f \u200b 1\u3001skywalking\u662f\u4ec0\u4e48 skywalking\u662f\u4e00\u4e2a \u56fd\u4ea7 \u5f00\u6e90\u6846\u67b6\uff0c2015\u5e74\u7531 \u5434\u665f \u5f00\u6e90 \uff0c 2017\u5e74\u52a0\u5165Apache\u5b75\u5316\u5668\u3002skywalking\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u5e94\u7528\u7a0b\u5e8f \u6027\u80fd\u76d1\u89c6\u5de5\u5177 \uff0c\u4e13\u4e3a\u5fae\u670d\u52a1\u3001\u4e91\u539f\u751f\u67b6\u6784\u548c\u57fa\u4e8e\u5bb9\u5668\uff08Docker\u3001K8s\u3001Mesos\uff09\u67b6\u6784\u800c\u8bbe\u8ba1\u3002\u5b83\u662f\u4e00\u6b3e\u4f18\u79c0\u7684 APM \uff08Application Performance Management\uff09\u5de5\u5177\uff0c\u5305\u62ec\u4e86\u5206\u5e03\u5f0f\u8ffd\u8e2a\u3001\u6027\u80fd\u6307\u6807\u5206\u6790\u3001\u5e94\u7528\u548c\u670d\u52a1\u4f9d\u8d56\u5206\u6790\u7b49\u3002 \u5b98\u7f51\uff1a http://skywalking.apache.org/ \u4e0b\u8f7d\uff1a http://skywalking.apache.org/downloads/ Github\uff1a https://github.com/apache/skywalking \u6587\u6863\uff1a https://skywalking.apache.org/docs/main/v8.4.0/readme/ \u4e2d\u6587\u6587\u6863\uff1a https://skyapm.github.io/document-cn-translation-of-skywalking/ 1.2 \u94fe\u8def\u8ffd\u8e2a\u6846\u67b6\u5bf9\u6bd4 Zipkin\u662fTwitter\u5f00\u6e90\u7684\u8c03\u7528\u94fe\u5206\u6790\u5de5\u5177\uff0c\u76ee\u524d\u57fa\u4e8espringcloud sleuth\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u4f7f\u7528\uff0c\u7279\u70b9\u662f\u8f7b\u91cf\uff0c\u4f7f\u7528\u90e8\u7f72\u7b80\u5355\u3002 Pinpoint\u662f\u97e9\u56fd\u4eba\u5f00\u6e90\u7684\u57fa\u4e8e\u5b57\u8282\u7801\u6ce8\u5165\u7684\u8c03\u7528\u94fe\u5206\u6790\uff0c\u4ee5\u53ca\u5e94\u7528\u76d1\u63a7\u5206\u6790\u5de5\u5177\u3002\u7279\u70b9\u662f\u652f\u6301\u591a\u79cd\u63d2\u4ef6\uff0cUI\u529f\u80fd\u5f3a\u5927\uff0c\u63a5\u5165\u7aef\u65e0\u4ee3\u7801\u4fb5\u5165\u3002 SkyWalking\u662f\u672c\u571f\u5f00\u6e90\u7684\u57fa\u4e8e\u5b57\u8282\u7801\u6ce8\u5165\u7684\u8c03\u7528\u94fe\u5206\u6790\uff0c\u4ee5\u53ca\u5e94\u7528\u76d1\u63a7\u5206\u6790\u5de5\u5177\u3002\u7279\u70b9\u662f\u652f\u6301\u591a\u79cd\u63d2\u4ef6\uff0cUI\u529f\u80fd\u8f83\u5f3a\uff0c\u63a5\u5165\u7aef\u65e0\u4ee3\u7801\u4fb5\u5165\u3002\u76ee\u524d\u5df2\u52a0\u5165Apache\u5b75\u5316\u5668\u3002 CAT\u662f\u5927\u4f17\u70b9\u8bc4\u5f00\u6e90\u7684\u57fa\u4e8e\u7f16\u7801\u548c\u914d\u7f6e\u7684\u8c03\u7528\u94fe\u5206\u6790\uff0c\u5e94\u7528\u76d1\u63a7\u5206\u6790\uff0c\u65e5\u5fd7\u91c7\u96c6\uff0c\u76d1\u63a7\u62a5\u8b66\u7b49\u4e00\u7cfb\u5217\u7684\u76d1\u63a7\u5e73\u53f0\u5de5\u5177\u3002 \u200b 1.3 \u6027\u80fd\u5bf9\u6bd4 \u6a21\u62df\u4e86\u4e09\u79cd\u5e76\u53d1\u7528\u6237\uff1a500\uff0c750\uff0c1000\u3002\u4f7f\u7528jmeter\u6d4b\u8bd5\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u53d1\u900130\u4e2a\u8bf7\u6c42\uff0c\u8bbe\u7f6e\u601d\u8003\u65f6\u95f4\u4e3a10ms\u3002\u4f7f\u7528\u7684\u91c7\u6837\u7387\u4e3a1\uff0c\u5373100%\uff0c\u8fd9\u8fb9\u4e0e\u751f\u4ea7\u53ef\u80fd\u6709\u5dee\u522b\u3002pinpoint\u9ed8\u8ba4\u7684\u91c7\u6837\u7387\u4e3a20\uff0c\u537350%\uff0c\u901a\u8fc7\u8bbe\u7f6eagent\u7684\u914d\u7f6e\u6587\u4ef6\u6539\u4e3a100%\u3002zipkin\u9ed8\u8ba4\u4e5f\u662f1\u3002\u7ec4\u5408\u8d77\u6765\uff0c\u4e00\u5171\u670912\u79cd\u3002\u4e0b\u9762\u770b\u4e0b\u6c47\u603b\u8868\uff1a \u200b \u4ece\u4e0a\u8868\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u4e09\u79cd\u94fe\u8def\u76d1\u63a7\u7ec4\u4ef6\u4e2d\uff0c skywalking\u7684\u63a2\u9488\u5bf9\u541e\u5410\u91cf\u7684\u5f71\u54cd\u6700\u5c0f\uff0czipkin\u7684\u541e\u5410\u91cf\u5c45\u4e2d\u3002pinpoint\u7684\u63a2\u9488\u5bf9\u541e\u5410\u91cf\u7684\u5f71\u54cd\u8f83\u4e3a\u660e\u663e \uff0c\u5728500\u5e76\u53d1\u7528\u6237\u65f6\uff0c\u6d4b\u8bd5\u670d\u52a1\u7684\u541e\u5410\u91cf\u4ece1385\u964d\u4f4e\u5230774\uff0c\u5f71\u54cd\u5f88\u5927\u3002\u7136\u540e\u518d\u770b\u4e0bCPU\u548cmemory\u7684\u5f71\u54cd\uff0c\u5728\u5185\u90e8\u670d\u52a1\u5668\u8fdb\u884c\u7684\u538b\u6d4b\uff0c\u5bf9CPU\u548cmemory\u7684\u5f71\u54cd\u90fd\u5dee\u4e0d\u591a\u572810%\u4e4b\u5185\u3002 1.4 Skywalking\u4e3b\u8981\u529f\u80fd\u7279\u6027 1\u3001\u591a\u79cd\u76d1\u63a7\u624b\u6bb5\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bed\u8a00\u63a2\u9488\u548cservice mesh\u83b7\u5f97\u76d1\u63a7\u7684\u6570\u636e\uff1b 2\u3001\u652f\u6301\u591a\u79cd\u8bed\u8a00\u81ea\u52a8\u63a2\u9488\uff0c\u5305\u62ec Java\uff0c.NET Core \u548c Node.JS\uff1b 3\u3001\u8f7b\u91cf\u9ad8\u6548\uff0c\u65e0\u9700\u5927\u6570\u636e\u5e73\u53f0\u548c\u5927\u91cf\u7684\u670d\u52a1\u5668\u8d44\u6e90\uff1b 4\u3001\u6a21\u5757\u5316\uff0cUI\u3001\u5b58\u50a8\u3001\u96c6\u7fa4\u7ba1\u7406\u90fd\u6709\u591a\u79cd\u673a\u5236\u53ef\u9009\uff1b 5\u3001\u652f\u6301\u544a\u8b66\uff1b 6\u3001\u4f18\u79c0\u7684\u53ef\u89c6\u5316\u89e3\u51b3\u65b9\u6848\uff1b 2\u3001skyWalking \u73af\u5883\u642d\u5efa\u90e8\u7f72 \u200b skywalking agent\u548c\u4e1a\u52a1\u7cfb\u7edf\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u8d1f\u8d23\u6536\u96c6\u5404\u79cd\u76d1\u63a7\u6570\u636e Skywalking oapservice\u662f\u8d1f\u8d23\u5904\u7406\u76d1\u63a7\u6570\u636e\u7684\uff0c\u6bd4\u5982\u63a5\u53d7skywalking agent\u7684\u76d1\u63a7\u6570\u636e\uff0c\u5e76\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d;\u63a5\u53d7skywalking webapp\u7684\u524d\u7aef\u8bf7\u6c42\uff0c\u4ece\u6570\u636e\u5e93\u67e5\u8be2\u6570\u636e\uff0c\u5e76\u8fd4\u56de\u6570\u636e\u7ed9\u524d\u7aef\u3002Skywalking oapservice\u901a\u5e38\u4ee5\u96c6\u7fa4\u7684\u5f62\u5f0f\u5b58\u5728\u3002 skywalking webapp\uff0c\u524d\u7aef\u754c\u9762\uff0c\u7528\u4e8e\u5c55\u793a\u6570\u636e\u3002 \u7528\u4e8e\u5b58\u50a8\u76d1\u63a7\u6570\u636e\u7684\u6570\u636e\u5e93\uff0c\u6bd4\u5982mysql\u3001elasticsearch\u7b49\u3002 2.1 \u4e0b\u8f7d SkyWalking \u4e0b\u8f7d\uff1a http://skywalking.apache.org/downloads/ \u200b \u76ee\u5f55\u7ed3\u6784 \u200b 2.2 \u642d\u5efaSkyWalking OAP \u670d\u52a1 \u542f\u52a8\u811a\u672cbin/startup.sh \u200b \u65e5\u5fd7\u4fe1\u606f\u5b58\u50a8\u5728logs\u76ee\u5f55 \u200b \u542f\u52a8\u6210\u529f\u540e\u4f1a\u542f\u52a8\u4e24\u4e2a\u670d\u52a1\uff0c\u4e00\u4e2a\u662fskywalking-oap-server\uff0c\u4e00\u4e2a\u662fskywalking-web-ui \uff1a 8868 skywalking-oap-server\u670d\u52a1\u542f\u52a8\u540e\u4f1a\u66b4\u973211800 \u548c 12800 \u4e24\u4e2a\u7aef\u53e3\uff0c\u5206\u522b\u4e3a\u6536\u96c6\u76d1\u63a7\u6570\u636e\u7684\u7aef\u53e311800\u548c\u63a5\u53d7\u524d\u7aef\u8bf7\u6c42\u7684\u7aef\u53e312800\uff0c\u4fee\u6539\u7aef\u53e3\u53ef\u4ee5\u4fee\u6539config/applicaiton.yml \u200b skywalking-web-ui\u670d\u52a1\u4f1a\u5360\u7528 8080 \u7aef\u53e3\uff0c \u4fee\u6539\u7aef\u53e3\u53ef\u4ee5\u4fee\u6539webapp/webapp.yml \u200b server.port\uff1aSkyWalking UI\u670d\u52a1\u7aef\u53e3\uff0c\u9ed8\u8ba4\u662f8080\uff1b collector.ribbon.listOfServers\uff1aSkyWalking OAP\u670d\u52a1\u5730\u5740\u6570\u7ec4\uff0cSkyWalking UI\u754c\u9762\u7684\u6570\u636e\u662f\u901a\u8fc7\u8bf7\u6c42SkyWalking OAP\u670d\u52a1\u6765\u83b7\u5f97\uff1b \u8bbf\u95ee\uff1a http://192.168.3.100:8080/ \u200b \u9875\u9762\u7684\u53f3\u4e0b\u89d2\u53ef\u4ee5\u4e2d\u82f1\u6587\u5207\u6362\uff0c\u53ef\u4ee5\u5207\u6362\u9009\u62e9\u8981\u5c55\u793a\u7684\u65f6\u95f4\u533a\u95f4\u7684\u8ddf\u8e2a\u6570\u636e\u3002 2.3 SkyWalking\u4e2d\u4e09\u4e2a\u6982\u5ff5 \u670d\u52a1(Service) \uff1a \u8868\u793a\u5bf9\u8bf7\u6c42\u63d0\u4f9b\u76f8\u540c\u884c\u4e3a\u7684\u4e00\u7cfb\u5217\u6216\u4e00\u7ec4\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5728\u4f7f\u7528Agent\u65f6\uff0c\u53ef\u4ee5\u5b9a\u4e49\u670d\u52a1\u7684\u540d\u5b57\uff1b \u670d\u52a1\u5b9e\u4f8b(Service Instance) \uff1a \u4e0a\u8ff0\u7684\u4e00\u7ec4\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u79f0\u4e3a\u4e00\u4e2a\u5b9e\u4f8b\uff0c \u4e00\u4e2a\u670d\u52a1\u5b9e\u4f8b\u5b9e\u9645\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u4e00\u4e2a\u771f\u5b9e\u8fdb\u7a0b\uff1b \u7aef\u70b9(Endpoint) \uff1a \u5bf9\u4e8e\u7279\u5b9a\u670d\u52a1\u6240\u63a5\u6536\u7684\u8bf7\u6c42\u8def\u5f84, \u5982HTTP\u7684URI\u8def\u5f84\u548cgRPC\u670d\u52a1\u7684\u7c7b\u540d + \u65b9\u6cd5\u7b7e\u540d\uff1b \u200b 3\u3001 SkyWalking \u63a5\u5165\u5fae\u670d\u52a1 3.1 linux\u73af\u5883\u2014\u901a\u8fc7jar\u5305\u65b9\u5f0f\u63a5\u5165 \u51c6\u5907\u4e00\u4e2aspringboot\u7a0b\u5e8f\uff0c\u6253\u6210\u53ef\u6267\u884cjar\u5305\uff0c\u5199\u4e00\u4e2ashell\u811a\u672c\uff0c\u5728\u542f\u52a8\u9879\u76ee\u7684Shell\u811a\u672c\u4e0a\uff0c\u901a\u8fc7 -javaagent \u53c2\u6570\u8fdb\u884c\u914d\u7f6eSkyWalking Agent\u6765\u8ddf\u8e2a\u5fae\u670d\u52a1\uff1b startup.sh\u811a\u672c\uff1a 1 2 3 4 5 6 #!/bin/sh # SkyWalking Agent\u914d\u7f6e export SW_AGENT_NAME = springboot-skywalking-demo #Agent\u540d\u5b57,\u4e00\u822c\u4f7f\u7528`spring.application.name` export SW_AGENT_COLLECTOR_BACKEND_SERVICES = 127 .0.0.1:11800 #\u914d\u7f6e Collector \u5730\u5740\u3002 export SW_AGENT_SPAN_LIMIT = 2000 #\u914d\u7f6e\u94fe\u8def\u7684\u6700\u5927Span\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a 300\u3002 export JAVA_AGENT = -javaagent:/usr/local/soft/apache-skywalking-apm-bin-es7/agent/skywalking-agent.jar \u200b \u542f\u52a8\u65e5\u5fd7 \u200b \u7b49\u540c\u4e8e 1 2 java -javaagent:/usr/local/soft/apache-skywalking-apm-bin-es7/agent/skywalking-agent.jar -DSW_AGENT_COLLECTOR_BACKEND_SERVICES = 127 .0.0.1:11800 \u53c2\u6570\u540d\u5bf9\u5e94agent/config/agent.config\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u5c5e\u6027\u3002 \u5c5e\u6027\u5bf9\u5e94\u7684\u6e90\u7801\uff1aorg.apache.skywalking.apm.agent.core.conf.Config.java 1 2 3 # The service name in UI agent.service_name = ${ SW_AGENT_NAME : Your_ApplicationName } # Backend service addresses. \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528skywalking.+\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u540d\u4f5c\u4e3a\u7cfb\u7edf\u914d\u7f6e\u9879\u6765\u8fdb\u884c\u8986\u76d6\u3002 javaagent\u53c2\u6570\u914d\u7f6e\u65b9\u5f0f\u4f18\u5148\u7ea7\u66f4\u9ad8 \u6d4b\u8bd5\uff1a \u8bbf\u95ee\u4f60\u7684\u5fae\u670d\u52a1 \u200b 3.2 windos\u73af\u5883\u2014\u5728IDEA\u4e2d\u4f7f\u7528Skywalking \u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u914d\u7f6ejvm\u53c2\u6570\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u200b 1 2 3 4 5 # skywalking-agent.jar\u7684\u672c\u5730\u78c1\u76d8\u7684\u8def\u5f84 -javaagent:D: \\a pache \\a pache-skywalking-apm-es7-8.4.0 \\a pache-skywalking-apm-bin-es7 \\a gent \\s kywalking-agent.jar # \u5728skywalking\u4e0a\u663e\u793a\u7684\u670d\u52a1\u540d -DSW_AGENT_NAME = springboot-skywalking-demo # skywalking\u7684collector\u670d\u52a1\u7684IP\u53ca\u7aef\u53e3 -DSW_AGENT_COLLECTOR_BACKEND_SERVICES \u53ef\u4ee5\u6307\u5b9a\u8fdc\u7a0b\u5730\u5740\uff0c \u4f46\u662f-javaagent\u5fc5\u987b\u7ed1\u5b9a\u4f60\u672c\u673a\u7269\u7406\u8def\u5f84\u7684skywalking-agent.jar 3.3 Skywalking\u8de8\u591a\u4e2a\u5fae\u670d\u52a1\u8ddf\u8e2a Skywalking\u8de8\u591a\u4e2a\u5fae\u670d\u52a1\u8ddf\u8e2a\uff0c\u53ea\u9700\u8981\u6bcf\u4e2a\u5fae\u670d\u52a1\u542f\u52a8\u65f6\u6dfb\u52a0javaagent\u53c2\u6570\u5373\u53ef\u3002 \u6d4b\u8bd5\uff1a \u542f\u52a8\u5fae\u670d\u52a1mall-gateway\uff0cmall-order\uff0cmall-user \uff0c\u914d\u7f6eskywalking\u7684jvm\u53c2\u6570 http://localhost:8888/user/findOrderByUserId/1 \u200b \u6ce8\u610f\uff1a\u6b64\u5904\u5b58\u5728bug\uff0c\u8ddf\u8e2a\u94fe\u8def\u4e0d\u663e\u793agateway \u62f7\u8d1dagent/optional-plugins\u76ee\u5f55\u4e0b\u7684gateway\u63d2\u4ef6\u5230agent/plugins\u76ee\u5f55 \u200b 4\u3001Skywalking\u6301\u4e45\u5316\u8ddf\u8e2a\u6570\u636e \u9ed8\u8ba4\u4f7f\u7528\u7684H2\u6570\u636e\u5e93\u5b58\u50a8 config/application.yml \u200b 4.1 \u57fa\u4e8emysql\u6301\u4e45\u5316: \u4fee\u6539config\u76ee\u5f55\u4e0b\u7684application.yml\uff0c\u4f7f\u7528mysql\u4f5c\u4e3a\u6301\u4e45\u5316\u5b58\u50a8\u7684\u4ed3\u5e93 \u200b \u4fee\u6539mysql\u8fde\u63a5\u914d\u7f6e \u200b 1 2 3 4 5 6 7 8 9 10 11 storage : #\u9009\u62e9\u4f7f\u7528mysql \u9ed8\u8ba4\u4f7f\u7528h2\uff0c\u4e0d\u4f1a\u6301\u4e45\u5316\uff0c\u91cd\u542fskyWalking\u4e4b\u524d\u7684\u6570\u636e\u4f1a\u4e22\u5931 selector : ${SW_STORAGE:mysql} #\u4f7f\u7528mysql\u4f5c\u4e3a\u6301\u4e45\u5316\u5b58\u50a8\u7684\u4ed3\u5e93 mysql : properties : #\u6570\u636e\u5e93\u8fde\u63a5\u5730\u5740 jdbcUrl : ${SW_JDBC_URL:\"jdbc:mysql://1ocalhost:3306/swtest\"} #\u7528\u6237\u540d dataSource.user : ${SW_DATA_SOURCE_USER:root} #\u5bc6\u7801 \u6ce8\u610f\uff1a\u9700\u8981\u6dfb\u52a0mysql\u6570\u636e\u9a71\u52a8\u5305\uff0c\u56e0\u4e3a\u5728lib\u76ee\u5f55\u4e0b\u662f\u6ca1\u6709mysql\u6570\u636e\u9a71\u52a8\u5305\u7684\uff0c\u6240\u4ee5\u4fee\u6539\u5b8c\u914d\u7f6e\u542f\u52a8\u662f\u4f1a\u62a5\u9519\uff0c\u542f\u52a8\u5931\u8d25\u7684\u3002 \u6dfb\u52a0mysql\u6570\u636e\u9a71\u52a8\u5305\u5230oap-libs\u76ee\u5f55\u4e0b \u542f\u52a8Skywalking \u200b \u67e5\u770bswtest\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u770b\u5230\u751f\u6210\u4e86\u5f88\u591a\u8868\u3002 \u200b \u8bf4\u660e\u542f\u52a8\u6210\u529f\u4e86\uff0c\u6253\u5f00\u914d\u7f6e\u5bf9\u5e94\u7684\u5730\u5740 http://192.168.3.100:8080/ \uff0c\u53ef\u4ee5\u770b\u5230skywalking\u7684web\u754c\u9762\u3002 \u200b \u6d4b\u8bd5\uff1a\u91cd\u542fskywalking\uff0c\u9a8c\u8bc1\u8ddf\u8e2a\u6570\u636e\u4f1a\u4e0d\u4f1a\u4e22\u5931 5\u3001\u81ea\u5b9a\u4e49SkyWalking\u94fe\u8def\u8ffd\u8e2a \u5982\u679c\u6211\u4eec\u5e0c\u671b\u5bf9\u9879\u76ee\u4e2d\u7684\u4e1a\u52a1\u65b9\u6cd5\uff0c\u5b9e\u73b0\u94fe\u8def\u8ffd\u8e2a\uff0c\u65b9\u4fbf\u6211\u4eec\u6392\u67e5\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684\u4ee3\u7801 \u5f15\u5165\u4f9d\u8d56 1 2 3 4 5 <!-- SkyWalking \u5de5\u5177\u7c7b --> <dependency> <groupId> org.apache.skywalking </groupId> <artifactId> apm-toolkit-trace </artifactId> <version> 8.4.0 </version> 5.1 @Trace\u5c06\u65b9\u6cd5\u52a0\u5165\u8ffd\u8e2a\u94fe\u8def \u5982\u679c\u4e00\u4e2a\u4e1a\u52a1\u65b9\u6cd5\u60f3\u5728ui\u754c\u9762\u7684\u8ddf\u8e2a\u94fe\u8def\u4e0a\u663e\u793a\u51fa\u6765\uff0c\u53ea\u9700\u8981\u5728\u4e1a\u52a1\u65b9\u6cd5\u4e0a\u52a0\u4e0a@Trace\u6ce8\u89e3\u5373\u53ef \u200b \u6d4b\u8bd5\uff1a \u200b 5.2 \u52a0\u5165@Tags\u6216@Tag \u6211\u4eec\u8fd8\u53ef\u4ee5\u4e3a\u8ffd\u8e2a\u94fe\u8def\u589e\u52a0\u5176\u4ed6\u989d\u5916\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u8bb0\u5f55\u53c2\u6570\u548c\u8fd4\u56de\u4fe1\u606f\u3002\u5b9e\u73b0\u65b9\u5f0f\uff1a\u5728\u65b9\u6cd5\u4e0a\u589e\u52a0@Tag\u6216\u8005@Tags\u3002 @Tag \u6ce8\u89e3\u4e2d key = \u65b9\u6cd5\u540d \uff1b value = returnedObj \u8fd4\u56de\u503c arg[0] \u53c2\u6570 1 2 3 4 5 6 7 8 9 10 11 12 @Trace @Tag ( key = \"list\" , value = \"returnedObj\" ) public List < User > list (){ return userMapper . list (); } @Trace @Tags ({ @Tag ( key = \"param\" , value = \"arg[0]\" ), @Tag ( key = \"user\" , value = \"returnedObj\" )}) public User getById ( Integer id ){ return userMapper . getById ( id ); } \u200b \u200b \u6027\u80fd\u5206\u6790 skywalking\u7684\u6027\u80fd\u5206\u6790\uff0c\u5728\u6839\u636e\u670d\u52a1\u540d\u79f0\u3001\u7aef\u70b9\u540d\u79f0\uff0c\u4ee5\u53ca\u76f8\u5e94\u7684\u89c4\u5219\u5efa\u7acb\u4e86\u4efb\u52a1\u5217\u8868\u540e\uff0c\u5728\u8c03\u7528\u4e86\u6b64\u4efb\u52a1\u5217\u8868\u7684\u7aef\u70b9\u540e\u3002skywalking\u4f1a\u81ea\u52a8\u8bb0\u5f55\uff0c\u5256\u6790\u5f53\u524d\u7aef\u53e3\uff0c\u751f\u6210\u5256\u6790\u7ed3\u679c\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u56fe\uff1a \u200b 6\u3001Skywalking\u96c6\u6210\u65e5\u5fd7\u6846\u67b6 logback\u5b98\u65b9\u914d\u7f6e log4j\u5b98\u65b9\u914d\u7f6e log4j2j\u5b98\u65b9\u914d\u7f6e \u5f15\u5165\u4f9d\u8d56 1 2 3 4 5 <!-- apm-toolkit-logback-1.x --> <dependency> <groupId> org.apache.skywalking </groupId> <artifactId> apm-toolkit-logback-1.x </artifactId> <version> 8.5.0 </version> \u6dfb\u52a0logback-spring.xml\u6587\u4ef6\uff0c\u5e76\u914d\u7f6e %tid \u5360\u4f4d\u7b26 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <configuration> <!-- \u5f15\u5165 Spring Boot \u9ed8\u8ba4\u7684 logback XML \u914d\u7f6e\u6587\u4ef6 --> <include resource= \"org/springframework/boot/logging/logback/defaults.xml\" /> <appender name= \"console\" class= \"ch.qos.logback.core.ConsoleAppender\" > <!-- \u65e5\u5fd7\u7684\u683c\u5f0f\u5316 --> <encoder class= \"ch.qos.logback.core.encoder.LayoutWrappingEncoder\" > <layout class= \"org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout\" > <Pattern> ${CONSOLE_LOG_PATTERN} </Pattern> </layout> </encoder> </appender> <!-- \u8bbe\u7f6e Appender --> <root level= \"INFO\" > <appender-ref ref= \"console\" /> </root> </configuration> \u6d4b\u8bd5 \u200b Skywalking\u901a\u8fc7grpc\u4e0a\u62a5\u65e5\u5fd7 \uff08\u9700\u8981v8.4.0+\uff09 gRPC\u62a5\u544a\u7a0b\u5e8f\u53ef\u4ee5\u5c06\u6536\u96c6\u5230\u7684\u65e5\u5fd7\u8f6c\u53d1\u5230SkyWalking OAP\u670d\u52a1\u5668\u4e0a logback-spring.xml\u4e2d\u6dfb\u52a0 1 2 3 4 5 6 7 8 9 10 11 <!-- v8.4.0\u63d0\u4f9b --> <appender name= \"grpc-log\" class= \"org.apache.skywalking.apm.toolkit.log.logback.v1.x.log.GRPCLogClientAppender\" > <encoder class= \"ch.qos.logback.core.encoder.LayoutWrappingEncoder\" > <layout class= \"org.apache.skywalking.apm.toolkit.log.logback.v1.x.mdc.TraceIdMDCPatternLogbackLayout\" > <Pattern> %d{yyyy-MM-dd HH:mm:ss.SSS} [%X{tid}] [%thread] %-5level %logger{36} -%msg%n </Pattern> </layout> </encoder> </appender> <root level= \"info\" > <appender-ref ref= \"grpc-log\" /> \u200b \u6253\u5f00agent/config/agent.config\u914d\u7f6e\u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\u4fe1\u606f\uff1a 1 2 3 plugin.toolkit.log.grpc.reporter.server_host = ${ SW_GRPC_LOG_SERVER_HOST : 192 .168.3.100 } plugin.toolkit.log.grpc.reporter.server_port = ${ SW_GRPC_LOG_SERVER_PORT : 11800 } plugin.toolkit.log.grpc.reporter.max_message_size = ${ SW_GRPC_LOG_MAX_MESSAGE_SIZE : 10485760 } \u4ee5\u4e0a\u914d\u7f6e\u662f\u9ed8\u8ba4\u914d\u7f6e\u4fe1\u606f,agent\u4e0eoap\u5728\u672c\u5730\u7684\u53ef\u4ee5\u4e0d\u914d \u914d\u7f6e\u540d \u89e3\u91ca \u9ed8\u8ba4\u503c plugin.toolkit.log.transmit_formatted \u662f\u5426\u4ee5\u683c\u5f0f\u5316\u6216\u672a\u683c\u5f0f\u5316\u7684\u683c\u5f0f\u4f20\u8f93\u8bb0\u5f55\u7684\u6570\u636e true plugin.toolkit.log.grpc.reporter.server_host \u6307\u5b9a\u8981\u5411\u5176\u62a5\u544a\u65e5\u5fd7\u6570\u636e\u7684grpc\u670d\u52a1\u5668\u7684\u4e3b\u673a 127.0.0.1 plugin.toolkit.log.grpc.reporter.server_port \u6307\u5b9a\u8981\u5411\u5176\u62a5\u544a\u65e5\u5fd7\u6570\u636e\u7684grpc\u670d\u52a1\u5668\u7684\u7aef\u53e3 11800 plugin.toolkit.log.grpc.reporter.max_message_size \u6307\u5b9agrpc\u5ba2\u6237\u7aef\u8981\u62a5\u544a\u7684\u65e5\u5fd7\u6570\u636e\u7684\u6700\u5927\u5927\u5c0f 10485760 plugin.toolkit.log.grpc.reporter.upstream_timeout \u5ba2\u6237\u7aef\u5411\u4e0a\u6e38\u53d1\u9001\u6570\u636e\u65f6\u5c06\u8d85\u65f6\u591a\u957f\u65f6\u95f4\u3002\u5355\u4f4d\u662f\u79d2 30 agent\u914d\u7f6e\u4fe1\u606f\u5927\u5168 Skywalking UI\u6548\u679c \u200b \u6b64\u5904\u65e5\u671f\u683c\u5f0f\u5b58\u5728\u95ee\u9898 https://github.com/apache/skywalking-rocketbot-ui/pull/428 \u200b 7\u3001SkyWalking \u544a\u8b66\u529f\u80fd SkyWalking \u544a\u8b66\u529f\u80fd\u662f\u57286.x\u7248\u672c\u65b0\u589e\u7684\uff0c\u5176\u6838\u5fc3\u7531\u4e00\u7ec4\u89c4\u5219\u9a71\u52a8\uff0c\u8fd9\u4e9b\u89c4\u5219\u5b9a\u4e49\u5728config/alarm-settings.yml\u6587\u4ef6\u4e2d\u3002 \u544a\u8b66\u89c4\u5219\u7684\u5b9a\u4e49\u5206\u4e3a\u4e24\u90e8\u5206\uff1a \u544a\u8b66\u89c4\u5219 \uff1a\u5b83\u4eec\u5b9a\u4e49\u4e86\u5e94\u8be5\u5982\u4f55\u89e6\u53d1\u5ea6\u91cf\u8b66\u62a5\uff0c\u5e94\u8be5\u8003\u8651\u4ec0\u4e48\u6761\u4ef6\u3002 Webhook\uff08\u7f51\u7edc\u94a9\u5b50\uff09 \uff1a\u5b9a\u4e49\u5f53\u8b66\u544a\u89e6\u53d1\u65f6\uff0c\u54ea\u4e9b\u670d\u52a1\u7ec8\u7aef\u9700\u8981\u88ab\u544a\u77e5 \u544a\u8b66\u89c4\u5219 SkyWalking \u7684\u53d1\u884c\u7248\u90fd\u4f1a\u9ed8\u8ba4\u63d0\u4f9bconfig/alarm-settings.yml\u6587\u4ef6\uff0c\u91cc\u9762\u9884\u5148\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u544a\u8b66\u89c4\u5219\u3002\u5982\u4e0b\uff1a \u8fc7\u53bb 3 \u5206\u949f\u5185\u670d\u52a1\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc7 1 \u79d2\u3002 \u8fc7\u53bb 2 \u5206\u949f\u670d\u52a1\u6210\u529f\u7387\u4f4e\u4e8e80%\u3002 \u8fc7\u53bb 3 \u5206\u949f\u5185\u670d\u52a1\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc7 1s \u7684\u767e\u5206\u6bd4 \u670d\u52a1\u5b9e\u4f8b\u5728\u8fc7\u53bb 2 \u5206\u949f\u5185\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc7 1s\uff0c\u5e76\u4e14\u5b9e\u4f8b\u540d\u79f0\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u3002 \u8fc7\u53bb 2 \u5206\u949f\u5185\u7aef\u70b9\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc7 1 \u79d2\u3002 \u8fc7\u53bb 2 \u5206\u949f\u5185\u6570\u636e\u5e93\u8bbf\u95ee\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc7 1 \u79d2\u3002 \u8fc7\u53bb 2 \u5206\u949f\u5185\u7aef\u70b9\u5173\u7cfb\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc7 1 \u79d2\u3002 \u8fd9\u4e9b\u9884\u5b9a\u4e49\u7684\u544a\u8b66\u89c4\u5219\uff0c\u6253\u5f00config/alarm-settings.yml\u6587\u4ef6\u5373\u53ef\u770b\u5230 \u544a\u8b66\u89c4\u5219\u914d\u7f6e\u9879\u7684\u8bf4\u660e\uff1a Rule name\uff1a \u89c4\u5219\u540d\u79f0\uff0c\u4e5f\u662f\u5728\u544a\u8b66\u4fe1\u606f\u4e2d\u663e\u793a\u7684\u552f\u4e00\u540d\u79f0\u3002\u5fc5\u987b\u4ee5_rule\u7ed3\u5c3e\uff0c\u524d\u7f00\u53ef\u81ea\u5b9a\u4e49 Metrics name\uff1a \u5ea6\u91cf\u540d\u79f0\uff0c\u53d6\u503c\u4e3aoal\u811a\u672c\u4e2d\u7684\u5ea6\u91cf\u540d\uff0c\u76ee\u524d\u53ea\u652f\u6301long\u3001double\u548cint\u7c7b\u578b\u3002\u8be6\u89c1 Official OAL script Include names\uff1a \u8be5\u89c4\u5219\u4f5c\u7528\u4e8e\u54ea\u4e9b\u5b9e\u4f53\u540d\u79f0\uff0c\u6bd4\u5982\u670d\u52a1\u540d\uff0c\u7ec8\u7aef\u540d\uff08\u53ef\u9009\uff0c\u9ed8\u8ba4\u4e3a\u5168\u90e8\uff09 Exclude names\uff1a \u8be5\u89c4\u5219\u4f5c\u4e0d\u7528\u4e8e\u54ea\u4e9b\u5b9e\u4f53\u540d\u79f0\uff0c\u6bd4\u5982\u670d\u52a1\u540d\uff0c\u7ec8\u7aef\u540d\uff08\u53ef\u9009\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\uff09 Threshold\uff1a \u9608\u503c OP\uff1a \u64cd\u4f5c\u7b26\uff0c\u76ee\u524d\u652f\u6301 >\u3001<\u3001= Period\uff1a \u591a\u4e45\u544a\u8b66\u89c4\u5219\u9700\u8981\u88ab\u6838\u5b9e\u4e00\u4e0b\u3002\u8fd9\u662f\u4e00\u4e2a\u65f6\u95f4\u7a97\u53e3\uff0c\u4e0e\u540e\u7aef\u90e8\u7f72\u73af\u5883\u65f6\u95f4\u76f8\u5339\u914d Count\uff1a \u5728\u4e00\u4e2aPeriod\u7a97\u53e3\u4e2d\uff0c\u5982\u679cvalues\u8d85\u8fc7Threshold\u503c\uff08\u6309op\uff09\uff0c\u8fbe\u5230Count\u503c\uff0c\u9700\u8981\u53d1\u9001\u8b66\u62a5 Silence period\uff1a \u5728\u65f6\u95f4N\u4e2d\u89e6\u53d1\u62a5\u8b66\u540e\uff0c\u5728TN -> TN + period\u8fd9\u4e2a\u9636\u6bb5\u4e0d\u544a\u8b66\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u548cPeriod\u4e00\u6837\uff0c\u8fd9\u610f\u5473\u7740\u76f8\u540c\u7684\u544a\u8b66\uff08\u5728\u540c\u4e00\u4e2aMetrics name\u62e5\u6709\u76f8\u540c\u7684Id\uff09\u5728\u540c\u4e00\u4e2aPeriod\u5185\u53ea\u4f1a\u89e6\u53d1\u4e00\u6b21 message\uff1a \u544a\u8b66\u6d88\u606f Webhook\uff08\u7f51\u7edc\u94a9\u5b50\uff09 Webhook\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u662f\u4e00\u79cdWeb\u5c42\u9762\u7684\u56de\u8c03\u673a\u5236\uff0c\u901a\u5e38\u7531\u4e00\u4e9b\u4e8b\u4ef6\u89e6\u53d1\uff0c\u4e0e\u4ee3\u7801\u4e2d\u7684\u4e8b\u4ef6\u56de\u8c03\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u662fWeb\u5c42\u9762\u7684\u3002\u7531\u4e8e\u662fWeb\u5c42\u9762\u7684\uff0c\u6240\u4ee5\u5f53\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u56de\u8c03\u7684\u4e0d\u518d\u662f\u4ee3\u7801\u4e2d\u7684\u65b9\u6cd5\u6216\u51fd\u6570\uff0c\u800c\u662f\u670d\u52a1\u63a5\u53e3\u3002\u4f8b\u5982\uff0c\u5728\u544a\u8b66\u8fd9\u4e2a\u573a\u666f\uff0c\u544a\u8b66\u5c31\u662f\u4e00\u4e2a\u4e8b\u4ef6\u3002\u5f53\u8be5\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0cSkyWalking\u5c31\u4f1a\u4e3b\u52a8\u53bb\u8c03\u7528\u4e00\u4e2a\u914d\u7f6e\u597d\u7684\u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u5c31\u662f\u6240\u8c13\u7684Webhook\u3002 SkyWalking\u7684\u544a\u8b66\u6d88\u606f\u4f1a\u901a\u8fc7 HTTP \u8bf7\u6c42\u8fdb\u884c\u53d1\u9001\uff0c\u8bf7\u6c42\u65b9\u6cd5\u4e3a POST\uff0cContent-Type \u4e3a application/json\uff0c\u5176JSON \u6570\u636e\u5b9e\u57fa\u4e8eList\u8fdb\u884c\u5e8f\u5217\u5316\u7684\u3002JSON\u6570\u636e\u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 [{ \"scopeId\" : 1 , \"scope\" : \"SERVICE\" , \"name\" : \"serviceA\" , \"id0\" : \"12\" , \"id1\" : \"\" , \"ruleName\" : \"service_resp_time_rule\" , \"alarmMessage\" : \"alarmMessage xxxx\" , \"startTime\" : 1560524171000 }, { \"scopeId\" : 1 , \"scope\" : \"SERVICE\" , \"name\" : \"serviceB\" , \"id0\" : \"23\" , \"id1\" : \"\" , \"ruleName\" : \"service_resp_time_rule\" , \"alarmMessage\" : \"alarmMessage yyy\" , \"startTime\" : 1560524171000 }] \u5b57\u6bb5\u8bf4\u660e\uff1a scopeId\u3001scope\uff1a \u6240\u6709\u53ef\u7528\u7684 Scope \u8be6\u89c1 org.apache.skywalking.oap.server.core.source.DefaultScopeDefine name\uff1a \u76ee\u6807 Scope \u7684\u5b9e\u4f53\u540d\u79f0 id0\uff1a Scope \u5b9e\u4f53\u7684 ID id1\uff1a \u4fdd\u7559\u5b57\u6bb5\uff0c\u76ee\u524d\u6682\u672a\u4f7f\u7528 ruleName\uff1a \u544a\u8b66\u89c4\u5219\u540d\u79f0 alarmMessage\uff1a \u544a\u8b66\u6d88\u606f\u5185\u5bb9 startTime\uff1a \u544a\u8b66\u65f6\u95f4\uff0c\u683c\u5f0f\u4e3a\u65f6\u95f4\u6233 \u90ae\u4ef6\u544a\u8b66\u529f\u80fd\u5b9e\u8df5 \u6839\u636e\u4ee5\u4e0a\u4e24\u4e2a\u5c0f\u8282\u7684\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u5f97\u77e5\uff1aSkyWalking\u662f\u4e0d\u652f\u6301\u76f4\u63a5\u5411\u90ae\u7bb1\u3001\u77ed\u4fe1\u7b49\u670d\u52a1\u53d1\u9001\u544a\u8b66\u4fe1\u606f\u7684\uff0cSkyWalking\u53ea\u4f1a\u5728\u53d1\u751f\u544a\u8b66\u65f6\u5c06\u544a\u8b66\u4fe1\u606f\u53d1\u9001\u81f3\u914d\u7f6e\u597d\u7684Webhook\u63a5\u53e3\u3002 \u4f46\u6211\u4eec\u603b\u4e0d\u80fd\u4eba\u5de5\u76ef\u7740\u8be5\u63a5\u53e3\u7684\u65e5\u5fd7\u4fe1\u606f\u6765\u5f97\u77e5\u670d\u52a1\u662f\u5426\u53d1\u751f\u4e86\u544a\u8b66\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u8be5\u63a5\u53e3\u91cc\u5b9e\u73b0\u53d1\u9001\u90ae\u4ef6\u6216\u77ed\u4fe1\u7b49\u529f\u80fd\uff0c\u4ece\u800c\u8fbe\u5230\u4e2a\u6027\u5316\u7684\u544a\u8b66\u901a\u77e5\u3002 \u63a5\u4e0b\u6765\u5f00\u59cb\u52a8\u624b\u5b9e\u8df5\uff0c\u8fd9\u91cc\u57fa\u4e8eSpring Boot\u8fdb\u884c\u5b9e\u73b0\u3002\u9996\u5148\u662f\u6dfb\u52a0\u4f9d\u8d56\uff1a 1 2 3 4 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-mail </artifactId> </dependency> \u914d\u7f6e\u90ae\u7bb1\u670d\u52a1\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 server : port : 9134 #\u90ae\u7bb1\u914d\u7f6e spring : mail : host : smtp.163.com #\u53d1\u9001\u8005\u90ae\u7bb1\u8d26\u53f7 username : \u4f60\u7684\u90ae\u7bb1@163.com #\u53d1\u9001\u8005\u5bc6\u94a5 password : \u4f60\u7684\u90ae\u7bb1\u670d\u52a1\u5bc6\u94a5 default-encoding : utf-8 port : 465 #\u7aef\u53e3\u53f7465\u6216587 protocol : smtp properties : mail : debug : false smtp : socketFactory : class : javax.net.ssl.SSLSocketFactory \u6839\u636eSkyWalking\u53d1\u9001\u7684JSON\u6570\u636e\u5b9a\u4e49\u4e00\u4e2aDTO\uff0c\u7528\u4e8e\u63a5\u53e3\u63a5\u6536\u6570\u636e\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ```java @Data public class SwAlarmDTO { private Integer scopeId; private String scope; private String name; private Integer id0; private Integer id1; private String ruleName; private String alarmMessage; private Long startTime; } ``` \u63a5\u7740\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\uff0c\u5b9e\u73b0\u63a5\u6536SkyWalking\u7684\u544a\u8b66\u901a\u77e5\uff0c\u5e76\u5c06\u6570\u636e\u53d1\u9001\u81f3\u90ae\u7bb1\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 @Slf4j @RestController @RequiredArgsConstructor @RequestMapping ( \"/alarm\" ) public class SwAlarmController { private final JavaMailSender sender ; @Value ( \"${spring.mail.username}\" ) private String from ; /** * \u63a5\u6536skywalking\u670d\u52a1\u7684\u544a\u8b66\u901a\u77e5\u5e76\u53d1\u9001\u81f3\u90ae\u7bb1 */ @PostMapping ( \"/receive\" ) public void receive ( @RequestBody List < SwAlarmDTO > alarmList ) { SimpleMailMessage message = new SimpleMailMessage (); // \u53d1\u9001\u8005\u90ae\u7bb1 message . setFrom ( from ); // \u63a5\u6536\u8005\u90ae\u7bb1 message . setTo ( from ); // \u4e3b\u9898 message . setSubject ( \"\u544a\u8b66\u90ae\u4ef6\" ); String content = getContent ( alarmList ); // \u90ae\u4ef6\u5185\u5bb9 message . setText ( content ); sender . send ( message ); log . info ( \"\u544a\u8b66\u90ae\u4ef6\u5df2\u53d1\u9001...\" ); } private String getContent ( List < SwAlarmDTO > alarmList ) { StringBuilder sb = new StringBuilder (); for ( SwAlarmDTO dto : alarmList ) { sb . append ( \"scopeId: \" ). append ( dto . getScopeId ()) . append ( \"\\nscope: \" ). append ( dto . getScope ()) . append ( \"\\n\u76ee\u6807 Scope \u7684\u5b9e\u4f53\u540d\u79f0: \" ). append ( dto . getName ()) . append ( \"\\nScope \u5b9e\u4f53\u7684 ID: \" ). append ( dto . getId0 ()) . append ( \"\\nid1: \" ). append ( dto . getId1 ()) . append ( \"\\n\u544a\u8b66\u89c4\u5219\u540d\u79f0: \" ). append ( dto . getRuleName ()) . append ( \"\\n\u544a\u8b66\u6d88\u606f\u5185\u5bb9: \" ). append ( dto . getAlarmMessage ()) . append ( \"\\n\u544a\u8b66\u65f6\u95f4: \" ). append ( dto . getStartTime ()) . append ( \"\\n\\n---------------\\n\\n\" ); } return sb . toString (); } } \u6700\u540e\u5c06\u8be5\u63a5\u53e3\u914d\u7f6e\u5230SkyWalking\u4e2d\uff0cWebhook\u7684\u914d\u7f6e\u4f4d\u4e8econfig/alarm-settings.yml\u6587\u4ef6\u7684\u672b\u5c3e\uff0c\u683c\u5f0f\u4e3ahttp://{ip}:{port}/{uri}\u3002\u5982\u4e0b\u793a\u4f8b\uff1a 1 2 3 [ root@ip-236-048 skywalking ] # vim config/alarm-settings.yml webhooks: - http://127.0.0.1:9134/alarm/receive \u6d4b\u8bd5\u544a\u8b66\u529f\u80fd \u5b8c\u6210\u544a\u8b66\u63a5\u53e3\u7684\u5f00\u53d1\u53ca\u914d\u7f6e\u540e\uff0c\u6211\u4eec\u6765\u8fdb\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\u3002\u8fd9\u91cc\u6709\u4e00\u6761\u8c03\u7528\u94fe\u8def\u5982\u4e0b\uff1a \u200b \u6211\u5728/producer\u63a5\u53e3\u4e2d\u589e\u52a0\u4e86\u4e00\u884c\u77612\u79d2\u7684\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 @Override @Trace @Tag ( key = \"getAll\" , value = \"returnedObj\" ) public List < Order > all () throws InterruptedException { TimeUnit . SECONDS . sleep ( 2 ); return orderMapper . selectAll (); } http://localhost:8072/order/all \u6267\u884c\u5b8c\u6d4b\u8bd5\u4ee3\u7801\uff0c\u7b49\u5f85\u7ea6\u4e24\u5206\u949f\u540e\uff0c\u544a\u8b66\u63a5\u53e3\u7684\u63a7\u5236\u53f0\u8f93\u51fa\u4e86\u4e00\u6bb5\u65e5\u5fd7\u4fe1\u606f\uff1a \u200b 8\u3001Skywalking\u9ad8\u53ef\u7528 \u5728\u5927\u591a\u6570\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u540e\u7aef\u5e94\u7528\u9700\u8981\u652f\u6301\u9ad8\u541e\u5410\u91cf\u5e76\u4e14\u652f\u6301\u9ad8\u53ef\u7528\u6765\u4fdd\u8bc1\u670d\u52a1\u7684\u7a33\u5b9a\uff0c\u6240\u4ee5\u4f60\u59cb\u7ec8\u9700\u8981\u5728\u751f\u4ea7\u73af\u5883\u8fdb\u884c\u96c6\u7fa4\u7ba1\u7406\u3002 Skywalking\u96c6\u7fa4\u662f\u5c06skywalking oap\u4f5c\u4e3a\u4e00\u4e2a\u670d\u52a1\u6ce8\u518c\u5230nacos\u4e0a\uff0c\u53ea\u8981skywalking oap\u670d\u52a1\u6ca1\u6709\u5168\u90e8\u5b95\u673a\uff0c\u4fdd\u8bc1\u6709\u4e00\u4e2askywalking oap\u5728\u8fd0\u884c\uff0c\u5c31\u80fd\u8fdb\u884c\u8ddf\u8e2a\u3002 \u642d\u5efa\u4e00\u4e2askywalking oap\u96c6\u7fa4\u9700\u8981\uff1a \uff081\uff09\u81f3\u5c11\u4e00\u4e2aNacos\uff08\u4e5f\u53ef\u4ee5\u662fnacos\u96c6\u7fa4\uff09 \uff082\uff09\u81f3\u5c11\u4e00\u4e2aElasticSearch/mysql\uff08\u4e5f\u53ef\u4ee5\u662fes/msql\u96c6\u7fa4\uff09 \uff083\uff09\u81f3\u5c112\u4e2askywalking oap\u670d\u52a1\uff1b \uff084\uff09\u81f3\u5c111\u4e2aUI\uff08UI\u4e5f\u53ef\u4ee5\u96c6\u7fa4\u591a\u4e2a\uff0c\u7528Nginx\u4ee3\u7406\u7edf\u4e00\u5165\u53e3\uff09 1.\u4fee\u6539config/application.yml\u6587\u4ef6 \u4f7f\u7528nacos\u4f5c\u4e3a\u6ce8\u518c\u4e2d\u5fc3 \u200b \u4fee\u6539nacos\u914d\u7f6e \u200b \u53ef\u4ee5\u9009\u62e9\u6027\u4fee\u6539\u76d1\u542c\u7aef\u53e3 \u200b \u4fee\u6539\u5b58\u50a8\u7b56\u7565\uff0c\u4f7f\u7528elasticsearch7\u4f5c\u4e3astorage \u200b \u914d\u7f6eui\u670d\u52a1webapp.yml\u6587\u4ef6\u7684listOfServers\uff0c\u5199\u4e24\u4e2a\u5730\u5740 \u200b 3.\u542f\u52a8\u670d\u52a1\u6d4b\u8bd5 \u542f\u52a8Skywalking\u670d\u52a1\uff0c\u6307\u5b9aspringboot\u5e94\u7528\u7684jvm\u53c2\u6570 1 -DSW_AGENT_COLLECTOR_BACKEND_SERVICES = 192 .168.3.10:11800,192.168.3.12:11800","title":"09\u5fae\u670d\u52a1\u94fe\u8def\u8ffd\u8e2aSkyWalking"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalking/#_1","text":"\u5bf9\u4e8e\u4e00\u4e2a\u5927\u578b\u7684\u51e0\u5341\u4e2a\u3001\u51e0\u767e\u4e2a\u5fae\u670d\u52a1\u6784\u6210\u7684\u5fae\u670d\u52a1\u67b6\u6784\u7cfb\u7edf\uff0c\u901a\u5e38\u4f1a\u9047\u5230\u4e0b\u9762\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u5982\uff1a \u5982\u4f55\u4e32\u8054\u6574\u4e2a\u8c03\u7528\u94fe\u8def\uff0c\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898\uff1f \u5982\u4f55\u7f15\u6e05\u5404\u4e2a\u5fae\u670d\u52a1\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff1f \u5982\u4f55\u8fdb\u884c\u5404\u4e2a\u5fae\u670d\u52a1\u63a5\u53e3\u7684\u6027\u80fd\u5206\u6298\uff1f \u5982\u4f55\u8ddf\u8e2a\u6574\u4e2a\u4e1a\u52a1\u6d41\u7a0b\u7684\u8c03\u7528\u5904\u7406\u987a\u5e8f\uff1f \u200b","title":"\u94fe\u8def\u8ffd\u8e2a\u4ecb\u7ecd"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalking/#1skywalking","text":"skywalking\u662f\u4e00\u4e2a \u56fd\u4ea7 \u5f00\u6e90\u6846\u67b6\uff0c2015\u5e74\u7531 \u5434\u665f \u5f00\u6e90 \uff0c 2017\u5e74\u52a0\u5165Apache\u5b75\u5316\u5668\u3002skywalking\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u5e94\u7528\u7a0b\u5e8f \u6027\u80fd\u76d1\u89c6\u5de5\u5177 \uff0c\u4e13\u4e3a\u5fae\u670d\u52a1\u3001\u4e91\u539f\u751f\u67b6\u6784\u548c\u57fa\u4e8e\u5bb9\u5668\uff08Docker\u3001K8s\u3001Mesos\uff09\u67b6\u6784\u800c\u8bbe\u8ba1\u3002\u5b83\u662f\u4e00\u6b3e\u4f18\u79c0\u7684 APM \uff08Application Performance Management\uff09\u5de5\u5177\uff0c\u5305\u62ec\u4e86\u5206\u5e03\u5f0f\u8ffd\u8e2a\u3001\u6027\u80fd\u6307\u6807\u5206\u6790\u3001\u5e94\u7528\u548c\u670d\u52a1\u4f9d\u8d56\u5206\u6790\u7b49\u3002 \u5b98\u7f51\uff1a http://skywalking.apache.org/ \u4e0b\u8f7d\uff1a http://skywalking.apache.org/downloads/ Github\uff1a https://github.com/apache/skywalking \u6587\u6863\uff1a https://skywalking.apache.org/docs/main/v8.4.0/readme/ \u4e2d\u6587\u6587\u6863\uff1a https://skyapm.github.io/document-cn-translation-of-skywalking/ 1.2 \u94fe\u8def\u8ffd\u8e2a\u6846\u67b6\u5bf9\u6bd4 Zipkin\u662fTwitter\u5f00\u6e90\u7684\u8c03\u7528\u94fe\u5206\u6790\u5de5\u5177\uff0c\u76ee\u524d\u57fa\u4e8espringcloud sleuth\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u4f7f\u7528\uff0c\u7279\u70b9\u662f\u8f7b\u91cf\uff0c\u4f7f\u7528\u90e8\u7f72\u7b80\u5355\u3002 Pinpoint\u662f\u97e9\u56fd\u4eba\u5f00\u6e90\u7684\u57fa\u4e8e\u5b57\u8282\u7801\u6ce8\u5165\u7684\u8c03\u7528\u94fe\u5206\u6790\uff0c\u4ee5\u53ca\u5e94\u7528\u76d1\u63a7\u5206\u6790\u5de5\u5177\u3002\u7279\u70b9\u662f\u652f\u6301\u591a\u79cd\u63d2\u4ef6\uff0cUI\u529f\u80fd\u5f3a\u5927\uff0c\u63a5\u5165\u7aef\u65e0\u4ee3\u7801\u4fb5\u5165\u3002 SkyWalking\u662f\u672c\u571f\u5f00\u6e90\u7684\u57fa\u4e8e\u5b57\u8282\u7801\u6ce8\u5165\u7684\u8c03\u7528\u94fe\u5206\u6790\uff0c\u4ee5\u53ca\u5e94\u7528\u76d1\u63a7\u5206\u6790\u5de5\u5177\u3002\u7279\u70b9\u662f\u652f\u6301\u591a\u79cd\u63d2\u4ef6\uff0cUI\u529f\u80fd\u8f83\u5f3a\uff0c\u63a5\u5165\u7aef\u65e0\u4ee3\u7801\u4fb5\u5165\u3002\u76ee\u524d\u5df2\u52a0\u5165Apache\u5b75\u5316\u5668\u3002 CAT\u662f\u5927\u4f17\u70b9\u8bc4\u5f00\u6e90\u7684\u57fa\u4e8e\u7f16\u7801\u548c\u914d\u7f6e\u7684\u8c03\u7528\u94fe\u5206\u6790\uff0c\u5e94\u7528\u76d1\u63a7\u5206\u6790\uff0c\u65e5\u5fd7\u91c7\u96c6\uff0c\u76d1\u63a7\u62a5\u8b66\u7b49\u4e00\u7cfb\u5217\u7684\u76d1\u63a7\u5e73\u53f0\u5de5\u5177\u3002 \u200b 1.3 \u6027\u80fd\u5bf9\u6bd4 \u6a21\u62df\u4e86\u4e09\u79cd\u5e76\u53d1\u7528\u6237\uff1a500\uff0c750\uff0c1000\u3002\u4f7f\u7528jmeter\u6d4b\u8bd5\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u53d1\u900130\u4e2a\u8bf7\u6c42\uff0c\u8bbe\u7f6e\u601d\u8003\u65f6\u95f4\u4e3a10ms\u3002\u4f7f\u7528\u7684\u91c7\u6837\u7387\u4e3a1\uff0c\u5373100%\uff0c\u8fd9\u8fb9\u4e0e\u751f\u4ea7\u53ef\u80fd\u6709\u5dee\u522b\u3002pinpoint\u9ed8\u8ba4\u7684\u91c7\u6837\u7387\u4e3a20\uff0c\u537350%\uff0c\u901a\u8fc7\u8bbe\u7f6eagent\u7684\u914d\u7f6e\u6587\u4ef6\u6539\u4e3a100%\u3002zipkin\u9ed8\u8ba4\u4e5f\u662f1\u3002\u7ec4\u5408\u8d77\u6765\uff0c\u4e00\u5171\u670912\u79cd\u3002\u4e0b\u9762\u770b\u4e0b\u6c47\u603b\u8868\uff1a \u200b \u4ece\u4e0a\u8868\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u4e09\u79cd\u94fe\u8def\u76d1\u63a7\u7ec4\u4ef6\u4e2d\uff0c skywalking\u7684\u63a2\u9488\u5bf9\u541e\u5410\u91cf\u7684\u5f71\u54cd\u6700\u5c0f\uff0czipkin\u7684\u541e\u5410\u91cf\u5c45\u4e2d\u3002pinpoint\u7684\u63a2\u9488\u5bf9\u541e\u5410\u91cf\u7684\u5f71\u54cd\u8f83\u4e3a\u660e\u663e \uff0c\u5728500\u5e76\u53d1\u7528\u6237\u65f6\uff0c\u6d4b\u8bd5\u670d\u52a1\u7684\u541e\u5410\u91cf\u4ece1385\u964d\u4f4e\u5230774\uff0c\u5f71\u54cd\u5f88\u5927\u3002\u7136\u540e\u518d\u770b\u4e0bCPU\u548cmemory\u7684\u5f71\u54cd\uff0c\u5728\u5185\u90e8\u670d\u52a1\u5668\u8fdb\u884c\u7684\u538b\u6d4b\uff0c\u5bf9CPU\u548cmemory\u7684\u5f71\u54cd\u90fd\u5dee\u4e0d\u591a\u572810%\u4e4b\u5185\u3002 1.4 Skywalking\u4e3b\u8981\u529f\u80fd\u7279\u6027 1\u3001\u591a\u79cd\u76d1\u63a7\u624b\u6bb5\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bed\u8a00\u63a2\u9488\u548cservice mesh\u83b7\u5f97\u76d1\u63a7\u7684\u6570\u636e\uff1b 2\u3001\u652f\u6301\u591a\u79cd\u8bed\u8a00\u81ea\u52a8\u63a2\u9488\uff0c\u5305\u62ec Java\uff0c.NET Core \u548c Node.JS\uff1b 3\u3001\u8f7b\u91cf\u9ad8\u6548\uff0c\u65e0\u9700\u5927\u6570\u636e\u5e73\u53f0\u548c\u5927\u91cf\u7684\u670d\u52a1\u5668\u8d44\u6e90\uff1b 4\u3001\u6a21\u5757\u5316\uff0cUI\u3001\u5b58\u50a8\u3001\u96c6\u7fa4\u7ba1\u7406\u90fd\u6709\u591a\u79cd\u673a\u5236\u53ef\u9009\uff1b 5\u3001\u652f\u6301\u544a\u8b66\uff1b 6\u3001\u4f18\u79c0\u7684\u53ef\u89c6\u5316\u89e3\u51b3\u65b9\u6848\uff1b","title":"1\u3001skywalking\u662f\u4ec0\u4e48"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalking/#2skywalking","text":"\u200b skywalking agent\u548c\u4e1a\u52a1\u7cfb\u7edf\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u8d1f\u8d23\u6536\u96c6\u5404\u79cd\u76d1\u63a7\u6570\u636e Skywalking oapservice\u662f\u8d1f\u8d23\u5904\u7406\u76d1\u63a7\u6570\u636e\u7684\uff0c\u6bd4\u5982\u63a5\u53d7skywalking agent\u7684\u76d1\u63a7\u6570\u636e\uff0c\u5e76\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d;\u63a5\u53d7skywalking webapp\u7684\u524d\u7aef\u8bf7\u6c42\uff0c\u4ece\u6570\u636e\u5e93\u67e5\u8be2\u6570\u636e\uff0c\u5e76\u8fd4\u56de\u6570\u636e\u7ed9\u524d\u7aef\u3002Skywalking oapservice\u901a\u5e38\u4ee5\u96c6\u7fa4\u7684\u5f62\u5f0f\u5b58\u5728\u3002 skywalking webapp\uff0c\u524d\u7aef\u754c\u9762\uff0c\u7528\u4e8e\u5c55\u793a\u6570\u636e\u3002 \u7528\u4e8e\u5b58\u50a8\u76d1\u63a7\u6570\u636e\u7684\u6570\u636e\u5e93\uff0c\u6bd4\u5982mysql\u3001elasticsearch\u7b49\u3002 2.1 \u4e0b\u8f7d SkyWalking \u4e0b\u8f7d\uff1a http://skywalking.apache.org/downloads/ \u200b \u76ee\u5f55\u7ed3\u6784 \u200b 2.2 \u642d\u5efaSkyWalking OAP \u670d\u52a1 \u542f\u52a8\u811a\u672cbin/startup.sh \u200b \u65e5\u5fd7\u4fe1\u606f\u5b58\u50a8\u5728logs\u76ee\u5f55 \u200b \u542f\u52a8\u6210\u529f\u540e\u4f1a\u542f\u52a8\u4e24\u4e2a\u670d\u52a1\uff0c\u4e00\u4e2a\u662fskywalking-oap-server\uff0c\u4e00\u4e2a\u662fskywalking-web-ui \uff1a 8868 skywalking-oap-server\u670d\u52a1\u542f\u52a8\u540e\u4f1a\u66b4\u973211800 \u548c 12800 \u4e24\u4e2a\u7aef\u53e3\uff0c\u5206\u522b\u4e3a\u6536\u96c6\u76d1\u63a7\u6570\u636e\u7684\u7aef\u53e311800\u548c\u63a5\u53d7\u524d\u7aef\u8bf7\u6c42\u7684\u7aef\u53e312800\uff0c\u4fee\u6539\u7aef\u53e3\u53ef\u4ee5\u4fee\u6539config/applicaiton.yml \u200b skywalking-web-ui\u670d\u52a1\u4f1a\u5360\u7528 8080 \u7aef\u53e3\uff0c \u4fee\u6539\u7aef\u53e3\u53ef\u4ee5\u4fee\u6539webapp/webapp.yml \u200b server.port\uff1aSkyWalking UI\u670d\u52a1\u7aef\u53e3\uff0c\u9ed8\u8ba4\u662f8080\uff1b collector.ribbon.listOfServers\uff1aSkyWalking OAP\u670d\u52a1\u5730\u5740\u6570\u7ec4\uff0cSkyWalking UI\u754c\u9762\u7684\u6570\u636e\u662f\u901a\u8fc7\u8bf7\u6c42SkyWalking OAP\u670d\u52a1\u6765\u83b7\u5f97\uff1b \u8bbf\u95ee\uff1a http://192.168.3.100:8080/ \u200b \u9875\u9762\u7684\u53f3\u4e0b\u89d2\u53ef\u4ee5\u4e2d\u82f1\u6587\u5207\u6362\uff0c\u53ef\u4ee5\u5207\u6362\u9009\u62e9\u8981\u5c55\u793a\u7684\u65f6\u95f4\u533a\u95f4\u7684\u8ddf\u8e2a\u6570\u636e\u3002 2.3 SkyWalking\u4e2d\u4e09\u4e2a\u6982\u5ff5 \u670d\u52a1(Service) \uff1a \u8868\u793a\u5bf9\u8bf7\u6c42\u63d0\u4f9b\u76f8\u540c\u884c\u4e3a\u7684\u4e00\u7cfb\u5217\u6216\u4e00\u7ec4\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5728\u4f7f\u7528Agent\u65f6\uff0c\u53ef\u4ee5\u5b9a\u4e49\u670d\u52a1\u7684\u540d\u5b57\uff1b \u670d\u52a1\u5b9e\u4f8b(Service Instance) \uff1a \u4e0a\u8ff0\u7684\u4e00\u7ec4\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u79f0\u4e3a\u4e00\u4e2a\u5b9e\u4f8b\uff0c \u4e00\u4e2a\u670d\u52a1\u5b9e\u4f8b\u5b9e\u9645\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u4e00\u4e2a\u771f\u5b9e\u8fdb\u7a0b\uff1b \u7aef\u70b9(Endpoint) \uff1a \u5bf9\u4e8e\u7279\u5b9a\u670d\u52a1\u6240\u63a5\u6536\u7684\u8bf7\u6c42\u8def\u5f84, \u5982HTTP\u7684URI\u8def\u5f84\u548cgRPC\u670d\u52a1\u7684\u7c7b\u540d + \u65b9\u6cd5\u7b7e\u540d\uff1b \u200b","title":"2\u3001skyWalking \u73af\u5883\u642d\u5efa\u90e8\u7f72"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalking/#3-skywalking","text":"3.1 linux\u73af\u5883\u2014\u901a\u8fc7jar\u5305\u65b9\u5f0f\u63a5\u5165 \u51c6\u5907\u4e00\u4e2aspringboot\u7a0b\u5e8f\uff0c\u6253\u6210\u53ef\u6267\u884cjar\u5305\uff0c\u5199\u4e00\u4e2ashell\u811a\u672c\uff0c\u5728\u542f\u52a8\u9879\u76ee\u7684Shell\u811a\u672c\u4e0a\uff0c\u901a\u8fc7 -javaagent \u53c2\u6570\u8fdb\u884c\u914d\u7f6eSkyWalking Agent\u6765\u8ddf\u8e2a\u5fae\u670d\u52a1\uff1b startup.sh\u811a\u672c\uff1a 1 2 3 4 5 6 #!/bin/sh # SkyWalking Agent\u914d\u7f6e export SW_AGENT_NAME = springboot-skywalking-demo #Agent\u540d\u5b57,\u4e00\u822c\u4f7f\u7528`spring.application.name` export SW_AGENT_COLLECTOR_BACKEND_SERVICES = 127 .0.0.1:11800 #\u914d\u7f6e Collector \u5730\u5740\u3002 export SW_AGENT_SPAN_LIMIT = 2000 #\u914d\u7f6e\u94fe\u8def\u7684\u6700\u5927Span\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a 300\u3002 export JAVA_AGENT = -javaagent:/usr/local/soft/apache-skywalking-apm-bin-es7/agent/skywalking-agent.jar \u200b \u542f\u52a8\u65e5\u5fd7 \u200b \u7b49\u540c\u4e8e 1 2 java -javaagent:/usr/local/soft/apache-skywalking-apm-bin-es7/agent/skywalking-agent.jar -DSW_AGENT_COLLECTOR_BACKEND_SERVICES = 127 .0.0.1:11800 \u53c2\u6570\u540d\u5bf9\u5e94agent/config/agent.config\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u5c5e\u6027\u3002 \u5c5e\u6027\u5bf9\u5e94\u7684\u6e90\u7801\uff1aorg.apache.skywalking.apm.agent.core.conf.Config.java 1 2 3 # The service name in UI agent.service_name = ${ SW_AGENT_NAME : Your_ApplicationName } # Backend service addresses. \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528skywalking.+\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u540d\u4f5c\u4e3a\u7cfb\u7edf\u914d\u7f6e\u9879\u6765\u8fdb\u884c\u8986\u76d6\u3002 javaagent\u53c2\u6570\u914d\u7f6e\u65b9\u5f0f\u4f18\u5148\u7ea7\u66f4\u9ad8 \u6d4b\u8bd5\uff1a \u8bbf\u95ee\u4f60\u7684\u5fae\u670d\u52a1 \u200b 3.2 windos\u73af\u5883\u2014\u5728IDEA\u4e2d\u4f7f\u7528Skywalking \u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u914d\u7f6ejvm\u53c2\u6570\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u200b 1 2 3 4 5 # skywalking-agent.jar\u7684\u672c\u5730\u78c1\u76d8\u7684\u8def\u5f84 -javaagent:D: \\a pache \\a pache-skywalking-apm-es7-8.4.0 \\a pache-skywalking-apm-bin-es7 \\a gent \\s kywalking-agent.jar # \u5728skywalking\u4e0a\u663e\u793a\u7684\u670d\u52a1\u540d -DSW_AGENT_NAME = springboot-skywalking-demo # skywalking\u7684collector\u670d\u52a1\u7684IP\u53ca\u7aef\u53e3 -DSW_AGENT_COLLECTOR_BACKEND_SERVICES \u53ef\u4ee5\u6307\u5b9a\u8fdc\u7a0b\u5730\u5740\uff0c \u4f46\u662f-javaagent\u5fc5\u987b\u7ed1\u5b9a\u4f60\u672c\u673a\u7269\u7406\u8def\u5f84\u7684skywalking-agent.jar 3.3 Skywalking\u8de8\u591a\u4e2a\u5fae\u670d\u52a1\u8ddf\u8e2a Skywalking\u8de8\u591a\u4e2a\u5fae\u670d\u52a1\u8ddf\u8e2a\uff0c\u53ea\u9700\u8981\u6bcf\u4e2a\u5fae\u670d\u52a1\u542f\u52a8\u65f6\u6dfb\u52a0javaagent\u53c2\u6570\u5373\u53ef\u3002 \u6d4b\u8bd5\uff1a \u542f\u52a8\u5fae\u670d\u52a1mall-gateway\uff0cmall-order\uff0cmall-user \uff0c\u914d\u7f6eskywalking\u7684jvm\u53c2\u6570 http://localhost:8888/user/findOrderByUserId/1 \u200b \u6ce8\u610f\uff1a\u6b64\u5904\u5b58\u5728bug\uff0c\u8ddf\u8e2a\u94fe\u8def\u4e0d\u663e\u793agateway \u62f7\u8d1dagent/optional-plugins\u76ee\u5f55\u4e0b\u7684gateway\u63d2\u4ef6\u5230agent/plugins\u76ee\u5f55 \u200b","title":"3\u3001 SkyWalking \u63a5\u5165\u5fae\u670d\u52a1"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalking/#4skywalking","text":"\u9ed8\u8ba4\u4f7f\u7528\u7684H2\u6570\u636e\u5e93\u5b58\u50a8 config/application.yml \u200b 4.1 \u57fa\u4e8emysql\u6301\u4e45\u5316: \u4fee\u6539config\u76ee\u5f55\u4e0b\u7684application.yml\uff0c\u4f7f\u7528mysql\u4f5c\u4e3a\u6301\u4e45\u5316\u5b58\u50a8\u7684\u4ed3\u5e93 \u200b \u4fee\u6539mysql\u8fde\u63a5\u914d\u7f6e \u200b 1 2 3 4 5 6 7 8 9 10 11 storage : #\u9009\u62e9\u4f7f\u7528mysql \u9ed8\u8ba4\u4f7f\u7528h2\uff0c\u4e0d\u4f1a\u6301\u4e45\u5316\uff0c\u91cd\u542fskyWalking\u4e4b\u524d\u7684\u6570\u636e\u4f1a\u4e22\u5931 selector : ${SW_STORAGE:mysql} #\u4f7f\u7528mysql\u4f5c\u4e3a\u6301\u4e45\u5316\u5b58\u50a8\u7684\u4ed3\u5e93 mysql : properties : #\u6570\u636e\u5e93\u8fde\u63a5\u5730\u5740 jdbcUrl : ${SW_JDBC_URL:\"jdbc:mysql://1ocalhost:3306/swtest\"} #\u7528\u6237\u540d dataSource.user : ${SW_DATA_SOURCE_USER:root} #\u5bc6\u7801 \u6ce8\u610f\uff1a\u9700\u8981\u6dfb\u52a0mysql\u6570\u636e\u9a71\u52a8\u5305\uff0c\u56e0\u4e3a\u5728lib\u76ee\u5f55\u4e0b\u662f\u6ca1\u6709mysql\u6570\u636e\u9a71\u52a8\u5305\u7684\uff0c\u6240\u4ee5\u4fee\u6539\u5b8c\u914d\u7f6e\u542f\u52a8\u662f\u4f1a\u62a5\u9519\uff0c\u542f\u52a8\u5931\u8d25\u7684\u3002 \u6dfb\u52a0mysql\u6570\u636e\u9a71\u52a8\u5305\u5230oap-libs\u76ee\u5f55\u4e0b \u542f\u52a8Skywalking \u200b \u67e5\u770bswtest\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u770b\u5230\u751f\u6210\u4e86\u5f88\u591a\u8868\u3002 \u200b \u8bf4\u660e\u542f\u52a8\u6210\u529f\u4e86\uff0c\u6253\u5f00\u914d\u7f6e\u5bf9\u5e94\u7684\u5730\u5740 http://192.168.3.100:8080/ \uff0c\u53ef\u4ee5\u770b\u5230skywalking\u7684web\u754c\u9762\u3002 \u200b \u6d4b\u8bd5\uff1a\u91cd\u542fskywalking\uff0c\u9a8c\u8bc1\u8ddf\u8e2a\u6570\u636e\u4f1a\u4e0d\u4f1a\u4e22\u5931","title":"4\u3001Skywalking\u6301\u4e45\u5316\u8ddf\u8e2a\u6570\u636e"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalking/#5skywalking","text":"\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5bf9\u9879\u76ee\u4e2d\u7684\u4e1a\u52a1\u65b9\u6cd5\uff0c\u5b9e\u73b0\u94fe\u8def\u8ffd\u8e2a\uff0c\u65b9\u4fbf\u6211\u4eec\u6392\u67e5\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684\u4ee3\u7801 \u5f15\u5165\u4f9d\u8d56 1 2 3 4 5 <!-- SkyWalking \u5de5\u5177\u7c7b --> <dependency> <groupId> org.apache.skywalking </groupId> <artifactId> apm-toolkit-trace </artifactId> <version> 8.4.0 </version> 5.1 @Trace\u5c06\u65b9\u6cd5\u52a0\u5165\u8ffd\u8e2a\u94fe\u8def \u5982\u679c\u4e00\u4e2a\u4e1a\u52a1\u65b9\u6cd5\u60f3\u5728ui\u754c\u9762\u7684\u8ddf\u8e2a\u94fe\u8def\u4e0a\u663e\u793a\u51fa\u6765\uff0c\u53ea\u9700\u8981\u5728\u4e1a\u52a1\u65b9\u6cd5\u4e0a\u52a0\u4e0a@Trace\u6ce8\u89e3\u5373\u53ef \u200b \u6d4b\u8bd5\uff1a \u200b 5.2 \u52a0\u5165@Tags\u6216@Tag \u6211\u4eec\u8fd8\u53ef\u4ee5\u4e3a\u8ffd\u8e2a\u94fe\u8def\u589e\u52a0\u5176\u4ed6\u989d\u5916\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u8bb0\u5f55\u53c2\u6570\u548c\u8fd4\u56de\u4fe1\u606f\u3002\u5b9e\u73b0\u65b9\u5f0f\uff1a\u5728\u65b9\u6cd5\u4e0a\u589e\u52a0@Tag\u6216\u8005@Tags\u3002 @Tag \u6ce8\u89e3\u4e2d key = \u65b9\u6cd5\u540d \uff1b value = returnedObj \u8fd4\u56de\u503c arg[0] \u53c2\u6570 1 2 3 4 5 6 7 8 9 10 11 12 @Trace @Tag ( key = \"list\" , value = \"returnedObj\" ) public List < User > list (){ return userMapper . list (); } @Trace @Tags ({ @Tag ( key = \"param\" , value = \"arg[0]\" ), @Tag ( key = \"user\" , value = \"returnedObj\" )}) public User getById ( Integer id ){ return userMapper . getById ( id ); } \u200b \u200b \u6027\u80fd\u5206\u6790 skywalking\u7684\u6027\u80fd\u5206\u6790\uff0c\u5728\u6839\u636e\u670d\u52a1\u540d\u79f0\u3001\u7aef\u70b9\u540d\u79f0\uff0c\u4ee5\u53ca\u76f8\u5e94\u7684\u89c4\u5219\u5efa\u7acb\u4e86\u4efb\u52a1\u5217\u8868\u540e\uff0c\u5728\u8c03\u7528\u4e86\u6b64\u4efb\u52a1\u5217\u8868\u7684\u7aef\u70b9\u540e\u3002skywalking\u4f1a\u81ea\u52a8\u8bb0\u5f55\uff0c\u5256\u6790\u5f53\u524d\u7aef\u53e3\uff0c\u751f\u6210\u5256\u6790\u7ed3\u679c\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u56fe\uff1a \u200b","title":"5\u3001\u81ea\u5b9a\u4e49SkyWalking\u94fe\u8def\u8ffd\u8e2a"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalking/#6skywalking","text":"logback\u5b98\u65b9\u914d\u7f6e log4j\u5b98\u65b9\u914d\u7f6e log4j2j\u5b98\u65b9\u914d\u7f6e \u5f15\u5165\u4f9d\u8d56 1 2 3 4 5 <!-- apm-toolkit-logback-1.x --> <dependency> <groupId> org.apache.skywalking </groupId> <artifactId> apm-toolkit-logback-1.x </artifactId> <version> 8.5.0 </version> \u6dfb\u52a0logback-spring.xml\u6587\u4ef6\uff0c\u5e76\u914d\u7f6e %tid \u5360\u4f4d\u7b26 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <configuration> <!-- \u5f15\u5165 Spring Boot \u9ed8\u8ba4\u7684 logback XML \u914d\u7f6e\u6587\u4ef6 --> <include resource= \"org/springframework/boot/logging/logback/defaults.xml\" /> <appender name= \"console\" class= \"ch.qos.logback.core.ConsoleAppender\" > <!-- \u65e5\u5fd7\u7684\u683c\u5f0f\u5316 --> <encoder class= \"ch.qos.logback.core.encoder.LayoutWrappingEncoder\" > <layout class= \"org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout\" > <Pattern> ${CONSOLE_LOG_PATTERN} </Pattern> </layout> </encoder> </appender> <!-- \u8bbe\u7f6e Appender --> <root level= \"INFO\" > <appender-ref ref= \"console\" /> </root> </configuration> \u6d4b\u8bd5 \u200b Skywalking\u901a\u8fc7grpc\u4e0a\u62a5\u65e5\u5fd7 \uff08\u9700\u8981v8.4.0+\uff09 gRPC\u62a5\u544a\u7a0b\u5e8f\u53ef\u4ee5\u5c06\u6536\u96c6\u5230\u7684\u65e5\u5fd7\u8f6c\u53d1\u5230SkyWalking OAP\u670d\u52a1\u5668\u4e0a logback-spring.xml\u4e2d\u6dfb\u52a0 1 2 3 4 5 6 7 8 9 10 11 <!-- v8.4.0\u63d0\u4f9b --> <appender name= \"grpc-log\" class= \"org.apache.skywalking.apm.toolkit.log.logback.v1.x.log.GRPCLogClientAppender\" > <encoder class= \"ch.qos.logback.core.encoder.LayoutWrappingEncoder\" > <layout class= \"org.apache.skywalking.apm.toolkit.log.logback.v1.x.mdc.TraceIdMDCPatternLogbackLayout\" > <Pattern> %d{yyyy-MM-dd HH:mm:ss.SSS} [%X{tid}] [%thread] %-5level %logger{36} -%msg%n </Pattern> </layout> </encoder> </appender> <root level= \"info\" > <appender-ref ref= \"grpc-log\" /> \u200b \u6253\u5f00agent/config/agent.config\u914d\u7f6e\u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\u4fe1\u606f\uff1a 1 2 3 plugin.toolkit.log.grpc.reporter.server_host = ${ SW_GRPC_LOG_SERVER_HOST : 192 .168.3.100 } plugin.toolkit.log.grpc.reporter.server_port = ${ SW_GRPC_LOG_SERVER_PORT : 11800 } plugin.toolkit.log.grpc.reporter.max_message_size = ${ SW_GRPC_LOG_MAX_MESSAGE_SIZE : 10485760 } \u4ee5\u4e0a\u914d\u7f6e\u662f\u9ed8\u8ba4\u914d\u7f6e\u4fe1\u606f,agent\u4e0eoap\u5728\u672c\u5730\u7684\u53ef\u4ee5\u4e0d\u914d \u914d\u7f6e\u540d \u89e3\u91ca \u9ed8\u8ba4\u503c plugin.toolkit.log.transmit_formatted \u662f\u5426\u4ee5\u683c\u5f0f\u5316\u6216\u672a\u683c\u5f0f\u5316\u7684\u683c\u5f0f\u4f20\u8f93\u8bb0\u5f55\u7684\u6570\u636e true plugin.toolkit.log.grpc.reporter.server_host \u6307\u5b9a\u8981\u5411\u5176\u62a5\u544a\u65e5\u5fd7\u6570\u636e\u7684grpc\u670d\u52a1\u5668\u7684\u4e3b\u673a 127.0.0.1 plugin.toolkit.log.grpc.reporter.server_port \u6307\u5b9a\u8981\u5411\u5176\u62a5\u544a\u65e5\u5fd7\u6570\u636e\u7684grpc\u670d\u52a1\u5668\u7684\u7aef\u53e3 11800 plugin.toolkit.log.grpc.reporter.max_message_size \u6307\u5b9agrpc\u5ba2\u6237\u7aef\u8981\u62a5\u544a\u7684\u65e5\u5fd7\u6570\u636e\u7684\u6700\u5927\u5927\u5c0f 10485760 plugin.toolkit.log.grpc.reporter.upstream_timeout \u5ba2\u6237\u7aef\u5411\u4e0a\u6e38\u53d1\u9001\u6570\u636e\u65f6\u5c06\u8d85\u65f6\u591a\u957f\u65f6\u95f4\u3002\u5355\u4f4d\u662f\u79d2 30 agent\u914d\u7f6e\u4fe1\u606f\u5927\u5168 Skywalking UI\u6548\u679c \u200b \u6b64\u5904\u65e5\u671f\u683c\u5f0f\u5b58\u5728\u95ee\u9898 https://github.com/apache/skywalking-rocketbot-ui/pull/428 \u200b","title":"6\u3001Skywalking\u96c6\u6210\u65e5\u5fd7\u6846\u67b6"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalking/#7skywalking","text":"SkyWalking \u544a\u8b66\u529f\u80fd\u662f\u57286.x\u7248\u672c\u65b0\u589e\u7684\uff0c\u5176\u6838\u5fc3\u7531\u4e00\u7ec4\u89c4\u5219\u9a71\u52a8\uff0c\u8fd9\u4e9b\u89c4\u5219\u5b9a\u4e49\u5728config/alarm-settings.yml\u6587\u4ef6\u4e2d\u3002 \u544a\u8b66\u89c4\u5219\u7684\u5b9a\u4e49\u5206\u4e3a\u4e24\u90e8\u5206\uff1a \u544a\u8b66\u89c4\u5219 \uff1a\u5b83\u4eec\u5b9a\u4e49\u4e86\u5e94\u8be5\u5982\u4f55\u89e6\u53d1\u5ea6\u91cf\u8b66\u62a5\uff0c\u5e94\u8be5\u8003\u8651\u4ec0\u4e48\u6761\u4ef6\u3002 Webhook\uff08\u7f51\u7edc\u94a9\u5b50\uff09 \uff1a\u5b9a\u4e49\u5f53\u8b66\u544a\u89e6\u53d1\u65f6\uff0c\u54ea\u4e9b\u670d\u52a1\u7ec8\u7aef\u9700\u8981\u88ab\u544a\u77e5 \u544a\u8b66\u89c4\u5219 SkyWalking \u7684\u53d1\u884c\u7248\u90fd\u4f1a\u9ed8\u8ba4\u63d0\u4f9bconfig/alarm-settings.yml\u6587\u4ef6\uff0c\u91cc\u9762\u9884\u5148\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u544a\u8b66\u89c4\u5219\u3002\u5982\u4e0b\uff1a \u8fc7\u53bb 3 \u5206\u949f\u5185\u670d\u52a1\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc7 1 \u79d2\u3002 \u8fc7\u53bb 2 \u5206\u949f\u670d\u52a1\u6210\u529f\u7387\u4f4e\u4e8e80%\u3002 \u8fc7\u53bb 3 \u5206\u949f\u5185\u670d\u52a1\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc7 1s \u7684\u767e\u5206\u6bd4 \u670d\u52a1\u5b9e\u4f8b\u5728\u8fc7\u53bb 2 \u5206\u949f\u5185\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc7 1s\uff0c\u5e76\u4e14\u5b9e\u4f8b\u540d\u79f0\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u3002 \u8fc7\u53bb 2 \u5206\u949f\u5185\u7aef\u70b9\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc7 1 \u79d2\u3002 \u8fc7\u53bb 2 \u5206\u949f\u5185\u6570\u636e\u5e93\u8bbf\u95ee\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc7 1 \u79d2\u3002 \u8fc7\u53bb 2 \u5206\u949f\u5185\u7aef\u70b9\u5173\u7cfb\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc7 1 \u79d2\u3002 \u8fd9\u4e9b\u9884\u5b9a\u4e49\u7684\u544a\u8b66\u89c4\u5219\uff0c\u6253\u5f00config/alarm-settings.yml\u6587\u4ef6\u5373\u53ef\u770b\u5230 \u544a\u8b66\u89c4\u5219\u914d\u7f6e\u9879\u7684\u8bf4\u660e\uff1a Rule name\uff1a \u89c4\u5219\u540d\u79f0\uff0c\u4e5f\u662f\u5728\u544a\u8b66\u4fe1\u606f\u4e2d\u663e\u793a\u7684\u552f\u4e00\u540d\u79f0\u3002\u5fc5\u987b\u4ee5_rule\u7ed3\u5c3e\uff0c\u524d\u7f00\u53ef\u81ea\u5b9a\u4e49 Metrics name\uff1a \u5ea6\u91cf\u540d\u79f0\uff0c\u53d6\u503c\u4e3aoal\u811a\u672c\u4e2d\u7684\u5ea6\u91cf\u540d\uff0c\u76ee\u524d\u53ea\u652f\u6301long\u3001double\u548cint\u7c7b\u578b\u3002\u8be6\u89c1 Official OAL script Include names\uff1a \u8be5\u89c4\u5219\u4f5c\u7528\u4e8e\u54ea\u4e9b\u5b9e\u4f53\u540d\u79f0\uff0c\u6bd4\u5982\u670d\u52a1\u540d\uff0c\u7ec8\u7aef\u540d\uff08\u53ef\u9009\uff0c\u9ed8\u8ba4\u4e3a\u5168\u90e8\uff09 Exclude names\uff1a \u8be5\u89c4\u5219\u4f5c\u4e0d\u7528\u4e8e\u54ea\u4e9b\u5b9e\u4f53\u540d\u79f0\uff0c\u6bd4\u5982\u670d\u52a1\u540d\uff0c\u7ec8\u7aef\u540d\uff08\u53ef\u9009\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\uff09 Threshold\uff1a \u9608\u503c OP\uff1a \u64cd\u4f5c\u7b26\uff0c\u76ee\u524d\u652f\u6301 >\u3001<\u3001= Period\uff1a \u591a\u4e45\u544a\u8b66\u89c4\u5219\u9700\u8981\u88ab\u6838\u5b9e\u4e00\u4e0b\u3002\u8fd9\u662f\u4e00\u4e2a\u65f6\u95f4\u7a97\u53e3\uff0c\u4e0e\u540e\u7aef\u90e8\u7f72\u73af\u5883\u65f6\u95f4\u76f8\u5339\u914d Count\uff1a \u5728\u4e00\u4e2aPeriod\u7a97\u53e3\u4e2d\uff0c\u5982\u679cvalues\u8d85\u8fc7Threshold\u503c\uff08\u6309op\uff09\uff0c\u8fbe\u5230Count\u503c\uff0c\u9700\u8981\u53d1\u9001\u8b66\u62a5 Silence period\uff1a \u5728\u65f6\u95f4N\u4e2d\u89e6\u53d1\u62a5\u8b66\u540e\uff0c\u5728TN -> TN + period\u8fd9\u4e2a\u9636\u6bb5\u4e0d\u544a\u8b66\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u548cPeriod\u4e00\u6837\uff0c\u8fd9\u610f\u5473\u7740\u76f8\u540c\u7684\u544a\u8b66\uff08\u5728\u540c\u4e00\u4e2aMetrics name\u62e5\u6709\u76f8\u540c\u7684Id\uff09\u5728\u540c\u4e00\u4e2aPeriod\u5185\u53ea\u4f1a\u89e6\u53d1\u4e00\u6b21 message\uff1a \u544a\u8b66\u6d88\u606f Webhook\uff08\u7f51\u7edc\u94a9\u5b50\uff09 Webhook\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u662f\u4e00\u79cdWeb\u5c42\u9762\u7684\u56de\u8c03\u673a\u5236\uff0c\u901a\u5e38\u7531\u4e00\u4e9b\u4e8b\u4ef6\u89e6\u53d1\uff0c\u4e0e\u4ee3\u7801\u4e2d\u7684\u4e8b\u4ef6\u56de\u8c03\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u662fWeb\u5c42\u9762\u7684\u3002\u7531\u4e8e\u662fWeb\u5c42\u9762\u7684\uff0c\u6240\u4ee5\u5f53\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u56de\u8c03\u7684\u4e0d\u518d\u662f\u4ee3\u7801\u4e2d\u7684\u65b9\u6cd5\u6216\u51fd\u6570\uff0c\u800c\u662f\u670d\u52a1\u63a5\u53e3\u3002\u4f8b\u5982\uff0c\u5728\u544a\u8b66\u8fd9\u4e2a\u573a\u666f\uff0c\u544a\u8b66\u5c31\u662f\u4e00\u4e2a\u4e8b\u4ef6\u3002\u5f53\u8be5\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0cSkyWalking\u5c31\u4f1a\u4e3b\u52a8\u53bb\u8c03\u7528\u4e00\u4e2a\u914d\u7f6e\u597d\u7684\u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u5c31\u662f\u6240\u8c13\u7684Webhook\u3002 SkyWalking\u7684\u544a\u8b66\u6d88\u606f\u4f1a\u901a\u8fc7 HTTP \u8bf7\u6c42\u8fdb\u884c\u53d1\u9001\uff0c\u8bf7\u6c42\u65b9\u6cd5\u4e3a POST\uff0cContent-Type \u4e3a application/json\uff0c\u5176JSON \u6570\u636e\u5b9e\u57fa\u4e8eList\u8fdb\u884c\u5e8f\u5217\u5316\u7684\u3002JSON\u6570\u636e\u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 [{ \"scopeId\" : 1 , \"scope\" : \"SERVICE\" , \"name\" : \"serviceA\" , \"id0\" : \"12\" , \"id1\" : \"\" , \"ruleName\" : \"service_resp_time_rule\" , \"alarmMessage\" : \"alarmMessage xxxx\" , \"startTime\" : 1560524171000 }, { \"scopeId\" : 1 , \"scope\" : \"SERVICE\" , \"name\" : \"serviceB\" , \"id0\" : \"23\" , \"id1\" : \"\" , \"ruleName\" : \"service_resp_time_rule\" , \"alarmMessage\" : \"alarmMessage yyy\" , \"startTime\" : 1560524171000 }] \u5b57\u6bb5\u8bf4\u660e\uff1a scopeId\u3001scope\uff1a \u6240\u6709\u53ef\u7528\u7684 Scope \u8be6\u89c1 org.apache.skywalking.oap.server.core.source.DefaultScopeDefine name\uff1a \u76ee\u6807 Scope \u7684\u5b9e\u4f53\u540d\u79f0 id0\uff1a Scope \u5b9e\u4f53\u7684 ID id1\uff1a \u4fdd\u7559\u5b57\u6bb5\uff0c\u76ee\u524d\u6682\u672a\u4f7f\u7528 ruleName\uff1a \u544a\u8b66\u89c4\u5219\u540d\u79f0 alarmMessage\uff1a \u544a\u8b66\u6d88\u606f\u5185\u5bb9 startTime\uff1a \u544a\u8b66\u65f6\u95f4\uff0c\u683c\u5f0f\u4e3a\u65f6\u95f4\u6233 \u90ae\u4ef6\u544a\u8b66\u529f\u80fd\u5b9e\u8df5 \u6839\u636e\u4ee5\u4e0a\u4e24\u4e2a\u5c0f\u8282\u7684\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u5f97\u77e5\uff1aSkyWalking\u662f\u4e0d\u652f\u6301\u76f4\u63a5\u5411\u90ae\u7bb1\u3001\u77ed\u4fe1\u7b49\u670d\u52a1\u53d1\u9001\u544a\u8b66\u4fe1\u606f\u7684\uff0cSkyWalking\u53ea\u4f1a\u5728\u53d1\u751f\u544a\u8b66\u65f6\u5c06\u544a\u8b66\u4fe1\u606f\u53d1\u9001\u81f3\u914d\u7f6e\u597d\u7684Webhook\u63a5\u53e3\u3002 \u4f46\u6211\u4eec\u603b\u4e0d\u80fd\u4eba\u5de5\u76ef\u7740\u8be5\u63a5\u53e3\u7684\u65e5\u5fd7\u4fe1\u606f\u6765\u5f97\u77e5\u670d\u52a1\u662f\u5426\u53d1\u751f\u4e86\u544a\u8b66\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u8be5\u63a5\u53e3\u91cc\u5b9e\u73b0\u53d1\u9001\u90ae\u4ef6\u6216\u77ed\u4fe1\u7b49\u529f\u80fd\uff0c\u4ece\u800c\u8fbe\u5230\u4e2a\u6027\u5316\u7684\u544a\u8b66\u901a\u77e5\u3002 \u63a5\u4e0b\u6765\u5f00\u59cb\u52a8\u624b\u5b9e\u8df5\uff0c\u8fd9\u91cc\u57fa\u4e8eSpring Boot\u8fdb\u884c\u5b9e\u73b0\u3002\u9996\u5148\u662f\u6dfb\u52a0\u4f9d\u8d56\uff1a 1 2 3 4 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-mail </artifactId> </dependency> \u914d\u7f6e\u90ae\u7bb1\u670d\u52a1\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 server : port : 9134 #\u90ae\u7bb1\u914d\u7f6e spring : mail : host : smtp.163.com #\u53d1\u9001\u8005\u90ae\u7bb1\u8d26\u53f7 username : \u4f60\u7684\u90ae\u7bb1@163.com #\u53d1\u9001\u8005\u5bc6\u94a5 password : \u4f60\u7684\u90ae\u7bb1\u670d\u52a1\u5bc6\u94a5 default-encoding : utf-8 port : 465 #\u7aef\u53e3\u53f7465\u6216587 protocol : smtp properties : mail : debug : false smtp : socketFactory : class : javax.net.ssl.SSLSocketFactory \u6839\u636eSkyWalking\u53d1\u9001\u7684JSON\u6570\u636e\u5b9a\u4e49\u4e00\u4e2aDTO\uff0c\u7528\u4e8e\u63a5\u53e3\u63a5\u6536\u6570\u636e\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ```java @Data public class SwAlarmDTO { private Integer scopeId; private String scope; private String name; private Integer id0; private Integer id1; private String ruleName; private String alarmMessage; private Long startTime; } ``` \u63a5\u7740\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\uff0c\u5b9e\u73b0\u63a5\u6536SkyWalking\u7684\u544a\u8b66\u901a\u77e5\uff0c\u5e76\u5c06\u6570\u636e\u53d1\u9001\u81f3\u90ae\u7bb1\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 @Slf4j @RestController @RequiredArgsConstructor @RequestMapping ( \"/alarm\" ) public class SwAlarmController { private final JavaMailSender sender ; @Value ( \"${spring.mail.username}\" ) private String from ; /** * \u63a5\u6536skywalking\u670d\u52a1\u7684\u544a\u8b66\u901a\u77e5\u5e76\u53d1\u9001\u81f3\u90ae\u7bb1 */ @PostMapping ( \"/receive\" ) public void receive ( @RequestBody List < SwAlarmDTO > alarmList ) { SimpleMailMessage message = new SimpleMailMessage (); // \u53d1\u9001\u8005\u90ae\u7bb1 message . setFrom ( from ); // \u63a5\u6536\u8005\u90ae\u7bb1 message . setTo ( from ); // \u4e3b\u9898 message . setSubject ( \"\u544a\u8b66\u90ae\u4ef6\" ); String content = getContent ( alarmList ); // \u90ae\u4ef6\u5185\u5bb9 message . setText ( content ); sender . send ( message ); log . info ( \"\u544a\u8b66\u90ae\u4ef6\u5df2\u53d1\u9001...\" ); } private String getContent ( List < SwAlarmDTO > alarmList ) { StringBuilder sb = new StringBuilder (); for ( SwAlarmDTO dto : alarmList ) { sb . append ( \"scopeId: \" ). append ( dto . getScopeId ()) . append ( \"\\nscope: \" ). append ( dto . getScope ()) . append ( \"\\n\u76ee\u6807 Scope \u7684\u5b9e\u4f53\u540d\u79f0: \" ). append ( dto . getName ()) . append ( \"\\nScope \u5b9e\u4f53\u7684 ID: \" ). append ( dto . getId0 ()) . append ( \"\\nid1: \" ). append ( dto . getId1 ()) . append ( \"\\n\u544a\u8b66\u89c4\u5219\u540d\u79f0: \" ). append ( dto . getRuleName ()) . append ( \"\\n\u544a\u8b66\u6d88\u606f\u5185\u5bb9: \" ). append ( dto . getAlarmMessage ()) . append ( \"\\n\u544a\u8b66\u65f6\u95f4: \" ). append ( dto . getStartTime ()) . append ( \"\\n\\n---------------\\n\\n\" ); } return sb . toString (); } } \u6700\u540e\u5c06\u8be5\u63a5\u53e3\u914d\u7f6e\u5230SkyWalking\u4e2d\uff0cWebhook\u7684\u914d\u7f6e\u4f4d\u4e8econfig/alarm-settings.yml\u6587\u4ef6\u7684\u672b\u5c3e\uff0c\u683c\u5f0f\u4e3ahttp://{ip}:{port}/{uri}\u3002\u5982\u4e0b\u793a\u4f8b\uff1a 1 2 3 [ root@ip-236-048 skywalking ] # vim config/alarm-settings.yml webhooks: - http://127.0.0.1:9134/alarm/receive \u6d4b\u8bd5\u544a\u8b66\u529f\u80fd \u5b8c\u6210\u544a\u8b66\u63a5\u53e3\u7684\u5f00\u53d1\u53ca\u914d\u7f6e\u540e\uff0c\u6211\u4eec\u6765\u8fdb\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\u3002\u8fd9\u91cc\u6709\u4e00\u6761\u8c03\u7528\u94fe\u8def\u5982\u4e0b\uff1a \u200b \u6211\u5728/producer\u63a5\u53e3\u4e2d\u589e\u52a0\u4e86\u4e00\u884c\u77612\u79d2\u7684\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 @Override @Trace @Tag ( key = \"getAll\" , value = \"returnedObj\" ) public List < Order > all () throws InterruptedException { TimeUnit . SECONDS . sleep ( 2 ); return orderMapper . selectAll (); } http://localhost:8072/order/all \u6267\u884c\u5b8c\u6d4b\u8bd5\u4ee3\u7801\uff0c\u7b49\u5f85\u7ea6\u4e24\u5206\u949f\u540e\uff0c\u544a\u8b66\u63a5\u53e3\u7684\u63a7\u5236\u53f0\u8f93\u51fa\u4e86\u4e00\u6bb5\u65e5\u5fd7\u4fe1\u606f\uff1a \u200b","title":"7\u3001SkyWalking \u544a\u8b66\u529f\u80fd"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalking/#8skywalking","text":"\u5728\u5927\u591a\u6570\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u540e\u7aef\u5e94\u7528\u9700\u8981\u652f\u6301\u9ad8\u541e\u5410\u91cf\u5e76\u4e14\u652f\u6301\u9ad8\u53ef\u7528\u6765\u4fdd\u8bc1\u670d\u52a1\u7684\u7a33\u5b9a\uff0c\u6240\u4ee5\u4f60\u59cb\u7ec8\u9700\u8981\u5728\u751f\u4ea7\u73af\u5883\u8fdb\u884c\u96c6\u7fa4\u7ba1\u7406\u3002 Skywalking\u96c6\u7fa4\u662f\u5c06skywalking oap\u4f5c\u4e3a\u4e00\u4e2a\u670d\u52a1\u6ce8\u518c\u5230nacos\u4e0a\uff0c\u53ea\u8981skywalking oap\u670d\u52a1\u6ca1\u6709\u5168\u90e8\u5b95\u673a\uff0c\u4fdd\u8bc1\u6709\u4e00\u4e2askywalking oap\u5728\u8fd0\u884c\uff0c\u5c31\u80fd\u8fdb\u884c\u8ddf\u8e2a\u3002 \u642d\u5efa\u4e00\u4e2askywalking oap\u96c6\u7fa4\u9700\u8981\uff1a \uff081\uff09\u81f3\u5c11\u4e00\u4e2aNacos\uff08\u4e5f\u53ef\u4ee5\u662fnacos\u96c6\u7fa4\uff09 \uff082\uff09\u81f3\u5c11\u4e00\u4e2aElasticSearch/mysql\uff08\u4e5f\u53ef\u4ee5\u662fes/msql\u96c6\u7fa4\uff09 \uff083\uff09\u81f3\u5c112\u4e2askywalking oap\u670d\u52a1\uff1b \uff084\uff09\u81f3\u5c111\u4e2aUI\uff08UI\u4e5f\u53ef\u4ee5\u96c6\u7fa4\u591a\u4e2a\uff0c\u7528Nginx\u4ee3\u7406\u7edf\u4e00\u5165\u53e3\uff09 1.\u4fee\u6539config/application.yml\u6587\u4ef6 \u4f7f\u7528nacos\u4f5c\u4e3a\u6ce8\u518c\u4e2d\u5fc3 \u200b \u4fee\u6539nacos\u914d\u7f6e \u200b \u53ef\u4ee5\u9009\u62e9\u6027\u4fee\u6539\u76d1\u542c\u7aef\u53e3 \u200b \u4fee\u6539\u5b58\u50a8\u7b56\u7565\uff0c\u4f7f\u7528elasticsearch7\u4f5c\u4e3astorage \u200b \u914d\u7f6eui\u670d\u52a1webapp.yml\u6587\u4ef6\u7684listOfServers\uff0c\u5199\u4e24\u4e2a\u5730\u5740 \u200b 3.\u542f\u52a8\u670d\u52a1\u6d4b\u8bd5 \u542f\u52a8Skywalking\u670d\u52a1\uff0c\u6307\u5b9aspringboot\u5e94\u7528\u7684jvm\u53c2\u6570 1 -DSW_AGENT_COLLECTOR_BACKEND_SERVICES = 192 .168.3.10:11800,192.168.3.12:11800","title":"8\u3001Skywalking\u9ad8\u53ef\u7528"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalkingUI/","text":"Skywalking ui\u9875\u9762\u529f\u80fd \u83dc\u5355\u680f \u4eea\u8868\u76d8\uff1a\u67e5\u770b\u88ab\u76d1\u63a7\u670d\u52a1\u7684\u8fd0\u884c\u72b6\u6001\uff1b \u62d3\u6251\u56fe\uff1a\u4ee5\u62d3\u6251\u56fe\u7684\u65b9\u5f0f\u5c55\u73b0\u670d\u52a1\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5e76\u4ee5\u6b64\u4e3a\u5165\u53e3\u67e5\u770b\u76f8\u5173\u4fe1\u606f\uff1b \u8ffd\u8e2a\uff1a\u4ee5\u63a5\u53e3\u5217\u8868\u7684\u65b9\u5f0f\u5c55\u73b0\uff0c\u8ffd\u8e2a\u63a5\u53e3\u5185\u90e8\u8c03\u7528\u8fc7\u7a0b\uff1b \u6027\u80fd\u5256\u6790\uff1a\u5bf9\u7aef\u70b9\u8fdb\u884c\u91c7\u6837\u5206\u6790\uff0c\u5e76\u53ef\u67e5\u770b\u5806\u6808\u4fe1\u606f\uff1b \u544a\u8b66\uff1a\u89e6\u53d1\u544a\u8b66\u7684\u544a\u8b66\u5217\u8868\uff0c\u5305\u62ec\u670d\u52a1\u5931\u8d25\u7387\uff0c\u8bf7\u6c42\u8d85\u65f6\u7b49\uff1b \u81ea\u52a8\u5237\u65b0\uff1a\u5237\u65b0\u5f53\u524d\u9875\u9762\u6570\u636e\u5185\u5bb9\uff1b \u63a7\u5236\u680f \u7b2c\u4e00\u680f\uff1a\u4e0d\u540c\u5185\u5bb9\u4e3b\u9898\u7684\u76d1\u63a7\u9762\u677f\uff0c\u5e94\u7528\u6027\u80fd\u7ba1\u7406/\u6570\u636e\u5e93/\u5bb9\u5668\u7b49\uff1b \u7b2c\u4e8c\u680f\uff1a\u64cd\u4f5c\uff0c\u5305\u62ec \u7f16\u8f91/\u5bfc\u51fa\u5f53\u524d\u6570\u636e/\u5012\u5165\u5c55\u793a\u6570\u636e/\u4e0d\u540c\u670d\u52a1\u7aef\u70b9\u7b5b\u9009\u5c55\u793a\uff1b \u7b2c\u4e09\u680f\uff1a\u4e0d\u540c\u7eac\u5ea6\u5c55\u793a\uff0c\u5168\u5c40/\u670d\u52a1/\u5b9e\u4f8b/\u7aef\u70b9\uff1b \u5c55\u793a\u680f Global\u5168\u5c40\u7ef4\u5ea6 \u7b2c\u4e00\u680f\uff1aGlobal\u3001Service\u3001Instance\u3001Endpoint\u4e0d\u540c\u5c55\u793a\u9762\u677f\uff1b Services load\uff1a\u670d\u52a1\u6bcf\u5206\u949f\u8bf7\u6c42\u6570\uff1b Slow Services\uff1a\u6162\u54cd\u5e94\u670d\u52a1\uff0c\u5355\u4f4dms\uff1b Un-Health services(Apdex): Apdex\u6027\u80fd\u6307\u6807\uff0c1\u4e3a\u6ee1\u5206\uff1b Slow Endpoint\uff1a\u6162\u54cd\u5e94\u7aef\u70b9\uff0c\u5355\u4f4dms\uff1b Global Response Latency\uff1a\u767e\u5206\u6bd4\u54cd\u5e94\u5ef6\u65f6\uff0c\u4e0d\u540c\u767e\u5206\u6bd4\u7684\u5ef6\u65f6\u65f6\u95f4\uff0c\u5355\u4f4dms\uff1b Global Heatmap\uff1a\u670d\u52a1\u54cd\u5e94\u65f6\u95f4\u70ed\u529b\u5206\u5e03\u56fe\uff0c\u6839\u636e\u65f6\u95f4\u6bb5\u5185\u4e0d\u540c\u54cd\u5e94\u65f6\u95f4\u7684\u6570\u91cf\u663e\u793a\u989c\u8272\u6df1\u5ea6\uff1b \u5e95\u90e8\u680f\uff1a\u5c55\u793a\u6570\u636e\u7684\u65f6\u95f4\u533a\u95f4\uff0c\u70b9\u51fb\u53ef\u4ee5\u8c03\u6574\uff1b \u200b Service\u670d\u52a1\u7ef4\u5ea6 Service Apdex\uff08\u6570\u5b57\uff09:\u5f53\u524d\u670d\u52a1\u7684\u8bc4\u5206\uff1b Service Apdex\uff08\u6298\u7ebf\u56fe\uff09\uff1a\u4e0d\u540c\u65f6\u95f4\u7684Apdex\u8bc4\u5206\uff1b Service Avg Response Times\uff1a\u5e73\u5747\u54cd\u5e94\u5ef6\u65f6\uff0c\u5355\u4f4dms\uff1b Service Response Time Percentile\uff1a\u767e\u5206\u6bd4\u54cd\u5e94\u5ef6\u65f6\uff1b Successful Rate\uff08\u6570\u5b57\uff09\uff1a\u8bf7\u6c42\u6210\u529f\u7387\uff1b Successful Rate\uff08\u6298\u7ebf\u56fe\uff09\uff1a\u4e0d\u540c\u65f6\u95f4\u7684\u8bf7\u6c42\u6210\u529f\u7387\uff1b Servce Load\uff08\u6570\u5b57\uff09\uff1a\u6bcf\u5206\u949f\u8bf7\u6c42\u6570\uff1b Servce Load\uff08\u6298\u7ebf\u56fe\uff09\uff1a\u4e0d\u540c\u65f6\u95f4\u7684\u6bcf\u5206\u949f\u8bf7\u6c42\u6570\uff1b Servce Instances Load\uff1a\u6bcf\u4e2a\u670d\u52a1\u5b9e\u4f8b\u7684\u6bcf\u5206\u949f\u8bf7\u6c42\u6570\uff1b Show Service Instance\uff1a\u6bcf\u4e2a\u670d\u52a1\u5b9e\u4f8b\u7684\u6700\u5927\u5ef6\u65f6\uff1b Service Instance Successful Rate\uff1a\u6bcf\u4e2a\u670d\u52a1\u5b9e\u4f8b\u7684\u8bf7\u6c42\u6210\u529f\u7387\uff1b \u200b Instance\u670d\u52a1\u7ef4\u5ea6 Service Instance Load\uff1a\u5f53\u524d\u5b9e\u4f8b\u7684\u6bcf\u5206\u949f\u8bf7\u6c42\u6570\uff1b Service Instance Successful Rate\uff1a\u5f53\u524d\u5b9e\u4f8b\u7684\u8bf7\u6c42\u6210\u529f\u7387\uff1b Service Instance Latency\uff1a\u5f53\u524d\u5b9e\u4f8b\u7684\u54cd\u5e94\u5ef6\u65f6\uff1b JVM CPU\uff1ajvm\u5360\u7528CPU\u7684\u767e\u5206\u6bd4\uff1b JVM Memory\uff1aJVM\u5185\u5b58\u5360\u7528\u5927\u5c0f\uff0c\u5355\u4f4dm\uff1b JVM GC Time\uff1aJVM\u5783\u573e\u56de\u6536\u65f6\u95f4\uff0c\u5305\u542bYGC\u548cOGC\uff1b JVM GC Count\uff1aJVM\u5783\u573e\u56de\u6536\u6b21\u6570\uff0c\u5305\u542bYGC\u548cOGC\uff1b JVM Thread Count\uff1aJVM\u7ebf\u7a0b\u6570\uff1b \u8fd8\u6709\u51e0\u4e2a\u662f.NET\u7684\uff0c\u7c7b\u4f3c\u4e8eJVM\u865a\u62df\u673a\uff0c\u6682\u65f6\u4e0d\u505a\u8bf4\u660e\uff1b \u200b Endpoint\u7aef\u70b9\uff08API\uff09\u7ef4\u5ea6 Endpoint Load in Current Service\uff1a\u6bcf\u4e2a\u7aef\u70b9\u7684\u6bcf\u5206\u949f\u8bf7\u6c42\u6570\uff1b Slow Endpoints in Current Service\uff1a\u6bcf\u4e2a\u7aef\u70b9\u7684\u6700\u6162\u8bf7\u6c42\u65f6\u95f4\uff0c\u5355\u4f4dms\uff1b Successful Rate in Current Service\uff1a\u6bcf\u4e2a\u7aef\u70b9\u7684\u8bf7\u6c42\u6210\u529f\u7387\uff1b Endpoint Load\uff1a\u5f53\u524d\u7aef\u70b9\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u7684\u8bf7\u6c42\u6570\u636e\uff1b Endpoint Avg Response Time\uff1a\u5f53\u524d\u7aef\u70b9\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u7684\u8bf7\u6c42\u884c\u54cd\u5e94\u65f6\u95f4\uff1b Endpoint Response Time Percentile\uff1a\u5f53\u524d\u7aef\u70b9\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u7684\u54cd\u5e94\u65f6\u95f4\u5360\u6bd4\uff1b Endpoint Successful Rate\uff1a\u5f53\u524d\u7aef\u70b9\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u7684\u8bf7\u6c42\u6210\u529f\u7387\uff1b \u200b \u62d3\u6251\u56fe 1\uff1a\u9009\u62e9\u4e0d\u540c\u7684\u670d\u52a1\u5173\u8054\u62d3\u6251\uff1b 2\uff1a\u67e5\u770b\u5355\u4e2a\u670d\u52a1\u76f8\u5173\u5185\u5bb9\uff1b 3\uff1a\u670d\u52a1\u95f4\u8fde\u63a5\u60c5\u51b5\uff1b 4\uff1a\u5206\u7ec4\u5c55\u793a\u670d\u52a1\u62d3\u6251\uff1b \u200b \u8ffd\u8e2a \u5de6\u4fa7\uff1aapi\u63a5\u53e3\u5217\u8868\uff0c\u7ea2\u8272-\u5f02\u5e38\u8bf7\u6c42\uff0c\u84dd\u8272-\u6b63\u5e38\u8bf7\u6c42\uff1b \u53f3\u4fa7\uff1aapi\u8ffd\u8e2a\u5217\u8868\uff0capi\u8bf7\u6c42\u8fde\u63a5\u5404\u7aef\u70b9\u7684\u5148\u540e\u987a\u5e8f\u548c\u65f6\u95f4\uff1b \u200b \u6027\u80fd\u5256\u6790 \u65b0\u5efa\u4efb\u52a1\uff1a\u65b0\u5efa\u9700\u8981\u5206\u6790\u7684\u7aef\u70b9 \u5de6\u4fa7\u5217\u8868\uff1a\u4efb\u52a1\u53ca\u5bf9\u5e94\u7684\u91c7\u6837\u8bf7\u6c42 \u53f3\u4fa7\uff1a\u7aef\u70b9\u94fe\u8def\u53ca\u6bcf\u4e2a\u7aef\u70b9\u7684\u5806\u6808\u4fe1\u606f \u200b \u670d\u52a1\uff1a\u9700\u8981\u5206\u6790\u7684\u670d\u52a1\uff1b \u7aef\u70b9\uff1a\u94fe\u8def\u76d1\u63a7\u4e2d\u7aef\u70b9\u7684\u540d\u79f0\uff0c\u53ef\u4ee5\u5728\u94fe\u8def\u8ffd\u8e2a\u4e2d\u67e5\u770b\u7aef\u70b9\u540d\u79f0\uff1b \u76d1\u63a7\u65f6\u95f4\uff1a\u91c7\u96c6\u6570\u636e\u7684\u5f00\u59cb\u65f6\u95f4\uff1b \u76d1\u63a7\u6301\u7eed\u65f6\u95f4\uff1a\u76d1\u63a7\u91c7\u96c6\u591a\u957f\u65f6\u95f4\uff1b \u8d77\u59cb\u76d1\u63a7\u65f6\u95f4\uff1a\u591a\u5c11\u79d2\u540e\u8fdb\u884c\u91c7\u96c6\uff1b \u76d1\u63a7\u95f4\u9694\uff1a\u591a\u5c11\u79d2\u91c7\u96c6\u4e00\u6b21\uff1b \u6700\u5927\u91c7\u96c6\u6570\uff1a\u6700\u5927\u91c7\u96c6\u591a\u5c11\u6837\u672c\uff1b \u200b \u5206\u6790\u7ebf\u7a0b\u6808\u4fe1\u606f \u200b \u544a\u8b66 \u4e0d\u540c\u7ef4\u5ea6\u544a\u8b66\u5217\u8868\uff0c\u53ef\u5206\u4e3a\u670d\u52a1\u3001\u7aef\u70b9\u548c\u5b9e\u4f8b\u3002 \u200b","title":"09\u5fae\u670d\u52a1\u94fe\u8def\u8ffd\u8e2aSkyWalkingUI"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalkingUI/#_1","text":"\u4eea\u8868\u76d8\uff1a\u67e5\u770b\u88ab\u76d1\u63a7\u670d\u52a1\u7684\u8fd0\u884c\u72b6\u6001\uff1b \u62d3\u6251\u56fe\uff1a\u4ee5\u62d3\u6251\u56fe\u7684\u65b9\u5f0f\u5c55\u73b0\u670d\u52a1\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5e76\u4ee5\u6b64\u4e3a\u5165\u53e3\u67e5\u770b\u76f8\u5173\u4fe1\u606f\uff1b \u8ffd\u8e2a\uff1a\u4ee5\u63a5\u53e3\u5217\u8868\u7684\u65b9\u5f0f\u5c55\u73b0\uff0c\u8ffd\u8e2a\u63a5\u53e3\u5185\u90e8\u8c03\u7528\u8fc7\u7a0b\uff1b \u6027\u80fd\u5256\u6790\uff1a\u5bf9\u7aef\u70b9\u8fdb\u884c\u91c7\u6837\u5206\u6790\uff0c\u5e76\u53ef\u67e5\u770b\u5806\u6808\u4fe1\u606f\uff1b \u544a\u8b66\uff1a\u89e6\u53d1\u544a\u8b66\u7684\u544a\u8b66\u5217\u8868\uff0c\u5305\u62ec\u670d\u52a1\u5931\u8d25\u7387\uff0c\u8bf7\u6c42\u8d85\u65f6\u7b49\uff1b \u81ea\u52a8\u5237\u65b0\uff1a\u5237\u65b0\u5f53\u524d\u9875\u9762\u6570\u636e\u5185\u5bb9\uff1b","title":"\u83dc\u5355\u680f"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalkingUI/#_2","text":"\u7b2c\u4e00\u680f\uff1a\u4e0d\u540c\u5185\u5bb9\u4e3b\u9898\u7684\u76d1\u63a7\u9762\u677f\uff0c\u5e94\u7528\u6027\u80fd\u7ba1\u7406/\u6570\u636e\u5e93/\u5bb9\u5668\u7b49\uff1b \u7b2c\u4e8c\u680f\uff1a\u64cd\u4f5c\uff0c\u5305\u62ec \u7f16\u8f91/\u5bfc\u51fa\u5f53\u524d\u6570\u636e/\u5012\u5165\u5c55\u793a\u6570\u636e/\u4e0d\u540c\u670d\u52a1\u7aef\u70b9\u7b5b\u9009\u5c55\u793a\uff1b \u7b2c\u4e09\u680f\uff1a\u4e0d\u540c\u7eac\u5ea6\u5c55\u793a\uff0c\u5168\u5c40/\u670d\u52a1/\u5b9e\u4f8b/\u7aef\u70b9\uff1b","title":"\u63a7\u5236\u680f"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalkingUI/#_3","text":"Global\u5168\u5c40\u7ef4\u5ea6 \u7b2c\u4e00\u680f\uff1aGlobal\u3001Service\u3001Instance\u3001Endpoint\u4e0d\u540c\u5c55\u793a\u9762\u677f\uff1b Services load\uff1a\u670d\u52a1\u6bcf\u5206\u949f\u8bf7\u6c42\u6570\uff1b Slow Services\uff1a\u6162\u54cd\u5e94\u670d\u52a1\uff0c\u5355\u4f4dms\uff1b Un-Health services(Apdex): Apdex\u6027\u80fd\u6307\u6807\uff0c1\u4e3a\u6ee1\u5206\uff1b Slow Endpoint\uff1a\u6162\u54cd\u5e94\u7aef\u70b9\uff0c\u5355\u4f4dms\uff1b Global Response Latency\uff1a\u767e\u5206\u6bd4\u54cd\u5e94\u5ef6\u65f6\uff0c\u4e0d\u540c\u767e\u5206\u6bd4\u7684\u5ef6\u65f6\u65f6\u95f4\uff0c\u5355\u4f4dms\uff1b Global Heatmap\uff1a\u670d\u52a1\u54cd\u5e94\u65f6\u95f4\u70ed\u529b\u5206\u5e03\u56fe\uff0c\u6839\u636e\u65f6\u95f4\u6bb5\u5185\u4e0d\u540c\u54cd\u5e94\u65f6\u95f4\u7684\u6570\u91cf\u663e\u793a\u989c\u8272\u6df1\u5ea6\uff1b \u5e95\u90e8\u680f\uff1a\u5c55\u793a\u6570\u636e\u7684\u65f6\u95f4\u533a\u95f4\uff0c\u70b9\u51fb\u53ef\u4ee5\u8c03\u6574\uff1b \u200b Service\u670d\u52a1\u7ef4\u5ea6 Service Apdex\uff08\u6570\u5b57\uff09:\u5f53\u524d\u670d\u52a1\u7684\u8bc4\u5206\uff1b Service Apdex\uff08\u6298\u7ebf\u56fe\uff09\uff1a\u4e0d\u540c\u65f6\u95f4\u7684Apdex\u8bc4\u5206\uff1b Service Avg Response Times\uff1a\u5e73\u5747\u54cd\u5e94\u5ef6\u65f6\uff0c\u5355\u4f4dms\uff1b Service Response Time Percentile\uff1a\u767e\u5206\u6bd4\u54cd\u5e94\u5ef6\u65f6\uff1b Successful Rate\uff08\u6570\u5b57\uff09\uff1a\u8bf7\u6c42\u6210\u529f\u7387\uff1b Successful Rate\uff08\u6298\u7ebf\u56fe\uff09\uff1a\u4e0d\u540c\u65f6\u95f4\u7684\u8bf7\u6c42\u6210\u529f\u7387\uff1b Servce Load\uff08\u6570\u5b57\uff09\uff1a\u6bcf\u5206\u949f\u8bf7\u6c42\u6570\uff1b Servce Load\uff08\u6298\u7ebf\u56fe\uff09\uff1a\u4e0d\u540c\u65f6\u95f4\u7684\u6bcf\u5206\u949f\u8bf7\u6c42\u6570\uff1b Servce Instances Load\uff1a\u6bcf\u4e2a\u670d\u52a1\u5b9e\u4f8b\u7684\u6bcf\u5206\u949f\u8bf7\u6c42\u6570\uff1b Show Service Instance\uff1a\u6bcf\u4e2a\u670d\u52a1\u5b9e\u4f8b\u7684\u6700\u5927\u5ef6\u65f6\uff1b Service Instance Successful Rate\uff1a\u6bcf\u4e2a\u670d\u52a1\u5b9e\u4f8b\u7684\u8bf7\u6c42\u6210\u529f\u7387\uff1b \u200b Instance\u670d\u52a1\u7ef4\u5ea6 Service Instance Load\uff1a\u5f53\u524d\u5b9e\u4f8b\u7684\u6bcf\u5206\u949f\u8bf7\u6c42\u6570\uff1b Service Instance Successful Rate\uff1a\u5f53\u524d\u5b9e\u4f8b\u7684\u8bf7\u6c42\u6210\u529f\u7387\uff1b Service Instance Latency\uff1a\u5f53\u524d\u5b9e\u4f8b\u7684\u54cd\u5e94\u5ef6\u65f6\uff1b JVM CPU\uff1ajvm\u5360\u7528CPU\u7684\u767e\u5206\u6bd4\uff1b JVM Memory\uff1aJVM\u5185\u5b58\u5360\u7528\u5927\u5c0f\uff0c\u5355\u4f4dm\uff1b JVM GC Time\uff1aJVM\u5783\u573e\u56de\u6536\u65f6\u95f4\uff0c\u5305\u542bYGC\u548cOGC\uff1b JVM GC Count\uff1aJVM\u5783\u573e\u56de\u6536\u6b21\u6570\uff0c\u5305\u542bYGC\u548cOGC\uff1b JVM Thread Count\uff1aJVM\u7ebf\u7a0b\u6570\uff1b \u8fd8\u6709\u51e0\u4e2a\u662f.NET\u7684\uff0c\u7c7b\u4f3c\u4e8eJVM\u865a\u62df\u673a\uff0c\u6682\u65f6\u4e0d\u505a\u8bf4\u660e\uff1b \u200b Endpoint\u7aef\u70b9\uff08API\uff09\u7ef4\u5ea6 Endpoint Load in Current Service\uff1a\u6bcf\u4e2a\u7aef\u70b9\u7684\u6bcf\u5206\u949f\u8bf7\u6c42\u6570\uff1b Slow Endpoints in Current Service\uff1a\u6bcf\u4e2a\u7aef\u70b9\u7684\u6700\u6162\u8bf7\u6c42\u65f6\u95f4\uff0c\u5355\u4f4dms\uff1b Successful Rate in Current Service\uff1a\u6bcf\u4e2a\u7aef\u70b9\u7684\u8bf7\u6c42\u6210\u529f\u7387\uff1b Endpoint Load\uff1a\u5f53\u524d\u7aef\u70b9\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u7684\u8bf7\u6c42\u6570\u636e\uff1b Endpoint Avg Response Time\uff1a\u5f53\u524d\u7aef\u70b9\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u7684\u8bf7\u6c42\u884c\u54cd\u5e94\u65f6\u95f4\uff1b Endpoint Response Time Percentile\uff1a\u5f53\u524d\u7aef\u70b9\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u7684\u54cd\u5e94\u65f6\u95f4\u5360\u6bd4\uff1b Endpoint Successful Rate\uff1a\u5f53\u524d\u7aef\u70b9\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u7684\u8bf7\u6c42\u6210\u529f\u7387\uff1b \u200b","title":"\u5c55\u793a\u680f"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalkingUI/#_4","text":"1\uff1a\u9009\u62e9\u4e0d\u540c\u7684\u670d\u52a1\u5173\u8054\u62d3\u6251\uff1b 2\uff1a\u67e5\u770b\u5355\u4e2a\u670d\u52a1\u76f8\u5173\u5185\u5bb9\uff1b 3\uff1a\u670d\u52a1\u95f4\u8fde\u63a5\u60c5\u51b5\uff1b 4\uff1a\u5206\u7ec4\u5c55\u793a\u670d\u52a1\u62d3\u6251\uff1b \u200b","title":"\u62d3\u6251\u56fe"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalkingUI/#_5","text":"\u5de6\u4fa7\uff1aapi\u63a5\u53e3\u5217\u8868\uff0c\u7ea2\u8272-\u5f02\u5e38\u8bf7\u6c42\uff0c\u84dd\u8272-\u6b63\u5e38\u8bf7\u6c42\uff1b \u53f3\u4fa7\uff1aapi\u8ffd\u8e2a\u5217\u8868\uff0capi\u8bf7\u6c42\u8fde\u63a5\u5404\u7aef\u70b9\u7684\u5148\u540e\u987a\u5e8f\u548c\u65f6\u95f4\uff1b \u200b","title":"\u8ffd\u8e2a"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalkingUI/#_6","text":"\u65b0\u5efa\u4efb\u52a1\uff1a\u65b0\u5efa\u9700\u8981\u5206\u6790\u7684\u7aef\u70b9 \u5de6\u4fa7\u5217\u8868\uff1a\u4efb\u52a1\u53ca\u5bf9\u5e94\u7684\u91c7\u6837\u8bf7\u6c42 \u53f3\u4fa7\uff1a\u7aef\u70b9\u94fe\u8def\u53ca\u6bcf\u4e2a\u7aef\u70b9\u7684\u5806\u6808\u4fe1\u606f \u200b \u670d\u52a1\uff1a\u9700\u8981\u5206\u6790\u7684\u670d\u52a1\uff1b \u7aef\u70b9\uff1a\u94fe\u8def\u76d1\u63a7\u4e2d\u7aef\u70b9\u7684\u540d\u79f0\uff0c\u53ef\u4ee5\u5728\u94fe\u8def\u8ffd\u8e2a\u4e2d\u67e5\u770b\u7aef\u70b9\u540d\u79f0\uff1b \u76d1\u63a7\u65f6\u95f4\uff1a\u91c7\u96c6\u6570\u636e\u7684\u5f00\u59cb\u65f6\u95f4\uff1b \u76d1\u63a7\u6301\u7eed\u65f6\u95f4\uff1a\u76d1\u63a7\u91c7\u96c6\u591a\u957f\u65f6\u95f4\uff1b \u8d77\u59cb\u76d1\u63a7\u65f6\u95f4\uff1a\u591a\u5c11\u79d2\u540e\u8fdb\u884c\u91c7\u96c6\uff1b \u76d1\u63a7\u95f4\u9694\uff1a\u591a\u5c11\u79d2\u91c7\u96c6\u4e00\u6b21\uff1b \u6700\u5927\u91c7\u96c6\u6570\uff1a\u6700\u5927\u91c7\u96c6\u591a\u5c11\u6837\u672c\uff1b \u200b \u5206\u6790\u7ebf\u7a0b\u6808\u4fe1\u606f \u200b","title":"\u6027\u80fd\u5256\u6790"},{"location":"SpringCloudAlibaba/09%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AASkyWalkingUI/#_7","text":"\u4e0d\u540c\u7ef4\u5ea6\u544a\u8b66\u5217\u8868\uff0c\u53ef\u5206\u4e3a\u670d\u52a1\u3001\u7aef\u70b9\u548c\u5b9e\u4f8b\u3002 \u200b","title":"\u544a\u8b66"},{"location":"SpringCloudAlibaba/10SpringBoot%20Actuator%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7/","text":"1\u3001\u7b80\u4ecb \u4e3b\u8981\u8fd0\u7528\u5728\u5fae\u670d\u52a1\u67b6\u6784\uff0c\u6240\u4ee5\u6211\u5efa\u8bae\u4f60\u5148\u5b66\u5fae\u670d\u52a1\uff0c\u5426\u5219\u53ef\u80fdget\u4e0d\u5230\u5b83\u7684\u7528\u5904\uff0c\u53ea\u6709\u5927\u578b\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u624d\u4f1a\u7528\u5230\u6307\u6807\u76d1\u63a7... \u5bf9\u4e8e\u4e00\u4e2a\u5927\u578b\u7684\u51e0\u5341\u4e2a\u3001\u51e0\u767e\u4e2a\u5fae\u670d\u52a1\u6784\u6210\u7684\u5fae\u670d\u52a1\u67b6\u6784\u7cfb\u7edf\uff0c\u5728\u7ebf\u4e0a\u65f6\u901a\u5e38\u4f1a\u9047\u5230\u4e0b\u9762\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u5982: \u5982\u4f55\u77e5\u9053\u54ea\u4e9b\u670d\u52a1\u9664\u4e86\u95ee\u9898\uff0c\u5982\u4f55\u5feb\u901f\u5b9a\u4f4d? (\u5065\u5eb7\u72b6\u51b5) \u5982\u4f55\u7edf\u4e00\u76d1\u63a7\u5404\u4e2a\u5fae\u670d\u52a1\u7684\u6027\u80fd\u6307\u6807(\u5185\u5b58\u3001jvm\u3001\u5e76\u53d1\u6570\u3001\u7ebf\u7a0b\u6c60\u3001Http \u8bf7\u6c42\u7edf\u8ba1) \u5982\u4f55\u7edf\u4e00\u7ba1\u7406\u5404\u4e2a\u5fae\u670d\u52a1\u7684\u65e5\u5fd7?(\u5207\u6362\u7ebf\u4e0a\u65e5\u5fd7\u7b49\u7ea7\uff0c\u5feb\u901f\u641c\u7d22\u65e5\u5fd7...) \u5982\u4f55\u4f18\u96c5\u7ba1\u7406\u670d\u52a1\u4e0b\u7ebf(\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b\u4e0d\u53d1\u751f\u4e2d\u65ad) So: \u5728\u8fd9\u79cd\u5927\u578b\u5206\u5e03\u5f0f\u5e94\u7528\u7684\u73af\u5883\u4e0b\uff0c\u6211\u4eec\u5982\u4f55\u80fd\u591f\u5feb\u901f\u53d1\u73b0\u95ee\u9898\u3001\u5feb\u901f\u89e3\u51b3\u95ee\u9898\uff0c \u5fc5\u987b\u8981\u6709\u76d1\u63a7\u5e73\u53f0\u3001(\u94fe\u8def\u8ffd\u8e2a\u3001\u65e5\u5fd7) 2\u3001SpringBoot Actuator \u4ecb\u7ecd:SpringBoot\u81ea\u5e26\u76d1\u63a7\u529f\u80fdActuator\uff0c\u53ef\u4ee5\u5e2e\u52a9\u5b9e\u73b0\u5bf9\u7a0b\u5e8f\u5185\u90e8\u8fd0\u884c\u60c5\u51b5\u76d1\u63a7\uff0c\u6bd4\u5982\u76d1\u63a7\u72b6\u51b5\u3001Bean\u52a0\u8f7d\u60c5\u51b5\u3001\u73af\u5883\u53d8 \u91cf\u3001\u65e5\u5fd7\u4fe1\u606f\u3001\u7ebf\u7a0b\u4fe1\u606f\u7b49 \u5b9e\u73b0: 1 2 3 4 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring\u2010boot\u2010starter\u2010actuator </artifactId> </dependency> \u5f15\u5165\u573a\u666f \u8bbf\u95ee http://localhost:8080/actuator/** \u66b4\u9732\u6240\u6709\u76d1\u63a7\u4fe1\u606f\u4e3aHTTP 1 2 3 4 5 6 management : endpoints : enabled\u2010by\u2010default : true # \u9ed8\u8ba4\u5f00\u542f\u6240\u6709\u76d1\u63a7\u7aef\u70b9 web : exposure : include : '*' # \u4ee5web\u65b9\u5f0f\u66b4\u9732\u6240\u6709\u7aef\u70b9 \u6d4b\u8bd5 http://localhost:8080/actuator/beans http://localhost:8080/actuator/configprops http://localhost:8080/actuator/metrics http://localhost:8080/actuator/metrics/jvm.gc.pause http://localhost:8080/actuator/endpointName/detailPath Actuator Endpoint \u5e38\u7528\u7684\u7aef\u70b9 Health:\u76d1\u63a7\u72b6\u51b5 \u4e00\u4e2a\u7ec4\u4ef6\u6307\u6807\u72b6\u6001\u4e3aDown\u5219\u603b\u72b6\u6001\u4fe1\u606fDown\uff0c\u5f88\u591a\u7ec4\u4ef6\u4e2d\u90fd\u5b9a\u5236\u4e86Health\u5b50\u8282\u70b9\u6307\u6807: \u6bd4\u5982jdbc\u3001redis\u3001\u7b49\u7b49 shutdown:\u4f18\u96c5\u5173\u95ed \u6ce8\u610f\u9700\u8981web\u670d\u52a1\u5668\u7684\u652f\u6301 1 2 server : shutdown : graceful Metrics:\u8fd0\u884c\u65f6\u6307\u6807 Loggers:\u65e5\u5fd7\u8bb0\u5f55 1 2 3 logging: file: name: D:/logs/xushu.log 3\u3001Spring Boot Admin \u53ef\u89c6\u5316\u76d1\u63a7\u5e73\u53f0\uff0c \u662f\u4e00\u4e2a\u57fa\u4e8e Spring Boot Actuator \u7aef\u70b9\u4e4b\u4e0a\u7684 Vue.js \u5e94\u7528\u7a0b\u5e8f\u3002 https://github.com/codecentric/spring-boot-admin GitHub\u5b98\u65b9\u5730\u5740:https://github.com/codecentric/spring-boot-admin 3.1\u3001\u4f7f\u7528: 1\u3001\u8bbe\u7f6eSpring Boot Admin Server \u521b\u5efa\u670d\u52a1\u5668\u5e76\u5f15\u5165\u4f9d\u8d56\uff0c\u5982\u4e00\u4e2aspringboot\u9879\u76ee \u7248\u672c\u5efa\u8bae: Spring Boot 2.x=Spring Boot Admin 2.x (\u6bd4\u5982Spring Boot 2.3.x \u53ef\u4ee5\u7528Spring Boot Admin 2.3.x) 1 2 3 4 5 6 7 8 9 <dependency> <groupId> de.codecentric </groupId> <artifactId> spring\u2010boot\u2010admin\u2010starter\u2010server </artifactId> <version> 2.4.0\u2010SNAPSHOT </version> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring\u2010boot\u2010starter\u2010web </artifactId> </dependency> \u901a\u8fc7\u6dfb\u52a0@EnableAdminServer\u5230\u914d\u7f6e\u4e2d\u6765\u5f15\u5165Spring Boot Admin Server\u914d\u7f6e: 1 2 3 4 5 6 7 @SpringBootApplication @EnableAdminServer public class Boot05AdminserverApplication { public static void main ( String [] args ) { SpringApplication . run ( Boot05AdminserverApplication . class , args ); } } \u6ce8\u518c\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u5e76\u5f15\u5165\u4f9d\u8d56\uff0c\u5982\u4e00\u4e2aspringboot\u9879\u76ee 1 2 3 4 5 <dependency> <groupId> de.codecentric </groupId> <artifactId> spring\u2010boot\u2010admin\u2010starter\u2010client </artifactId> <version> 2.3.1 </version> </dependency> \u914d\u7f6eSpring Boot Admin Server\u7684URL\uff0c\u5ba2\u6237\u7aef\u8fde\u63a5Spring Boot Admin Server\u7684\u5730\u5740 1 spring.boot.admin.client.url=http://localhost:8080 management.endpoints.web.exposure.include=* \u82e5\u8fde\u63a5\u4e0d\u4e0a\uff0c\u53ef\u80fd\u662f\u5730\u5740\u4f7f\u7528\u8ba1\u7b97\u673a\u540d\u79f0\u4f5c\u4e3a\u5730\u5740\uff0c\u53ef\u4ee5\u6539\u53d8\u4f7f\u7528ip\u6ce8\u518c 1 2 3 4 5 6 7 8 9 spring : boot : admin : client : url : http://localhost:8080 instance : prefer\u2010ip : true # \u4f7f\u7528ip\u6ce8\u518c\u8fdb\u6765 application : name : boot\u201005\u2010web\u2010admin # \u5ba2\u6237\u7aef\u540d\u79f0 \u8bbf\u95ee \u670d\u52a1\u5668\u7684\u6839\u76ee\u5f55\u5982http://localhost:8080/ \u5373\u53ef\u6d4f\u89c8 3.2\u3001\u901a\u8fc7\u6ce8\u518c\u4e2d\u5fc3\u96c6\u6210\u5ba2\u6237\u7aef \u5982\u679c\u4f60\u6709\u6210\u767e\u4e0a\u5343\u4e2a\u5fae\u670d\u52a1\uff0c \u8fd9\u6837\u914d\u7f6e\u672a\u514d\u592a\u9ebb\u70e6\u3002\u5982\u679c\u60a8\u5df2\u7ecf\u4e3a\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4e86 Spring Cloud (Alibaba- nacos) Discovery\uff0c\u90a3\u4e48\u60a8\u5c31\u4e0d\u9700\u8981 SBA \u5ba2\u6237\u7aef\u3002\u53ea\u9700\u5728 Spring Boot Admin Server \u4e2d\u6dfb\u52a0\u4e00\u4e2a DiscoveryClient\uff0c\u5269\u4e0b\u7684\u5de5\u4f5c\u7531\u6211\u4eec\u7684 AutoConfiguration \u5b8c\u6210\u3002 \u4e0b\u9762\u7684\u6b65\u9aa4\u4f7f\u7528 Nacos\uff0c\u4f46\u662f\u4e5f\u652f\u6301\u5176\u4ed6 Spring Discovery\u5b9e\u73b0\u3002 SBA\u670d\u52a1\u7aef: \u6dfb\u52a0\u4f9d\u8d56 1 2 3 4 <!\u2010\u2010nacos\u2010\u670d\u52a1\u6ce8\u518c\u53d1\u73b0\u2010\u2010> <dependency> <groupId> com.alibaba.cloud </groupId> <artifactId> spring\u2010cloud\u2010starter\u2010alibaba\u2010nacos\u2010discovery </artifactId> 5 </dependency> \u914d\u7f6eNacos ```yaml spring: cloud: nacos: discovery: server\u2010addr: 127.0.0.1:8848 username: nacos password: nacos application: name: spring\u2010boot\u2010admin\u2010server # \u4e5f\u4f1a\u5c06SBA\u670d\u52a1\u914d\u7f6e\u4e3a\u5ba2\u6237\u7aef\uff0c \u6240\u4ee5\u4e5f\u53ef\u4ee5\u914d\u7f6e\u81ea\u5df1\u7684endpoint\u89c4\u5219(\u53ef\u9009) management: endpoints: web: exposure: include: '*' endpoint: health: show\u2010details: alwaysSBA\u5ba2\u6237\u7aef: ``` SBA\u5ba2\u6237\u7aef: \u4f9d\u8d56 \u53ea\u9700\u6dfb\u52a0actuator\u5373\u53ef 1 2 3 4 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring\u2010boot\u2010starter\u2010actuator </artifactId> </dependency> \u914d\u7f6e \u5982\u9700\u516c\u5f00\u66f4\u591a\u7aef\u70b9:(\u4e0d\u914d\u7f6e\u8be5\u9009\u9879\u5219\u53ea\u663e\u793a(health\u548cinfo\u7aef\u70b9) 1 2 3 4 5 management : endpoints : web : exposure : include : '*' 3.3\u3001\u5b89\u5168\u9632\u62a4 SBA\u670d\u52a1\u7aef\u5b89\u5168 spring-boot-admin-server-ui \u63d0\u4f9b\u4e86\u4e00\u4e2a\u767b\u5f55\u9875\u9762\u548c\u4e00\u4e2a\u6ce8\u9500\u6309\u94ae\u3001\u53ef\u4ee5\u7ed3\u5408SpringSecurity\u89e3\u51b3\u8eab\u4efd\u9a8c\u8bc1\u548c \u6388\u6743\u3002 Spring Security \u914d\u7f6e\u5982\u4e0b: \u4f9d\u8d56: 1 2 3 4 5 <!\u2010\u2010\u5b89\u5168\u95ee\u9898\u2010\u2010> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring\u2010boot\u2010starter\u2010security </artifactId> </dependency> \u914d\u7f6e\u7c7b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 @Configuration ( proxyBeanMethods = false ) public class SecuritySecureConfig extends WebSecurityConfigurerAdapter { private final AdminServerProperties adminServer ; private final SecurityProperties security ; public SecuritySecureConfig ( AdminServerProperties adminServer , SecurityProperties security ) { this . adminServer = adminServer ; this . security = security ; } @Override protected void configure ( HttpSecurity http ) throws Exception { SavedRequestAwareAuthenticationSuccessHandler successHandler = new SavedRequestAwareAuthenticationSuccessHandler (); successHandler . setTargetUrlParameter ( \"redirectTo\" ); successHandler . setDefaultTargetUrl ( this . adminServer . path ( \"/\" )); http . authorizeRequests ( ( authorizeRequests ) -> authorizeRequests . antMatchers ( this . adminServer . path ( \"/assets/**\" )). permitAll () . antMatchers ( this . adminServer . path ( \"/actuator/info\" )). permitAll () . antMatchers ( this . adminServer . path ( \"/actuator/health\" )). permitAll () . antMatchers ( this . adminServer . path ( \"/login\" )). permitAll (). anyRequest (). authenticated () ). formLogin ( ( formLogin ) -> formLogin . loginPage ( this . adminServer . path ( \"/login\" )). successHandler ( successHandler ). and () ). logout (( logout ) -> logout . logoutUrl ( this . adminServer . path ( \"/logout\" ))). httpBasic ( Customizer . withDefaults ()) . csrf (( csrf ) -> csrf . csrfTokenRepository ( CookieCsrfTokenRepository . withHttpOnlyFalse ()) . ignoringRequestMatchers ( new AntPathRequestMatcher ( this . adminServer . path ( \"/instances\" ), HttpMethod . POST . toString ()), new AntPathRequestMatcher ( this . adminServer . path ( \"/instances/*\" ), HttpMethod . DELETE . toString ()), new AntPathRequestMatcher ( this . adminServer . path ( \"/actuator/**\" )) )) . rememberMe (( rememberMe ) -> rememberMe . key ( UUID . randomUUID (). toString ()). tokenValiditySeconds ( 1209600 )); } // Required to provide UserDetailsService for \"remember functionality\" @Override protected void configure ( AuthenticationManagerBuilder auth ) throws Exception { auth . inMemoryAuthentication (). withUser ( security . getUser (). getName ()) . password ( \"{noop}\" + security . getUser (). getPassword ()). roles ( \"USER\" ); } } \u914d\u7f6e\u4fe1\u606f: 1 2 spring.security.user.name=xushu spring.security.user.password=xushu \u8fd0\u884c\u63d0\u793a\u767b\u5f55: \u8f93\u5165\u914d\u7f6e\u7684name/password\u5373\u53ef SBA\u5ba2\u6237\u7aef \u5982\u679c\u670d\u52a1\u7aef\u4e0d\u662f\u901a\u8fc7\u6ce8\u518c\u4e2d\u5fc3\u8fdb\u884c\u83b7\u53d6\u5ba2\u6237\u7aef \uff0c\u9700\u8981\u5355\u72ec\u4e3a\u5ba2\u6237\u7aef\u914d\u7f6e\uff0c\u56e0\u4e3a\u4e0d\u914d\u7f6e\u5ba2\u6237\u7aef\u65e0\u6cd5\u5411\u670d\u52a1\u7aef\u6ce8\u518c\u5e94\u7528( \u6ca1\u6709\u914d\u7f6e\u4e0d\u4f1a\u62a5 \u9519\uff0c\u53ea\u662f\u5728\u76d1\u63a7\u53f0\u770b\u4e0d\u5230\u5e94\u7528\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u6ce8\u518c\u8fdb\u53bb) 1 2 3 spring.boot.admin.client : username : xushu password : xushu 3.4\u3001\u90ae\u4ef6\u901a\u77e5 \u5982\u679c\u670d\u52a1\u4e0b\u7ebf\uff0c\u4f1a\u8fdb\u884c\u90ae\u4ef6\u901a\u77e5 \u5728spring boot amdin \u670d\u52a1\u7aef\u4fee\u6539 pom\u65b0\u589e 1 2 3 4 5 <!--\u90ae\u4ef6\u901a\u77e5--> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-mail </artifactId> </dependency> \u914d\u7f6e\u6587\u4ef6application.yml\u52a0\u5165: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 spring : mail : # \u53d1\u4ef6\u4eba\u4f7f\u7528\u7684qq\u90ae\u7bb1\u670d\u52a1 host : smtp.qq.com username : tulingxushu@foxmail.com # \u6388\u6743\u7801\uff0c\u4e0d\u662f\u5bc6\u7801\uff0c\u5728qq\u90ae\u7bb1\u8bbe\u7f6e-\u8d26\u53f7\u91cc\u9762\u6709\u751f\u6210\u6388\u6743\u7801 password : bktymeooyuapggbe boot : admin : notify : mail : # \u6536\u4ef6\u4eba\uff0c\u591a\u4e2a\u4e2d\u95f4\u7528,\u5206\u9694 to : tulingxushu@foxmail.com # \u53d1\u4ef6\u4eba from : tulingxushu@foxmail.com \u90ae\u7bb1\u8d26\u6237\u5f00\u542f\u5fc5\u8981\u7684\u8bbe\u7f6e--->\u8d26\u6237 \u91cd\u542f\u670d\u52a1\uff0c\u7136\u540e\u5c06\u4e00\u4e2a\u5ba2\u6237\u7aef\u5173\u95ed \uff08\u4e3a\u4e86\u62a5\u9519\uff0c\u53d1\u9001\u90ae\u4ef6\uff09 4\u3001\u5b9a\u5236 Endpoint 1\u3001\u5b9a\u5236 Health \u4fe1\u606f 1 2 3 4 5 6 7 8 9 10 11 12 @Component public class MyHealthIndicator implements HealthIndicator { @Override public Health health () { int errorCode = check (); // perform some specific health check if ( errorCode != 0 ) { return Health . down (). withDetail ( \"Error Code\" , errorCode ). build (); } return Health . up (). build (); } } \u6784\u5efaHealth 1 2 3 4 5 Health build = Health . down () . withDetail ( \"msg\" , \"error service\" ) . withDetail ( \"code\" , \"500\" ) . withException ( new RuntimeException ()) . build (); 1 2 3 4 management : health : enabled : true show\u2010details : always #\u603b\u662f\u663e\u793a\u8be6\u7ec6\u4fe1\u606f\u3002\u53ef\u663e\u793a\u6bcf\u4e2a\u6a21\u5757\u7684\u72b6\u6001\u4fe1\u606f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 @Component public class MyComHealthIndicator extends AbstractHealthIndicator { //\u771f\u5b9e\u7684\u68c0\u67e5\u65b9\u6cd5 @Override protected void doHealthCheck ( Health . Builder builder ) throws Exception { //mongodb \u83b7\u53d6\u8fde\u63a5\u8fdb\u884c\u6d4b\u8bd5 Map < String , Object > map = new HashMap <> (); if ( 1 == 1 ) { // builder.up();//\u5065\u5eb7 builder.status(Status.UP); map.put(\"count\",1); map.put(\"ms\",100); } else { // builder.down();//\u4e0d\u5065\u5eb7 builder . status ( Status . DOWN ); map . put ( \"error\" , \"\u8fde\u63a5\u8d85\u65f6\" ); map . put ( \"ms\" , 3000 ); } builder . withDetail ( \"code\" , 100 ). withDetails ( map ); } } 2\u3001\u5b9a\u5236info\u4fe1\u606f \u5e38\u7528\u4e24\u79cd\u65b9\u5f0f 1\u3001\u7f16\u5199\u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 info : appName : boot\u2010admin version : 2.0.1 mavenProjectName : @ project.artifactId@ # \u4f7f\u7528@@\u53ef\u4ee5\u83b7\u53d6maven\u7684pom\u6587\u4ef6\u503c mavenProjectVersion: @project.version@ 2\u3001\u7f16\u5199InfoContributor 1 2 3 4 5 6 7 8 9 10 @Component public class AppInfo implements InfoContributor { @Override public void contribute ( Info . Builder builder ) { builder . withDetail ( \"msg\" , \"hello\" ) . withDetail ( \"hello\" , \"world\" ) . withDetails ( Collections . singletonMap ( \"world\" , \"6661121\" )); } } http://localhost:8080/actuator/info \u4f1a\u8f93\u51fa\u4ee5\u4e0a\u65b9\u5f0f\u8fd4\u56de\u7684\u6240\u6709info\u4fe1\u606f 3\u3001\u5b9a\u5236Metrics\u4fe1\u606f Spring Boot Actuator \u4e3a Micrometer \u63d0\u4f9b\u4e86\u4f9d\u8d56\u7ba1\u7406\u548c\u81ea\u52a8\u914d\u7f6e\u529f\u80fd\uff0cMicrometer \u662f\u4e00\u4e2a\u5e94\u7528\u6307\u6807 facade(\u9762 \u95e8)\uff0c\u652f\u6301\u591a\u79cd\u76d1\u63a7\u7cfb\u7edf\uff0c\u5305\u62ec: AppOptics\uff0cAzure Monitor\uff0cNetflix Atlas\uff0cCloudWatch\uff0cDatadog\uff0cDynatrace\uff0cElastic\uff0cGanglia\uff0c Graphite\uff0cHumio\uff0cInflux/Telegraf\uff0cJMX\uff0cKairosDB\uff0cNew Relic\uff0cPrometheus\uff0cSignalFx\uff0cGoogle Stackdriver\uff0cStatsD\uff0c\u548c Wavefront\u3002 \u63d0\u4f9b\u4e00\u4e9b\u5217api\u4f9b\u6211\u4eec\u64cd\u4f5c\u6307\u6807 \u63d0\u4f9b\u4e86\u7f13\u5b58\u3001\u7c7b\u52a0\u8f7d\u5668\u3001GC\u3001jvm\u5185\u5b58\\cpu \u5229\u7528\u7387 \u7ebf\u7a0b...\u6307\u6807 \u80fd\u591f\u5f00\u7bb1\u5373\u7528 \u5df2\u7ecf\u878d\u5165springboot Actuator https://docs.spring.io/spring-boot/docs/2.3.12.RELEASE/reference/html/production-ready-features.html#production-ready-metrics-meter JVM\u5ea6\u91cf\uff0c\u62a5\u544a\u5229\u7528\u7387(JVM metrics, report utilization of): \u5404\u79cd\u5185\u5b58\u548c\u7f13\u51b2\u6c60(Various memory and buffer pools) \u4e0e\u5783\u573e\u6536\u96c6\u6709\u5173\u7684\u7edf\u8ba1\u6570\u636e(Statistics related to garbage collection) \u7ebf\u7a0b\u5229\u7528\u7387(Threads utilization) \u52a0\u8f7d/\u5378\u8f7d\u7684\u7c7b\u6570(Number of classes loaded/unloaded) CPU \u6307\u6807-CPU metrics \u6587\u4ef6\u63cf\u8ff0\u7b26\u5ea6\u91cf-File descriptor metrics Kafka \u7684\u6d88\u8d39\u8005\u3001\u751f\u4ea7\u8005\u548c\u6d41\u91cf\u6307\u6807-Kafka consumer, producer, and streams metrics Log4j2\u5ea6\u91cf: \u8bb0\u5f55\u6bcf\u4e2alevel\u8bb0\u5f55\u5728 Log4j2\u4e2d\u7684\u4e8b\u4ef6\u6570\u91cf-Log4j2 metrics: record the number of events logged to Log4j2 at each level Logback\u5ea6\u91cf: \u8bb0\u5f55\u6bcf\u4e2a\u7ea7\u522b\u767b\u5f55\u5230 Logback \u7684\u4e8b\u4ef6\u6570\u91cf \u2014Logback metrics: record the number ofevents logged to Logback at each level \u6b63\u5e38\u8fd0\u884c\u65f6\u95f4\u6307\u6807: \u62a5\u544a\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4\u6307\u6807\u548c\u8868\u793a\u5e94\u7528\u7a0b\u5e8f\u7edd\u5bf9\u542f\u52a8\u65f6\u95f4\u7684\u56fa\u5b9a\u6307\u6807\u2014Uptime metrics: report a gauge for uptime and a fixed gauge representing the application\u2019s absolute start time Tomcat \u6307\u6807\u2014Tomcat metrics (server.tomcat.mbeanregistry.enabled must be set to true for all Tomcat metrics to be registered) Spring\u6574\u5408\u6307\u6807 Spring Integration metrics Spring Integration \u5ea6\u91cf 2\u3001\u589e\u52a0\u5b9a\u5236Metrics \u5b9a\u5236\u8ba1\u91cf\u65b9\u6cd5: Counter Counter\u662f\u4e00\u79cd\u6bd4\u8f83\u7b80\u5355\u7684Meter\uff0c\u5b83\u662f\u4e00\u79cd\u5355\u503c\u7684\u5ea6\u91cf\u7c7b\u578b\uff0c\u6216\u8005\u8bf4\u662f\u4e00\u4e2a\u5355\u503c\u8ba1\u6570\u5668\u3002 \u4f7f\u7528\u573a\u666f: Counter\u7684\u4f5c\u7528\u662f\u8bb0\u5f55XXX\u7684\u603b\u91cf\u6216\u8005\u8ba1\u6570\u503c\uff0c\u9002\u7528\u4e8e\u4e00\u4e9b\u589e\u957f\u7c7b\u578b\u7684\u7edf\u8ba1\uff0c\u4f8b\u5982\u4e0b\u5355\u3001\u652f\u4ed8\u6b21\u6570\u3001Http\u8bf7\u6c42\u603b\u91cf\u8bb0\u5f55\u7b49\u7b49\uff0c 1 2 1 //\u8bb0\u5f55\u4e0b\u5355\u603b\u6570 2 Metrics . counter ( \"order.count\" , \"order.channel\" , order . getChannel ()). increment (); Timer Timer(\u8ba1\u65f6\u5668)\u9002\u7528\u4e8e\u8bb0\u5f55\u8017\u65f6\u6bd4\u8f83\u77ed\u7684\u4e8b\u4ef6\u7684\u6267\u884c\u65f6\u95f4\uff0c\u901a\u8fc7\u65f6\u95f4\u5206\u5e03\u5c55\u793a\u4e8b\u4ef6\u7684\u5e8f\u5217\u548c\u53d1\u751f\u9891\u7387\u3002 \u4f7f\u7528\u573a\u666f: \u6839\u636e\u4e2a\u4eba\u7ecf\u9a8c\u548c\u5b9e\u8df5\uff0c\u603b\u7ed3\u5982\u4e0b: 1\u3001\u8bb0\u5f55\u6307\u5b9a\u65b9\u6cd5\u7684\u6267\u884c\u65f6\u95f4\u7528\u4e8e\u5c55\u793a\u3002 2\u3001\u8bb0\u5f55\u4e00\u4e9b\u4efb\u52a1\u7684\u6267\u884c\u65f6\u95f4\uff0c\u4ece\u800c\u786e\u5b9a\u67d0\u4e9b\u6570\u636e\u6765\u6e90\u7684\u901f\u7387\uff0c\u4f8b\u5982\u6d88\u606f\u961f\u5217\u6d88\u606f\u7684\u6d88\u8d39\u901f\u7387\u7b49\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 @Around ( value = \"execution(* com.tuling.service.*Service.*(..))\" ) public Object around ( ProceedingJoinPoint joinPoint ) throws Throwable { Signature signature = joinPoint . getSignature (); MethodSignature methodSignature = ( MethodSignature ) signature ; Method method = methodSignature . getMethod (); Timer timer = Metrics . timer ( \"method.cost.time\" , \"method.name\" , method . getName ()); ThrowableHolder holder = new ThrowableHolder (); Object result = timer . recordCallable (() \u2010 > { try { return joinPoint . proceed (); } catch ( Throwable e ) { holder . throwable = e ; } return null ; }); if ( null != holder . throwable ) { throw holder . throwable ; } return result ; } Gauge Gauge(\u4eea\u8868)\u662f\u83b7\u53d6\u5f53\u524d\u5ea6\u91cf\u8bb0\u5f55\u503c\u7684\u53e5\u67c4\uff0c\u4e5f\u5c31\u662f\u5b83\u8868\u793a\u4e00\u4e2a\u53ef\u4ee5\u4efb\u610f\u4e0a\u4e0b\u6d6e\u52a8\u7684\u5355\u6570\u503c\u5ea6\u91cfMeter\u3002 \u4f7f\u7528\u573a\u666f: \u6839\u636e\u4e2a\u4eba\u7ecf\u9a8c\u548c\u5b9e\u8df5\uff0c\u603b\u7ed3\u5982\u4e0b: \u6709\u81ea\u7136(\u7269\u7406)\u4e0a\u754c\u7684\u6d6e\u52a8\u503c\u7684\u76d1\u6d4b\uff0c\u4f8b\u5982\u7269\u7406\u5185\u5b58\u3001\u96c6\u5408\u3001\u6620\u5c04\u3001\u6570\u503c\u7b49\u3002 \u6709\u903b\u8f91\u4e0a\u754c\u7684\u6d6e\u52a8\u503c\u7684\u76d1\u6d4b\uff0c\u4f8b\u5982\u79ef\u538b\u7684\u6d88\u606f\u3001(\u7ebf\u7a0b\u6c60\u4e2d)\u79ef\u538b\u7684\u4efb\u52a1\u7b49\uff0c\u5176\u5b9e\u672c\u8d28\u4e5f\u662f\u96c6\u5408\u6216\u8005\u6620\u5c04\u7684\u76d1\u6d4b\u3002 1 Metrics . gauge ( \"message.gauge\" , Tags . of ( \"message.gauge\" , \"message.queue.size\" ), QUEUE , Collection :: size ); Summary Summary(\u6458\u8981)\u4e3b\u8981\u7528\u4e8e\u8ddf\u8e2a\u4e8b\u4ef6\u7684\u5206\u5e03\uff0c\u5728Micrometer\u4e2d\uff0c\u5bf9\u5e94\u7684\u7c7b\u662fDistributionSummary(\u5206\u53d1\u6458\u8981)\u3002\u5b83\u7684\u4f7f\u7528\u65b9\u5f0f\u548cTimer \u5341\u5206\u76f8\u4f3c\uff0c\u4f46\u662f\u5b83\u7684\u8bb0\u5f55\u503c\u5e76\u4e0d\u4f9d\u8d56\u4e8e\u65f6\u95f4\u5355\u4f4d\u3002 \u4f7f\u7528\u573a\u666f: \u6839\u636e\u4e2a\u4eba\u7ecf\u9a8c\u548c\u5b9e\u8df5\uff0c\u603b\u7ed3\u5982\u4e0b: \u4e0d\u4f9d\u8d56\u4e8e\u65f6\u95f4\u5355\u4f4d\u7684\u8bb0\u5f55\u503c\u7684\u6d4b\u91cf\uff0c\u4f8b\u5982\u670d\u52a1\u5668\u6709\u6548\u8d1f\u8f7d\u503c\uff0c\u7f13\u5b58\u7684\u547d\u4e2d\u7387\u7b49\u3002 1 DistributionSummary summary = Metrics . summary ( \"test.summary\" ); 2 summary . record ( 1 ); \u5176\u4ed6\u65b9\u5f0f: 1 2 3 4 5 6 7 8 9 10 11 12 class MyService { Counter counter ; public CityServicimpl ( MeterRegistry meterRegistry ){ // http://localhost:8080/actuator/metrics/cityService.saveCity.count counter = meterRegistry . counter ( \"cityService.saveCity.count\" ); } public void saveCity ( City city ) { 10 counter . increment (); cityMapper . insert ( city ); } } \u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f 1 2 3 4 @Bean MeterBinder queueSize ( Queue queue ) { return ( registry ) \u2010 > Gauge . builder ( \"queueSize\" , queue :: size ). register ( registry ); } 4 \u3001\u5b9a\u5236Endpoint 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 @Component @Endpoint ( id = \"myservice\" ) public class MyServiceEndPoint { @ReadOperation public Map getDockerInfo (){ //\u7aef\u70b9\u7684\u8bfb\u64cd\u4f5c http://localhost:8080/actuator/myservice return Collections . singletonMap ( \"dockerInfo\" , \"docker stated...\" ); } @WriteOperation public void stopDoucker (){ System . out . println ( \"docker stopped...\" ); } } \u573a\u666f:\u5f00\u53d1ReadinessEndpoint\u6765\u7ba1\u7406\u7a0b\u5e8f\u662f\u5426\u5c31\u7eea\uff0c\u6216\u8005LivenessEndpoint\u6765\u7ba1\u7406\u7a0b\u5e8f\u662f\u5426\u5b58\u6d3b\u3002","title":"10SpringBoot Actuator\u6307\u6807\u76d1\u63a7"},{"location":"SpringCloudAlibaba/10SpringBoot%20Actuator%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7/#1","text":"\u4e3b\u8981\u8fd0\u7528\u5728\u5fae\u670d\u52a1\u67b6\u6784\uff0c\u6240\u4ee5\u6211\u5efa\u8bae\u4f60\u5148\u5b66\u5fae\u670d\u52a1\uff0c\u5426\u5219\u53ef\u80fdget\u4e0d\u5230\u5b83\u7684\u7528\u5904\uff0c\u53ea\u6709\u5927\u578b\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u624d\u4f1a\u7528\u5230\u6307\u6807\u76d1\u63a7... \u5bf9\u4e8e\u4e00\u4e2a\u5927\u578b\u7684\u51e0\u5341\u4e2a\u3001\u51e0\u767e\u4e2a\u5fae\u670d\u52a1\u6784\u6210\u7684\u5fae\u670d\u52a1\u67b6\u6784\u7cfb\u7edf\uff0c\u5728\u7ebf\u4e0a\u65f6\u901a\u5e38\u4f1a\u9047\u5230\u4e0b\u9762\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u5982: \u5982\u4f55\u77e5\u9053\u54ea\u4e9b\u670d\u52a1\u9664\u4e86\u95ee\u9898\uff0c\u5982\u4f55\u5feb\u901f\u5b9a\u4f4d? (\u5065\u5eb7\u72b6\u51b5) \u5982\u4f55\u7edf\u4e00\u76d1\u63a7\u5404\u4e2a\u5fae\u670d\u52a1\u7684\u6027\u80fd\u6307\u6807(\u5185\u5b58\u3001jvm\u3001\u5e76\u53d1\u6570\u3001\u7ebf\u7a0b\u6c60\u3001Http \u8bf7\u6c42\u7edf\u8ba1) \u5982\u4f55\u7edf\u4e00\u7ba1\u7406\u5404\u4e2a\u5fae\u670d\u52a1\u7684\u65e5\u5fd7?(\u5207\u6362\u7ebf\u4e0a\u65e5\u5fd7\u7b49\u7ea7\uff0c\u5feb\u901f\u641c\u7d22\u65e5\u5fd7...) \u5982\u4f55\u4f18\u96c5\u7ba1\u7406\u670d\u52a1\u4e0b\u7ebf(\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b\u4e0d\u53d1\u751f\u4e2d\u65ad) So: \u5728\u8fd9\u79cd\u5927\u578b\u5206\u5e03\u5f0f\u5e94\u7528\u7684\u73af\u5883\u4e0b\uff0c\u6211\u4eec\u5982\u4f55\u80fd\u591f\u5feb\u901f\u53d1\u73b0\u95ee\u9898\u3001\u5feb\u901f\u89e3\u51b3\u95ee\u9898\uff0c \u5fc5\u987b\u8981\u6709\u76d1\u63a7\u5e73\u53f0\u3001(\u94fe\u8def\u8ffd\u8e2a\u3001\u65e5\u5fd7)","title":"1\u3001\u7b80\u4ecb"},{"location":"SpringCloudAlibaba/10SpringBoot%20Actuator%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7/#2springboot-actuator","text":"\u4ecb\u7ecd:SpringBoot\u81ea\u5e26\u76d1\u63a7\u529f\u80fdActuator\uff0c\u53ef\u4ee5\u5e2e\u52a9\u5b9e\u73b0\u5bf9\u7a0b\u5e8f\u5185\u90e8\u8fd0\u884c\u60c5\u51b5\u76d1\u63a7\uff0c\u6bd4\u5982\u76d1\u63a7\u72b6\u51b5\u3001Bean\u52a0\u8f7d\u60c5\u51b5\u3001\u73af\u5883\u53d8 \u91cf\u3001\u65e5\u5fd7\u4fe1\u606f\u3001\u7ebf\u7a0b\u4fe1\u606f\u7b49 \u5b9e\u73b0: 1 2 3 4 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring\u2010boot\u2010starter\u2010actuator </artifactId> </dependency> \u5f15\u5165\u573a\u666f \u8bbf\u95ee http://localhost:8080/actuator/** \u66b4\u9732\u6240\u6709\u76d1\u63a7\u4fe1\u606f\u4e3aHTTP 1 2 3 4 5 6 management : endpoints : enabled\u2010by\u2010default : true # \u9ed8\u8ba4\u5f00\u542f\u6240\u6709\u76d1\u63a7\u7aef\u70b9 web : exposure : include : '*' # \u4ee5web\u65b9\u5f0f\u66b4\u9732\u6240\u6709\u7aef\u70b9 \u6d4b\u8bd5 http://localhost:8080/actuator/beans http://localhost:8080/actuator/configprops http://localhost:8080/actuator/metrics http://localhost:8080/actuator/metrics/jvm.gc.pause http://localhost:8080/actuator/endpointName/detailPath Actuator Endpoint \u5e38\u7528\u7684\u7aef\u70b9 Health:\u76d1\u63a7\u72b6\u51b5 \u4e00\u4e2a\u7ec4\u4ef6\u6307\u6807\u72b6\u6001\u4e3aDown\u5219\u603b\u72b6\u6001\u4fe1\u606fDown\uff0c\u5f88\u591a\u7ec4\u4ef6\u4e2d\u90fd\u5b9a\u5236\u4e86Health\u5b50\u8282\u70b9\u6307\u6807: \u6bd4\u5982jdbc\u3001redis\u3001\u7b49\u7b49 shutdown:\u4f18\u96c5\u5173\u95ed \u6ce8\u610f\u9700\u8981web\u670d\u52a1\u5668\u7684\u652f\u6301 1 2 server : shutdown : graceful Metrics:\u8fd0\u884c\u65f6\u6307\u6807 Loggers:\u65e5\u5fd7\u8bb0\u5f55 1 2 3 logging: file: name: D:/logs/xushu.log","title":"2\u3001SpringBoot Actuator"},{"location":"SpringCloudAlibaba/10SpringBoot%20Actuator%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7/#3spring-boot-admin","text":"\u53ef\u89c6\u5316\u76d1\u63a7\u5e73\u53f0\uff0c \u662f\u4e00\u4e2a\u57fa\u4e8e Spring Boot Actuator \u7aef\u70b9\u4e4b\u4e0a\u7684 Vue.js \u5e94\u7528\u7a0b\u5e8f\u3002 https://github.com/codecentric/spring-boot-admin GitHub\u5b98\u65b9\u5730\u5740:https://github.com/codecentric/spring-boot-admin","title":"3\u3001Spring Boot Admin"},{"location":"SpringCloudAlibaba/10SpringBoot%20Actuator%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7/#31","text":"1\u3001\u8bbe\u7f6eSpring Boot Admin Server \u521b\u5efa\u670d\u52a1\u5668\u5e76\u5f15\u5165\u4f9d\u8d56\uff0c\u5982\u4e00\u4e2aspringboot\u9879\u76ee \u7248\u672c\u5efa\u8bae: Spring Boot 2.x=Spring Boot Admin 2.x (\u6bd4\u5982Spring Boot 2.3.x \u53ef\u4ee5\u7528Spring Boot Admin 2.3.x) 1 2 3 4 5 6 7 8 9 <dependency> <groupId> de.codecentric </groupId> <artifactId> spring\u2010boot\u2010admin\u2010starter\u2010server </artifactId> <version> 2.4.0\u2010SNAPSHOT </version> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring\u2010boot\u2010starter\u2010web </artifactId> </dependency> \u901a\u8fc7\u6dfb\u52a0@EnableAdminServer\u5230\u914d\u7f6e\u4e2d\u6765\u5f15\u5165Spring Boot Admin Server\u914d\u7f6e: 1 2 3 4 5 6 7 @SpringBootApplication @EnableAdminServer public class Boot05AdminserverApplication { public static void main ( String [] args ) { SpringApplication . run ( Boot05AdminserverApplication . class , args ); } } \u6ce8\u518c\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u5e76\u5f15\u5165\u4f9d\u8d56\uff0c\u5982\u4e00\u4e2aspringboot\u9879\u76ee 1 2 3 4 5 <dependency> <groupId> de.codecentric </groupId> <artifactId> spring\u2010boot\u2010admin\u2010starter\u2010client </artifactId> <version> 2.3.1 </version> </dependency> \u914d\u7f6eSpring Boot Admin Server\u7684URL\uff0c\u5ba2\u6237\u7aef\u8fde\u63a5Spring Boot Admin Server\u7684\u5730\u5740 1 spring.boot.admin.client.url=http://localhost:8080 management.endpoints.web.exposure.include=* \u82e5\u8fde\u63a5\u4e0d\u4e0a\uff0c\u53ef\u80fd\u662f\u5730\u5740\u4f7f\u7528\u8ba1\u7b97\u673a\u540d\u79f0\u4f5c\u4e3a\u5730\u5740\uff0c\u53ef\u4ee5\u6539\u53d8\u4f7f\u7528ip\u6ce8\u518c 1 2 3 4 5 6 7 8 9 spring : boot : admin : client : url : http://localhost:8080 instance : prefer\u2010ip : true # \u4f7f\u7528ip\u6ce8\u518c\u8fdb\u6765 application : name : boot\u201005\u2010web\u2010admin # \u5ba2\u6237\u7aef\u540d\u79f0 \u8bbf\u95ee \u670d\u52a1\u5668\u7684\u6839\u76ee\u5f55\u5982http://localhost:8080/ \u5373\u53ef\u6d4f\u89c8","title":"3.1\u3001\u4f7f\u7528:"},{"location":"SpringCloudAlibaba/10SpringBoot%20Actuator%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7/#32","text":"\u5982\u679c\u4f60\u6709\u6210\u767e\u4e0a\u5343\u4e2a\u5fae\u670d\u52a1\uff0c \u8fd9\u6837\u914d\u7f6e\u672a\u514d\u592a\u9ebb\u70e6\u3002\u5982\u679c\u60a8\u5df2\u7ecf\u4e3a\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4e86 Spring Cloud (Alibaba- nacos) Discovery\uff0c\u90a3\u4e48\u60a8\u5c31\u4e0d\u9700\u8981 SBA \u5ba2\u6237\u7aef\u3002\u53ea\u9700\u5728 Spring Boot Admin Server \u4e2d\u6dfb\u52a0\u4e00\u4e2a DiscoveryClient\uff0c\u5269\u4e0b\u7684\u5de5\u4f5c\u7531\u6211\u4eec\u7684 AutoConfiguration \u5b8c\u6210\u3002 \u4e0b\u9762\u7684\u6b65\u9aa4\u4f7f\u7528 Nacos\uff0c\u4f46\u662f\u4e5f\u652f\u6301\u5176\u4ed6 Spring Discovery\u5b9e\u73b0\u3002 SBA\u670d\u52a1\u7aef: \u6dfb\u52a0\u4f9d\u8d56 1 2 3 4 <!\u2010\u2010nacos\u2010\u670d\u52a1\u6ce8\u518c\u53d1\u73b0\u2010\u2010> <dependency> <groupId> com.alibaba.cloud </groupId> <artifactId> spring\u2010cloud\u2010starter\u2010alibaba\u2010nacos\u2010discovery </artifactId> 5 </dependency> \u914d\u7f6eNacos ```yaml spring: cloud: nacos: discovery: server\u2010addr: 127.0.0.1:8848 username: nacos password: nacos application: name: spring\u2010boot\u2010admin\u2010server # \u4e5f\u4f1a\u5c06SBA\u670d\u52a1\u914d\u7f6e\u4e3a\u5ba2\u6237\u7aef\uff0c \u6240\u4ee5\u4e5f\u53ef\u4ee5\u914d\u7f6e\u81ea\u5df1\u7684endpoint\u89c4\u5219(\u53ef\u9009) management: endpoints: web: exposure: include: '*' endpoint: health: show\u2010details: alwaysSBA\u5ba2\u6237\u7aef: ``` SBA\u5ba2\u6237\u7aef: \u4f9d\u8d56 \u53ea\u9700\u6dfb\u52a0actuator\u5373\u53ef 1 2 3 4 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring\u2010boot\u2010starter\u2010actuator </artifactId> </dependency> \u914d\u7f6e \u5982\u9700\u516c\u5f00\u66f4\u591a\u7aef\u70b9:(\u4e0d\u914d\u7f6e\u8be5\u9009\u9879\u5219\u53ea\u663e\u793a(health\u548cinfo\u7aef\u70b9) 1 2 3 4 5 management : endpoints : web : exposure : include : '*'","title":"3.2\u3001\u901a\u8fc7\u6ce8\u518c\u4e2d\u5fc3\u96c6\u6210\u5ba2\u6237\u7aef"},{"location":"SpringCloudAlibaba/10SpringBoot%20Actuator%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7/#33","text":"SBA\u670d\u52a1\u7aef\u5b89\u5168 spring-boot-admin-server-ui \u63d0\u4f9b\u4e86\u4e00\u4e2a\u767b\u5f55\u9875\u9762\u548c\u4e00\u4e2a\u6ce8\u9500\u6309\u94ae\u3001\u53ef\u4ee5\u7ed3\u5408SpringSecurity\u89e3\u51b3\u8eab\u4efd\u9a8c\u8bc1\u548c \u6388\u6743\u3002 Spring Security \u914d\u7f6e\u5982\u4e0b: \u4f9d\u8d56: 1 2 3 4 5 <!\u2010\u2010\u5b89\u5168\u95ee\u9898\u2010\u2010> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring\u2010boot\u2010starter\u2010security </artifactId> </dependency> \u914d\u7f6e\u7c7b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 @Configuration ( proxyBeanMethods = false ) public class SecuritySecureConfig extends WebSecurityConfigurerAdapter { private final AdminServerProperties adminServer ; private final SecurityProperties security ; public SecuritySecureConfig ( AdminServerProperties adminServer , SecurityProperties security ) { this . adminServer = adminServer ; this . security = security ; } @Override protected void configure ( HttpSecurity http ) throws Exception { SavedRequestAwareAuthenticationSuccessHandler successHandler = new SavedRequestAwareAuthenticationSuccessHandler (); successHandler . setTargetUrlParameter ( \"redirectTo\" ); successHandler . setDefaultTargetUrl ( this . adminServer . path ( \"/\" )); http . authorizeRequests ( ( authorizeRequests ) -> authorizeRequests . antMatchers ( this . adminServer . path ( \"/assets/**\" )). permitAll () . antMatchers ( this . adminServer . path ( \"/actuator/info\" )). permitAll () . antMatchers ( this . adminServer . path ( \"/actuator/health\" )). permitAll () . antMatchers ( this . adminServer . path ( \"/login\" )). permitAll (). anyRequest (). authenticated () ). formLogin ( ( formLogin ) -> formLogin . loginPage ( this . adminServer . path ( \"/login\" )). successHandler ( successHandler ). and () ). logout (( logout ) -> logout . logoutUrl ( this . adminServer . path ( \"/logout\" ))). httpBasic ( Customizer . withDefaults ()) . csrf (( csrf ) -> csrf . csrfTokenRepository ( CookieCsrfTokenRepository . withHttpOnlyFalse ()) . ignoringRequestMatchers ( new AntPathRequestMatcher ( this . adminServer . path ( \"/instances\" ), HttpMethod . POST . toString ()), new AntPathRequestMatcher ( this . adminServer . path ( \"/instances/*\" ), HttpMethod . DELETE . toString ()), new AntPathRequestMatcher ( this . adminServer . path ( \"/actuator/**\" )) )) . rememberMe (( rememberMe ) -> rememberMe . key ( UUID . randomUUID (). toString ()). tokenValiditySeconds ( 1209600 )); } // Required to provide UserDetailsService for \"remember functionality\" @Override protected void configure ( AuthenticationManagerBuilder auth ) throws Exception { auth . inMemoryAuthentication (). withUser ( security . getUser (). getName ()) . password ( \"{noop}\" + security . getUser (). getPassword ()). roles ( \"USER\" ); } } \u914d\u7f6e\u4fe1\u606f: 1 2 spring.security.user.name=xushu spring.security.user.password=xushu \u8fd0\u884c\u63d0\u793a\u767b\u5f55: \u8f93\u5165\u914d\u7f6e\u7684name/password\u5373\u53ef SBA\u5ba2\u6237\u7aef \u5982\u679c\u670d\u52a1\u7aef\u4e0d\u662f\u901a\u8fc7\u6ce8\u518c\u4e2d\u5fc3\u8fdb\u884c\u83b7\u53d6\u5ba2\u6237\u7aef \uff0c\u9700\u8981\u5355\u72ec\u4e3a\u5ba2\u6237\u7aef\u914d\u7f6e\uff0c\u56e0\u4e3a\u4e0d\u914d\u7f6e\u5ba2\u6237\u7aef\u65e0\u6cd5\u5411\u670d\u52a1\u7aef\u6ce8\u518c\u5e94\u7528( \u6ca1\u6709\u914d\u7f6e\u4e0d\u4f1a\u62a5 \u9519\uff0c\u53ea\u662f\u5728\u76d1\u63a7\u53f0\u770b\u4e0d\u5230\u5e94\u7528\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u6ce8\u518c\u8fdb\u53bb) 1 2 3 spring.boot.admin.client : username : xushu password : xushu","title":"3.3\u3001\u5b89\u5168\u9632\u62a4"},{"location":"SpringCloudAlibaba/10SpringBoot%20Actuator%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7/#34","text":"\u5982\u679c\u670d\u52a1\u4e0b\u7ebf\uff0c\u4f1a\u8fdb\u884c\u90ae\u4ef6\u901a\u77e5 \u5728spring boot amdin \u670d\u52a1\u7aef\u4fee\u6539 pom\u65b0\u589e 1 2 3 4 5 <!--\u90ae\u4ef6\u901a\u77e5--> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-mail </artifactId> </dependency> \u914d\u7f6e\u6587\u4ef6application.yml\u52a0\u5165: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 spring : mail : # \u53d1\u4ef6\u4eba\u4f7f\u7528\u7684qq\u90ae\u7bb1\u670d\u52a1 host : smtp.qq.com username : tulingxushu@foxmail.com # \u6388\u6743\u7801\uff0c\u4e0d\u662f\u5bc6\u7801\uff0c\u5728qq\u90ae\u7bb1\u8bbe\u7f6e-\u8d26\u53f7\u91cc\u9762\u6709\u751f\u6210\u6388\u6743\u7801 password : bktymeooyuapggbe boot : admin : notify : mail : # \u6536\u4ef6\u4eba\uff0c\u591a\u4e2a\u4e2d\u95f4\u7528,\u5206\u9694 to : tulingxushu@foxmail.com # \u53d1\u4ef6\u4eba from : tulingxushu@foxmail.com \u90ae\u7bb1\u8d26\u6237\u5f00\u542f\u5fc5\u8981\u7684\u8bbe\u7f6e--->\u8d26\u6237 \u91cd\u542f\u670d\u52a1\uff0c\u7136\u540e\u5c06\u4e00\u4e2a\u5ba2\u6237\u7aef\u5173\u95ed \uff08\u4e3a\u4e86\u62a5\u9519\uff0c\u53d1\u9001\u90ae\u4ef6\uff09","title":"3.4\u3001\u90ae\u4ef6\u901a\u77e5"},{"location":"SpringCloudAlibaba/10SpringBoot%20Actuator%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7/#4-endpoint","text":"","title":"4\u3001\u5b9a\u5236 Endpoint"},{"location":"SpringCloudAlibaba/10SpringBoot%20Actuator%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7/#1-health","text":"1 2 3 4 5 6 7 8 9 10 11 12 @Component public class MyHealthIndicator implements HealthIndicator { @Override public Health health () { int errorCode = check (); // perform some specific health check if ( errorCode != 0 ) { return Health . down (). withDetail ( \"Error Code\" , errorCode ). build (); } return Health . up (). build (); } } \u6784\u5efaHealth 1 2 3 4 5 Health build = Health . down () . withDetail ( \"msg\" , \"error service\" ) . withDetail ( \"code\" , \"500\" ) . withException ( new RuntimeException ()) . build (); 1 2 3 4 management : health : enabled : true show\u2010details : always #\u603b\u662f\u663e\u793a\u8be6\u7ec6\u4fe1\u606f\u3002\u53ef\u663e\u793a\u6bcf\u4e2a\u6a21\u5757\u7684\u72b6\u6001\u4fe1\u606f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 @Component public class MyComHealthIndicator extends AbstractHealthIndicator { //\u771f\u5b9e\u7684\u68c0\u67e5\u65b9\u6cd5 @Override protected void doHealthCheck ( Health . Builder builder ) throws Exception { //mongodb \u83b7\u53d6\u8fde\u63a5\u8fdb\u884c\u6d4b\u8bd5 Map < String , Object > map = new HashMap <> (); if ( 1 == 1 ) { // builder.up();//\u5065\u5eb7 builder.status(Status.UP); map.put(\"count\",1); map.put(\"ms\",100); } else { // builder.down();//\u4e0d\u5065\u5eb7 builder . status ( Status . DOWN ); map . put ( \"error\" , \"\u8fde\u63a5\u8d85\u65f6\" ); map . put ( \"ms\" , 3000 ); } builder . withDetail ( \"code\" , 100 ). withDetails ( map ); } }","title":"1\u3001\u5b9a\u5236 Health \u4fe1\u606f"},{"location":"SpringCloudAlibaba/10SpringBoot%20Actuator%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7/#2info","text":"\u5e38\u7528\u4e24\u79cd\u65b9\u5f0f 1\u3001\u7f16\u5199\u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 info : appName : boot\u2010admin version : 2.0.1 mavenProjectName : @ project.artifactId@ # \u4f7f\u7528@@\u53ef\u4ee5\u83b7\u53d6maven\u7684pom\u6587\u4ef6\u503c mavenProjectVersion: @project.version@ 2\u3001\u7f16\u5199InfoContributor 1 2 3 4 5 6 7 8 9 10 @Component public class AppInfo implements InfoContributor { @Override public void contribute ( Info . Builder builder ) { builder . withDetail ( \"msg\" , \"hello\" ) . withDetail ( \"hello\" , \"world\" ) . withDetails ( Collections . singletonMap ( \"world\" , \"6661121\" )); } } http://localhost:8080/actuator/info \u4f1a\u8f93\u51fa\u4ee5\u4e0a\u65b9\u5f0f\u8fd4\u56de\u7684\u6240\u6709info\u4fe1\u606f","title":"2\u3001\u5b9a\u5236info\u4fe1\u606f"},{"location":"SpringCloudAlibaba/10SpringBoot%20Actuator%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7/#3metrics","text":"Spring Boot Actuator \u4e3a Micrometer \u63d0\u4f9b\u4e86\u4f9d\u8d56\u7ba1\u7406\u548c\u81ea\u52a8\u914d\u7f6e\u529f\u80fd\uff0cMicrometer \u662f\u4e00\u4e2a\u5e94\u7528\u6307\u6807 facade(\u9762 \u95e8)\uff0c\u652f\u6301\u591a\u79cd\u76d1\u63a7\u7cfb\u7edf\uff0c\u5305\u62ec: AppOptics\uff0cAzure Monitor\uff0cNetflix Atlas\uff0cCloudWatch\uff0cDatadog\uff0cDynatrace\uff0cElastic\uff0cGanglia\uff0c Graphite\uff0cHumio\uff0cInflux/Telegraf\uff0cJMX\uff0cKairosDB\uff0cNew Relic\uff0cPrometheus\uff0cSignalFx\uff0cGoogle Stackdriver\uff0cStatsD\uff0c\u548c Wavefront\u3002 \u63d0\u4f9b\u4e00\u4e9b\u5217api\u4f9b\u6211\u4eec\u64cd\u4f5c\u6307\u6807 \u63d0\u4f9b\u4e86\u7f13\u5b58\u3001\u7c7b\u52a0\u8f7d\u5668\u3001GC\u3001jvm\u5185\u5b58\\cpu \u5229\u7528\u7387 \u7ebf\u7a0b...\u6307\u6807 \u80fd\u591f\u5f00\u7bb1\u5373\u7528 \u5df2\u7ecf\u878d\u5165springboot Actuator https://docs.spring.io/spring-boot/docs/2.3.12.RELEASE/reference/html/production-ready-features.html#production-ready-metrics-meter JVM\u5ea6\u91cf\uff0c\u62a5\u544a\u5229\u7528\u7387(JVM metrics, report utilization of): \u5404\u79cd\u5185\u5b58\u548c\u7f13\u51b2\u6c60(Various memory and buffer pools) \u4e0e\u5783\u573e\u6536\u96c6\u6709\u5173\u7684\u7edf\u8ba1\u6570\u636e(Statistics related to garbage collection) \u7ebf\u7a0b\u5229\u7528\u7387(Threads utilization) \u52a0\u8f7d/\u5378\u8f7d\u7684\u7c7b\u6570(Number of classes loaded/unloaded) CPU \u6307\u6807-CPU metrics \u6587\u4ef6\u63cf\u8ff0\u7b26\u5ea6\u91cf-File descriptor metrics Kafka \u7684\u6d88\u8d39\u8005\u3001\u751f\u4ea7\u8005\u548c\u6d41\u91cf\u6307\u6807-Kafka consumer, producer, and streams metrics Log4j2\u5ea6\u91cf: \u8bb0\u5f55\u6bcf\u4e2alevel\u8bb0\u5f55\u5728 Log4j2\u4e2d\u7684\u4e8b\u4ef6\u6570\u91cf-Log4j2 metrics: record the number of events logged to Log4j2 at each level Logback\u5ea6\u91cf: \u8bb0\u5f55\u6bcf\u4e2a\u7ea7\u522b\u767b\u5f55\u5230 Logback \u7684\u4e8b\u4ef6\u6570\u91cf \u2014Logback metrics: record the number ofevents logged to Logback at each level \u6b63\u5e38\u8fd0\u884c\u65f6\u95f4\u6307\u6807: \u62a5\u544a\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4\u6307\u6807\u548c\u8868\u793a\u5e94\u7528\u7a0b\u5e8f\u7edd\u5bf9\u542f\u52a8\u65f6\u95f4\u7684\u56fa\u5b9a\u6307\u6807\u2014Uptime metrics: report a gauge for uptime and a fixed gauge representing the application\u2019s absolute start time Tomcat \u6307\u6807\u2014Tomcat metrics (server.tomcat.mbeanregistry.enabled must be set to true for all Tomcat metrics to be registered) Spring\u6574\u5408\u6307\u6807 Spring Integration metrics Spring Integration \u5ea6\u91cf","title":"3\u3001\u5b9a\u5236Metrics\u4fe1\u606f"},{"location":"SpringCloudAlibaba/10SpringBoot%20Actuator%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7/#2metrics","text":"\u5b9a\u5236\u8ba1\u91cf\u65b9\u6cd5: Counter Counter\u662f\u4e00\u79cd\u6bd4\u8f83\u7b80\u5355\u7684Meter\uff0c\u5b83\u662f\u4e00\u79cd\u5355\u503c\u7684\u5ea6\u91cf\u7c7b\u578b\uff0c\u6216\u8005\u8bf4\u662f\u4e00\u4e2a\u5355\u503c\u8ba1\u6570\u5668\u3002 \u4f7f\u7528\u573a\u666f: Counter\u7684\u4f5c\u7528\u662f\u8bb0\u5f55XXX\u7684\u603b\u91cf\u6216\u8005\u8ba1\u6570\u503c\uff0c\u9002\u7528\u4e8e\u4e00\u4e9b\u589e\u957f\u7c7b\u578b\u7684\u7edf\u8ba1\uff0c\u4f8b\u5982\u4e0b\u5355\u3001\u652f\u4ed8\u6b21\u6570\u3001Http\u8bf7\u6c42\u603b\u91cf\u8bb0\u5f55\u7b49\u7b49\uff0c 1 2 1 //\u8bb0\u5f55\u4e0b\u5355\u603b\u6570 2 Metrics . counter ( \"order.count\" , \"order.channel\" , order . getChannel ()). increment (); Timer Timer(\u8ba1\u65f6\u5668)\u9002\u7528\u4e8e\u8bb0\u5f55\u8017\u65f6\u6bd4\u8f83\u77ed\u7684\u4e8b\u4ef6\u7684\u6267\u884c\u65f6\u95f4\uff0c\u901a\u8fc7\u65f6\u95f4\u5206\u5e03\u5c55\u793a\u4e8b\u4ef6\u7684\u5e8f\u5217\u548c\u53d1\u751f\u9891\u7387\u3002 \u4f7f\u7528\u573a\u666f: \u6839\u636e\u4e2a\u4eba\u7ecf\u9a8c\u548c\u5b9e\u8df5\uff0c\u603b\u7ed3\u5982\u4e0b: 1\u3001\u8bb0\u5f55\u6307\u5b9a\u65b9\u6cd5\u7684\u6267\u884c\u65f6\u95f4\u7528\u4e8e\u5c55\u793a\u3002 2\u3001\u8bb0\u5f55\u4e00\u4e9b\u4efb\u52a1\u7684\u6267\u884c\u65f6\u95f4\uff0c\u4ece\u800c\u786e\u5b9a\u67d0\u4e9b\u6570\u636e\u6765\u6e90\u7684\u901f\u7387\uff0c\u4f8b\u5982\u6d88\u606f\u961f\u5217\u6d88\u606f\u7684\u6d88\u8d39\u901f\u7387\u7b49\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 @Around ( value = \"execution(* com.tuling.service.*Service.*(..))\" ) public Object around ( ProceedingJoinPoint joinPoint ) throws Throwable { Signature signature = joinPoint . getSignature (); MethodSignature methodSignature = ( MethodSignature ) signature ; Method method = methodSignature . getMethod (); Timer timer = Metrics . timer ( \"method.cost.time\" , \"method.name\" , method . getName ()); ThrowableHolder holder = new ThrowableHolder (); Object result = timer . recordCallable (() \u2010 > { try { return joinPoint . proceed (); } catch ( Throwable e ) { holder . throwable = e ; } return null ; }); if ( null != holder . throwable ) { throw holder . throwable ; } return result ; } Gauge Gauge(\u4eea\u8868)\u662f\u83b7\u53d6\u5f53\u524d\u5ea6\u91cf\u8bb0\u5f55\u503c\u7684\u53e5\u67c4\uff0c\u4e5f\u5c31\u662f\u5b83\u8868\u793a\u4e00\u4e2a\u53ef\u4ee5\u4efb\u610f\u4e0a\u4e0b\u6d6e\u52a8\u7684\u5355\u6570\u503c\u5ea6\u91cfMeter\u3002 \u4f7f\u7528\u573a\u666f: \u6839\u636e\u4e2a\u4eba\u7ecf\u9a8c\u548c\u5b9e\u8df5\uff0c\u603b\u7ed3\u5982\u4e0b: \u6709\u81ea\u7136(\u7269\u7406)\u4e0a\u754c\u7684\u6d6e\u52a8\u503c\u7684\u76d1\u6d4b\uff0c\u4f8b\u5982\u7269\u7406\u5185\u5b58\u3001\u96c6\u5408\u3001\u6620\u5c04\u3001\u6570\u503c\u7b49\u3002 \u6709\u903b\u8f91\u4e0a\u754c\u7684\u6d6e\u52a8\u503c\u7684\u76d1\u6d4b\uff0c\u4f8b\u5982\u79ef\u538b\u7684\u6d88\u606f\u3001(\u7ebf\u7a0b\u6c60\u4e2d)\u79ef\u538b\u7684\u4efb\u52a1\u7b49\uff0c\u5176\u5b9e\u672c\u8d28\u4e5f\u662f\u96c6\u5408\u6216\u8005\u6620\u5c04\u7684\u76d1\u6d4b\u3002 1 Metrics . gauge ( \"message.gauge\" , Tags . of ( \"message.gauge\" , \"message.queue.size\" ), QUEUE , Collection :: size ); Summary Summary(\u6458\u8981)\u4e3b\u8981\u7528\u4e8e\u8ddf\u8e2a\u4e8b\u4ef6\u7684\u5206\u5e03\uff0c\u5728Micrometer\u4e2d\uff0c\u5bf9\u5e94\u7684\u7c7b\u662fDistributionSummary(\u5206\u53d1\u6458\u8981)\u3002\u5b83\u7684\u4f7f\u7528\u65b9\u5f0f\u548cTimer \u5341\u5206\u76f8\u4f3c\uff0c\u4f46\u662f\u5b83\u7684\u8bb0\u5f55\u503c\u5e76\u4e0d\u4f9d\u8d56\u4e8e\u65f6\u95f4\u5355\u4f4d\u3002 \u4f7f\u7528\u573a\u666f: \u6839\u636e\u4e2a\u4eba\u7ecf\u9a8c\u548c\u5b9e\u8df5\uff0c\u603b\u7ed3\u5982\u4e0b: \u4e0d\u4f9d\u8d56\u4e8e\u65f6\u95f4\u5355\u4f4d\u7684\u8bb0\u5f55\u503c\u7684\u6d4b\u91cf\uff0c\u4f8b\u5982\u670d\u52a1\u5668\u6709\u6548\u8d1f\u8f7d\u503c\uff0c\u7f13\u5b58\u7684\u547d\u4e2d\u7387\u7b49\u3002 1 DistributionSummary summary = Metrics . summary ( \"test.summary\" ); 2 summary . record ( 1 ); \u5176\u4ed6\u65b9\u5f0f: 1 2 3 4 5 6 7 8 9 10 11 12 class MyService { Counter counter ; public CityServicimpl ( MeterRegistry meterRegistry ){ // http://localhost:8080/actuator/metrics/cityService.saveCity.count counter = meterRegistry . counter ( \"cityService.saveCity.count\" ); } public void saveCity ( City city ) { 10 counter . increment (); cityMapper . insert ( city ); } } \u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f 1 2 3 4 @Bean MeterBinder queueSize ( Queue queue ) { return ( registry ) \u2010 > Gauge . builder ( \"queueSize\" , queue :: size ). register ( registry ); }","title":"2\u3001\u589e\u52a0\u5b9a\u5236Metrics"},{"location":"SpringCloudAlibaba/10SpringBoot%20Actuator%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7/#4-endpoint_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 @Component @Endpoint ( id = \"myservice\" ) public class MyServiceEndPoint { @ReadOperation public Map getDockerInfo (){ //\u7aef\u70b9\u7684\u8bfb\u64cd\u4f5c http://localhost:8080/actuator/myservice return Collections . singletonMap ( \"dockerInfo\" , \"docker stated...\" ); } @WriteOperation public void stopDoucker (){ System . out . println ( \"docker stopped...\" ); } } \u573a\u666f:\u5f00\u53d1ReadinessEndpoint\u6765\u7ba1\u7406\u7a0b\u5e8f\u662f\u5426\u5c31\u7eea\uff0c\u6216\u8005LivenessEndpoint\u6765\u7ba1\u7406\u7a0b\u5e8f\u662f\u5426\u5b58\u6d3b\u3002","title":"4 \u3001\u5b9a\u5236Endpoint"}]}