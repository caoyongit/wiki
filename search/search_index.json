{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout 1 2 3 4 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"1 2 3 4 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"\u6709\u9053\u4e91\u94fe\u63a5\uff1ahttp://note.youdao.com/noteshare? id=663444a188ed9057dffd07cfbeed43cc&sub=D6060DA6961E42D699A3B7DDB2118F93\uff08 \u590d\u5236\u94fe\u63a5\u5230\u6d4f\u89c8\u5668\u7684\u65f6\u5019\u6ce8\u610f\u8f6c\u884c\u7684\u7a7a\u683c\u54e6\uff09 \u4f5c\u8005\uff1a\u5468\u745c \u524d\u9762\u4e24\u8282\u8bfe\uff0c\u6211\u4eec\u5927\u6982\u4e86\u89e3\u4e86Spring\u4e2d\u7684\u4e00\u4e9b\u6982\u5ff5\u548c\u5e95\u5c42\u5de5\u4f5c\u6d41\u7a0b\uff0c\u672c\u8282\u8bfe\u5f00\u59cb\u5c06\u771f\u6b63\u8bb2\u4e00\u4e9bSpring \u4e2d\u7684\u6982\u5ff5\u548c\u5de5\u4f5c\u6d41\u7a0b\u3002 \u672c\u8282\u8bfe\u7684\u5185\u5bb9\uff0c\u662f\u540e\u7eed\u770bSpring\u6e90\u7801\u6240\u5fc5\u5907\u7684\uff0c\u9632\u6b62\u540e\u7eed\u770b\u6e90\u7801\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9047\u5230\u4e0d\u4f1a\u7684\u6982\u5ff5\u5f97\u5355\u72ec\u8df3 \u51fa\u6765\u5b66\u4e60\u3002 BeanDefinition BeanDefinition\u8868\u793aBean\u5b9a\u4e49\uff0cBeanDefinition\u4e2d\u5b58\u5728\u5f88\u591a\u5c5e\u6027\u7528\u6765\u63cf\u8ff0\u4e00\u4e2aBean\u7684\u7279\u70b9\u3002\u6bd4\u5982\uff1a class\uff0c\u8868\u793aBean\u7c7b\u578b scope\uff0c\u8868\u793aBean\u4f5c\u7528\u57df\uff0c\u5355\u4f8b\u6216\u539f\u578b\u7b49 lazyInit\uff1a\u8868\u793aBean\u662f\u5426\u662f\u61d2\u52a0\u8f7d initMethodName\uff1a\u8868\u793aBean\u521d\u59cb\u5316\u65f6\u8981\u6267\u884c\u7684\u65b9\u6cd5 destroyMethodName\uff1a\u8868\u793aBean\u9500\u6bc1\u65f6\u8981\u6267\u884c\u7684\u65b9\u6cd5 \u8fd8\u6709\u5f88\u591a... \u5728Spring\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u901a\u8fc7\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u6765\u5b9a\u4e49Bean\uff1a 1. 2. @Bean 3. @Component(@Service,@Controller) \u8fd9\u4e9b\uff0c\u6211\u4eec\u53ef\u4ee5\u79f0\u4e4b\u7533\u660e\u5f0f\u5b9a\u4e49Bean\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u7f16\u7a0b\u5f0f\u5b9a\u4e49Bean\uff0c\u90a3\u5c31\u662f\u76f4\u63a5\u901a\u8fc7BeanDefinition\uff0c\u6bd4\u5982\uff1a AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class); // \u751f\u6210\u4e00\u4e2aBeanDefinition\u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6ebeanClass\u4e3aUser.class\uff0c\u5e76\u6ce8\u518c\u5230ApplicationContext\u4e2d AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder.genericBeanDefinition().getBeanDefinition(); beanDefinition.setBeanClass(User.class); context.registerBeanDefinition(\"user\", beanDefinition); System.out.println(context.getBean(\"user\")); \u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7BeanDefinition\u8bbe\u7f6e\u4e00\u4e2aBean\u7684\u5176\u4ed6\u5c5e\u6027 beanDefinition.setScope(\"prototype\"); // \u8bbe\u7f6e\u4f5c\u7528\u57df beanDefinition.setInitMethodName(\"init\"); // \u8bbe\u7f6e\u521d\u59cb\u5316\u65b9\u6cd5 beanDefinition.setLazyInit(true); // \u8bbe\u7f6e\u61d2\u52a0\u8f7d \u548c\u7533\u660e\u5f0f\u4e8b\u52a1\u3001\u7f16\u7a0b\u5f0f\u4e8b\u52a1\u7c7b\u4f3c\uff0c\u901a\u8fc7\uff0c@Bean\uff0c@Component\u7b49\u7533\u660e\u5f0f\u65b9\u5f0f\u6240\u5b9a\u4e49\u7684 Bean\uff0c\u6700\u7ec8\u90fd\u4f1a\u88abSpring\u89e3\u6790\u4e3a\u5bf9\u5e94\u7684BeanDefinition\u5bf9\u8c61\uff0c\u5e76\u653e\u5165Spring\u5bb9\u5668\u4e2d\u3002 BeanDefinitionReader \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u4ecb\u7ecd\u51e0\u79cd\u5728Spring\u6e90\u7801\u4e2d\u6240\u63d0\u4f9b\u7684BeanDefinition\u8bfb\u53d6\u5668 \uff08BeanDefinitionReader\uff09\uff0c\u8fd9\u4e9bBeanDefinitionReader\u5728\u6211\u4eec\u4f7f\u7528Spring\u65f6\u7528\u5f97\u5c11\uff0c\u4f46\u5728Spring \u6e90\u7801\u4e2d\u7528\u5f97\u591a\uff0c\u76f8\u5f53\u4e8eSpring\u6e90\u7801\u7684\u57fa\u7840\u8bbe\u65bd\u3002 AnnotatedBeanDefinitionReader \u53ef\u4ee5\u76f4\u63a5\u628a\u67d0\u4e2a\u7c7b\u8f6c\u6362\u4e3aBeanDefinition\uff0c\u5e76\u4e14\u4f1a\u89e3\u6790\u8be5\u7c7b\u4e0a\u7684\u6ce8\u89e3\uff0c\u6bd4\u5982 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class); AnnotatedBeanDefinitionReader annotatedBeanDefinitionReader = new AnnotatedBeanDefinitionReader(context); // \u5c06User.class\u89e3\u6790\u4e3aBeanDefinition annotatedBeanDefinitionReader.register(User.class); System.out.println(context.getBean(\"user\")); \u6ce8\u610f\uff1a\u5b83\u80fd\u89e3\u6790\u7684\u6ce8\u89e3\u662f\uff1a@Conditional\uff0c@Scope\u3001@Lazy\u3001@Primary\u3001@DependsOn\u3001 @Role\u3001@Description XmlBeanDefinitionReader \u53ef\u4ee5\u89e3\u6790\u6807\u7b7e AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class); XmlBeanDefinitionReader xmlBeanDefinitionReader = new XmlBeanDefinitionReader(context); int i = xmlBeanDefinitionReader.loadBeanDefinitions(\"spring.xml\"); System.out.println(context.getBean(\"user\")); ClassPathBeanDefinitionScanner ClassPathBeanDefinitionScanner ClassPathBeanDefinitionScanner\u662f\u626b\u63cf\u5668\uff0c\u4f46\u662f\u5b83\u7684\u4f5c\u7528\u548cBeanDefinitionReader\u7c7b\u4f3c\uff0c\u5b83\u53ef\u4ee5 \u8fdb\u884c\u626b\u63cf\uff0c\u626b\u63cf\u67d0\u4e2a\u5305\u8def\u5f84\uff0c\u5bf9\u626b\u63cf\u5230\u7684\u7c7b\u8fdb\u884c\u89e3\u6790\uff0c\u6bd4\u5982\uff0c\u626b\u63cf\u5230\u7684\u7c7b\u4e0a\u5982\u679c\u5b58\u5728@Component \u6ce8\u89e3\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u8fd9\u4e2a\u7c7b\u89e3\u6790\u4e3a\u4e00\u4e2aBeanDefinition\uff0c\u6bd4\u5982\uff1a AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(); context.refresh(); ClassPathBeanDefinitionScanner scanner = new ClassPathBeanDefinitionScanner(context); scanner.scan(\"com.zhouyu\"); System.out.println(context.getBean(\"userService\")); BeanFactory BeanFactory\u8868\u793aBean\u5de5\u5382\uff0c\u6240\u4ee5\u5f88\u660e\u663e\uff0cBeanFactory\u4f1a\u8d1f\u8d23\u521b\u5efaBean\uff0c\u5e76\u4e14\u63d0\u4f9b\u83b7\u53d6Bean\u7684 API\u3002 \u800cApplicationContext\u662fBeanFactory\u7684\u4e00\u79cd\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u662f\u8fd9\u4e48\u5b9a\u4e49\u7684\uff1a public interface ApplicationContext extends EnvironmentCapable, ListableBeanFactory, HierarchicalBeanFactory, MessageSource, ApplicationEventPublisher, ResourcePatternResolver { ... } \u9996\u5148\uff0c\u5728Java\u4e2d\uff0c\u63a5\u53e3\u662f\u53ef\u4ee5\u591a\u7ee7\u627f\u7684\uff0c\u6211\u4eec\u53d1\u73b0ApplicationContext\u7ee7\u627f\u4e86ListableBeanFactory \u548cHierarchicalBeanFactory\uff0c\u800cListableBeanFactory\u548cHierarchicalBeanFactory\u90fd\u7ee7\u627f\u81f3 BeanFactory\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3aApplicationContext\u7ee7\u627f\u4e86BeanFactory\uff0c\u76f8\u5f53\u4e8e\u82f9\u679c\u7ee7\u627f\u6c34\u679c\uff0c \u5b9d\u9a6c\u7ee7\u627f\u6c7d\u8f66\u4e00\u6837\uff0cApplicationContext\u4e5f\u662fBeanFactory\u7684\u4e00\u79cd\uff0c\u62e5\u6709BeanFactory\u652f\u6301\u7684\u6240\u6709\u529f \u80fd\uff0c\u4e0d\u8fc7ApplicationContext\u6bd4BeanFactory\u66f4\u52a0\u5f3a\u5927\uff0cApplicationContext\u8fd8\u57fa\u7840\u4e86\u5176\u4ed6\u63a5\u53e3\uff0c\u4e5f \u5c31\u8868\u793aApplicationContext\u8fd8\u62e5\u6709\u5176\u4ed6\u529f\u80fd\uff0c\u6bd4\u5982MessageSource\u8868\u793a\u56fd\u9645\u5316\uff0c ApplicationEventPublisher\u8868\u793a\u4e8b\u4ef6\u53d1\u5e03\uff0cEnvironmentCapable\u8868\u793a\u83b7\u53d6\u73af\u5883\u53d8\u91cf\uff0c\u7b49\u7b49\uff0c\u5173\u4e8e ApplicationContext\u540e\u9762\u518d\u8be6\u7ec6\u8ba8\u8bba\u3002 \u5728Spring\u7684\u6e90\u7801\u5b9e\u73b0\u4e2d\uff0c\u5f53\u6211\u4eecnew\u4e00\u4e2aApplicationContext\u65f6\uff0c\u5176\u5e95\u5c42\u4f1anew\u4e00\u4e2aBeanFactory\u51fa \u6765\uff0c\u5f53\u4f7f\u7528ApplicationContext\u7684\u67d0\u4e9b\u65b9\u6cd5\u65f6\uff0c\u6bd4\u5982getBean()\uff0c\u5e95\u5c42\u8c03\u7528\u7684\u662fBeanFactory\u7684 getBean()\u65b9\u6cd5\u3002 \u5728Spring\u6e90\u7801\u4e2d\uff0cBeanFactory\u63a5\u53e3\u5b58\u5728\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5b9e\u73b0\u7c7b\u662f\uff1a DefaultListableBeanFactory\uff0c\u4e5f\u662f\u975e\u5e38\u6838\u5fc3\u7684\u3002 \u5177\u4f53\u91cd\u8981\u6027\uff0c\u968f\u7740\u540e\u7eed\u8bfe\u7a0b\u4f1a\u611f\u53d7\u66f4\u6df1\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6765\u4f7f\u7528DefaultListableBeanFactory\uff0c\u800c\u4e0d\u7528\u4f7f\u7528ApplicationContext\u7684\u67d0\u4e2a \u5b9e\u73b0\u7c7b\uff0c\u6bd4\u5982\uff1a DefaultListableBeanFactory beanFactory = new DefaultListableBeanFactory(); AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder.genericBeanDefinition().getBeanDefinition(); beanDefinition.setBeanClass(User.class); beanFactory.registerBeanDefinition(\"user\", beanDefinition); System.out.println(beanFactory.getBean(\"user\")); DefaultListableBeanFactory\u662f\u975e\u5e38\u5f3a\u5927\u7684\uff0c\u652f\u6301\u5f88\u591a\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b DefaultListableBeanFactory\u7684\u7c7b\u7ee7\u627f\u5b9e\u73b0\u7ed3\u6784\u6765\u770b \u8fd9\u90e8\u5206\u73b0\u5728\u770b\u4e0d\u61c2\u6ca1\u5173\u7cfb\uff0c\u6e90\u7801\u719f\u6089\u4e00\u70b9\u540e\u56de\u6765\u518d\u6765\u770b\u90fd\u53ef\u4ee5\u3002 \u5b83\u5b9e\u73b0\u4e86\u5f88\u591a\u63a5\u53e3\uff0c\u8868\u793a\uff0c\u5b83\u62e5\u6709\u5f88\u591a\u529f\u80fd\uff1a 1. AliasRegistry\uff1a\u652f\u6301\u522b\u540d\u529f\u80fd\uff0c\u4e00\u4e2a\u540d\u5b57\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a\u522b\u540d 2. BeanDefinitionRegistry\uff1a\u53ef\u4ee5\u6ce8\u518c\u3001\u4fdd\u5b58\u3001\u79fb\u9664\u3001\u83b7\u53d6\u67d0\u4e2aBeanDefinition 3. BeanFactory\uff1aBean\u5de5\u5382\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2abean\u7684\u540d\u5b57\u3001\u6216\u7c7b\u578b\u3001\u6216\u522b\u540d\u83b7\u53d6\u67d0\u4e2aBean\u5bf9\u8c61 4. SingletonBeanRegistry\uff1a\u53ef\u4ee5\u76f4\u63a5\u6ce8\u518c\u3001\u83b7\u53d6\u67d0\u4e2a\u5355\u4f8bBean 5. SimpleAliasRegistry\uff1a\u5b83\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0\u4e86AliasRegistry\u63a5\u53e3\u4e2d\u6240\u5b9a\u4e49\u7684\u529f\u80fd\uff0c\u652f\u6301\u522b\u540d\u529f\u80fd 6. ListableBeanFactory\uff1a\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e86\u5176\u4ed6\u529f\u80fd\uff0c\u53ef\u4ee5\u83b7\u53d6\u6240\u6709 BeanDefinition\u7684beanNames\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2a\u7c7b\u578b\u83b7\u53d6\u5bf9\u5e94\u7684beanNames\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2a\u7c7b \u578b\u83b7\u53d6{\u7c7b\u578b\uff1a\u5bf9\u5e94\u7684Bean}\u7684\u6620\u5c04\u5173\u7cfb 7. HierarchicalBeanFactory\uff1a\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u4e86\u83b7\u53d6\u7236BeanFactory\u7684\u529f\u80fd 8. DefaultSingletonBeanRegistry\uff1a\u5b83\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0\u4e86SingletonBeanRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u76f4 \u63a5\u6ce8\u518c\u3001\u83b7\u53d6\u67d0\u4e2a\u5355\u4f8bBean\u7684\u529f\u80fd 9. ConfigurableBeanFactory\uff1a\u5728HierarchicalBeanFactory\u548cSingletonBeanRegistry\u7684\u57fa\u7840\u4e0a\uff0c \u6dfb\u52a0\u4e86\u8bbe\u7f6e\u7236BeanFactory\u3001\u7c7b\u52a0\u8f7d\u5668\uff08\u8868\u793a\u53ef\u4ee5\u6307\u5b9a\u67d0\u4e2a\u7c7b\u52a0\u8f7d\u5668\u8fdb\u884c\u7c7b\u7684\u52a0\u8f7d\uff09\u3001\u8bbe\u7f6e Spring EL\u8868\u8fbe\u5f0f\u89e3\u6790\u5668\uff08\u8868\u793a\u8be5BeanFactory\u53ef\u4ee5\u89e3\u6790EL\u8868\u8fbe\u5f0f\uff09\u3001\u8bbe\u7f6e\u7c7b\u578b\u8f6c\u5316\u670d\u52a1\uff08\u8868\u793a \u8be5BeanFactory\u53ef\u4ee5\u8fdb\u884c\u7c7b\u578b\u8f6c\u5316\uff09\u3001\u53ef\u4ee5\u6dfb\u52a0BeanPostProcessor\uff08\u8868\u793a\u8be5BeanFactory\u652f\u6301 Bean\u7684\u540e\u7f6e\u5904\u7406\u5668\uff09\uff0c\u53ef\u4ee5\u5408\u5e76BeanDefinition\uff0c\u53ef\u4ee5\u9500\u6bc1\u67d0\u4e2aBean\u7b49\u7b49\u529f\u80fd 10. FactoryBeanRegistrySupport\uff1a\u652f\u6301\u4e86FactoryBean\u7684\u529f\u80fd 11. AutowireCapableBeanFactory\uff1a\u662f\u76f4\u63a5\u7ee7\u627f\u4e86BeanFactory\uff0c\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u652f\u6301 \u5728\u521b\u5efaBean\u7684\u8fc7\u7a0b\u4e2d\u80fd\u5bf9Bean\u8fdb\u884c\u81ea\u52a8\u88c5\u914d 12. AbstractBeanFactory\uff1a\u5b9e\u73b0\u4e86ConfigurableBeanFactory\u63a5\u53e3\uff0c\u7ee7\u627f\u4e86 FactoryBeanRegistrySupport\uff0c\u8fd9\u4e2aBeanFactory\u7684\u529f\u80fd\u5df2\u7ecf\u5f88\u5168\u9762\u4e86\uff0c\u4f46\u662f\u4e0d\u80fd\u81ea\u52a8\u88c5\u914d\u548c \u83b7\u53d6beanNames 13. ConfigurableListableBeanFactory\uff1a\u7ee7\u627f\u4e86ListableBeanFactory\u3001 AutowireCapableBeanFactory\u3001ConfigurableBeanFactory 14. AbstractAutowireCapableBeanFactory\uff1a\u7ee7\u627f\u4e86AbstractBeanFactory\uff0c\u5b9e\u73b0\u4e86 AutowireCapableBeanFactory\uff0c\u62e5\u6709\u4e86\u81ea\u52a8\u88c5\u914d\u7684\u529f\u80fd 15. DefaultListableBeanFactory\uff1a\u7ee7\u627f\u4e86AbstractAutowireCapableBeanFactory\uff0c\u5b9e\u73b0\u4e86 ConfigurableListableBeanFactory\u63a5\u53e3\u548cBeanDefinitionRegistry\u63a5\u53e3\uff0c\u6240\u4ee5 DefaultListableBeanFactory\u7684\u529f\u80fd\u5f88\u5f3a\u5927 ApplicationContext \u4e0a\u9762\u6709\u5206\u6790\u5230\uff0cApplicationContext\u662f\u4e2a\u63a5\u53e3\uff0c\u5b9e\u9645\u4e0a\u4e5f\u662f\u4e00\u4e2aBeanFactory\uff0c\u4e0d\u8fc7\u6bd4BeanFactory \u66f4\u52a0\u5f3a\u5927\uff0c\u6bd4\u5982\uff1a 1. HierarchicalBeanFactory\uff1a\u62e5\u6709\u83b7\u53d6\u7236BeanFactory\u7684\u529f\u80fd 2. ListableBeanFactory\uff1a\u62e5\u6709\u83b7\u53d6beanNames\u7684\u529f\u80fd 3. ResourcePatternResolver\uff1a\u8d44\u6e90\u52a0\u8f7d\u5668\uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u83b7\u53d6\u591a\u4e2a\u8d44\u6e90\uff08\u6587\u4ef6\u8d44\u6e90\u7b49\u7b49\uff09 4. EnvironmentCapable\uff1a\u53ef\u4ee5\u83b7\u53d6\u8fd0\u884c\u65f6\u73af\u5883\uff08\u6ca1\u6709\u8bbe\u7f6e\u8fd0\u884c\u65f6\u73af\u5883\u529f\u80fd\uff09 5. ApplicationEventPublisher\uff1a\u62e5\u6709\u5e7f\u64ad\u4e8b\u4ef6\u7684\u529f\u80fd\uff08\u6ca1\u6709\u6dfb\u52a0\u4e8b\u4ef6\u76d1\u542c\u5668\u7684\u529f\u80fd\uff09 6. MessageSource\uff1a\u62e5\u6709\u56fd\u9645\u5316\u529f\u80fd \u5177\u4f53\u7684\u529f\u80fd\u6f14\u793a\uff0c\u540e\u9762\u4f1a\u6709\u3002 \u6211\u4eec\u5148\u6765\u770bApplicationContext\u4e24\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u5b9e\u73b0\u7c7b\uff1a 1. AnnotationConfigApplicationContext 2. ClassPathXmlApplicationContext AnnotationConfigApplicationContext \u8fd9\u90e8\u5206\u73b0\u5728\u770b\u4e0d\u61c2\u6ca1\u5173\u7cfb\uff0c\u6e90\u7801\u719f\u6089\u4e00\u70b9\u540e\u56de\u6765\u518d\u6765\u770b\u90fd\u53ef\u4ee5\u3002 1. ConfigurableApplicationContext\uff1a\u7ee7\u627f\u4e86ApplicationContext\u63a5\u53e3\uff0c\u589e\u52a0\u4e86\uff0c\u6dfb\u52a0\u4e8b\u4ef6\u76d1\u542c \u5668\u3001\u6dfb\u52a0BeanFactoryPostProcessor\u3001\u8bbe\u7f6eEnvironment\uff0c\u83b7\u53d6 ConfigurableListableBeanFactory\u7b49\u529f\u80fd 2. AbstractApplicationContext\uff1a\u5b9e\u73b0\u4e86ConfigurableApplicationContext\u63a5\u53e3 3. GenericApplicationContext\uff1a\u7ee7\u627f\u4e86AbstractApplicationContext\uff0c\u5b9e\u73b0\u4e86 BeanDefinitionRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u6240\u6709ApplicationContext\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u53ef\u4ee5\u6ce8\u518c BeanDefinition\uff0c\u6ce8\u610f\u8fd9\u4e2a\u7c7b\u4e2d\u6709\u4e00\u4e2a\u5c5e\u6027(DefaultListableBeanFactory beanFactory) 4. AnnotationConfigRegistry\uff1a\u53ef\u4ee5\u5355\u72ec\u6ce8\u518c\u67d0\u4e2a\u4e3a\u7c7b\u4e3aBeanDefinition\uff08\u53ef\u4ee5\u5904\u7406\u8be5\u7c7b\u4e0a\u7684 @Configuration\u6ce8\u89e3 \uff0c\u5df2\u7ecf\u53ef\u4ee5\u5904\u7406 @Bean\u6ce8\u89e3 \uff09\uff0c\u540c\u65f6\u53ef\u4ee5\u626b\u63cf 5. AnnotationConfigApplicationContext\uff1a\u7ee7\u627f\u4e86GenericApplicationContext\uff0c\u5b9e\u73b0\u4e86 AnnotationConfigRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u4ee5\u4e0a\u6240\u6709\u7684\u529f\u80fd ClassPathXmlApplicationContext \u5b83\u4e5f\u662f\u7ee7\u627f\u4e86AbstractApplicationContext\uff0c\u4f46\u662f\u76f8\u5bf9\u4e8eAnnotationConfigApplicationContext\u800c \u8a00\uff0c\u529f\u80fd\u6ca1\u6709AnnotationConfigApplicationContext\u5f3a\u5927\uff0c\u6bd4\u5982\u4e0d\u80fd\u6ce8\u518cBeanDefinition \u56fd\u9645\u5316 \u5148\u5b9a\u4e49\u4e00\u4e2aMessageSource: @Bean public MessageSource messageSource() { ResourceBundleMessageSource messageSource = new ResourceBundleMessageSource(); messageSource.setBasename(\"messages\"); return messageSource; } \u6709\u4e86\u8fd9\u4e2aBean\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u4efb\u610f\u60f3\u8981\u8fdb\u884c\u56fd\u9645\u5316\u7684\u5730\u65b9\u4f7f\u7528\u8be5MessageSource\u3002 \u540c\u65f6\uff0c\u56e0\u4e3a ApplicationContext\u4e5f\u62e5\u6709\u56fd\u5bb6\u5316\u7684\u529f\u80fd\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8fd9\u4e48\u7528\uff1a context.getMessage(\"test\", null, new Locale(\"en_CN\")) \u8d44\u6e90\u52a0\u8f7d ApplicationContext\u8fd8\u62e5\u6709\u8d44\u6e90\u52a0\u8f7d\u7684\u529f\u80fd\uff0c\u6bd4\u5982\uff0c\u53ef\u4ee5\u76f4\u63a5\u5229\u7528ApplicationContext\u83b7\u53d6\u67d0\u4e2a\u6587 \u4ef6\u7684\u5185\u5bb9\uff1a AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class); Resource resource = context.getResource(\"file://D:\\IdeaProjects\\spring\u2010 framework\\luban\\src\\main\\java\\com\\luban\\entity\\User.java\"); System.out.println(resource.contentLength()); \u4f60\u53ef\u4ee5\u60f3\u60f3\uff0c\u5982\u679c\u4f60\u4e0d\u4f7f\u7528ApplicationContext\uff0c\u800c\u662f\u81ea\u5df1\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u5c31\u6bd4\u8f83\u8d39\u65f6\u95f4\u4e86\u3002 \u8fd8\u6bd4\u5982\u4f60\u53ef\u4ee5\uff1a AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class); Resource resource = context.getResource(\"file://D:\\IdeaProjects\\spring\u2010framework\u2010 5.3.10\\tuling\\src\\main\\java\\com\\zhouyu\\service\\UserService.java\"); System.out.println(resource.contentLength()); System.out.println(resource.getFilename()); Resource resource1 = context.getResource(\"https://www.baidu.com\"); System.out.println(resource1.contentLength()); System.out.println(resource1.getURL()); Resource resource2 = context.getResource(\"classpath:spring.xml\"); System.out.println(resource2.contentLength()); System.out.println(resource2.getURL()); \u8fd8\u53ef\u4ee5\u4e00\u6b21\u6027\u83b7\u53d6\u591a\u4e2a\uff1a Resource[] resources = context.getResources(\"classpath:com/zhouyu/*.class\"); for (Resource resource : resources) { System.out.println(resource.contentLength()); System.out.println(resource.getFilename()); } \u83b7\u53d6\u8fd0\u884c\u65f6\u73af\u5883 \u83b7\u53d6\u8fd0\u884c\u65f6\u73af\u5883 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class); Map systemEnvironment = context.getEnvironment().getSystemEnvironment(); System.out.println(systemEnvironment); System.out.println(\"=======\"); Map systemProperties = context.getEnvironment().getSystemProperties(); System.out.println(systemProperties); System.out.println(\"=======\"); MutablePropertySources propertySources = context.getEnvironment().getPropertySources(); System.out.println(propertySources); System.out.println(\"=======\"); System.out.println(context.getEnvironment().getProperty(\"NO_PROXY\")); System.out.println(context.getEnvironment().getProperty(\"sun.jnu.encoding\")); System.out.println(context.getEnvironment().getProperty(\"zhouyu\")); \u6ce8\u610f\uff0c\u53ef\u4ee5\u5229\u7528 @PropertySource(\"classpath:spring.properties\") \u6765\u4f7f\u5f97\u67d0\u4e2aproperties\u6587\u4ef6\u4e2d\u7684\u53c2\u6570\u6dfb\u52a0\u5230\u8fd0\u884c\u65f6\u73af\u5883\u4e2d \u4e8b\u4ef6\u53d1\u5e03 \u5148\u5b9a\u4e49\u4e00\u4e2a\u4e8b\u4ef6\u76d1\u542c\u5668 @Bean public ApplicationListener applicationListener() { return new ApplicationListener() { @Override public void onApplicationEvent(ApplicationEvent event) { System.out.println(\"\u63a5\u6536\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\"); } }; } \u7136\u540e\u53d1\u5e03\u4e00\u4e2a\u4e8b\u4ef6\uff1a context.publishEvent(\"kkk\"); \u7c7b\u578b\u8f6c\u5316 \u7c7b\u578b\u8f6c\u5316 \u5728Spring\u6e90\u7801\u4e2d\uff0c\u6709\u53ef\u80fd\u9700\u8981\u628aString\u8f6c\u6210\u5176\u4ed6\u7c7b\u578b\uff0c\u6240\u4ee5\u5728Spring\u6e90\u7801\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6280\u672f\u6765\u66f4\u65b9\u4fbf \u7684\u505a\u5bf9\u8c61\u7684\u7c7b\u578b\u8f6c\u5316\uff0c\u5173\u4e8e\u7c7b\u578b\u8f6c\u5316\u7684\u5e94\u7528\u573a\u666f\uff0c \u540e\u7eed\u770b\u6e90\u7801\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u9047\u5230\u5f88\u591a\u3002 PropertyEditor \u8fd9\u5176\u5b9e\u662fJDK\u4e2d\u63d0\u4f9b\u7684\u7c7b\u578b\u8f6c\u5316\u5de5\u5177\u7c7b public class StringToUserPropertyEditor extends PropertyEditorSupport implements PropertyEditor { @Override public void setAsText(String text) throws IllegalArgumentException { User user = new User(); user.setName(text); this.setValue(user); } } StringToUserPropertyEditor propertyEditor = new StringToUserPropertyEditor(); propertyEditor.setAsText(\"1\"); User value = (User) propertyEditor.getValue(); System.out.println(value); \u5982\u4f55\u5411Spring\u4e2d\u6ce8\u518cPropertyEditor\uff1a @Bean public CustomEditorConfigurer customEditorConfigurer() { CustomEditorConfigurer customEditorConfigurer = new CustomEditorConfigurer(); Map, Class> propertyEditorMap = new HashMap<>(); // \u8868\u793aStringToUserPropertyEditor\u53ef\u4ee5\u5c06String\u8f6c\u5316\u6210User\u7c7b\u578b\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u5982\u679c\u53d1\u73b0\u5f53\u524d \u5bf9\u8c61\u662fString\uff0c\u800c\u9700\u8981\u7684\u7c7b\u578b\u662fUser\uff0c\u5c31\u4f1a\u4f7f\u7528\u8be5PropertyEditor\u6765\u505a\u7c7b\u578b\u8f6c\u5316 propertyEditorMap.put(User.class, StringToUserPropertyEditor.class); customEditorConfigurer.setCustomEditors(propertyEditorMap); return customEditorConfigurer; } \u5047\u8bbe\u73b0\u5728\u6709\u5982\u4e0bBean: @Component public class UserService { @Value(\"xxx\") private User user; public void test() { System.out.println(user); } } \u90a3\u4e48test\u5c5e\u6027\u5c31\u80fd\u6b63\u5e38\u7684\u5b8c\u6210\u5c5e\u6027\u8d4b\u503c ConversionService Spring\u4e2d\u63d0\u4f9b\u7684\u7c7b\u578b\u8f6c\u5316\u670d\u52a1\uff0c\u5b83\u6bd4PropertyEditor\u66f4\u5f3a\u5927 public class StringToUserConverter implements ConditionalGenericConverter { @Override public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) { return sourceType.getType().equals(String.class) && targetType.getType().equals(User.class); } @Override public Set getConvertibleTypes() { return Collections.singleton(new ConvertiblePair(String.class, User.class)); } @Override public Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType) { User user = new User(); user.setName((String)source); return user; } } DefaultConversionService conversionService = new DefaultConversionService(); conversionService.addConverter(new StringToUserConverter()); User value = conversionService.convert(\"1\", User.class); System.out.println(value); \u5982\u4f55\u5411Spring\u4e2d\u6ce8\u518cConversionService\uff1a @Bean public ConversionServiceFactoryBean conversionService() { ConversionServiceFactoryBean conversionServiceFactoryBean = new ConversionServiceFactoryBean(); conversionServiceFactoryBean.setConverters(Collections.singleton(new StringToUserConverter())); return conversionServiceFactoryBean; } TypeConverter TypeConverter \u6574\u5408\u4e86PropertyEditor\u548cConversionService\u7684\u529f\u80fd\uff0c\u662fSpring\u5185\u90e8\u7528\u7684 SimpleTypeConverter typeConverter = new SimpleTypeConverter(); typeConverter.registerCustomEditor(User.class, new StringToUserPropertyEditor()); //typeConverter.setConversionService(conversionService); User value = typeConverter.convertIfNecessary(\"1\", User.class); System.out.println(value); OrderComparator OrderComparator\u662fSpring\u6240\u63d0\u4f9b\u7684\u4e00\u79cd\u6bd4\u8f83\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u6839\u636e@Order\u6ce8\u89e3\u6216\u5b9e\u73b0Ordered\u63a5\u53e3 \u6765\u6267\u884c\u503c\u8fdb\u884c\u7b14\u8bb0\uff0c\u4ece\u800c\u53ef\u4ee5\u8fdb\u884c\u6392\u5e8f\u3002 \u6bd4\u5982\uff1a public class A implements Ordered { @Override public int getOrder() { return 3; } @Override public String toString() { return this.getClass().getSimpleName(); } } public class B implements Ordered { @Override public int getOrder() { return 2; } @Override public String toString() { return this.getClass().getSimpleName(); } } public class Main { public static void main(String[] args) { A a = new A(); // order=3 B b = new B(); // order=2 OrderComparator comparator = new OrderComparator(); System.out.println(comparator.compare(a, b)); // 1 List list = new ArrayList<>(); list.add(a); list.add(b); // \u6309order\u503c\u5347\u5e8f\u6392\u5e8f list.sort(comparator); System.out.println(list); // B\uff0cA } } \u53e6\u5916\uff0cSpring\u4e2d\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2aOrderComparator\u7684\u5b50\u7c7b\uff1a AnnotationAwareOrderComparator\uff0c\u5b83\u652f\u6301\u7528@Order\u6765\u6307\u5b9aorder\u503c\u3002\u6bd4\u5982\uff1a @Order(3) public class A { @Override public String toString() { return this.getClass().getSimpleName(); } } @Order(2) public class B { @Override public String toString() { return this.getClass().getSimpleName(); } } public class Main { public static void main(String[] args) { A a = new A(); // order=3 B b = new B(); // order=2 AnnotationAwareOrderComparator comparator = new AnnotationAwareOrderComparator(); System.out.println(comparator.compare(a, b)); // 1 List list = new ArrayList<>(); list.add(a); list.add(b); // \u6309order\u503c\u5347\u5e8f\u6392\u5e8f list.sort(comparator); System.out.println(list); // B\uff0cA } } BeanPostProcessor BeanPostProcess\u8868\u793aBena\u7684\u540e\u7f6e\u5904\u7406\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u6216\u591a\u4e2aBeanPostProcessor\uff0c\u6bd4\u5982\u901a \u8fc7\u4e00\u4e0b\u4ee3\u7801\u5b9a\u4e49\u4e00\u4e2aBeanPostProcessor\uff1a @Component public class ZhouyuBeanPostProcessor implements BeanPostProcessor { @Override public Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException { if (\"userService\".equals(beanName)) { System.out.println(\"\u521d\u59cb\u5316\u524d\"); } return bean; } @Override public Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException { if (\"userService\".equals(beanName)) { System.out.println(\"\u521d\u59cb\u5316\u540e\"); } return bean; } } \u4e00\u4e2aBeanPostProcessor\u53ef\u4ee5\u5728\u4efb\u610f\u4e00\u4e2aBean\u7684\u521d\u59cb\u5316\u4e4b\u524d\u4ee5\u53ca\u521d\u59cb\u5316\u4e4b\u540e\u53bb\u989d\u5916\u7684\u505a\u4e00\u4e9b\u7528\u6237\u81ea \u5b9a\u4e49\u7684\u903b\u8f91\uff0c\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5224\u65adbeanName\u6765\u8fdb\u884c\u9488\u5bf9\u6027\u5904\u7406\uff08\u9488\u5bf9\u67d0\u4e2aBean\uff0c\u6216\u67d0\u90e8\u5206 Bean\uff09\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49BeanPostProcessor\u6765\u5e72\u6d89Spring\u521b\u5efaBean\u7684\u8fc7\u7a0b\u3002 BeanFactoryPostProcessor BeanFactoryPostProcessor\u8868\u793aBean\u5de5\u5382\u7684\u540e\u7f6e\u5904\u7406\u5668\uff0c\u5176\u5b9e\u548cBeanPostProcessor\u7c7b\u4f3c\uff0c BeanPostProcessor\u662f\u5e72\u6d89Bean\u7684\u521b\u5efa\u8fc7\u7a0b\uff0cBeanFactoryPostProcessor\u662f\u5e72\u6d89BeanFactory\u7684\u521b \u5efa\u8fc7\u7a0b\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\u4e00\u4e2aBeanFactoryPostProcessor\uff1a @Component public class ZhouyuBeanFactoryPostProcessor implements BeanFactoryPostProcessor { @Override public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException { System.out.println(\"\u52a0\u5de5beanFactory\"); } } \u6211\u4eec\u53ef\u4ee5\u5728postProcessBeanFactory()\u65b9\u6cd5\u4e2d\u5bf9BeanFactory\u8fdb\u884c\u52a0\u5de5\u3002 FactoryBean \u4e0a\u9762\u63d0\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7BeanPostPorcessor\u6765\u5e72\u6d89Spring\u521b\u5efaBean\u7684\u8fc7\u7a0b\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u60f3\u4e00\u4e2a Bean\u5b8c\u5b8c\u5168\u5168\u7531\u6211\u4eec\u6765\u521b\u9020\uff0c\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u6bd4\u5982\u901a\u8fc7FactoryBean\uff1a @Component public class ZhouyuFactoryBean implements FactoryBean { @Override public Object getObject() throws Exception { UserService userService = new UserService(); return userService; } @Override public Class getObjectType() { return UserService.class; } } \u901a\u8fc7\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u6211\u4eec\u81ea\u5df1\u521b\u9020\u4e86\u4e00\u4e2aUserService\u5bf9\u8c61\uff0c\u5e76\u4e14\u5b83\u5c06\u6210\u4e3aBean\u3002\u4f46\u662f\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f \u521b\u9020\u51fa\u6765\u7684UserService\u7684Bean\uff0c\u53ea\u4f1a\u7ecf\u8fc7\u521d\u59cb\u5316\u540e\uff0c\u5176\u4ed6Spring\u7684\u751f\u547d\u5468\u671f\u6b65\u9aa4\u662f\u4e0d\u4f1a\u7ecf\u8fc7\u7684\uff0c\u6bd4 \u5982\u4f9d\u8d56\u6ce8\u5165\u3002 \u6709\u540c\u5b66\u53ef\u80fd\u4f1a\u60f3\u5230\uff0c\u901a\u8fc7@Bean\u4e5f\u53ef\u4ee5\u81ea\u5df1\u751f\u6210\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3aBean\uff0c\u90a3\u4e48\u548cFactoryBean\u7684\u533a\u522b\u662f \u4ec0\u4e48\u5462\uff1f\u5176\u5b9e\u5728\u5f88\u591a\u573a\u666f\u4e0b\u4ed6\u4fe9\u662f\u53ef\u4ee5\u66ff\u6362\u7684\uff0c\u4f46\u662f\u7ad9\u5728\u539f\u7406\u5c42\u9762\u6765\u8bf4\u7684\uff0c\u533a\u522b\u5f88\u660e\u663e\uff0c@Bean\u5b9a \u4e49\u7684Bean\u662f\u4f1a\u7ecf\u8fc7\u5b8c\u6574\u7684Bean\u751f\u547d\u5468\u671f\u7684\u3002 ExcludeFilter\u548cIncludeFilter \u8fd9\u4e24\u4e2aFilter\u662fSpring\u626b\u63cf\u8fc7\u7a0b\u4e2d\u7528\u6765\u8fc7\u6ee4\u7684\u3002ExcludeFilter\u8868\u793a\u6392\u9664\u8fc7\u6ee4\u5668\uff0cIncludeFilter\u8868\u793a\u5305 \u542b\u8fc7\u6ee4\u5668\u3002 \u6bd4\u5982\u4ee5\u4e0b\u914d\u7f6e\uff0c\u8868\u793a\u626b\u63cfcom.zhouyu\u8fd9\u4e2a\u5305\u4e0b\u9762\u7684\u6240\u6709\u7c7b\uff0c\u4f46\u662f\u6392\u9664UserService\u7c7b\uff0c\u4e5f\u5c31\u662f\u5c31\u7b97 \u5b83\u4e0a\u9762\u6709@Component\u6ce8\u89e3\u4e5f\u4e0d\u4f1a\u6210\u4e3aBean\u3002 @ComponentScan(value = \"com.zhouyu\", excludeFilters = {@ComponentScan.Filter( type = FilterType.ASSIGNABLE_TYPE, classes = UserService.class)}.) public class AppConfig { } \u518d\u6bd4\u5982\u4ee5\u4e0b\u914d\u7f6e\uff0c\u5c31\u7b97UserService\u7c7b\u4e0a\u6ca1\u6709@Component\u6ce8\u89e3\uff0c\u5b83\u4e5f\u4f1a\u88ab\u626b\u63cf\u6210\u4e3a\u4e00\u4e2aBean\u3002 @ComponentScan(value = \"com.zhouyu\", includeFilters = {@ComponentScan.Filter( type = FilterType.ASSIGNABLE_TYPE, classes = UserService.class)}) public class AppConfig { } FilterType\u5206\u4e3a\uff1a 1. ANNOTATION\uff1a\u8868\u793a\u662f\u5426\u5305\u542b\u67d0\u4e2a\u6ce8\u89e3 2. ASSIGNABLE_TYPE\uff1a\u8868\u793a\u662f\u5426\u662f\u67d0\u4e2a\u7c7b 3. ASPECTJ\uff1a\u8868\u793a\u5426\u662f\u7b26\u5408\u67d0\u4e2aAspectj\u8868\u8fbe\u5f0f 4. REGEX\uff1a\u8868\u793a\u662f\u5426\u7b26\u5408\u67d0\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f 5. CUSTOM\uff1a\u81ea\u5b9a\u4e49 \u5728Spring\u7684\u626b\u63cf\u903b\u8f91\u4e2d\uff0c\u9ed8\u8ba4\u4f1a\u6dfb\u52a0\u4e00\u4e2aAnnotationTypeFilter\u7ed9includeFilters\uff0c\u8868\u793a\u9ed8\u8ba4\u60c5\u51b5\u4e0b Spring\u626b\u63cf\u8fc7\u7a0b\u4e2d\u4f1a\u8ba4\u4e3a\u7c7b\u4e0a\u6709@Component\u6ce8\u89e3\u7684\u5c31\u662fBean\u3002 MetadataReader\u3001ClassMetadata\u3001 AnnotationMetadata \u5728Spring\u4e2d\u9700\u8981\u53bb\u89e3\u6790\u7c7b\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u7c7b\u540d\u3001\u7c7b\u4e2d\u7684\u65b9\u6cd5\u3001\u7c7b\u4e0a\u7684\u6ce8\u89e3\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u7c7b\u7684\u5143\u6570 \u636e\uff0c\u6240\u4ee5Spring\u4e2d\u5bf9\u7c7b\u7684\u5143\u6570\u636e\u505a\u4e86\u62bd\u8c61\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5de5\u5177\u7c7b\u3002 MetadataReader\u8868\u793a\u7c7b\u7684\u5143\u6570\u636e\u8bfb\u53d6\u5668\uff0c\u9ed8\u8ba4\u5b9e\u73b0\u7c7b\u4e3aSimpleMetadataReader\u3002\u6bd4\u5982\uff1a public class Test { public static void main(String[] args) throws IOException { SimpleMetadataReaderFactory simpleMetadataReaderFactory = new SimpleMetadataReaderFactory(); // \u6784\u9020\u4e00\u4e2aMetadataReader MetadataReader metadataReader = simpleMetadataReaderFactory.getMetadataReader(\"com.zhouyu.service.UserService\"); // \u5f97\u5230\u4e00\u4e2aClassMetadata\uff0c\u5e76\u83b7\u53d6\u4e86\u7c7b\u540d ClassMetadata classMetadata = metadataReader.getClassMetadata(); System.out.println(classMetadata.getClassName()); // \u83b7\u53d6\u4e00\u4e2aAnnotationMetadata\uff0c\u5e76\u83b7\u53d6\u7c7b\u4e0a\u7684\u6ce8\u89e3\u4fe1\u606f AnnotationMetadata annotationMetadata = metadataReader.getAnnotationMetadata(); for (String annotationType : annotationMetadata.getAnnotationTypes()) { System.out.println(annotationType); } } } \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cSimpleMetadataReader\u53bb\u89e3\u6790\u7c7b\u65f6\uff0c\u4f7f\u7528\u7684ASM\u6280\u672f\u3002 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528ASM\u6280\u672f\uff0cSpring\u542f\u52a8\u7684\u65f6\u5019\u9700\u8981\u53bb\u626b\u63cf\uff0c\u5982\u679c\u6307\u5b9a\u7684\u5305\u8def\u5f84\u6bd4\u8f83\u5bbd\u6cdb\uff0c\u90a3\u4e48\u626b\u63cf\u7684 \u7c7b\u662f\u975e\u5e38\u591a\u7684\uff0c\u90a3\u5982\u679c\u5728Spring\u542f\u52a8\u65f6\u5c31\u628a\u8fd9\u4e9b\u7c7b\u5168\u90e8\u52a0\u8f7d\u8fdbJVM\u4e86\uff0c\u8fd9\u6837\u4e0d\u592a\u597d\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86 ASM\u6280\u672f\u3002","title":"About"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/","text":"\u6709\u9053\u4e91\u94fe\u63a5\uff1a http://note.youdao.com/noteshare?id=e8e3fcbeb1428c2da9e0764c796d2660&sub=A81213EC3FB44E408A12B7273BEA0C37 Spring\u6700\u91cd\u8981\u7684\u529f\u80fd\u5c31\u662f\u5e2e\u52a9\u7a0b\u5e8f\u5458\u521b\u5efa\u5bf9\u8c61\uff08\u4e5f\u5c31\u662fIOC\uff09\uff0c\u800c\u542f\u52a8Spring\u5c31\u662f\u4e3a\u521b\u5efaBean\u5bf9\u8c61 \u505a\u51c6\u5907\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u660e\u767dSpring\u5230\u5e95\u662f\u600e\u4e48\u53bb\u521b\u5efaBean\u7684\uff0c\u4e5f\u5c31\u662f\u5148\u5f04\u660e\u767dBean\u7684\u751f\u547d\u5468\u671f\u3002 Bean\u7684\u751f\u547d\u5468\u671f\u5c31\u662f\u6307\uff1a\u5728Spring\u4e2d\uff0c\u4e00\u4e2aBean\u662f\u5982\u4f55\u751f\u6210\u7684\uff0c\u5982\u4f55\u9500\u6bc1\u7684 Bean\u751f\u547d\u5468\u671f\u6d41\u7a0b\u56fe\uff1ahttps://www.processon.com/view/link/5f8588c87d9c0806f27358c1 \u9644\u5e26\u8d44\u6599JFR\u4ecb\u7ecd\uff1ahttps://zhuanlan.zhihu.com/p/122247741 Bean\u7684\u751f\u6210\u8fc7\u7a0b 1. \u751f\u6210BeanDefinition Spring\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u8fdb\u884c\u626b\u63cf\uff0c\u4f1a\u5148\u8c03\u7528 org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider#scanCandidateComponents(String basePackage) \u626b\u63cf\u67d0\u4e2a\u5305\u8def\u5f84\uff0c\u5e76\u5f97\u5230BeanDefinition\u7684Set\u96c6\u5408\u3002 \u200b \u5173\u4e8eSpring\u542f\u52a8\u6d41\u7a0b\uff0c\u540e\u7eed\u4f1a\u5355\u72ec\u7684\u8bfe\u8be6\u7ec6\u8bb2\uff0c\u8fd9\u91cc\u5148\u8bb2\u4e00\u4e0bSpring\u626b\u63cf\u7684\u5e95\u5c42\u5b9e\u73b0\uff1a \u200b Spring\u626b\u63cf\u5e95\u5c42\u6d41\u7a0b\uff1ahttps://www.processon.com/view/link/61370ee60e3e7412ecd95d43 \u200b \u9996\u5148\uff0c\u901a\u8fc7ResourcePatternResolver\u83b7\u5f97\u6307\u5b9a\u5305\u8def\u5f84\u4e0b\u7684\u6240\u6709 .class \u6587\u4ef6\uff08Spring\u6e90\u7801\u4e2d\u5c06\u6b64\u6587\u4ef6\u5305\u88c5\u6210\u4e86Resource\u5bf9\u8c61\uff09 \u904d\u5386\u6bcf\u4e2aResource\u5bf9\u8c61 \u5229\u7528MetadataReaderFactory\u89e3\u6790Resource\u5bf9\u8c61\u5f97\u5230MetadataReader\uff08\u5728Spring\u6e90\u7801\u4e2dMetadataReaderFactory\u5177\u4f53\u7684\u5b9e\u73b0\u7c7b\u4e3aCachingMetadataReaderFactory\uff0cMetadataReader\u7684\u5177\u4f53\u5b9e\u73b0\u7c7b\u4e3aSimpleMetadataReader\uff09 \u5229\u7528MetadataReader\u8fdb\u884cexcludeFilters\u548cincludeFilters\uff0c\u4ee5\u53ca\u6761\u4ef6\u6ce8\u89e3@Conditional\u7684\u7b5b\u9009\uff08\u6761\u4ef6\u6ce8\u89e3\u5e76\u4e0d\u80fd\u7406\u89e3\uff1a\u67d0\u4e2a\u7c7b\u4e0a\u662f\u5426\u5b58\u5728@Conditional\u6ce8\u89e3\uff0c\u5982\u679c\u5b58\u5728\u5219\u8c03\u7528\u6ce8\u89e3\u4e2d\u6240\u6307\u5b9a\u7684\u7c7b\u7684match\u65b9\u6cd5\u8fdb\u884c\u5339\u914d\uff0c\u5339\u914d\u6210\u529f\u5219\u901a\u8fc7\u7b5b\u9009\uff0c\u5339\u914d\u5931\u8d25\u5219pass\u6389\u3002\uff09 \u7b5b\u9009\u901a\u8fc7\u540e\uff0c\u57fa\u4e8emetadataReader\u751f\u6210ScannedGenericBeanDefinition \u518d\u57fa\u4e8emetadataReader\u5224\u65ad\u662f\u4e0d\u662f\u5bf9\u5e94\u7684\u7c7b\u662f\u4e0d\u662f\u63a5\u53e3\u6216\u62bd\u8c61\u7c7b \u5982\u679c\u7b5b\u9009\u901a\u8fc7\uff0c\u90a3\u4e48\u5c31\u8868\u793a\u626b\u63cf\u5230\u4e86\u4e00\u4e2aBean\uff0c\u5c06ScannedGenericBeanDefinition\u52a0\u5165\u7ed3\u679c\u96c6 MetadataReader\u8868\u793a\u7c7b\u7684\u5143\u6570\u636e\u8bfb\u53d6\u5668\uff0c\u4e3b\u8981\u5305\u542b\u4e86\u4e00\u4e2aAnnotationMetadata\uff0c\u529f\u80fd\u6709 \u83b7\u53d6\u7c7b\u7684\u540d\u5b57\u3001 \u83b7\u53d6\u7236\u7c7b\u7684\u540d\u5b57 \u83b7\u53d6\u6240\u5b9e\u73b0\u7684\u6240\u6709\u63a5\u53e3\u540d \u83b7\u53d6\u6240\u6709\u5185\u90e8\u7c7b\u7684\u540d\u5b57 \u5224\u65ad\u662f\u4e0d\u662f\u62bd\u8c61\u7c7b \u5224\u65ad\u662f\u4e0d\u662f\u63a5\u53e3 \u5224\u65ad\u662f\u4e0d\u662f\u4e00\u4e2a\u6ce8\u89e3 \u83b7\u53d6\u62e5\u6709\u67d0\u4e2a\u6ce8\u89e3\u7684\u65b9\u6cd5\u96c6\u5408 \u83b7\u53d6\u7c7b\u4e0a\u6dfb\u52a0\u7684\u6240\u6709\u6ce8\u89e3\u4fe1\u606f \u83b7\u53d6\u7c7b\u4e0a\u6dfb\u52a0\u7684\u6240\u6709\u6ce8\u89e3\u7c7b\u578b\u96c6\u5408 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cCachingMetadataReaderFactory\u89e3\u6790\u67d0\u4e2a.class\u6587\u4ef6\u5f97\u5230MetadataReader\u5bf9\u8c61\u662f\u5229\u7528\u7684 ASM \u6280\u672f\uff0c\u5e76\u6ca1\u6709\u52a0\u8f7d\u8fd9\u4e2a\u7c7b\u5230JVM\u3002\u5e76\u4e14\uff0c\u6700\u7ec8\u5f97\u5230\u7684ScannedGenericBeanDefinition\u5bf9\u8c61\uff0c beanClass\u5c5e\u6027\u5b58\u50a8\u7684\u662f\u5f53\u524d\u7c7b\u7684\u540d\u5b57\uff0c\u800c\u4e0d\u662fclass\u5bf9\u8c61 \u3002\uff08beanClass\u5c5e\u6027\u7684\u7c7b\u578b\u662fObject\uff0c\u5b83\u5373\u53ef\u4ee5\u5b58\u50a8\u7c7b\u7684\u540d\u5b57\uff0c\u4e5f\u53ef\u4ee5\u5b58\u50a8class\u5bf9\u8c61\uff09 \u200b \u6700\u540e\uff0c\u4e0a\u9762\u662f\u8bf4\u7684\u901a\u8fc7\u626b\u63cf\u5f97\u5230BeanDefinition\u5bf9\u8c61\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u5b9a\u4e49BeanDefinition\uff0c\u6216\u89e3\u6790spring.xml\u6587\u4ef6\u7684 \uff0c\u6216\u8005@Bean\u6ce8\u89e3\u5f97\u5230BeanDefinition\u5bf9\u8c61\u3002\uff08\u540e\u7eed\u8bfe\u7a0b\u4f1a\u5206\u6790@Bean\u6ce8\u89e3\u662f\u600e\u4e48\u751f\u6210BeanDefinition\u7684\uff09\u3002 2. \u5408\u5e76BeanDefinition \u901a\u8fc7\u626b\u63cf\u5f97\u5230\u6240\u6709BeanDefinition\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u6839\u636eBeanDefinition\u521b\u5efaBean\u5bf9\u8c61\u4e86\uff0c\u4f46\u662f\u5728Spring\u4e2d\u652f\u6301\u7236\u5b50BeanDefinition\uff0c\u548cJava\u7236\u5b50\u7c7b\u7c7b\u4f3c\uff0c\u4f46\u662f\u5b8c\u5168\u4e0d\u662f\u4e00\u56de\u4e8b\u3002 \u7236\u5b50BeanDefinition\u5b9e\u9645\u7528\u7684\u6bd4\u8f83\u5c11\uff0c\u4f7f\u7528\u662f\u8fd9\u6837\u7684\uff0c\u6bd4\u5982\uff1a 1 2 < bean id = \"parent\" class =\" com . zhouyu . service . Parent \" scope=\" prototype \"/> <bean id=\" child \" class=\" com . zhouyu . service . Child \"/> \u8fd9\u4e48\u5b9a\u4e49\u7684\u60c5\u51b5\u4e0b\uff0cchild\u662f\u5355\u4f8bBean\u3002 1 2 < bean id = \"parent\" class =\" com . zhouyu . service . Parent \" scope=\" prototype \"/> <bean id=\" child \" class=\" com . zhouyu . service . Child \" parent=\" parent \"/> \u4f46\u662f\u8fd9\u4e48\u5b9a\u4e49\u7684\u60c5\u51b5\u4e0b\uff0cchild\u5c31\u662f\u539f\u578bBean\u4e86\u3002 \u200b \u56e0\u4e3achild\u7684\u7236BeanDefinition\u662fparent\uff0c\u6240\u4ee5\u4f1a\u7ee7\u627fparent\u4e0a\u6240\u5b9a\u4e49\u7684scope\u5c5e\u6027\u3002 \u200b \u800c\u5728\u6839\u636echild\u6765\u751f\u6210Bean\u5bf9\u8c61\u4e4b\u524d\uff0c\u9700\u8981\u8fdb\u884cBeanDefinition\u7684\u5408\u5e76\uff0c\u5f97\u5230\u5b8c\u6574\u7684child\u7684BeanDefinition\u3002 \u200b 3. \u52a0\u8f7d\u7c7b BeanDefinition\u5408\u5e76\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u53bb\u521b\u5efaBean\u5bf9\u8c61\u4e86\uff0c\u800c\u521b\u5efaBean\u5c31\u5fc5\u987b\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u800c\u5b9e\u4f8b\u5316\u5c31\u5fc5\u987b\u5148\u52a0\u8f7d\u5f53\u524dBeanDefinition\u6240\u5bf9\u5e94\u7684class\uff0c\u5728AbstractAutowireCapableBeanFactory\u7c7b\u7684createBean()\u65b9\u6cd5\u4e2d\uff0c\u4e00\u5f00\u59cb\u5c31\u4f1a\u8c03\u7528\uff1a 1 Class <?> resolvedClass = resolveBeanClass ( mbd , beanName ); \u8fd9\u884c\u4ee3\u7801\u5c31\u662f\u53bb\u52a0\u8f7d\u7c7b\uff0c\u8be5\u65b9\u6cd5\u662f\u8fd9\u4e48\u5b9e\u73b0\u7684\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 if ( mbd . hasBeanClass ()) { return mbd . getBeanClass (); } if ( System . getSecurityManager () != null ) { return AccessController . doPrivileged (( PrivilegedExceptionAction < Class <?>> ) () -> doResolveBeanClass ( mbd , typesToMatch ), getAccessControlContext ()); } else { return doResolveBeanClass ( mbd , typesToMatch ); } public boolean hasBeanClass () { return ( this . beanClass instanceof Class ); } \u5982\u679cbeanClass\u5c5e\u6027\u7684\u7c7b\u578b\u662fClass\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u8fd4\u56de\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5219\u4f1a\u6839\u636e\u7c7b\u540d\u8fdb\u884c\u52a0\u8f7d\uff08doResolveBeanClass\u65b9\u6cd5\u6240\u505a\u7684\u4e8b\u60c5\uff09 \u4f1a\u5229\u7528BeanFactory\u6240\u8bbe\u7f6e\u7684\u7c7b\u52a0\u8f7d\u5668\u6765\u52a0\u8f7d\u7c7b\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u9ed8\u8ba4\u4f7f\u7528 ClassUtils.getDefaultClassLoader() \u6240\u8fd4\u56de\u7684\u7c7b\u52a0\u8f7d\u5668\u6765\u52a0\u8f7d\u3002 ClassUtils.getDefaultClassLoader() \u4f18\u5148\u8fd4\u56de\u5f53\u524d\u7ebf\u7a0b\u4e2d\u7684ClassLoader \u7ebf\u7a0b\u4e2d\u7c7b\u52a0\u8f7d\u5668\u4e3anull\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56deClassUtils\u7c7b\u7684\u7c7b\u52a0\u8f7d\u5668 \u5982\u679cClassUtils\u7c7b\u7684\u7c7b\u52a0\u8f7d\u5668\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5219\u8868\u793a\u662fBootstrap\u7c7b\u52a0\u8f7d\u5668\u52a0\u8f7d\u7684ClassUtils\u7c7b\uff0c\u90a3\u4e48\u5219\u8fd4\u56de\u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668 4. \u5b9e\u4f8b\u5316\u524d \u5f53\u524dBeanDefinition\u5bf9\u5e94\u7684\u7c7b\u6210\u529f\u52a0\u8f7d\u540e\uff0c\u5c31\u53ef\u4ee5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u4e86\uff0c\u4f46\u662f... \u200b \u5728Spring\u4e2d\uff0c\u5b9e\u4f8b\u5316\u5bf9\u8c61\u4e4b\u524d\uff0cSpring\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6269\u5c55\u70b9\uff0c\u5141\u8bb8\u7528\u6237\u6765\u63a7\u5236\u662f\u5426\u5728\u67d0\u4e2a\u6216\u67d0\u4e9bBean\u5b9e\u4f8b\u5316\u4e4b\u524d\u505a\u4e00\u4e9b\u542f\u52a8\u52a8\u4f5c\u3002\u8fd9\u4e2a\u6269\u5c55\u70b9\u53eb InstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation() \u3002\u6bd4\u5982\uff1a \u200b 1 2 3 4 5 6 7 8 9 10 11 @Component public class ZhouyuBeanPostProcessor implements InstantiationAwareBeanPostProcessor { @Override public Object postProcessBeforeInstantiation ( Class <?> beanClass , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u5b9e\u4f8b\u5316\u524d\" ); } return null ; } } \u5982\u4e0a\u4ee3\u7801\u4f1a\u5bfc\u81f4\uff0c\u5728userService\u8fd9\u4e2aBean\u5b9e\u4f8b\u5316\u524d\uff0c\u4f1a\u8fdb\u884c\u6253\u5370\u3002 \u200b \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cpostProcessBeforeInstantiation()\u662f\u6709\u8fd4\u56de\u503c\u7684\uff0c\u5982\u679c\u8fd9\u4e48\u5b9e\u73b0\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 @Component public class ZhouyuBeanPostProcessor implements InstantiationAwareBeanPostProcessor { @Override public Object postProcessBeforeInstantiation ( Class <?> beanClass , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u5b9e\u4f8b\u5316\u524d\" ); return new UserService (); } return null ; } } userService\u8fd9\u4e2aBean\uff0c\u5728\u5b9e\u4f8b\u5316\u524d\u4f1a\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u7531\u6211\u4eec\u6240\u5b9a\u4e49\u7684UserService\u5bf9\u8c61\u3002\u5982\u679c\u662f\u8fd9\u6837\uff0c\u8868\u793a\u4e0d\u9700\u8981Spring\u6765\u5b9e\u4f8b\u5316\u4e86\uff0c\u5e76\u4e14\u540e\u7eed\u7684Spring\u4f9d\u8d56\u6ce8\u5165\u4e5f\u4e0d\u4f1a\u8fdb\u884c\u4e86\uff0c\u4f1a\u8df3\u8fc7\u4e00\u4e9b\u6b65\u9aa4\uff0c\u76f4\u63a5\u6267\u884c\u521d\u59cb\u5316\u540e\u8fd9\u4e00\u6b65\u3002 5. \u5b9e\u4f8b\u5316 \u5728\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\u5c31\u4f1a\u6839\u636eBeanDefinition\u53bb\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u4e86\u3002 5.1 Supplier\u521b\u5efa\u5bf9\u8c61 \u9996\u5148\u5224\u65adBeanDefinition\u4e2d\u662f\u5426\u8bbe\u7f6e\u4e86Supplier\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\u5219\u8c03\u7528Supplier\u7684get()\u5f97\u5230\u5bf9\u8c61\u3002 \u200b \u5f97\u76f4\u63a5\u4f7f\u7528BeanDefinition\u5bf9\u8c61\u6765\u8bbe\u7f6eSupplier\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder . genericBeanDefinition (). getBeanDefinition (); beanDefinition . setInstanceSupplier ( new Supplier < Object > () { @Override public Object get () { return new UserService (); } }); context . registerBeanDefinition ( \"userService\" , beanDefinition ); 5.2 \u5de5\u5382\u65b9\u6cd5\u521b\u5efa\u5bf9\u8c61 \u5982\u679c\u6ca1\u6709\u8bbe\u7f6eSupplier\uff0c\u5219\u68c0\u67e5BeanDefinition\u4e2d\u662f\u5426\u8bbe\u7f6e\u4e86factoryMethod\uff0c\u4e5f\u5c31\u662f\u5de5\u5382\u65b9\u6cd5\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8bbe\u7f6efactoryMethod\uff0c\u6bd4\u5982\uff1a \u200b \u65b9\u5f0f\u4e00\uff1a 1 < bean id = \"userService\" class =\" com . zhouyu . service . UserService \" factory-method=\" createUserService \" /> \u5bf9\u5e94\u7684UserService\u7c7b\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 public class UserService { public static UserService createUserService () { System . out . println ( \"\u6267\u884ccreateUserService()\" ); UserService userService = new UserService (); return userService ; } public void test () { System . out . println ( \"test\" ); } } \u65b9\u5f0f\u4e8c\uff1a 1 2 < bean id = \"commonService\" class =\" com . zhouyu . service . CommonService \"/> <bean id=\" userService1 \" factory-bean=\" commonService \" factory-method=\" createUserService \" /> \u5bf9\u5e94\u7684CommonService\u7684\u7c7b\u4e3a\uff1a 1 2 3 4 5 6 public class CommonService { public UserService createUserService () { return new UserService (); } } Spring\u53d1\u73b0\u5f53\u524dBeanDefinition\u65b9\u6cd5\u8bbe\u7f6e\u4e86\u5de5\u5382\u65b9\u6cd5\u540e\uff0c\u5c31\u4f1a\u533a\u5206\u8fd9\u4e24\u79cd\u65b9\u5f0f\uff0c\u7136\u540e\u8c03\u7528\u5de5\u5382\u65b9\u6cd5\u5f97\u5230\u5bf9\u8c61\u3002 \u200b \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u901a\u8fc7@Bean\u6240\u5b9a\u4e49\u7684BeanDefinition\uff0c\u662f\u5b58\u5728factoryMethod\u548cfactoryBean\u7684\uff0c\u4e5f\u5c31\u662f\u548c\u4e0a\u9762\u7684\u65b9\u5f0f\u4e8c\u975e\u5e38\u7c7b\u4f3c\uff0c@Bean\u6240\u6ce8\u89e3\u7684\u65b9\u6cd5\u5c31\u662ffactoryMethod\uff0cAppConfig\u5bf9\u8c61\u5c31\u662ffactoryBean\u3002\u5982\u679c@Bean\u6240\u6240\u6ce8\u89e3\u7684\u65b9\u6cd5\u662fstatic\u7684\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u5c31\u662f\u65b9\u5f0f\u4e00\u3002 5.3 \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \u7b2c\u4e00\u8282\u5df2\u7ecf\u8bb2\u8fc7\u4e00\u904d\u5927\u6982\u539f\u7406\u4e86\uff0c\u540e\u9762\u6709\u4e00\u8282\u8bfe\u5355\u72ec\u5206\u6790\u6e90\u7801\u5b9e\u73b0\u3002\u63a8\u65ad\u5b8c\u6784\u9020\u65b9\u6cd5\u540e\uff0c\u5c31\u4f1a\u4f7f\u7528\u6784\u9020\u65b9\u6cd5\u6765\u8fdb\u884c\u5b9e\u4f8b\u5316\u4e86\u3002 \u200b \u989d\u5916\u7684\uff0c\u5728\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u903b\u8f91\u4e2d\u9664\u5f00\u4f1a\u53bb\u9009\u62e9\u6784\u9020\u65b9\u6cd5\u4ee5\u53ca\u67e5\u627e\u5165\u53c2\u5bf9\u8c61\u610f\u5916\uff0c\u4f1a\u8fd8\u5224\u65ad\u662f\u5426\u5728\u5bf9\u5e94\u7684\u7c7b\u4e2d\u662f\u5426\u5b58\u5728\u4f7f\u7528 @Lookup\u6ce8\u89e3 \u4e86\u65b9\u6cd5\u3002\u5982\u679c\u5b58\u5728\u5219\u628a\u8be5\u65b9\u6cd5\u5c01\u88c5\u4e3aLookupOverride\u5bf9\u8c61\u5e76\u6dfb\u52a0\u5230BeanDefinition\u4e2d\u3002 \u200b \u5728\u5b9e\u4f8b\u5316\u65f6\uff0c\u5982\u679c\u5224\u65ad\u51fa\u6765\u5f53\u524dBeanDefinition\u4e2d\u6ca1\u6709LookupOverride\uff0c\u90a3\u5c31\u76f4\u63a5\u7528\u6784\u9020\u65b9\u6cd5\u53cd\u5c04\u5f97\u5230\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u3002\u5982\u679c\u5b58\u5728LookupOverride\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u7c7b\u4e2d\u5b58\u5728@Lookup\u6ce8\u89e3\u4e86\u7684\u65b9\u6cd5\uff0c\u90a3\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b @Lookup\u6ce8\u89e3\u5c31\u662f \u65b9\u6cd5\u6ce8\u5165 \uff0c\u4f7f\u7528demo\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @Component public class UserService { private OrderService orderService ; public void test () { OrderService orderService = createOrderService (); System . out . println ( orderService ); } @Lookup ( \"orderService\" ) public OrderService createOrderService () { return null ; } } 6. BeanDefinition\u7684\u540e\u7f6e\u5904\u7406 Bean\u5bf9\u8c61\u5b9e\u4f8b\u5316\u51fa\u6765\u4e4b\u540e\uff0c\u63a5\u4e0b\u6765\u5c31\u5e94\u8be5\u7ed9\u5bf9\u8c61\u7684\u5c5e\u6027\u8d4b\u503c\u4e86\u3002\u5728\u771f\u6b63\u7ed9\u5c5e\u6027\u8d4b\u503c\u4e4b\u524d\uff0cSpring\u53c8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6269\u5c55\u70b9 MergedBeanDefinitionPostProcessor.postProcessMergedBeanDefinition() \uff0c\u53ef\u4ee5\u5bf9\u6b64\u65f6\u7684BeanDefinition\u8fdb\u884c\u52a0\u5de5\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 @Component public class ZhouyuMergedBeanDefinitionPostProcessor implements MergedBeanDefinitionPostProcessor { @Override public void postProcessMergedBeanDefinition ( RootBeanDefinition beanDefinition , Class <?> beanType , String beanName ) { if ( \"userService\" . equals ( beanName )) { beanDefinition . getPropertyValues (). add ( \"orderService\" , new OrderService ()); } } } \u5728Spring\u6e90\u7801\u4e2d\uff0cAutowiredAnnotationBeanPostProcessor\u5c31\u662f\u4e00\u4e2aMergedBeanDefinitionPostProcessor\uff0c\u5b83\u7684postProcessMergedBeanDefinition()\u4e2d\u4f1a\u53bb\u67e5\u627e\u6ce8\u5165\u70b9\uff0c\u5e76\u7f13\u5b58\u5728AutowiredAnnotationBeanPostProcessor\u5bf9\u8c61\u7684\u4e00\u4e2aMap\u4e2d\uff08injectionMetadataCache\uff09\u3002 7. \u5b9e\u4f8b\u5316\u540e \u5728\u5904\u7406\u5b8cBeanDefinition\u540e\uff0cSpring\u53c8\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u6269\u5c55\u70b9\uff1a InstantiationAwareBeanPostProcessor.postProcessAfterInstantiation() \uff0c\u6bd4\u5982\uff1a \u200b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 @Component public class ZhouyuInstantiationAwareBeanPostProcessor implements InstantiationAwareBeanPostProcessor { @Override public boolean postProcessAfterInstantiation ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { UserService userService = ( UserService ) bean ; userService . test (); } return true ; } } \u4e0a\u8ff0\u4ee3\u7801\u5c31\u662f\u5bf9userService\u6240\u5b9e\u4f8b\u5316\u51fa\u6765\u7684\u5bf9\u8c61\u8fdb\u884c\u5904\u7406\u3002 \u200b \u8fd9\u4e2a\u6269\u5c55\u70b9\uff0c\u5728Spring\u6e90\u7801\u4e2d\u57fa\u672c\u6ca1\u6709\u600e\u4e48\u4f7f\u7528\u3002 8. \u81ea\u52a8\u6ce8\u5165 \u8fd9\u91cc\u7684\u81ea\u52a8\u6ce8\u5165\u6307\u7684\u662fSpring\u7684\u81ea\u52a8\u6ce8\u5165\uff0c\u540e\u7eed\u4f9d\u8d56\u6ce8\u5165\u8bfe\u7a0b\u4e2d\u5355\u72ec\u8bb2 \u200b 9. \u5904\u7406\u5c5e\u6027 \u8fd9\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u5c31\u4f1a\u5904\u7406@Autowired\u3001@Resource\u3001@Value\u7b49\u6ce8\u89e3\uff0c\u4e5f\u662f\u901a\u8fc7 InstantiationAwareBeanPostProcessor.postProcessProperties() \u6269\u5c55\u70b9\u6765\u5b9e\u73b0\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5df1\u7684\u81ea\u52a8\u6ce8\u5165\u529f\u80fd\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 @Component public class ZhouyuInstantiationAwareBeanPostProcessor implements InstantiationAwareBeanPostProcessor { @Override public PropertyValues postProcessProperties ( PropertyValues pvs , Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { for ( Field field : bean . getClass (). getFields ()) { if ( field . isAnnotationPresent ( ZhouyuInject . class )) { field . setAccessible ( true ); try { field . set ( bean , \"123\" ); } catch ( IllegalAccessException e ) { e . printStackTrace (); } } } } return pvs ; } } \u5173\u4e8e@Autowired\u3001@Resource\u3001@Value\u7684\u5e95\u5c42\u6e90\u7801\uff0c\u4f1a\u5728\u540e\u7eed\u7684\u4f9d\u8d56\u6ce8\u5165\u8bfe\u7a0b\u4e2d\u8be6\u89e3\u3002 10. \u6267\u884cAware \u5b8c\u6210\u4e86\u5c5e\u6027\u8d4b\u503c\u4e4b\u540e\uff0cSpring\u4f1a\u6267\u884c\u4e00\u4e9b\u56de\u8c03\uff0c\u5305\u62ec\uff1a BeanNameAware\uff1a\u56de\u4f20beanName\u7ed9bean\u5bf9\u8c61\u3002 BeanClassLoaderAware\uff1a\u56de\u4f20classLoader\u7ed9bean\u5bf9\u8c61\u3002 BeanFactoryAware\uff1a\u56de\u4f20beanFactory\u7ed9\u5bf9\u8c61\u3002 11. \u521d\u59cb\u5316\u524d \u521d\u59cb\u5316\u524d\uff0c\u4e5f\u662fSpring\u63d0\u4f9b\u7684\u4e00\u4e2a\u6269\u5c55\u70b9\uff1a BeanPostProcessor.postProcessBeforeInitialization() \uff0c\u6bd4\u5982 1 2 3 4 5 6 7 8 9 10 11 12 @Component public class ZhouyuBeanPostProcessor implements BeanPostProcessor { @Override public Object postProcessBeforeInitialization ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u521d\u59cb\u5316\u524d\" ); } return bean ; } } \u5229\u7528\u521d\u59cb\u5316\u524d\uff0c\u53ef\u4ee5\u5bf9\u8fdb\u884c\u4e86\u4f9d\u8d56\u6ce8\u5165\u7684Bean\u8fdb\u884c\u5904\u7406\u3002 \u200b \u5728Spring\u6e90\u7801\u4e2d\uff1a InitDestroyAnnotationBeanPostProcessor\u4f1a\u5728\u521d\u59cb\u5316\u524d\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\u6267\u884c@PostConstruct\u7684\u65b9\u6cd5\uff0c ApplicationContextAwareProcessor\u4f1a\u5728\u521d\u59cb\u5316\u524d\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\u8fdb\u884c\u5176\u4ed6Aware\u7684\u56de\u8c03\uff1a EnvironmentAware\uff1a\u56de\u4f20\u73af\u5883\u53d8\u91cf EmbeddedValueResolverAware\uff1a\u56de\u4f20\u5360\u4f4d\u7b26\u89e3\u6790\u5668 ResourceLoaderAware\uff1a\u56de\u4f20\u8d44\u6e90\u52a0\u8f7d\u5668 ApplicationEventPublisherAware\uff1a\u56de\u4f20\u4e8b\u4ef6\u53d1\u5e03\u5668 MessageSourceAware\uff1a\u56de\u4f20\u56fd\u9645\u5316\u8d44\u6e90 ApplicationStartupAware\uff1a\u56de\u4f20\u5e94\u7528\u5176\u4ed6\u76d1\u542c\u5bf9\u8c61\uff0c\u53ef\u5ffd\u7565 ApplicationContextAware\uff1a\u56de\u4f20Spring\u5bb9\u5668ApplicationContext 12. \u521d\u59cb\u5316 \u67e5\u770b\u5f53\u524dBean\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86InitializingBean\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\u5c31\u8c03\u7528\u5176afterPropertiesSet()\u65b9\u6cd5 \u6267\u884cBeanDefinition\u4e2d\u6307\u5b9a\u7684\u521d\u59cb\u5316\u65b9\u6cd5 13. \u521d\u59cb\u5316\u540e \u8fd9\u662fBean\u521b\u5efa\u751f\u547d\u5468\u671f\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u6b65\u9aa4\uff0c\u4e5f\u662fSpring\u63d0\u4f9b\u7684\u4e00\u4e2a\u6269\u5c55\u70b9\uff1a BeanPostProcessor.postProcessAfterInitialization() \uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 @Component public class ZhouyuBeanPostProcessor implements BeanPostProcessor { @Override public Object postProcessAfterInitialization ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u521d\u59cb\u5316\u540e\" ); } return bean ; } } \u53ef\u4ee5\u5728\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u5bf9Bean\u6700\u7ec8\u8fdb\u884c\u5904\u7406\uff0cSpring\u4e2d\u7684 AOP\u5c31\u662f\u57fa\u4e8e\u521d\u59cb\u5316\u540e\u5b9e\u73b0 \u7684\uff0c \u521d\u59cb\u5316\u540e\u8fd4\u56de\u7684\u5bf9\u8c61\u624d\u662f\u6700\u7ec8\u7684Bean\u5bf9\u8c61 \u3002 \u603b\u7ed3BeanPostProcessor InstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation() \u5b9e\u4f8b\u5316 MergedBeanDefinitionPostProcessor.postProcessMergedBeanDefinition() InstantiationAwareBeanPostProcessor.postProcessAfterInstantiation() \u81ea\u52a8\u6ce8\u5165 InstantiationAwareBeanPostProcessor.postProcessProperties() Aware\u5bf9\u8c61 BeanPostProcessor.postProcessBeforeInitialization() \u521d\u59cb\u5316 BeanPostProcessor.postProcessAfterInitialization()","title":"4.Spring\u4e4bBean\u751f\u547d\u5468\u671f\u6e90\u7801\u89e3\u6790\u4e0a"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#bean","text":"","title":"Bean\u7684\u751f\u6210\u8fc7\u7a0b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#1-beandefinition","text":"Spring\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u8fdb\u884c\u626b\u63cf\uff0c\u4f1a\u5148\u8c03\u7528 org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider#scanCandidateComponents(String basePackage) \u626b\u63cf\u67d0\u4e2a\u5305\u8def\u5f84\uff0c\u5e76\u5f97\u5230BeanDefinition\u7684Set\u96c6\u5408\u3002 \u200b \u5173\u4e8eSpring\u542f\u52a8\u6d41\u7a0b\uff0c\u540e\u7eed\u4f1a\u5355\u72ec\u7684\u8bfe\u8be6\u7ec6\u8bb2\uff0c\u8fd9\u91cc\u5148\u8bb2\u4e00\u4e0bSpring\u626b\u63cf\u7684\u5e95\u5c42\u5b9e\u73b0\uff1a \u200b Spring\u626b\u63cf\u5e95\u5c42\u6d41\u7a0b\uff1ahttps://www.processon.com/view/link/61370ee60e3e7412ecd95d43 \u200b \u9996\u5148\uff0c\u901a\u8fc7ResourcePatternResolver\u83b7\u5f97\u6307\u5b9a\u5305\u8def\u5f84\u4e0b\u7684\u6240\u6709 .class \u6587\u4ef6\uff08Spring\u6e90\u7801\u4e2d\u5c06\u6b64\u6587\u4ef6\u5305\u88c5\u6210\u4e86Resource\u5bf9\u8c61\uff09 \u904d\u5386\u6bcf\u4e2aResource\u5bf9\u8c61 \u5229\u7528MetadataReaderFactory\u89e3\u6790Resource\u5bf9\u8c61\u5f97\u5230MetadataReader\uff08\u5728Spring\u6e90\u7801\u4e2dMetadataReaderFactory\u5177\u4f53\u7684\u5b9e\u73b0\u7c7b\u4e3aCachingMetadataReaderFactory\uff0cMetadataReader\u7684\u5177\u4f53\u5b9e\u73b0\u7c7b\u4e3aSimpleMetadataReader\uff09 \u5229\u7528MetadataReader\u8fdb\u884cexcludeFilters\u548cincludeFilters\uff0c\u4ee5\u53ca\u6761\u4ef6\u6ce8\u89e3@Conditional\u7684\u7b5b\u9009\uff08\u6761\u4ef6\u6ce8\u89e3\u5e76\u4e0d\u80fd\u7406\u89e3\uff1a\u67d0\u4e2a\u7c7b\u4e0a\u662f\u5426\u5b58\u5728@Conditional\u6ce8\u89e3\uff0c\u5982\u679c\u5b58\u5728\u5219\u8c03\u7528\u6ce8\u89e3\u4e2d\u6240\u6307\u5b9a\u7684\u7c7b\u7684match\u65b9\u6cd5\u8fdb\u884c\u5339\u914d\uff0c\u5339\u914d\u6210\u529f\u5219\u901a\u8fc7\u7b5b\u9009\uff0c\u5339\u914d\u5931\u8d25\u5219pass\u6389\u3002\uff09 \u7b5b\u9009\u901a\u8fc7\u540e\uff0c\u57fa\u4e8emetadataReader\u751f\u6210ScannedGenericBeanDefinition \u518d\u57fa\u4e8emetadataReader\u5224\u65ad\u662f\u4e0d\u662f\u5bf9\u5e94\u7684\u7c7b\u662f\u4e0d\u662f\u63a5\u53e3\u6216\u62bd\u8c61\u7c7b \u5982\u679c\u7b5b\u9009\u901a\u8fc7\uff0c\u90a3\u4e48\u5c31\u8868\u793a\u626b\u63cf\u5230\u4e86\u4e00\u4e2aBean\uff0c\u5c06ScannedGenericBeanDefinition\u52a0\u5165\u7ed3\u679c\u96c6 MetadataReader\u8868\u793a\u7c7b\u7684\u5143\u6570\u636e\u8bfb\u53d6\u5668\uff0c\u4e3b\u8981\u5305\u542b\u4e86\u4e00\u4e2aAnnotationMetadata\uff0c\u529f\u80fd\u6709 \u83b7\u53d6\u7c7b\u7684\u540d\u5b57\u3001 \u83b7\u53d6\u7236\u7c7b\u7684\u540d\u5b57 \u83b7\u53d6\u6240\u5b9e\u73b0\u7684\u6240\u6709\u63a5\u53e3\u540d \u83b7\u53d6\u6240\u6709\u5185\u90e8\u7c7b\u7684\u540d\u5b57 \u5224\u65ad\u662f\u4e0d\u662f\u62bd\u8c61\u7c7b \u5224\u65ad\u662f\u4e0d\u662f\u63a5\u53e3 \u5224\u65ad\u662f\u4e0d\u662f\u4e00\u4e2a\u6ce8\u89e3 \u83b7\u53d6\u62e5\u6709\u67d0\u4e2a\u6ce8\u89e3\u7684\u65b9\u6cd5\u96c6\u5408 \u83b7\u53d6\u7c7b\u4e0a\u6dfb\u52a0\u7684\u6240\u6709\u6ce8\u89e3\u4fe1\u606f \u83b7\u53d6\u7c7b\u4e0a\u6dfb\u52a0\u7684\u6240\u6709\u6ce8\u89e3\u7c7b\u578b\u96c6\u5408 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cCachingMetadataReaderFactory\u89e3\u6790\u67d0\u4e2a.class\u6587\u4ef6\u5f97\u5230MetadataReader\u5bf9\u8c61\u662f\u5229\u7528\u7684 ASM \u6280\u672f\uff0c\u5e76\u6ca1\u6709\u52a0\u8f7d\u8fd9\u4e2a\u7c7b\u5230JVM\u3002\u5e76\u4e14\uff0c\u6700\u7ec8\u5f97\u5230\u7684ScannedGenericBeanDefinition\u5bf9\u8c61\uff0c beanClass\u5c5e\u6027\u5b58\u50a8\u7684\u662f\u5f53\u524d\u7c7b\u7684\u540d\u5b57\uff0c\u800c\u4e0d\u662fclass\u5bf9\u8c61 \u3002\uff08beanClass\u5c5e\u6027\u7684\u7c7b\u578b\u662fObject\uff0c\u5b83\u5373\u53ef\u4ee5\u5b58\u50a8\u7c7b\u7684\u540d\u5b57\uff0c\u4e5f\u53ef\u4ee5\u5b58\u50a8class\u5bf9\u8c61\uff09 \u200b \u6700\u540e\uff0c\u4e0a\u9762\u662f\u8bf4\u7684\u901a\u8fc7\u626b\u63cf\u5f97\u5230BeanDefinition\u5bf9\u8c61\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u5b9a\u4e49BeanDefinition\uff0c\u6216\u89e3\u6790spring.xml\u6587\u4ef6\u7684 \uff0c\u6216\u8005@Bean\u6ce8\u89e3\u5f97\u5230BeanDefinition\u5bf9\u8c61\u3002\uff08\u540e\u7eed\u8bfe\u7a0b\u4f1a\u5206\u6790@Bean\u6ce8\u89e3\u662f\u600e\u4e48\u751f\u6210BeanDefinition\u7684\uff09\u3002","title":"1. \u751f\u6210BeanDefinition"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#2-beandefinition","text":"\u901a\u8fc7\u626b\u63cf\u5f97\u5230\u6240\u6709BeanDefinition\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u6839\u636eBeanDefinition\u521b\u5efaBean\u5bf9\u8c61\u4e86\uff0c\u4f46\u662f\u5728Spring\u4e2d\u652f\u6301\u7236\u5b50BeanDefinition\uff0c\u548cJava\u7236\u5b50\u7c7b\u7c7b\u4f3c\uff0c\u4f46\u662f\u5b8c\u5168\u4e0d\u662f\u4e00\u56de\u4e8b\u3002 \u7236\u5b50BeanDefinition\u5b9e\u9645\u7528\u7684\u6bd4\u8f83\u5c11\uff0c\u4f7f\u7528\u662f\u8fd9\u6837\u7684\uff0c\u6bd4\u5982\uff1a 1 2 < bean id = \"parent\" class =\" com . zhouyu . service . Parent \" scope=\" prototype \"/> <bean id=\" child \" class=\" com . zhouyu . service . Child \"/> \u8fd9\u4e48\u5b9a\u4e49\u7684\u60c5\u51b5\u4e0b\uff0cchild\u662f\u5355\u4f8bBean\u3002 1 2 < bean id = \"parent\" class =\" com . zhouyu . service . Parent \" scope=\" prototype \"/> <bean id=\" child \" class=\" com . zhouyu . service . Child \" parent=\" parent \"/> \u4f46\u662f\u8fd9\u4e48\u5b9a\u4e49\u7684\u60c5\u51b5\u4e0b\uff0cchild\u5c31\u662f\u539f\u578bBean\u4e86\u3002 \u200b \u56e0\u4e3achild\u7684\u7236BeanDefinition\u662fparent\uff0c\u6240\u4ee5\u4f1a\u7ee7\u627fparent\u4e0a\u6240\u5b9a\u4e49\u7684scope\u5c5e\u6027\u3002 \u200b \u800c\u5728\u6839\u636echild\u6765\u751f\u6210Bean\u5bf9\u8c61\u4e4b\u524d\uff0c\u9700\u8981\u8fdb\u884cBeanDefinition\u7684\u5408\u5e76\uff0c\u5f97\u5230\u5b8c\u6574\u7684child\u7684BeanDefinition\u3002 \u200b","title":"2. \u5408\u5e76BeanDefinition"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#3","text":"BeanDefinition\u5408\u5e76\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u53bb\u521b\u5efaBean\u5bf9\u8c61\u4e86\uff0c\u800c\u521b\u5efaBean\u5c31\u5fc5\u987b\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u800c\u5b9e\u4f8b\u5316\u5c31\u5fc5\u987b\u5148\u52a0\u8f7d\u5f53\u524dBeanDefinition\u6240\u5bf9\u5e94\u7684class\uff0c\u5728AbstractAutowireCapableBeanFactory\u7c7b\u7684createBean()\u65b9\u6cd5\u4e2d\uff0c\u4e00\u5f00\u59cb\u5c31\u4f1a\u8c03\u7528\uff1a 1 Class <?> resolvedClass = resolveBeanClass ( mbd , beanName ); \u8fd9\u884c\u4ee3\u7801\u5c31\u662f\u53bb\u52a0\u8f7d\u7c7b\uff0c\u8be5\u65b9\u6cd5\u662f\u8fd9\u4e48\u5b9e\u73b0\u7684\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 if ( mbd . hasBeanClass ()) { return mbd . getBeanClass (); } if ( System . getSecurityManager () != null ) { return AccessController . doPrivileged (( PrivilegedExceptionAction < Class <?>> ) () -> doResolveBeanClass ( mbd , typesToMatch ), getAccessControlContext ()); } else { return doResolveBeanClass ( mbd , typesToMatch ); } public boolean hasBeanClass () { return ( this . beanClass instanceof Class ); } \u5982\u679cbeanClass\u5c5e\u6027\u7684\u7c7b\u578b\u662fClass\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u8fd4\u56de\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5219\u4f1a\u6839\u636e\u7c7b\u540d\u8fdb\u884c\u52a0\u8f7d\uff08doResolveBeanClass\u65b9\u6cd5\u6240\u505a\u7684\u4e8b\u60c5\uff09 \u4f1a\u5229\u7528BeanFactory\u6240\u8bbe\u7f6e\u7684\u7c7b\u52a0\u8f7d\u5668\u6765\u52a0\u8f7d\u7c7b\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u9ed8\u8ba4\u4f7f\u7528 ClassUtils.getDefaultClassLoader() \u6240\u8fd4\u56de\u7684\u7c7b\u52a0\u8f7d\u5668\u6765\u52a0\u8f7d\u3002 ClassUtils.getDefaultClassLoader() \u4f18\u5148\u8fd4\u56de\u5f53\u524d\u7ebf\u7a0b\u4e2d\u7684ClassLoader \u7ebf\u7a0b\u4e2d\u7c7b\u52a0\u8f7d\u5668\u4e3anull\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56deClassUtils\u7c7b\u7684\u7c7b\u52a0\u8f7d\u5668 \u5982\u679cClassUtils\u7c7b\u7684\u7c7b\u52a0\u8f7d\u5668\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5219\u8868\u793a\u662fBootstrap\u7c7b\u52a0\u8f7d\u5668\u52a0\u8f7d\u7684ClassUtils\u7c7b\uff0c\u90a3\u4e48\u5219\u8fd4\u56de\u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668","title":"3. \u52a0\u8f7d\u7c7b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#4","text":"\u5f53\u524dBeanDefinition\u5bf9\u5e94\u7684\u7c7b\u6210\u529f\u52a0\u8f7d\u540e\uff0c\u5c31\u53ef\u4ee5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u4e86\uff0c\u4f46\u662f... \u200b \u5728Spring\u4e2d\uff0c\u5b9e\u4f8b\u5316\u5bf9\u8c61\u4e4b\u524d\uff0cSpring\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6269\u5c55\u70b9\uff0c\u5141\u8bb8\u7528\u6237\u6765\u63a7\u5236\u662f\u5426\u5728\u67d0\u4e2a\u6216\u67d0\u4e9bBean\u5b9e\u4f8b\u5316\u4e4b\u524d\u505a\u4e00\u4e9b\u542f\u52a8\u52a8\u4f5c\u3002\u8fd9\u4e2a\u6269\u5c55\u70b9\u53eb InstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation() \u3002\u6bd4\u5982\uff1a \u200b 1 2 3 4 5 6 7 8 9 10 11 @Component public class ZhouyuBeanPostProcessor implements InstantiationAwareBeanPostProcessor { @Override public Object postProcessBeforeInstantiation ( Class <?> beanClass , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u5b9e\u4f8b\u5316\u524d\" ); } return null ; } } \u5982\u4e0a\u4ee3\u7801\u4f1a\u5bfc\u81f4\uff0c\u5728userService\u8fd9\u4e2aBean\u5b9e\u4f8b\u5316\u524d\uff0c\u4f1a\u8fdb\u884c\u6253\u5370\u3002 \u200b \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cpostProcessBeforeInstantiation()\u662f\u6709\u8fd4\u56de\u503c\u7684\uff0c\u5982\u679c\u8fd9\u4e48\u5b9e\u73b0\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 @Component public class ZhouyuBeanPostProcessor implements InstantiationAwareBeanPostProcessor { @Override public Object postProcessBeforeInstantiation ( Class <?> beanClass , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u5b9e\u4f8b\u5316\u524d\" ); return new UserService (); } return null ; } } userService\u8fd9\u4e2aBean\uff0c\u5728\u5b9e\u4f8b\u5316\u524d\u4f1a\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u7531\u6211\u4eec\u6240\u5b9a\u4e49\u7684UserService\u5bf9\u8c61\u3002\u5982\u679c\u662f\u8fd9\u6837\uff0c\u8868\u793a\u4e0d\u9700\u8981Spring\u6765\u5b9e\u4f8b\u5316\u4e86\uff0c\u5e76\u4e14\u540e\u7eed\u7684Spring\u4f9d\u8d56\u6ce8\u5165\u4e5f\u4e0d\u4f1a\u8fdb\u884c\u4e86\uff0c\u4f1a\u8df3\u8fc7\u4e00\u4e9b\u6b65\u9aa4\uff0c\u76f4\u63a5\u6267\u884c\u521d\u59cb\u5316\u540e\u8fd9\u4e00\u6b65\u3002","title":"4. \u5b9e\u4f8b\u5316\u524d"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#5","text":"\u5728\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\u5c31\u4f1a\u6839\u636eBeanDefinition\u53bb\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u4e86\u3002","title":"5. \u5b9e\u4f8b\u5316"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#51-supplier","text":"\u9996\u5148\u5224\u65adBeanDefinition\u4e2d\u662f\u5426\u8bbe\u7f6e\u4e86Supplier\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\u5219\u8c03\u7528Supplier\u7684get()\u5f97\u5230\u5bf9\u8c61\u3002 \u200b \u5f97\u76f4\u63a5\u4f7f\u7528BeanDefinition\u5bf9\u8c61\u6765\u8bbe\u7f6eSupplier\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder . genericBeanDefinition (). getBeanDefinition (); beanDefinition . setInstanceSupplier ( new Supplier < Object > () { @Override public Object get () { return new UserService (); } }); context . registerBeanDefinition ( \"userService\" , beanDefinition );","title":"5.1 Supplier\u521b\u5efa\u5bf9\u8c61"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#52","text":"\u5982\u679c\u6ca1\u6709\u8bbe\u7f6eSupplier\uff0c\u5219\u68c0\u67e5BeanDefinition\u4e2d\u662f\u5426\u8bbe\u7f6e\u4e86factoryMethod\uff0c\u4e5f\u5c31\u662f\u5de5\u5382\u65b9\u6cd5\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8bbe\u7f6efactoryMethod\uff0c\u6bd4\u5982\uff1a \u200b \u65b9\u5f0f\u4e00\uff1a 1 < bean id = \"userService\" class =\" com . zhouyu . service . UserService \" factory-method=\" createUserService \" /> \u5bf9\u5e94\u7684UserService\u7c7b\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 public class UserService { public static UserService createUserService () { System . out . println ( \"\u6267\u884ccreateUserService()\" ); UserService userService = new UserService (); return userService ; } public void test () { System . out . println ( \"test\" ); } } \u65b9\u5f0f\u4e8c\uff1a 1 2 < bean id = \"commonService\" class =\" com . zhouyu . service . CommonService \"/> <bean id=\" userService1 \" factory-bean=\" commonService \" factory-method=\" createUserService \" /> \u5bf9\u5e94\u7684CommonService\u7684\u7c7b\u4e3a\uff1a 1 2 3 4 5 6 public class CommonService { public UserService createUserService () { return new UserService (); } } Spring\u53d1\u73b0\u5f53\u524dBeanDefinition\u65b9\u6cd5\u8bbe\u7f6e\u4e86\u5de5\u5382\u65b9\u6cd5\u540e\uff0c\u5c31\u4f1a\u533a\u5206\u8fd9\u4e24\u79cd\u65b9\u5f0f\uff0c\u7136\u540e\u8c03\u7528\u5de5\u5382\u65b9\u6cd5\u5f97\u5230\u5bf9\u8c61\u3002 \u200b \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u901a\u8fc7@Bean\u6240\u5b9a\u4e49\u7684BeanDefinition\uff0c\u662f\u5b58\u5728factoryMethod\u548cfactoryBean\u7684\uff0c\u4e5f\u5c31\u662f\u548c\u4e0a\u9762\u7684\u65b9\u5f0f\u4e8c\u975e\u5e38\u7c7b\u4f3c\uff0c@Bean\u6240\u6ce8\u89e3\u7684\u65b9\u6cd5\u5c31\u662ffactoryMethod\uff0cAppConfig\u5bf9\u8c61\u5c31\u662ffactoryBean\u3002\u5982\u679c@Bean\u6240\u6240\u6ce8\u89e3\u7684\u65b9\u6cd5\u662fstatic\u7684\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u5c31\u662f\u65b9\u5f0f\u4e00\u3002","title":"5.2 \u5de5\u5382\u65b9\u6cd5\u521b\u5efa\u5bf9\u8c61"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#53","text":"\u7b2c\u4e00\u8282\u5df2\u7ecf\u8bb2\u8fc7\u4e00\u904d\u5927\u6982\u539f\u7406\u4e86\uff0c\u540e\u9762\u6709\u4e00\u8282\u8bfe\u5355\u72ec\u5206\u6790\u6e90\u7801\u5b9e\u73b0\u3002\u63a8\u65ad\u5b8c\u6784\u9020\u65b9\u6cd5\u540e\uff0c\u5c31\u4f1a\u4f7f\u7528\u6784\u9020\u65b9\u6cd5\u6765\u8fdb\u884c\u5b9e\u4f8b\u5316\u4e86\u3002 \u200b \u989d\u5916\u7684\uff0c\u5728\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u903b\u8f91\u4e2d\u9664\u5f00\u4f1a\u53bb\u9009\u62e9\u6784\u9020\u65b9\u6cd5\u4ee5\u53ca\u67e5\u627e\u5165\u53c2\u5bf9\u8c61\u610f\u5916\uff0c\u4f1a\u8fd8\u5224\u65ad\u662f\u5426\u5728\u5bf9\u5e94\u7684\u7c7b\u4e2d\u662f\u5426\u5b58\u5728\u4f7f\u7528 @Lookup\u6ce8\u89e3 \u4e86\u65b9\u6cd5\u3002\u5982\u679c\u5b58\u5728\u5219\u628a\u8be5\u65b9\u6cd5\u5c01\u88c5\u4e3aLookupOverride\u5bf9\u8c61\u5e76\u6dfb\u52a0\u5230BeanDefinition\u4e2d\u3002 \u200b \u5728\u5b9e\u4f8b\u5316\u65f6\uff0c\u5982\u679c\u5224\u65ad\u51fa\u6765\u5f53\u524dBeanDefinition\u4e2d\u6ca1\u6709LookupOverride\uff0c\u90a3\u5c31\u76f4\u63a5\u7528\u6784\u9020\u65b9\u6cd5\u53cd\u5c04\u5f97\u5230\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u3002\u5982\u679c\u5b58\u5728LookupOverride\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u7c7b\u4e2d\u5b58\u5728@Lookup\u6ce8\u89e3\u4e86\u7684\u65b9\u6cd5\uff0c\u90a3\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b @Lookup\u6ce8\u89e3\u5c31\u662f \u65b9\u6cd5\u6ce8\u5165 \uff0c\u4f7f\u7528demo\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @Component public class UserService { private OrderService orderService ; public void test () { OrderService orderService = createOrderService (); System . out . println ( orderService ); } @Lookup ( \"orderService\" ) public OrderService createOrderService () { return null ; } }","title":"5.3 \u63a8\u65ad\u6784\u9020\u65b9\u6cd5"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#6-beandefinition","text":"Bean\u5bf9\u8c61\u5b9e\u4f8b\u5316\u51fa\u6765\u4e4b\u540e\uff0c\u63a5\u4e0b\u6765\u5c31\u5e94\u8be5\u7ed9\u5bf9\u8c61\u7684\u5c5e\u6027\u8d4b\u503c\u4e86\u3002\u5728\u771f\u6b63\u7ed9\u5c5e\u6027\u8d4b\u503c\u4e4b\u524d\uff0cSpring\u53c8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6269\u5c55\u70b9 MergedBeanDefinitionPostProcessor.postProcessMergedBeanDefinition() \uff0c\u53ef\u4ee5\u5bf9\u6b64\u65f6\u7684BeanDefinition\u8fdb\u884c\u52a0\u5de5\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 @Component public class ZhouyuMergedBeanDefinitionPostProcessor implements MergedBeanDefinitionPostProcessor { @Override public void postProcessMergedBeanDefinition ( RootBeanDefinition beanDefinition , Class <?> beanType , String beanName ) { if ( \"userService\" . equals ( beanName )) { beanDefinition . getPropertyValues (). add ( \"orderService\" , new OrderService ()); } } } \u5728Spring\u6e90\u7801\u4e2d\uff0cAutowiredAnnotationBeanPostProcessor\u5c31\u662f\u4e00\u4e2aMergedBeanDefinitionPostProcessor\uff0c\u5b83\u7684postProcessMergedBeanDefinition()\u4e2d\u4f1a\u53bb\u67e5\u627e\u6ce8\u5165\u70b9\uff0c\u5e76\u7f13\u5b58\u5728AutowiredAnnotationBeanPostProcessor\u5bf9\u8c61\u7684\u4e00\u4e2aMap\u4e2d\uff08injectionMetadataCache\uff09\u3002","title":"6. BeanDefinition\u7684\u540e\u7f6e\u5904\u7406"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#7","text":"\u5728\u5904\u7406\u5b8cBeanDefinition\u540e\uff0cSpring\u53c8\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u6269\u5c55\u70b9\uff1a InstantiationAwareBeanPostProcessor.postProcessAfterInstantiation() \uff0c\u6bd4\u5982\uff1a \u200b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 @Component public class ZhouyuInstantiationAwareBeanPostProcessor implements InstantiationAwareBeanPostProcessor { @Override public boolean postProcessAfterInstantiation ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { UserService userService = ( UserService ) bean ; userService . test (); } return true ; } } \u4e0a\u8ff0\u4ee3\u7801\u5c31\u662f\u5bf9userService\u6240\u5b9e\u4f8b\u5316\u51fa\u6765\u7684\u5bf9\u8c61\u8fdb\u884c\u5904\u7406\u3002 \u200b \u8fd9\u4e2a\u6269\u5c55\u70b9\uff0c\u5728Spring\u6e90\u7801\u4e2d\u57fa\u672c\u6ca1\u6709\u600e\u4e48\u4f7f\u7528\u3002","title":"7. \u5b9e\u4f8b\u5316\u540e"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#8","text":"\u8fd9\u91cc\u7684\u81ea\u52a8\u6ce8\u5165\u6307\u7684\u662fSpring\u7684\u81ea\u52a8\u6ce8\u5165\uff0c\u540e\u7eed\u4f9d\u8d56\u6ce8\u5165\u8bfe\u7a0b\u4e2d\u5355\u72ec\u8bb2 \u200b","title":"8. \u81ea\u52a8\u6ce8\u5165"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#9","text":"\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u5c31\u4f1a\u5904\u7406@Autowired\u3001@Resource\u3001@Value\u7b49\u6ce8\u89e3\uff0c\u4e5f\u662f\u901a\u8fc7 InstantiationAwareBeanPostProcessor.postProcessProperties() \u6269\u5c55\u70b9\u6765\u5b9e\u73b0\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5df1\u7684\u81ea\u52a8\u6ce8\u5165\u529f\u80fd\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 @Component public class ZhouyuInstantiationAwareBeanPostProcessor implements InstantiationAwareBeanPostProcessor { @Override public PropertyValues postProcessProperties ( PropertyValues pvs , Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { for ( Field field : bean . getClass (). getFields ()) { if ( field . isAnnotationPresent ( ZhouyuInject . class )) { field . setAccessible ( true ); try { field . set ( bean , \"123\" ); } catch ( IllegalAccessException e ) { e . printStackTrace (); } } } } return pvs ; } } \u5173\u4e8e@Autowired\u3001@Resource\u3001@Value\u7684\u5e95\u5c42\u6e90\u7801\uff0c\u4f1a\u5728\u540e\u7eed\u7684\u4f9d\u8d56\u6ce8\u5165\u8bfe\u7a0b\u4e2d\u8be6\u89e3\u3002","title":"9. \u5904\u7406\u5c5e\u6027"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#10-aware","text":"\u5b8c\u6210\u4e86\u5c5e\u6027\u8d4b\u503c\u4e4b\u540e\uff0cSpring\u4f1a\u6267\u884c\u4e00\u4e9b\u56de\u8c03\uff0c\u5305\u62ec\uff1a BeanNameAware\uff1a\u56de\u4f20beanName\u7ed9bean\u5bf9\u8c61\u3002 BeanClassLoaderAware\uff1a\u56de\u4f20classLoader\u7ed9bean\u5bf9\u8c61\u3002 BeanFactoryAware\uff1a\u56de\u4f20beanFactory\u7ed9\u5bf9\u8c61\u3002","title":"10. \u6267\u884cAware"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#11","text":"\u521d\u59cb\u5316\u524d\uff0c\u4e5f\u662fSpring\u63d0\u4f9b\u7684\u4e00\u4e2a\u6269\u5c55\u70b9\uff1a BeanPostProcessor.postProcessBeforeInitialization() \uff0c\u6bd4\u5982 1 2 3 4 5 6 7 8 9 10 11 12 @Component public class ZhouyuBeanPostProcessor implements BeanPostProcessor { @Override public Object postProcessBeforeInitialization ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u521d\u59cb\u5316\u524d\" ); } return bean ; } } \u5229\u7528\u521d\u59cb\u5316\u524d\uff0c\u53ef\u4ee5\u5bf9\u8fdb\u884c\u4e86\u4f9d\u8d56\u6ce8\u5165\u7684Bean\u8fdb\u884c\u5904\u7406\u3002 \u200b \u5728Spring\u6e90\u7801\u4e2d\uff1a InitDestroyAnnotationBeanPostProcessor\u4f1a\u5728\u521d\u59cb\u5316\u524d\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\u6267\u884c@PostConstruct\u7684\u65b9\u6cd5\uff0c ApplicationContextAwareProcessor\u4f1a\u5728\u521d\u59cb\u5316\u524d\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\u8fdb\u884c\u5176\u4ed6Aware\u7684\u56de\u8c03\uff1a EnvironmentAware\uff1a\u56de\u4f20\u73af\u5883\u53d8\u91cf EmbeddedValueResolverAware\uff1a\u56de\u4f20\u5360\u4f4d\u7b26\u89e3\u6790\u5668 ResourceLoaderAware\uff1a\u56de\u4f20\u8d44\u6e90\u52a0\u8f7d\u5668 ApplicationEventPublisherAware\uff1a\u56de\u4f20\u4e8b\u4ef6\u53d1\u5e03\u5668 MessageSourceAware\uff1a\u56de\u4f20\u56fd\u9645\u5316\u8d44\u6e90 ApplicationStartupAware\uff1a\u56de\u4f20\u5e94\u7528\u5176\u4ed6\u76d1\u542c\u5bf9\u8c61\uff0c\u53ef\u5ffd\u7565 ApplicationContextAware\uff1a\u56de\u4f20Spring\u5bb9\u5668ApplicationContext","title":"11. \u521d\u59cb\u5316\u524d"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#12","text":"\u67e5\u770b\u5f53\u524dBean\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86InitializingBean\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\u5c31\u8c03\u7528\u5176afterPropertiesSet()\u65b9\u6cd5 \u6267\u884cBeanDefinition\u4e2d\u6307\u5b9a\u7684\u521d\u59cb\u5316\u65b9\u6cd5","title":"12. \u521d\u59cb\u5316"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#13","text":"\u8fd9\u662fBean\u521b\u5efa\u751f\u547d\u5468\u671f\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u6b65\u9aa4\uff0c\u4e5f\u662fSpring\u63d0\u4f9b\u7684\u4e00\u4e2a\u6269\u5c55\u70b9\uff1a BeanPostProcessor.postProcessAfterInitialization() \uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 @Component public class ZhouyuBeanPostProcessor implements BeanPostProcessor { @Override public Object postProcessAfterInitialization ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u521d\u59cb\u5316\u540e\" ); } return bean ; } } \u53ef\u4ee5\u5728\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u5bf9Bean\u6700\u7ec8\u8fdb\u884c\u5904\u7406\uff0cSpring\u4e2d\u7684 AOP\u5c31\u662f\u57fa\u4e8e\u521d\u59cb\u5316\u540e\u5b9e\u73b0 \u7684\uff0c \u521d\u59cb\u5316\u540e\u8fd4\u56de\u7684\u5bf9\u8c61\u624d\u662f\u6700\u7ec8\u7684Bean\u5bf9\u8c61 \u3002","title":"13. \u521d\u59cb\u5316\u540e"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8BBean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8A/#beanpostprocessor","text":"InstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation() \u5b9e\u4f8b\u5316 MergedBeanDefinitionPostProcessor.postProcessMergedBeanDefinition() InstantiationAwareBeanPostProcessor.postProcessAfterInstantiation() \u81ea\u52a8\u6ce8\u5165 InstantiationAwareBeanPostProcessor.postProcessProperties() Aware\u5bf9\u8c61 BeanPostProcessor.postProcessBeforeInitialization() \u521d\u59cb\u5316 BeanPostProcessor.postProcessAfterInitialization()","title":"\u603b\u7ed3BeanPostProcessor"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/","text":"\u524d\u9762\u4e24\u8282\u8bfe\uff0c\u6211\u4eec\u5927\u6982\u4e86\u89e3\u4e86Spring\u4e2d\u7684\u4e00\u4e9b\u6982\u5ff5\u548c\u5e95\u5c42\u5de5\u4f5c\u6d41\u7a0b\uff0c\u672c\u8282\u8bfe\u5f00\u59cb\u5c06\u771f\u6b63\u8bb2\u4e00\u4e9bSpring\u4e2d\u7684\u6982\u5ff5\u548c\u5de5\u4f5c\u6d41\u7a0b\u3002 \u672c\u8282\u8bfe\u7684\u5185\u5bb9\uff0c\u662f\u540e\u7eed\u770bSpring\u6e90\u7801\u6240\u5fc5\u5907\u7684\uff0c\u9632\u6b62\u540e\u7eed\u770b\u6e90\u7801\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9047\u5230\u4e0d\u4f1a\u7684\u6982\u5ff5\u5f97\u5355\u72ec\u8df3\u51fa\u6765\u5b66\u4e60\u3002 BeanDefinition BeanDefinition\u8868\u793aBean\u5b9a\u4e49\uff0cBeanDefinition\u4e2d\u5b58\u5728\u5f88\u591a\u5c5e\u6027\u7528\u6765\u63cf\u8ff0\u4e00\u4e2aBean\u7684\u7279\u70b9\u3002\u6bd4\u5982\uff1a \u25cfclass\uff0c\u8868\u793aBean\u7c7b\u578b \u25cfscope\uff0c\u8868\u793aBean\u4f5c\u7528\u57df\uff0c\u5355\u4f8b\u6216\u539f\u578b\u7b49 \u25cflazyInit\uff1a\u8868\u793aBean\u662f\u5426\u662f\u61d2\u52a0\u8f7d \u25cfinitMethodName\uff1a\u8868\u793aBean\u521d\u59cb\u5316\u65f6\u8981\u6267\u884c\u7684\u65b9\u6cd5 \u25cfdestroyMethodName\uff1a\u8868\u793aBean\u9500\u6bc1\u65f6\u8981\u6267\u884c\u7684\u65b9\u6cd5 \u25cf\u8fd8\u6709\u5f88\u591a... \u5728Spring\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u901a\u8fc7\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u6765\u5b9a\u4e49Bean\uff1a ' ' @Bean @Component(@Service,@Controller) \u8fd9\u4e9b\uff0c\u6211\u4eec\u53ef\u4ee5\u79f0\u4e4b\u7533\u660e\u5f0f\u5b9a\u4e49Bean\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u7f16\u7a0b\u5f0f\u5b9a\u4e49Bean\uff0c\u90a3\u5c31\u662f\u76f4\u63a5\u901a\u8fc7BeanDefinition\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); // \u751f\u6210\u4e00\u4e2aBeanDefinition\u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6ebeanClass\u4e3aUser.class\uff0c\u5e76\u6ce8\u518c\u5230ApplicationContext\u4e2d AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder . genericBeanDefinition (). getBeanDefinition (); beanDefinition . setBeanClass ( User . class ); context . registerBeanDefinition ( \"user\" , beanDefinition ); System . out . println ( context . getBean ( \"user\" )); \u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7BeanDefinition\u8bbe\u7f6e\u4e00\u4e2aBean\u7684\u5176\u4ed6\u5c5e\u6027 1 2 3 beanDefinition . setScope ( \"prototype\" ); // \u8bbe\u7f6e\u4f5c\u7528\u57df beanDefinition . setInitMethodName ( \"init\" ); // \u8bbe\u7f6e\u521d\u59cb\u5316\u65b9\u6cd5 beanDefinition . setLazyInit ( true ); // \u8bbe\u7f6e\u61d2\u52a0\u8f7d \u548c\u7533\u660e\u5f0f\u4e8b\u52a1\u3001\u7f16\u7a0b\u5f0f\u4e8b\u52a1\u7c7b\u4f3c\uff0c\u901a\u8fc7 \uff0c@Bean\uff0c@Component\u7b49\u7533\u660e\u5f0f\u65b9\u5f0f\u6240\u5b9a\u4e49\u7684Bean\uff0c\u6700\u7ec8\u90fd\u4f1a\u88abSpring\u89e3\u6790\u4e3a\u5bf9\u5e94\u7684BeanDefinition\u5bf9\u8c61\uff0c\u5e76\u653e\u5165Spring\u5bb9\u5668\u4e2d\u3002 BeanDefinitionReader \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u4ecb\u7ecd\u51e0\u79cd\u5728Spring\u6e90\u7801\u4e2d\u6240\u63d0\u4f9b\u7684BeanDefinition\u8bfb\u53d6\u5668\uff08BeanDefinitionReader\uff09\uff0c\u8fd9\u4e9bBeanDefinitionReader\u5728\u6211\u4eec\u4f7f\u7528Spring\u65f6\u7528\u5f97\u5c11\uff0c\u4f46\u5728Spring\u6e90\u7801\u4e2d\u7528\u5f97\u591a\uff0c\u76f8\u5f53\u4e8eSpring\u6e90\u7801\u7684\u57fa\u7840\u8bbe\u65bd\u3002 AnnotatedBeanDefinitionReader \u53ef\u4ee5\u76f4\u63a5\u628a\u67d0\u4e2a\u7c7b\u8f6c\u6362\u4e3aBeanDefinition\uff0c\u5e76\u4e14\u4f1a\u89e3\u6790\u8be5\u7c7b\u4e0a\u7684\u6ce8\u89e3\uff0c\u6bd4\u5982 1 2 3 4 5 6 7 8 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); AnnotatedBeanDefinitionReader annotatedBeanDefinitionReader = new AnnotatedBeanDefinitionReader ( context ); // \u5c06User.class\u89e3\u6790\u4e3aBeanDefinition annotatedBeanDefinitionReader . register ( User . class ); System . out . println ( context . getBean ( \"user\" )); \u6ce8\u610f\uff1a\u5b83\u80fd\u89e3\u6790\u7684\u6ce8\u89e3\u662f\uff1a@Conditional\uff0c@Scope\u3001@Lazy\u3001@Primary\u3001@DependsOn\u3001@Role\u3001@Description XmlBeanDefinitionReader \u53ef\u4ee5\u89e3\u6790 \u6807\u7b7e 1 2 3 4 5 6 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); XmlBeanDefinitionReader xmlBeanDefinitionReader = new XmlBeanDefinitionReader ( context ); int i = xmlBeanDefinitionReader . loadBeanDefinitions ( \"spring.xml\" ); System . out . println ( context . getBean ( \"user\" )); ClassPathBeanDefinitionScanner ClassPathBeanDefinitionScanner\u662f\u626b\u63cf\u5668\uff0c\u4f46\u662f\u5b83\u7684\u4f5c\u7528\u548cBeanDefinitionReader\u7c7b\u4f3c\uff0c\u5b83\u53ef\u4ee5\u8fdb\u884c\u626b\u63cf\uff0c\u626b\u63cf\u67d0\u4e2a\u5305\u8def\u5f84\uff0c\u5bf9\u626b\u63cf\u5230\u7684\u7c7b\u8fdb\u884c\u89e3\u6790\uff0c\u6bd4\u5982\uff0c\u626b\u63cf\u5230\u7684\u7c7b\u4e0a\u5982\u679c\u5b58\u5728@Component\u6ce8\u89e3\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u8fd9\u4e2a\u7c7b\u89e3\u6790\u4e3a\u4e00\u4e2aBeanDefinition\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext (); context . refresh (); ClassPathBeanDefinitionScanner scanner = new ClassPathBeanDefinitionScanner ( context ); scanner . scan ( \"com.zhouyu\" ); System . out . println ( context . getBean ( \"userService\" )); BeanFactory BeanFactory\u8868\u793aBean \u5de5\u5382 \uff0c\u6240\u4ee5\u5f88\u660e\u663e\uff0cBeanFactory\u4f1a\u8d1f\u8d23\u521b\u5efaBean\uff0c\u5e76\u4e14\u63d0\u4f9b\u83b7\u53d6Bean\u7684API\u3002 \u800cApplicationContext\u662fBeanFactory\u7684\u4e00\u79cd\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u662f\u8fd9\u4e48\u5b9a\u4e49\u7684\uff1a 1 2 3 4 5 public interface ApplicationContext extends EnvironmentCapable , ListableBeanFactory , HierarchicalBeanFactory , MessageSource , ApplicationEventPublisher , ResourcePatternResolver { ... } \u9996\u5148\uff0c\u5728Java\u4e2d\uff0c\u63a5\u53e3\u662f\u53ef\u4ee5\u591a\u7ee7\u627f\u7684\uff0c\u6211\u4eec\u53d1\u73b0ApplicationContext\u7ee7\u627f\u4e86ListableBeanFactory\u548cHierarchicalBeanFactory\uff0c\u800cListableBeanFactory\u548cHierarchicalBeanFactory\u90fd\u7ee7\u627f\u81f3BeanFactory\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3aApplicationContext\u7ee7\u627f\u4e86BeanFactory\uff0c\u76f8\u5f53\u4e8e\u82f9\u679c\u7ee7\u627f\u6c34\u679c\uff0c\u5b9d\u9a6c\u7ee7\u627f\u6c7d\u8f66\u4e00\u6837\uff0cApplicationContext\u4e5f\u662fBeanFactory\u7684\u4e00\u79cd\uff0c\u62e5\u6709BeanFactory\u652f\u6301\u7684\u6240\u6709\u529f\u80fd\uff0c\u4e0d\u8fc7ApplicationContext\u6bd4BeanFactory\u66f4\u52a0\u5f3a\u5927\uff0cApplicationContext\u8fd8\u57fa\u7840\u4e86\u5176\u4ed6\u63a5\u53e3\uff0c\u4e5f\u5c31\u8868\u793aApplicationContext\u8fd8\u62e5\u6709\u5176\u4ed6\u529f\u80fd\uff0c\u6bd4\u5982MessageSource\u8868\u793a\u56fd\u9645\u5316\uff0cApplicationEventPublisher\u8868\u793a\u4e8b\u4ef6\u53d1\u5e03\uff0cEnvironmentCapable\u8868\u793a\u83b7\u53d6\u73af\u5883\u53d8\u91cf\uff0c\u7b49\u7b49\uff0c\u5173\u4e8eApplicationContext\u540e\u9762\u518d\u8be6\u7ec6\u8ba8\u8bba\u3002 \u5728Spring\u7684\u6e90\u7801\u5b9e\u73b0\u4e2d\uff0c\u5f53\u6211\u4eecnew\u4e00\u4e2aApplicationContext\u65f6\uff0c\u5176\u5e95\u5c42\u4f1anew\u4e00\u4e2aBeanFactory\u51fa\u6765\uff0c\u5f53\u4f7f\u7528ApplicationContext\u7684\u67d0\u4e9b\u65b9\u6cd5\u65f6\uff0c\u6bd4\u5982getBean()\uff0c\u5e95\u5c42\u8c03\u7528\u7684\u662fBeanFactory\u7684getBean()\u65b9\u6cd5\u3002 \u5728Spring\u6e90\u7801\u4e2d\uff0cBeanFactory\u63a5\u53e3\u5b58\u5728\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5b9e\u73b0\u7c7b\u662f\uff1a DefaultListableBeanFactory \uff0c \u4e5f\u662f\u975e\u5e38\u6838\u5fc3\u7684 \u3002\u5177\u4f53\u91cd\u8981\u6027\uff0c\u968f\u7740\u540e\u7eed\u8bfe\u7a0b\u4f1a\u611f\u53d7\u66f4\u6df1\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6765\u4f7f\u7528 DefaultListableBeanFactory \uff0c\u800c\u4e0d\u7528\u4f7f\u7528ApplicationContext\u7684\u67d0\u4e2a\u5b9e\u73b0\u7c7b\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 DefaultListableBeanFactory beanFactory = new DefaultListableBeanFactory (); AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder . genericBeanDefinition (). getBeanDefinition (); beanDefinition . setBeanClass ( User . class ); beanFactory . registerBeanDefinition ( \"user\" , beanDefinition ); System . out . println ( beanFactory . getBean ( \"user\" )); DefaultListableBeanFactory\u662f\u975e\u5e38\u5f3a\u5927\u7684\uff0c\u652f\u6301\u5f88\u591a\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7\u67e5\u770bDefaultListableBeanFactory\u7684\u7c7b\u7ee7\u627f\u5b9e\u73b0\u7ed3\u6784\u6765\u770b \u8fd9\u90e8\u5206\u73b0\u5728\u770b\u4e0d\u61c2\u6ca1\u5173\u7cfb\uff0c\u6e90\u7801\u719f\u6089\u4e00\u70b9\u540e\u56de\u6765\u518d\u6765\u770b\u90fd\u53ef\u4ee5\u3002 \u5b83\u5b9e\u73b0\u4e86\u5f88\u591a\u63a5\u53e3\uff0c\u8868\u793a\uff0c\u5b83\u62e5\u6709\u5f88\u591a\u529f\u80fd\uff1a AliasRegistry\uff1a\u652f\u6301\u522b\u540d\u529f\u80fd\uff0c\u4e00\u4e2a\u540d\u5b57\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a\u522b\u540d BeanDefinitionRegistry\uff1a\u53ef\u4ee5\u6ce8\u518c\u3001\u4fdd\u5b58\u3001\u79fb\u9664\u3001\u83b7\u53d6\u67d0\u4e2aBeanDefinition BeanFactory\uff1aBean\u5de5\u5382\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2abean\u7684\u540d\u5b57\u3001\u6216\u7c7b\u578b\u3001\u6216\u522b\u540d\u83b7\u53d6\u67d0\u4e2aBean\u5bf9\u8c61 SingletonBeanRegistry\uff1a\u53ef\u4ee5\u76f4\u63a5\u6ce8\u518c\u3001\u83b7\u53d6\u67d0\u4e2a\u5355\u4f8bBean SimpleAliasRegistry\uff1a\u5b83\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0\u4e86AliasRegistry\u63a5\u53e3\u4e2d\u6240\u5b9a\u4e49\u7684\u529f\u80fd\uff0c\u652f\u6301\u522b\u540d\u529f\u80fd ListableBeanFactory\uff1a\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e86\u5176\u4ed6\u529f\u80fd\uff0c\u53ef\u4ee5\u83b7\u53d6\u6240\u6709BeanDefinition\u7684beanNames\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2a\u7c7b\u578b\u83b7\u53d6\u5bf9\u5e94\u7684beanNames\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2a\u7c7b\u578b\u83b7\u53d6{\u7c7b\u578b\uff1a\u5bf9\u5e94\u7684Bean}\u7684\u6620\u5c04\u5173\u7cfb HierarchicalBeanFactory\uff1a\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u4e86\u83b7\u53d6\u7236BeanFactory\u7684\u529f\u80fd DefaultSingletonBeanRegistry\uff1a\u5b83\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0\u4e86SingletonBeanRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u76f4\u63a5\u6ce8\u518c\u3001\u83b7\u53d6\u67d0\u4e2a\u5355\u4f8bBean\u7684\u529f\u80fd ConfigurableBeanFactory\uff1a\u5728HierarchicalBeanFactory\u548cSingletonBeanRegistry\u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u4e86\u8bbe\u7f6e\u7236BeanFactory\u3001\u7c7b\u52a0\u8f7d\u5668\uff08\u8868\u793a\u53ef\u4ee5\u6307\u5b9a\u67d0\u4e2a\u7c7b\u52a0\u8f7d\u5668\u8fdb\u884c\u7c7b\u7684\u52a0\u8f7d\uff09\u3001\u8bbe\u7f6eSpring EL\u8868\u8fbe\u5f0f\u89e3\u6790\u5668\uff08\u8868\u793a\u8be5BeanFactory\u53ef\u4ee5\u89e3\u6790EL\u8868\u8fbe\u5f0f\uff09\u3001\u8bbe\u7f6e\u7c7b\u578b\u8f6c\u5316\u670d\u52a1\uff08\u8868\u793a\u8be5BeanFactory\u53ef\u4ee5\u8fdb\u884c\u7c7b\u578b\u8f6c\u5316\uff09\u3001\u53ef\u4ee5\u6dfb\u52a0BeanPostProcessor\uff08\u8868\u793a\u8be5BeanFactory\u652f\u6301Bean\u7684\u540e\u7f6e\u5904\u7406\u5668\uff09\uff0c\u53ef\u4ee5\u5408\u5e76BeanDefinition\uff0c\u53ef\u4ee5\u9500\u6bc1\u67d0\u4e2aBean\u7b49\u7b49\u529f\u80fd FactoryBeanRegistrySupport\uff1a\u652f\u6301\u4e86FactoryBean\u7684\u529f\u80fd AutowireCapableBeanFactory\uff1a\u662f\u76f4\u63a5\u7ee7\u627f\u4e86BeanFactory\uff0c\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u652f\u6301\u5728\u521b\u5efaBean\u7684\u8fc7\u7a0b\u4e2d\u80fd\u5bf9Bean\u8fdb\u884c\u81ea\u52a8\u88c5\u914d AbstractBeanFactory\uff1a\u5b9e\u73b0\u4e86ConfigurableBeanFactory\u63a5\u53e3\uff0c\u7ee7\u627f\u4e86FactoryBeanRegistrySupport\uff0c\u8fd9\u4e2aBeanFactory\u7684\u529f\u80fd\u5df2\u7ecf\u5f88\u5168\u9762\u4e86\uff0c\u4f46\u662f\u4e0d\u80fd\u81ea\u52a8\u88c5\u914d\u548c\u83b7\u53d6beanNames ConfigurableListableBeanFactory\uff1a\u7ee7\u627f\u4e86ListableBeanFactory\u3001AutowireCapableBeanFactory\u3001ConfigurableBeanFactory AbstractAutowireCapableBeanFactory\uff1a\u7ee7\u627f\u4e86AbstractBeanFactory\uff0c\u5b9e\u73b0\u4e86AutowireCapableBeanFactory\uff0c\u62e5\u6709\u4e86\u81ea\u52a8\u88c5\u914d\u7684\u529f\u80fd DefaultListableBeanFactory\uff1a\u7ee7\u627f\u4e86AbstractAutowireCapableBeanFactory\uff0c\u5b9e\u73b0\u4e86ConfigurableListableBeanFactory\u63a5\u53e3\u548cBeanDefinitionRegistry\u63a5\u53e3\uff0c\u6240\u4ee5DefaultListableBeanFactory\u7684\u529f\u80fd\u5f88\u5f3a\u5927 ApplicationContext \u4e0a\u9762\u6709\u5206\u6790\u5230\uff0cApplicationContext\u662f\u4e2a\u63a5\u53e3\uff0c\u5b9e\u9645\u4e0a\u4e5f\u662f\u4e00\u4e2aBeanFactory\uff0c\u4e0d\u8fc7\u6bd4BeanFactory\u66f4\u52a0\u5f3a\u5927\uff0c\u6bd4\u5982\uff1a HierarchicalBeanFactory\uff1a\u62e5\u6709\u83b7\u53d6\u7236BeanFactory\u7684\u529f\u80fd ListableBeanFactory\uff1a\u62e5\u6709\u83b7\u53d6beanNames\u7684\u529f\u80fd ResourcePatternResolver\uff1a\u8d44\u6e90\u52a0\u8f7d\u5668\uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u83b7\u53d6\u591a\u4e2a\u8d44\u6e90\uff08\u6587\u4ef6\u8d44\u6e90\u7b49\u7b49\uff09 EnvironmentCapable\uff1a\u53ef\u4ee5\u83b7\u53d6\u8fd0\u884c\u65f6\u73af\u5883\uff08\u6ca1\u6709\u8bbe\u7f6e\u8fd0\u884c\u65f6\u73af\u5883\u529f\u80fd\uff09 ApplicationEventPublisher\uff1a\u62e5\u6709\u5e7f\u64ad\u4e8b\u4ef6\u7684\u529f\u80fd\uff08\u6ca1\u6709\u6dfb\u52a0\u4e8b\u4ef6\u76d1\u542c\u5668\u7684\u529f\u80fd\uff09 MessageSource\uff1a\u62e5\u6709\u56fd\u9645\u5316\u529f\u80fd \u5177\u4f53\u7684\u529f\u80fd\u6f14\u793a\uff0c\u540e\u9762\u4f1a\u6709\u3002 \u6211\u4eec\u5148\u6765\u770bApplicationContext\u4e24\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u5b9e\u73b0\u7c7b\uff1a AnnotationConfigApplicationContext ClassPathXmlApplicationContext AnnotationConfigApplicationContext \u8fd9\u90e8\u5206\u73b0\u5728\u770b\u4e0d\u61c2\u6ca1\u5173\u7cfb\uff0c\u6e90\u7801\u719f\u6089\u4e00\u70b9\u540e\u56de\u6765\u518d\u6765\u770b\u90fd\u53ef\u4ee5\u3002 ConfigurableApplicationContext\uff1a\u7ee7\u627f\u4e86ApplicationContext\u63a5\u53e3\uff0c\u589e\u52a0\u4e86\uff0c\u6dfb\u52a0\u4e8b\u4ef6\u76d1\u542c\u5668\u3001\u6dfb\u52a0BeanFactoryPostProcessor\u3001\u8bbe\u7f6eEnvironment\uff0c\u83b7\u53d6ConfigurableListableBeanFactory\u7b49\u529f\u80fd AbstractApplicationContext\uff1a\u5b9e\u73b0\u4e86ConfigurableApplicationContext\u63a5\u53e3 GenericApplicationContext\uff1a\u7ee7\u627f\u4e86AbstractApplicationContext\uff0c\u5b9e\u73b0\u4e86BeanDefinitionRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u6240\u6709ApplicationContext\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u53ef\u4ee5\u6ce8\u518cBeanDefinition\uff0c\u6ce8\u610f\u8fd9\u4e2a\u7c7b\u4e2d\u6709\u4e00\u4e2a\u5c5e\u6027(DefaultListableBeanFactory beanFactory) AnnotationConfigRegistry\uff1a\u53ef\u4ee5\u5355\u72ec\u6ce8\u518c\u67d0\u4e2a\u4e3a\u7c7b\u4e3aBeanDefinition\uff08\u53ef\u4ee5\u5904\u7406\u8be5\u7c7b\u4e0a\u7684@Configuration\u6ce8\u89e3\uff0c\u5df2\u7ecf\u53ef\u4ee5\u5904\u7406@Bean\u6ce8\u89e3\uff09\uff0c\u540c\u65f6\u53ef\u4ee5\u626b\u63cf AnnotationConfigApplicationContext\uff1a\u7ee7\u627f\u4e86GenericApplicationContext\uff0c\u5b9e\u73b0\u4e86AnnotationConfigRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u4ee5\u4e0a\u6240\u6709\u7684\u529f\u80fd ClassPathXmlApplicationContext \u5b83\u4e5f\u662f\u7ee7\u627f\u4e86AbstractApplicationContext\uff0c\u4f46\u662f\u76f8\u5bf9\u4e8eAnnotationConfigApplicationContext\u800c\u8a00\uff0c\u529f\u80fd\u6ca1\u6709AnnotationConfigApplicationContext\u5f3a\u5927\uff0c\u6bd4\u5982\u4e0d\u80fd\u6ce8\u518cBeanDefinition \u56fd\u9645\u5316 \u5148\u5b9a\u4e49\u4e00\u4e2aMessageSource: \u6709\u4e86\u8fd9\u4e2aBean\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u4efb\u610f\u60f3\u8981\u8fdb\u884c\u56fd\u9645\u5316\u7684\u5730\u65b9\u4f7f\u7528\u8be5MessageSource\u3002 \u540c\u65f6\uff0c\u56e0\u4e3aApplicationContext\u4e5f\u62e5\u6709\u56fd\u5bb6\u5316\u7684\u529f\u80fd\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8fd9\u4e48\u7528\uff1a 1 2 3 4 5 6 @Bean public MessageSource messageSource () { ResourceBundleMessageSource messageSource = new ResourceBundleMessageSource (); messageSource . setBasename ( \"messages\" ); return messageSource ; } \u8d44\u6e90\u52a0\u8f7d ApplicationContext\u8fd8\u62e5\u6709\u8d44\u6e90\u52a0\u8f7d\u7684\u529f\u80fd\uff0c\u6bd4\u5982\uff0c\u53ef\u4ee5\u76f4\u63a5\u5229\u7528ApplicationContext\u83b7\u53d6\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff1a 1 2 3 4 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); Resource resource = context . getResource ( \"file://D:\\\\IdeaProjects\\\\spring-framework-5.3.10\\\\tuling\\\\src\\\\main\\\\java\\\\com\\\\zhouyu\\\\service\\\\UserService.java\" ); System . out . println ( resource . contentLength ()); \u4f60\u53ef\u4ee5\u60f3\u60f3\uff0c\u5982\u679c\u4f60\u4e0d\u4f7f\u7528ApplicationContext\uff0c\u800c\u662f\u81ea\u5df1\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u5c31\u6bd4\u8f83\u8d39\u65f6\u95f4\u4e86\u3002 \u8fd8\u6bd4\u5982\u4f60\u53ef\u4ee5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); Resource resource = context . getResource ( \"file://D:\\\\IdeaProjects\\\\spring-framework-5.3.10\\\\tuling\\\\src\\\\main\\\\java\\\\com\\\\zhouyu\\\\service\\\\UserService.java\" ); System . out . println ( resource . contentLength ()); System . out . println ( resource . getFilename ()); Resource resource1 = context . getResource ( \"https://www.baidu.com\" ); System . out . println ( resource1 . contentLength ()); System . out . println ( resource1 . getURL ()); Resource resource2 = context . getResource ( \"classpath:spring.xml\" ); System . out . println ( resource2 . contentLength ()); System . out . println ( resource2 . getURL ()); \u8fd8\u53ef\u4ee5\u4e00\u6b21\u6027\u83b7\u53d6\u591a\u4e2a\uff1a 1 2 3 4 5 Resource [] resources = context . getResources ( \"classpath:com/zhouyu/*.class\" ); for ( Resource resource : resources ) { System . out . println ( resource . contentLength ()); System . out . println ( resource . getFilename ()); } \u83b7\u53d6\u8fd0\u884c\u65f6\u73af\u5883 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); Map < String , Object > systemEnvironment = context . getEnvironment (). getSystemEnvironment (); System . out . println ( systemEnvironment ); System . out . println ( \"=======\" ); Map < String , Object > systemProperties = context . getEnvironment (). getSystemProperties (); System . out . println ( systemProperties ); System . out . println ( \"=======\" ); MutablePropertySources propertySources = context . getEnvironment (). getPropertySources (); System . out . println ( propertySources ); System . out . println ( \"=======\" ); System . out . println ( context . getEnvironment (). getProperty ( \"NO_PROXY\" )); System . out . println ( context . getEnvironment (). getProperty ( \"sun.jnu.encoding\" )); System . out . println ( context . getEnvironment (). getProperty ( \"zhouyu\" )); \u6ce8\u610f\uff0c\u53ef\u4ee5\u5229\u7528 1 @PropertySource ( \"classpath:spring.properties\" ) \u6765\u4f7f\u5f97\u67d0\u4e2aproperties\u6587\u4ef6\u4e2d\u7684\u53c2\u6570\u6dfb\u52a0\u5230\u8fd0\u884c\u65f6\u73af\u5883\u4e2d \u4e8b\u4ef6\u53d1\u5e03 \u5148\u5b9a\u4e49\u4e00\u4e2a\u4e8b\u4ef6\u76d1\u542c\u5668 1 2 3 4 5 6 7 8 9 @Bean public ApplicationListener applicationListener () { return new ApplicationListener () { @Override public void onApplicationEvent ( ApplicationEvent event ) { System . out . println ( \"\u63a5\u6536\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\" ); } }; } \u7136\u540e\u53d1\u5e03\u4e00\u4e2a\u4e8b\u4ef6\uff1a 1 context . publishEvent ( \"kkk\" ); \u7c7b\u578b\u8f6c\u5316 \u5728Spring\u6e90\u7801\u4e2d\uff0c\u6709\u53ef\u80fd\u9700\u8981\u628aString\u8f6c\u6210\u5176\u4ed6\u7c7b\u578b\uff0c\u6240\u4ee5\u5728Spring\u6e90\u7801\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6280\u672f\u6765\u66f4\u65b9\u4fbf\u7684\u505a\u5bf9\u8c61\u7684\u7c7b\u578b\u8f6c\u5316\uff0c\u5173\u4e8e\u7c7b\u578b\u8f6c\u5316\u7684\u5e94\u7528\u573a\u666f\uff0c \u540e\u7eed\u770b\u6e90\u7801\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u9047\u5230\u5f88\u591a\u3002 PropertyEditor \u8fd9\u5176\u5b9e\u662fJDK\u4e2d\u63d0\u4f9b\u7684\u7c7b\u578b\u8f6c\u5316\u5de5\u5177\u7c7b 1 2 3 4 5 6 7 8 9 public class StringToUserPropertyEditor extends PropertyEditorSupport implements PropertyEditor { @Override public void setAsText ( String text ) throws IllegalArgumentException { User user = new User (); user . setName ( text ); this . setValue ( user ); } } 1 2 3 4 StringToUserPropertyEditor propertyEditor = new StringToUserPropertyEditor (); propertyEditor . setAsText ( \"1\" ); User value = ( User ) propertyEditor . getValue (); System . out . println ( value ); \u5982\u4f55\u5411Spring\u4e2d\u6ce8\u518cPropertyEditor\uff1a 1 2 3 4 5 6 7 8 9 10 @Bean public CustomEditorConfigurer customEditorConfigurer () { CustomEditorConfigurer customEditorConfigurer = new CustomEditorConfigurer (); Map < Class <?> , Class <? extends PropertyEditor >> propertyEditorMap = new HashMap <> (); // \u8868\u793aStringToUserPropertyEditor\u53ef\u4ee5\u5c06String\u8f6c\u5316\u6210User\u7c7b\u578b\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u5982\u679c\u53d1\u73b0\u5f53\u524d\u5bf9\u8c61\u662fString\uff0c\u800c\u9700\u8981\u7684\u7c7b\u578b\u662fUser\uff0c\u5c31\u4f1a\u4f7f\u7528\u8be5PropertyEditor\u6765\u505a\u7c7b\u578b\u8f6c\u5316 propertyEditorMap . put ( User . class , StringToUserPropertyEditor . class ); customEditorConfigurer . setCustomEditors ( propertyEditorMap ); return customEditorConfigurer ; } \u5047\u8bbe\u73b0\u5728\u6709\u5982\u4e0bBean: 1 2 3 4 5 6 7 8 9 10 11 @Component public class UserService { @Value ( \"xxx\" ) private User user ; public void test () { System . out . println ( user ); } } \u90a3\u4e48test\u5c5e\u6027\u5c31\u80fd\u6b63\u5e38\u7684\u5b8c\u6210\u5c5e\u6027\u8d4b\u503c ConversionService Spring\u4e2d\u63d0\u4f9b\u7684\u7c7b\u578b\u8f6c\u5316\u670d\u52a1\uff0c\u5b83\u6bd4PropertyEditor\u66f4\u5f3a\u5927 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class StringToUserConverter implements ConditionalGenericConverter { @Override public boolean matches ( TypeDescriptor sourceType , TypeDescriptor targetType ) { return sourceType . getType (). equals ( String . class ) && targetType . getType (). equals ( User . class ); } @Override public Set < ConvertiblePair > getConvertibleTypes () { return Collections . singleton ( new ConvertiblePair ( String . class , User . class )); } @Override public Object convert ( Object source , TypeDescriptor sourceType , TypeDescriptor targetType ) { User user = new User (); user . setName (( String ) source ); return user ; } } 1 2 3 4 DefaultConversionService conversionService = new DefaultConversionService (); conversionService . addConverter ( new StringToUserConverter ()); User value = conversionService . convert ( \"1\" , User . class ); System . out . println ( value ); \u5982\u4f55\u5411Spring\u4e2d\u6ce8\u518cConversionService\uff1a 1 2 3 4 5 6 7 @Bean public ConversionServiceFactoryBean conversionService () { ConversionServiceFactoryBean conversionServiceFactoryBean = new ConversionServiceFactoryBean (); conversionServiceFactoryBean . setConverters ( Collections . singleton ( new StringToUserConverter ())); return conversionServiceFactoryBean ; } TypeConverter \u6574\u5408\u4e86PropertyEditor\u548cConversionService\u7684\u529f\u80fd\uff0c\u662fSpring\u5185\u90e8\u7528\u7684 1 2 3 4 5 SimpleTypeConverter typeConverter = new SimpleTypeConverter (); typeConverter . registerCustomEditor ( User . class , new StringToUserPropertyEditor ()); //typeConverter.setConversionService(conversionService); User value = typeConverter . convertIfNecessary ( \"1\" , User . class ); System . out . println ( value ); OrderComparator OrderComparator\u662fSpring\u6240\u63d0\u4f9b\u7684\u4e00\u79cd\u6bd4\u8f83\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u6839\u636e@Order\u6ce8\u89e3\u6216\u5b9e\u73b0Ordered\u63a5\u53e3\u6765\u6267\u884c\u503c\u8fdb\u884c\u7b14\u8bb0\uff0c\u4ece\u800c\u53ef\u4ee5\u8fdb\u884c\u6392\u5e8f\u3002 \u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public class A implements Ordered { @Override public int getOrder () { return 3 ; } @Override public String toString () { return this . getClass (). getSimpleName (); } } 1 2 3 4 5 6 7 8 9 10 11 12 public class B implements Ordered { @Override public int getOrder () { return 2 ; } @Override public String toString () { return this . getClass (). getSimpleName (); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class Main { public static void main ( String [] args ) { A a = new A (); // order=3 B b = new B (); // order=2 OrderComparator comparator = new OrderComparator (); System . out . println ( comparator . compare ( a , b )); // 1 List list = new ArrayList <> (); list . add ( a ); list . add ( b ); // \u6309order\u503c\u5347\u5e8f\u6392\u5e8f list . sort ( comparator ); System . out . println ( list ); // B\uff0cA } } \u53e6\u5916\uff0cSpring\u4e2d\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2aOrderComparator\u7684\u5b50\u7c7b\uff1aAnnotationAwareOrderComparator\uff0c\u5b83\u652f\u6301\u7528@Order\u6765\u6307\u5b9aorder\u503c\u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 @Order ( 3 ) public class A { @Override public String toString () { return this . getClass (). getSimpleName (); } } 1 2 3 4 5 6 7 8 9 @Order ( 2 ) public class B { @Override public String toString () { return this . getClass (). getSimpleName (); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class Main { public static void main ( String [] args ) { A a = new A (); // order=3 B b = new B (); // order=2 AnnotationAwareOrderComparator comparator = new AnnotationAwareOrderComparator (); System . out . println ( comparator . compare ( a , b )); // 1 List list = new ArrayList <> (); list . add ( a ); list . add ( b ); // \u6309order\u503c\u5347\u5e8f\u6392\u5e8f list . sort ( comparator ); System . out . println ( list ); // B\uff0cA } } BeanPostProcessor BeanPostProcess\u8868\u793aBena\u7684\u540e\u7f6e\u5904\u7406\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u6216\u591a\u4e2aBeanPostProcessor\uff0c\u6bd4\u5982\u901a\u8fc7\u4e00\u4e0b\u4ee3\u7801\u5b9a\u4e49\u4e00\u4e2aBeanPostProcessor\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 @Component public class ZhouyuBeanPostProcessor implements BeanPostProcessor { @Override public Object postProcessBeforeInitialization ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u521d\u59cb\u5316\u524d\" ); } return bean ; } @Override public Object postProcessAfterInitialization ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u521d\u59cb\u5316\u540e\" ); } return bean ; } } \u4e00\u4e2aBeanPostProcessor\u53ef\u4ee5\u5728\u4efb\u610f\u4e00\u4e2aBean\u7684\u521d\u59cb\u5316\u4e4b\u524d\u4ee5\u53ca\u521d\u59cb\u5316\u4e4b\u540e\u53bb\u989d\u5916\u7684\u505a\u4e00\u4e9b\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u903b\u8f91\uff0c\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5224\u65adbeanName\u6765\u8fdb\u884c\u9488\u5bf9\u6027\u5904\u7406\uff08\u9488\u5bf9\u67d0\u4e2aBean\uff0c\u6216\u67d0\u90e8\u5206Bean\uff09\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49BeanPostProcessor\u6765\u5e72\u6d89Spring\u521b\u5efaBean\u7684\u8fc7\u7a0b\u3002 BeanFactoryPostProcessor BeanFactoryPostProcessor\u8868\u793aBean\u5de5\u5382\u7684\u540e\u7f6e\u5904\u7406\u5668\uff0c\u5176\u5b9e\u548cBeanPostProcessor\u7c7b\u4f3c\uff0cBeanPostProcessor\u662f\u5e72\u6d89Bean\u7684\u521b\u5efa\u8fc7\u7a0b\uff0cBeanFactoryPostProcessor\u662f\u5e72\u6d89BeanFactory\u7684\u521b\u5efa\u8fc7\u7a0b\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\u4e00\u4e2aBeanFactoryPostProcessor\uff1a 1 2 3 4 5 6 7 8 @Component public class ZhouyuBeanFactoryPostProcessor implements BeanFactoryPostProcessor { @Override public void postProcessBeanFactory ( ConfigurableListableBeanFactory beanFactory ) throws BeansException { System . out . println ( \"\u52a0\u5de5beanFactory\" ); } } \u6211\u4eec\u53ef\u4ee5\u5728postProcessBeanFactory()\u65b9\u6cd5\u4e2d\u5bf9BeanFactory\u8fdb\u884c\u52a0\u5de5\u3002 FactoryBean \u4e0a\u9762\u63d0\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7BeanPostPorcessor\u6765\u5e72\u6d89Spring\u521b\u5efaBean\u7684\u8fc7\u7a0b\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u60f3\u4e00\u4e2aBean\u5b8c\u5b8c\u5168\u5168\u7531\u6211\u4eec\u6765\u521b\u9020\uff0c\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u6bd4\u5982\u901a\u8fc7FactoryBean\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 @Component public class ZhouyuFactoryBean implements FactoryBean { @Override public Object getObject () throws Exception { UserService userService = new UserService (); return userService ; } @Override public Class <?> getObjectType () { return UserService . class ; } } \u901a\u8fc7\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u6211\u4eec\u81ea\u5df1\u521b\u9020\u4e86\u4e00\u4e2aUserService\u5bf9\u8c61\uff0c\u5e76\u4e14\u5b83\u5c06\u6210\u4e3aBean\u3002\u4f46\u662f\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u521b\u9020\u51fa\u6765\u7684UserService\u7684Bean\uff0c\u53ea\u4f1a\u7ecf\u8fc7\u521d\u59cb\u5316\u540e\uff0c\u5176\u4ed6Spring\u7684\u751f\u547d\u5468\u671f\u6b65\u9aa4\u662f\u4e0d\u4f1a\u7ecf\u8fc7\u7684\uff0c\u6bd4\u5982\u4f9d\u8d56\u6ce8\u5165\u3002 \u6709\u540c\u5b66\u53ef\u80fd\u4f1a\u60f3\u5230\uff0c\u901a\u8fc7@Bean\u4e5f\u53ef\u4ee5\u81ea\u5df1\u751f\u6210\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3aBean\uff0c\u90a3\u4e48\u548cFactoryBean\u7684\u533a\u522b\u662f\u4ec0\u4e48\u5462\uff1f\u5176\u5b9e\u5728\u5f88\u591a\u573a\u666f\u4e0b\u4ed6\u4fe9\u662f\u53ef\u4ee5\u66ff\u6362\u7684\uff0c\u4f46\u662f\u7ad9\u5728\u539f\u7406\u5c42\u9762\u6765\u8bf4\u7684\uff0c\u533a\u522b\u5f88\u660e\u663e\uff0c@Bean\u5b9a\u4e49\u7684Bean\u662f\u4f1a\u7ecf\u8fc7\u5b8c\u6574\u7684Bean\u751f\u547d\u5468\u671f\u7684\u3002 ExcludeFilter\u548cIncludeFilter \u8fd9\u4e24\u4e2aFilter\u662fSpring\u626b\u63cf\u8fc7\u7a0b\u4e2d\u7528\u6765\u8fc7\u6ee4\u7684\u3002ExcludeFilter\u8868\u793a\u6392\u9664\u8fc7\u6ee4\u5668\uff0cIncludeFilter\u8868\u793a\u5305\u542b\u8fc7\u6ee4\u5668\u3002 \u6bd4\u5982\u4ee5\u4e0b\u914d\u7f6e\uff0c\u8868\u793a\u626b\u63cfcom.zhouyu\u8fd9\u4e2a\u5305\u4e0b\u9762\u7684\u6240\u6709\u7c7b\uff0c\u4f46\u662f\u6392\u9664UserService\u7c7b\uff0c\u4e5f\u5c31\u662f\u5c31\u7b97\u5b83\u4e0a\u9762\u6709@Component\u6ce8\u89e3\u4e5f\u4e0d\u4f1a\u6210\u4e3aBean\u3002 1 2 3 4 5 6 @ComponentScan ( value = \"com.zhouyu\" , excludeFilters = { @ComponentScan.Filter ( type = FilterType . ASSIGNABLE_TYPE , classes = UserService . class )}.) public class AppConfig { } \u518d\u6bd4\u5982\u4ee5\u4e0b\u914d\u7f6e\uff0c\u5c31\u7b97UserService\u7c7b\u4e0a\u6ca1\u6709@Component\u6ce8\u89e3\uff0c\u5b83\u4e5f\u4f1a\u88ab\u626b\u63cf\u6210\u4e3a\u4e00\u4e2aBean\u3002 1 2 3 4 5 6 @ComponentScan ( value = \"com.zhouyu\" , includeFilters = { @ComponentScan.Filter ( type = FilterType . ASSIGNABLE_TYPE , classes = UserService . class )}) public class AppConfig { } FilterType\u5206\u4e3a\uff1a ANNOTATION\uff1a\u8868\u793a\u662f\u5426\u5305\u542b\u67d0\u4e2a\u6ce8\u89e3 ASSIGNABLE_TYPE\uff1a\u8868\u793a\u662f\u5426\u662f\u67d0\u4e2a\u7c7b ASPECTJ\uff1a\u8868\u793a\u5426\u662f\u7b26\u5408\u67d0\u4e2aAspectj\u8868\u8fbe\u5f0f REGEX\uff1a\u8868\u793a\u662f\u5426\u7b26\u5408\u67d0\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f CUSTOM\uff1a\u81ea\u5b9a\u4e49 \u5728Spring\u7684\u626b\u63cf\u903b\u8f91\u4e2d\uff0c\u9ed8\u8ba4\u4f1a\u6dfb\u52a0\u4e00\u4e2aAnnotationTypeFilter\u7ed9includeFilters\uff0c\u8868\u793a\u9ed8\u8ba4\u60c5\u51b5\u4e0bSpring\u626b\u63cf\u8fc7\u7a0b\u4e2d\u4f1a\u8ba4\u4e3a\u7c7b\u4e0a\u6709@Component\u6ce8\u89e3\u7684\u5c31\u662fBean\u3002 MetadataReader\u3001ClassMetadata\u3001AnnotationMetadata \u5728Spring\u4e2d\u9700\u8981\u53bb\u89e3\u6790\u7c7b\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u7c7b\u540d\u3001\u7c7b\u4e2d\u7684\u65b9\u6cd5\u3001\u7c7b\u4e0a\u7684\u6ce8\u89e3\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u7c7b\u7684\u5143\u6570\u636e\uff0c\u6240\u4ee5Spring\u4e2d\u5bf9\u7c7b\u7684\u5143\u6570\u636e\u505a\u4e86\u62bd\u8c61\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5de5\u5177\u7c7b\u3002 MetadataReader\u8868\u793a\u7c7b\u7684\u5143\u6570\u636e\u8bfb\u53d6\u5668\uff0c\u9ed8\u8ba4\u5b9e\u73b0\u7c7b\u4e3a SimpleMetadataReader \u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class Test { public static void main ( String [] args ) throws IOException { SimpleMetadataReaderFactory simpleMetadataReaderFactory = new SimpleMetadataReaderFactory (); // \u6784\u9020\u4e00\u4e2aMetadataReader MetadataReader metadataReader = simpleMetadataReaderFactory . getMetadataReader ( \"com.zhouyu.service.UserService\" ); // \u5f97\u5230\u4e00\u4e2aClassMetadata\uff0c\u5e76\u83b7\u53d6\u4e86\u7c7b\u540d ClassMetadata classMetadata = metadataReader . getClassMetadata (); System . out . println ( classMetadata . getClassName ()); // \u83b7\u53d6\u4e00\u4e2aAnnotationMetadata\uff0c\u5e76\u83b7\u53d6\u7c7b\u4e0a\u7684\u6ce8\u89e3\u4fe1\u606f AnnotationMetadata annotationMetadata = metadataReader . getAnnotationMetadata (); for ( String annotationType : annotationMetadata . getAnnotationTypes ()) { System . out . println ( annotationType ); } } } \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cSimpleMetadataReader\u53bb\u89e3\u6790\u7c7b\u65f6\uff0c\u4f7f\u7528\u7684 ASM\u6280\u672f \u3002 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528ASM\u6280\u672f\uff0cSpring\u542f\u52a8\u7684\u65f6\u5019\u9700\u8981\u53bb\u626b\u63cf\uff0c\u5982\u679c\u6307\u5b9a\u7684\u5305\u8def\u5f84\u6bd4\u8f83\u5bbd\u6cdb\uff0c\u90a3\u4e48\u626b\u63cf\u7684\u7c7b\u662f\u975e\u5e38\u591a\u7684\uff0c\u90a3\u5982\u679c\u5728Spring\u542f\u52a8\u65f6\u5c31\u628a\u8fd9\u4e9b\u7c7b\u5168\u90e8\u52a0\u8f7d\u8fdbJVM\u4e86\uff0c\u8fd9\u6837\u4e0d\u592a\u597d\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86ASM\u6280\u672f\u3002","title":"3.Spring\u4e4b\u5e95\u5c42\u67b6\u6784\u6838\u5fc3\u6982\u5ff5\u89e3\u6790"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#beandefinition","text":"BeanDefinition\u8868\u793aBean\u5b9a\u4e49\uff0cBeanDefinition\u4e2d\u5b58\u5728\u5f88\u591a\u5c5e\u6027\u7528\u6765\u63cf\u8ff0\u4e00\u4e2aBean\u7684\u7279\u70b9\u3002\u6bd4\u5982\uff1a \u25cfclass\uff0c\u8868\u793aBean\u7c7b\u578b \u25cfscope\uff0c\u8868\u793aBean\u4f5c\u7528\u57df\uff0c\u5355\u4f8b\u6216\u539f\u578b\u7b49 \u25cflazyInit\uff1a\u8868\u793aBean\u662f\u5426\u662f\u61d2\u52a0\u8f7d \u25cfinitMethodName\uff1a\u8868\u793aBean\u521d\u59cb\u5316\u65f6\u8981\u6267\u884c\u7684\u65b9\u6cd5 \u25cfdestroyMethodName\uff1a\u8868\u793aBean\u9500\u6bc1\u65f6\u8981\u6267\u884c\u7684\u65b9\u6cd5 \u25cf\u8fd8\u6709\u5f88\u591a... \u5728Spring\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u901a\u8fc7\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u6765\u5b9a\u4e49Bean\uff1a ' ' @Bean @Component(@Service,@Controller) \u8fd9\u4e9b\uff0c\u6211\u4eec\u53ef\u4ee5\u79f0\u4e4b\u7533\u660e\u5f0f\u5b9a\u4e49Bean\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u7f16\u7a0b\u5f0f\u5b9a\u4e49Bean\uff0c\u90a3\u5c31\u662f\u76f4\u63a5\u901a\u8fc7BeanDefinition\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); // \u751f\u6210\u4e00\u4e2aBeanDefinition\u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6ebeanClass\u4e3aUser.class\uff0c\u5e76\u6ce8\u518c\u5230ApplicationContext\u4e2d AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder . genericBeanDefinition (). getBeanDefinition (); beanDefinition . setBeanClass ( User . class ); context . registerBeanDefinition ( \"user\" , beanDefinition ); System . out . println ( context . getBean ( \"user\" )); \u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7BeanDefinition\u8bbe\u7f6e\u4e00\u4e2aBean\u7684\u5176\u4ed6\u5c5e\u6027 1 2 3 beanDefinition . setScope ( \"prototype\" ); // \u8bbe\u7f6e\u4f5c\u7528\u57df beanDefinition . setInitMethodName ( \"init\" ); // \u8bbe\u7f6e\u521d\u59cb\u5316\u65b9\u6cd5 beanDefinition . setLazyInit ( true ); // \u8bbe\u7f6e\u61d2\u52a0\u8f7d \u548c\u7533\u660e\u5f0f\u4e8b\u52a1\u3001\u7f16\u7a0b\u5f0f\u4e8b\u52a1\u7c7b\u4f3c\uff0c\u901a\u8fc7 \uff0c@Bean\uff0c@Component\u7b49\u7533\u660e\u5f0f\u65b9\u5f0f\u6240\u5b9a\u4e49\u7684Bean\uff0c\u6700\u7ec8\u90fd\u4f1a\u88abSpring\u89e3\u6790\u4e3a\u5bf9\u5e94\u7684BeanDefinition\u5bf9\u8c61\uff0c\u5e76\u653e\u5165Spring\u5bb9\u5668\u4e2d\u3002","title":"BeanDefinition"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#beandefinitionreader","text":"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u4ecb\u7ecd\u51e0\u79cd\u5728Spring\u6e90\u7801\u4e2d\u6240\u63d0\u4f9b\u7684BeanDefinition\u8bfb\u53d6\u5668\uff08BeanDefinitionReader\uff09\uff0c\u8fd9\u4e9bBeanDefinitionReader\u5728\u6211\u4eec\u4f7f\u7528Spring\u65f6\u7528\u5f97\u5c11\uff0c\u4f46\u5728Spring\u6e90\u7801\u4e2d\u7528\u5f97\u591a\uff0c\u76f8\u5f53\u4e8eSpring\u6e90\u7801\u7684\u57fa\u7840\u8bbe\u65bd\u3002","title":"BeanDefinitionReader"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#annotatedbeandefinitionreader","text":"\u53ef\u4ee5\u76f4\u63a5\u628a\u67d0\u4e2a\u7c7b\u8f6c\u6362\u4e3aBeanDefinition\uff0c\u5e76\u4e14\u4f1a\u89e3\u6790\u8be5\u7c7b\u4e0a\u7684\u6ce8\u89e3\uff0c\u6bd4\u5982 1 2 3 4 5 6 7 8 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); AnnotatedBeanDefinitionReader annotatedBeanDefinitionReader = new AnnotatedBeanDefinitionReader ( context ); // \u5c06User.class\u89e3\u6790\u4e3aBeanDefinition annotatedBeanDefinitionReader . register ( User . class ); System . out . println ( context . getBean ( \"user\" )); \u6ce8\u610f\uff1a\u5b83\u80fd\u89e3\u6790\u7684\u6ce8\u89e3\u662f\uff1a@Conditional\uff0c@Scope\u3001@Lazy\u3001@Primary\u3001@DependsOn\u3001@Role\u3001@Description","title":"AnnotatedBeanDefinitionReader"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#xmlbeandefinitionreader","text":"\u53ef\u4ee5\u89e3\u6790 \u6807\u7b7e 1 2 3 4 5 6 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); XmlBeanDefinitionReader xmlBeanDefinitionReader = new XmlBeanDefinitionReader ( context ); int i = xmlBeanDefinitionReader . loadBeanDefinitions ( \"spring.xml\" ); System . out . println ( context . getBean ( \"user\" ));","title":"XmlBeanDefinitionReader"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#classpathbeandefinitionscanner","text":"ClassPathBeanDefinitionScanner\u662f\u626b\u63cf\u5668\uff0c\u4f46\u662f\u5b83\u7684\u4f5c\u7528\u548cBeanDefinitionReader\u7c7b\u4f3c\uff0c\u5b83\u53ef\u4ee5\u8fdb\u884c\u626b\u63cf\uff0c\u626b\u63cf\u67d0\u4e2a\u5305\u8def\u5f84\uff0c\u5bf9\u626b\u63cf\u5230\u7684\u7c7b\u8fdb\u884c\u89e3\u6790\uff0c\u6bd4\u5982\uff0c\u626b\u63cf\u5230\u7684\u7c7b\u4e0a\u5982\u679c\u5b58\u5728@Component\u6ce8\u89e3\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u8fd9\u4e2a\u7c7b\u89e3\u6790\u4e3a\u4e00\u4e2aBeanDefinition\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext (); context . refresh (); ClassPathBeanDefinitionScanner scanner = new ClassPathBeanDefinitionScanner ( context ); scanner . scan ( \"com.zhouyu\" ); System . out . println ( context . getBean ( \"userService\" ));","title":"ClassPathBeanDefinitionScanner"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#beanfactory","text":"BeanFactory\u8868\u793aBean \u5de5\u5382 \uff0c\u6240\u4ee5\u5f88\u660e\u663e\uff0cBeanFactory\u4f1a\u8d1f\u8d23\u521b\u5efaBean\uff0c\u5e76\u4e14\u63d0\u4f9b\u83b7\u53d6Bean\u7684API\u3002 \u800cApplicationContext\u662fBeanFactory\u7684\u4e00\u79cd\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u662f\u8fd9\u4e48\u5b9a\u4e49\u7684\uff1a 1 2 3 4 5 public interface ApplicationContext extends EnvironmentCapable , ListableBeanFactory , HierarchicalBeanFactory , MessageSource , ApplicationEventPublisher , ResourcePatternResolver { ... } \u9996\u5148\uff0c\u5728Java\u4e2d\uff0c\u63a5\u53e3\u662f\u53ef\u4ee5\u591a\u7ee7\u627f\u7684\uff0c\u6211\u4eec\u53d1\u73b0ApplicationContext\u7ee7\u627f\u4e86ListableBeanFactory\u548cHierarchicalBeanFactory\uff0c\u800cListableBeanFactory\u548cHierarchicalBeanFactory\u90fd\u7ee7\u627f\u81f3BeanFactory\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3aApplicationContext\u7ee7\u627f\u4e86BeanFactory\uff0c\u76f8\u5f53\u4e8e\u82f9\u679c\u7ee7\u627f\u6c34\u679c\uff0c\u5b9d\u9a6c\u7ee7\u627f\u6c7d\u8f66\u4e00\u6837\uff0cApplicationContext\u4e5f\u662fBeanFactory\u7684\u4e00\u79cd\uff0c\u62e5\u6709BeanFactory\u652f\u6301\u7684\u6240\u6709\u529f\u80fd\uff0c\u4e0d\u8fc7ApplicationContext\u6bd4BeanFactory\u66f4\u52a0\u5f3a\u5927\uff0cApplicationContext\u8fd8\u57fa\u7840\u4e86\u5176\u4ed6\u63a5\u53e3\uff0c\u4e5f\u5c31\u8868\u793aApplicationContext\u8fd8\u62e5\u6709\u5176\u4ed6\u529f\u80fd\uff0c\u6bd4\u5982MessageSource\u8868\u793a\u56fd\u9645\u5316\uff0cApplicationEventPublisher\u8868\u793a\u4e8b\u4ef6\u53d1\u5e03\uff0cEnvironmentCapable\u8868\u793a\u83b7\u53d6\u73af\u5883\u53d8\u91cf\uff0c\u7b49\u7b49\uff0c\u5173\u4e8eApplicationContext\u540e\u9762\u518d\u8be6\u7ec6\u8ba8\u8bba\u3002 \u5728Spring\u7684\u6e90\u7801\u5b9e\u73b0\u4e2d\uff0c\u5f53\u6211\u4eecnew\u4e00\u4e2aApplicationContext\u65f6\uff0c\u5176\u5e95\u5c42\u4f1anew\u4e00\u4e2aBeanFactory\u51fa\u6765\uff0c\u5f53\u4f7f\u7528ApplicationContext\u7684\u67d0\u4e9b\u65b9\u6cd5\u65f6\uff0c\u6bd4\u5982getBean()\uff0c\u5e95\u5c42\u8c03\u7528\u7684\u662fBeanFactory\u7684getBean()\u65b9\u6cd5\u3002 \u5728Spring\u6e90\u7801\u4e2d\uff0cBeanFactory\u63a5\u53e3\u5b58\u5728\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5b9e\u73b0\u7c7b\u662f\uff1a DefaultListableBeanFactory \uff0c \u4e5f\u662f\u975e\u5e38\u6838\u5fc3\u7684 \u3002\u5177\u4f53\u91cd\u8981\u6027\uff0c\u968f\u7740\u540e\u7eed\u8bfe\u7a0b\u4f1a\u611f\u53d7\u66f4\u6df1\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6765\u4f7f\u7528 DefaultListableBeanFactory \uff0c\u800c\u4e0d\u7528\u4f7f\u7528ApplicationContext\u7684\u67d0\u4e2a\u5b9e\u73b0\u7c7b\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 DefaultListableBeanFactory beanFactory = new DefaultListableBeanFactory (); AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder . genericBeanDefinition (). getBeanDefinition (); beanDefinition . setBeanClass ( User . class ); beanFactory . registerBeanDefinition ( \"user\" , beanDefinition ); System . out . println ( beanFactory . getBean ( \"user\" )); DefaultListableBeanFactory\u662f\u975e\u5e38\u5f3a\u5927\u7684\uff0c\u652f\u6301\u5f88\u591a\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7\u67e5\u770bDefaultListableBeanFactory\u7684\u7c7b\u7ee7\u627f\u5b9e\u73b0\u7ed3\u6784\u6765\u770b \u8fd9\u90e8\u5206\u73b0\u5728\u770b\u4e0d\u61c2\u6ca1\u5173\u7cfb\uff0c\u6e90\u7801\u719f\u6089\u4e00\u70b9\u540e\u56de\u6765\u518d\u6765\u770b\u90fd\u53ef\u4ee5\u3002 \u5b83\u5b9e\u73b0\u4e86\u5f88\u591a\u63a5\u53e3\uff0c\u8868\u793a\uff0c\u5b83\u62e5\u6709\u5f88\u591a\u529f\u80fd\uff1a AliasRegistry\uff1a\u652f\u6301\u522b\u540d\u529f\u80fd\uff0c\u4e00\u4e2a\u540d\u5b57\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a\u522b\u540d BeanDefinitionRegistry\uff1a\u53ef\u4ee5\u6ce8\u518c\u3001\u4fdd\u5b58\u3001\u79fb\u9664\u3001\u83b7\u53d6\u67d0\u4e2aBeanDefinition BeanFactory\uff1aBean\u5de5\u5382\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2abean\u7684\u540d\u5b57\u3001\u6216\u7c7b\u578b\u3001\u6216\u522b\u540d\u83b7\u53d6\u67d0\u4e2aBean\u5bf9\u8c61 SingletonBeanRegistry\uff1a\u53ef\u4ee5\u76f4\u63a5\u6ce8\u518c\u3001\u83b7\u53d6\u67d0\u4e2a\u5355\u4f8bBean SimpleAliasRegistry\uff1a\u5b83\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0\u4e86AliasRegistry\u63a5\u53e3\u4e2d\u6240\u5b9a\u4e49\u7684\u529f\u80fd\uff0c\u652f\u6301\u522b\u540d\u529f\u80fd ListableBeanFactory\uff1a\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e86\u5176\u4ed6\u529f\u80fd\uff0c\u53ef\u4ee5\u83b7\u53d6\u6240\u6709BeanDefinition\u7684beanNames\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2a\u7c7b\u578b\u83b7\u53d6\u5bf9\u5e94\u7684beanNames\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2a\u7c7b\u578b\u83b7\u53d6{\u7c7b\u578b\uff1a\u5bf9\u5e94\u7684Bean}\u7684\u6620\u5c04\u5173\u7cfb HierarchicalBeanFactory\uff1a\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u4e86\u83b7\u53d6\u7236BeanFactory\u7684\u529f\u80fd DefaultSingletonBeanRegistry\uff1a\u5b83\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0\u4e86SingletonBeanRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u76f4\u63a5\u6ce8\u518c\u3001\u83b7\u53d6\u67d0\u4e2a\u5355\u4f8bBean\u7684\u529f\u80fd ConfigurableBeanFactory\uff1a\u5728HierarchicalBeanFactory\u548cSingletonBeanRegistry\u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u4e86\u8bbe\u7f6e\u7236BeanFactory\u3001\u7c7b\u52a0\u8f7d\u5668\uff08\u8868\u793a\u53ef\u4ee5\u6307\u5b9a\u67d0\u4e2a\u7c7b\u52a0\u8f7d\u5668\u8fdb\u884c\u7c7b\u7684\u52a0\u8f7d\uff09\u3001\u8bbe\u7f6eSpring EL\u8868\u8fbe\u5f0f\u89e3\u6790\u5668\uff08\u8868\u793a\u8be5BeanFactory\u53ef\u4ee5\u89e3\u6790EL\u8868\u8fbe\u5f0f\uff09\u3001\u8bbe\u7f6e\u7c7b\u578b\u8f6c\u5316\u670d\u52a1\uff08\u8868\u793a\u8be5BeanFactory\u53ef\u4ee5\u8fdb\u884c\u7c7b\u578b\u8f6c\u5316\uff09\u3001\u53ef\u4ee5\u6dfb\u52a0BeanPostProcessor\uff08\u8868\u793a\u8be5BeanFactory\u652f\u6301Bean\u7684\u540e\u7f6e\u5904\u7406\u5668\uff09\uff0c\u53ef\u4ee5\u5408\u5e76BeanDefinition\uff0c\u53ef\u4ee5\u9500\u6bc1\u67d0\u4e2aBean\u7b49\u7b49\u529f\u80fd FactoryBeanRegistrySupport\uff1a\u652f\u6301\u4e86FactoryBean\u7684\u529f\u80fd AutowireCapableBeanFactory\uff1a\u662f\u76f4\u63a5\u7ee7\u627f\u4e86BeanFactory\uff0c\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u652f\u6301\u5728\u521b\u5efaBean\u7684\u8fc7\u7a0b\u4e2d\u80fd\u5bf9Bean\u8fdb\u884c\u81ea\u52a8\u88c5\u914d AbstractBeanFactory\uff1a\u5b9e\u73b0\u4e86ConfigurableBeanFactory\u63a5\u53e3\uff0c\u7ee7\u627f\u4e86FactoryBeanRegistrySupport\uff0c\u8fd9\u4e2aBeanFactory\u7684\u529f\u80fd\u5df2\u7ecf\u5f88\u5168\u9762\u4e86\uff0c\u4f46\u662f\u4e0d\u80fd\u81ea\u52a8\u88c5\u914d\u548c\u83b7\u53d6beanNames ConfigurableListableBeanFactory\uff1a\u7ee7\u627f\u4e86ListableBeanFactory\u3001AutowireCapableBeanFactory\u3001ConfigurableBeanFactory AbstractAutowireCapableBeanFactory\uff1a\u7ee7\u627f\u4e86AbstractBeanFactory\uff0c\u5b9e\u73b0\u4e86AutowireCapableBeanFactory\uff0c\u62e5\u6709\u4e86\u81ea\u52a8\u88c5\u914d\u7684\u529f\u80fd DefaultListableBeanFactory\uff1a\u7ee7\u627f\u4e86AbstractAutowireCapableBeanFactory\uff0c\u5b9e\u73b0\u4e86ConfigurableListableBeanFactory\u63a5\u53e3\u548cBeanDefinitionRegistry\u63a5\u53e3\uff0c\u6240\u4ee5DefaultListableBeanFactory\u7684\u529f\u80fd\u5f88\u5f3a\u5927","title":"BeanFactory"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#applicationcontext","text":"\u4e0a\u9762\u6709\u5206\u6790\u5230\uff0cApplicationContext\u662f\u4e2a\u63a5\u53e3\uff0c\u5b9e\u9645\u4e0a\u4e5f\u662f\u4e00\u4e2aBeanFactory\uff0c\u4e0d\u8fc7\u6bd4BeanFactory\u66f4\u52a0\u5f3a\u5927\uff0c\u6bd4\u5982\uff1a HierarchicalBeanFactory\uff1a\u62e5\u6709\u83b7\u53d6\u7236BeanFactory\u7684\u529f\u80fd ListableBeanFactory\uff1a\u62e5\u6709\u83b7\u53d6beanNames\u7684\u529f\u80fd ResourcePatternResolver\uff1a\u8d44\u6e90\u52a0\u8f7d\u5668\uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u83b7\u53d6\u591a\u4e2a\u8d44\u6e90\uff08\u6587\u4ef6\u8d44\u6e90\u7b49\u7b49\uff09 EnvironmentCapable\uff1a\u53ef\u4ee5\u83b7\u53d6\u8fd0\u884c\u65f6\u73af\u5883\uff08\u6ca1\u6709\u8bbe\u7f6e\u8fd0\u884c\u65f6\u73af\u5883\u529f\u80fd\uff09 ApplicationEventPublisher\uff1a\u62e5\u6709\u5e7f\u64ad\u4e8b\u4ef6\u7684\u529f\u80fd\uff08\u6ca1\u6709\u6dfb\u52a0\u4e8b\u4ef6\u76d1\u542c\u5668\u7684\u529f\u80fd\uff09 MessageSource\uff1a\u62e5\u6709\u56fd\u9645\u5316\u529f\u80fd \u5177\u4f53\u7684\u529f\u80fd\u6f14\u793a\uff0c\u540e\u9762\u4f1a\u6709\u3002 \u6211\u4eec\u5148\u6765\u770bApplicationContext\u4e24\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u5b9e\u73b0\u7c7b\uff1a AnnotationConfigApplicationContext ClassPathXmlApplicationContext","title":"ApplicationContext"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#annotationconfigapplicationcontext","text":"\u8fd9\u90e8\u5206\u73b0\u5728\u770b\u4e0d\u61c2\u6ca1\u5173\u7cfb\uff0c\u6e90\u7801\u719f\u6089\u4e00\u70b9\u540e\u56de\u6765\u518d\u6765\u770b\u90fd\u53ef\u4ee5\u3002 ConfigurableApplicationContext\uff1a\u7ee7\u627f\u4e86ApplicationContext\u63a5\u53e3\uff0c\u589e\u52a0\u4e86\uff0c\u6dfb\u52a0\u4e8b\u4ef6\u76d1\u542c\u5668\u3001\u6dfb\u52a0BeanFactoryPostProcessor\u3001\u8bbe\u7f6eEnvironment\uff0c\u83b7\u53d6ConfigurableListableBeanFactory\u7b49\u529f\u80fd AbstractApplicationContext\uff1a\u5b9e\u73b0\u4e86ConfigurableApplicationContext\u63a5\u53e3 GenericApplicationContext\uff1a\u7ee7\u627f\u4e86AbstractApplicationContext\uff0c\u5b9e\u73b0\u4e86BeanDefinitionRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u6240\u6709ApplicationContext\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u53ef\u4ee5\u6ce8\u518cBeanDefinition\uff0c\u6ce8\u610f\u8fd9\u4e2a\u7c7b\u4e2d\u6709\u4e00\u4e2a\u5c5e\u6027(DefaultListableBeanFactory beanFactory) AnnotationConfigRegistry\uff1a\u53ef\u4ee5\u5355\u72ec\u6ce8\u518c\u67d0\u4e2a\u4e3a\u7c7b\u4e3aBeanDefinition\uff08\u53ef\u4ee5\u5904\u7406\u8be5\u7c7b\u4e0a\u7684@Configuration\u6ce8\u89e3\uff0c\u5df2\u7ecf\u53ef\u4ee5\u5904\u7406@Bean\u6ce8\u89e3\uff09\uff0c\u540c\u65f6\u53ef\u4ee5\u626b\u63cf AnnotationConfigApplicationContext\uff1a\u7ee7\u627f\u4e86GenericApplicationContext\uff0c\u5b9e\u73b0\u4e86AnnotationConfigRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u4ee5\u4e0a\u6240\u6709\u7684\u529f\u80fd","title":"AnnotationConfigApplicationContext"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#classpathxmlapplicationcontext","text":"\u5b83\u4e5f\u662f\u7ee7\u627f\u4e86AbstractApplicationContext\uff0c\u4f46\u662f\u76f8\u5bf9\u4e8eAnnotationConfigApplicationContext\u800c\u8a00\uff0c\u529f\u80fd\u6ca1\u6709AnnotationConfigApplicationContext\u5f3a\u5927\uff0c\u6bd4\u5982\u4e0d\u80fd\u6ce8\u518cBeanDefinition","title":"ClassPathXmlApplicationContext"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#_1","text":"\u5148\u5b9a\u4e49\u4e00\u4e2aMessageSource: \u6709\u4e86\u8fd9\u4e2aBean\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u4efb\u610f\u60f3\u8981\u8fdb\u884c\u56fd\u9645\u5316\u7684\u5730\u65b9\u4f7f\u7528\u8be5MessageSource\u3002 \u540c\u65f6\uff0c\u56e0\u4e3aApplicationContext\u4e5f\u62e5\u6709\u56fd\u5bb6\u5316\u7684\u529f\u80fd\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8fd9\u4e48\u7528\uff1a 1 2 3 4 5 6 @Bean public MessageSource messageSource () { ResourceBundleMessageSource messageSource = new ResourceBundleMessageSource (); messageSource . setBasename ( \"messages\" ); return messageSource ; }","title":"\u56fd\u9645\u5316"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#_2","text":"ApplicationContext\u8fd8\u62e5\u6709\u8d44\u6e90\u52a0\u8f7d\u7684\u529f\u80fd\uff0c\u6bd4\u5982\uff0c\u53ef\u4ee5\u76f4\u63a5\u5229\u7528ApplicationContext\u83b7\u53d6\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff1a 1 2 3 4 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); Resource resource = context . getResource ( \"file://D:\\\\IdeaProjects\\\\spring-framework-5.3.10\\\\tuling\\\\src\\\\main\\\\java\\\\com\\\\zhouyu\\\\service\\\\UserService.java\" ); System . out . println ( resource . contentLength ()); \u4f60\u53ef\u4ee5\u60f3\u60f3\uff0c\u5982\u679c\u4f60\u4e0d\u4f7f\u7528ApplicationContext\uff0c\u800c\u662f\u81ea\u5df1\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u5c31\u6bd4\u8f83\u8d39\u65f6\u95f4\u4e86\u3002 \u8fd8\u6bd4\u5982\u4f60\u53ef\u4ee5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); Resource resource = context . getResource ( \"file://D:\\\\IdeaProjects\\\\spring-framework-5.3.10\\\\tuling\\\\src\\\\main\\\\java\\\\com\\\\zhouyu\\\\service\\\\UserService.java\" ); System . out . println ( resource . contentLength ()); System . out . println ( resource . getFilename ()); Resource resource1 = context . getResource ( \"https://www.baidu.com\" ); System . out . println ( resource1 . contentLength ()); System . out . println ( resource1 . getURL ()); Resource resource2 = context . getResource ( \"classpath:spring.xml\" ); System . out . println ( resource2 . contentLength ()); System . out . println ( resource2 . getURL ()); \u8fd8\u53ef\u4ee5\u4e00\u6b21\u6027\u83b7\u53d6\u591a\u4e2a\uff1a 1 2 3 4 5 Resource [] resources = context . getResources ( \"classpath:com/zhouyu/*.class\" ); for ( Resource resource : resources ) { System . out . println ( resource . contentLength ()); System . out . println ( resource . getFilename ()); }","title":"\u8d44\u6e90\u52a0\u8f7d"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); Map < String , Object > systemEnvironment = context . getEnvironment (). getSystemEnvironment (); System . out . println ( systemEnvironment ); System . out . println ( \"=======\" ); Map < String , Object > systemProperties = context . getEnvironment (). getSystemProperties (); System . out . println ( systemProperties ); System . out . println ( \"=======\" ); MutablePropertySources propertySources = context . getEnvironment (). getPropertySources (); System . out . println ( propertySources ); System . out . println ( \"=======\" ); System . out . println ( context . getEnvironment (). getProperty ( \"NO_PROXY\" )); System . out . println ( context . getEnvironment (). getProperty ( \"sun.jnu.encoding\" )); System . out . println ( context . getEnvironment (). getProperty ( \"zhouyu\" )); \u6ce8\u610f\uff0c\u53ef\u4ee5\u5229\u7528 1 @PropertySource ( \"classpath:spring.properties\" ) \u6765\u4f7f\u5f97\u67d0\u4e2aproperties\u6587\u4ef6\u4e2d\u7684\u53c2\u6570\u6dfb\u52a0\u5230\u8fd0\u884c\u65f6\u73af\u5883\u4e2d","title":"\u83b7\u53d6\u8fd0\u884c\u65f6\u73af\u5883"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#_4","text":"\u5148\u5b9a\u4e49\u4e00\u4e2a\u4e8b\u4ef6\u76d1\u542c\u5668 1 2 3 4 5 6 7 8 9 @Bean public ApplicationListener applicationListener () { return new ApplicationListener () { @Override public void onApplicationEvent ( ApplicationEvent event ) { System . out . println ( \"\u63a5\u6536\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\" ); } }; } \u7136\u540e\u53d1\u5e03\u4e00\u4e2a\u4e8b\u4ef6\uff1a 1 context . publishEvent ( \"kkk\" );","title":"\u4e8b\u4ef6\u53d1\u5e03"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#_5","text":"\u5728Spring\u6e90\u7801\u4e2d\uff0c\u6709\u53ef\u80fd\u9700\u8981\u628aString\u8f6c\u6210\u5176\u4ed6\u7c7b\u578b\uff0c\u6240\u4ee5\u5728Spring\u6e90\u7801\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6280\u672f\u6765\u66f4\u65b9\u4fbf\u7684\u505a\u5bf9\u8c61\u7684\u7c7b\u578b\u8f6c\u5316\uff0c\u5173\u4e8e\u7c7b\u578b\u8f6c\u5316\u7684\u5e94\u7528\u573a\u666f\uff0c \u540e\u7eed\u770b\u6e90\u7801\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u9047\u5230\u5f88\u591a\u3002","title":"\u7c7b\u578b\u8f6c\u5316"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#propertyeditor","text":"\u8fd9\u5176\u5b9e\u662fJDK\u4e2d\u63d0\u4f9b\u7684\u7c7b\u578b\u8f6c\u5316\u5de5\u5177\u7c7b 1 2 3 4 5 6 7 8 9 public class StringToUserPropertyEditor extends PropertyEditorSupport implements PropertyEditor { @Override public void setAsText ( String text ) throws IllegalArgumentException { User user = new User (); user . setName ( text ); this . setValue ( user ); } } 1 2 3 4 StringToUserPropertyEditor propertyEditor = new StringToUserPropertyEditor (); propertyEditor . setAsText ( \"1\" ); User value = ( User ) propertyEditor . getValue (); System . out . println ( value ); \u5982\u4f55\u5411Spring\u4e2d\u6ce8\u518cPropertyEditor\uff1a 1 2 3 4 5 6 7 8 9 10 @Bean public CustomEditorConfigurer customEditorConfigurer () { CustomEditorConfigurer customEditorConfigurer = new CustomEditorConfigurer (); Map < Class <?> , Class <? extends PropertyEditor >> propertyEditorMap = new HashMap <> (); // \u8868\u793aStringToUserPropertyEditor\u53ef\u4ee5\u5c06String\u8f6c\u5316\u6210User\u7c7b\u578b\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u5982\u679c\u53d1\u73b0\u5f53\u524d\u5bf9\u8c61\u662fString\uff0c\u800c\u9700\u8981\u7684\u7c7b\u578b\u662fUser\uff0c\u5c31\u4f1a\u4f7f\u7528\u8be5PropertyEditor\u6765\u505a\u7c7b\u578b\u8f6c\u5316 propertyEditorMap . put ( User . class , StringToUserPropertyEditor . class ); customEditorConfigurer . setCustomEditors ( propertyEditorMap ); return customEditorConfigurer ; } \u5047\u8bbe\u73b0\u5728\u6709\u5982\u4e0bBean: 1 2 3 4 5 6 7 8 9 10 11 @Component public class UserService { @Value ( \"xxx\" ) private User user ; public void test () { System . out . println ( user ); } } \u90a3\u4e48test\u5c5e\u6027\u5c31\u80fd\u6b63\u5e38\u7684\u5b8c\u6210\u5c5e\u6027\u8d4b\u503c","title":"PropertyEditor"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#conversionservice","text":"Spring\u4e2d\u63d0\u4f9b\u7684\u7c7b\u578b\u8f6c\u5316\u670d\u52a1\uff0c\u5b83\u6bd4PropertyEditor\u66f4\u5f3a\u5927 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class StringToUserConverter implements ConditionalGenericConverter { @Override public boolean matches ( TypeDescriptor sourceType , TypeDescriptor targetType ) { return sourceType . getType (). equals ( String . class ) && targetType . getType (). equals ( User . class ); } @Override public Set < ConvertiblePair > getConvertibleTypes () { return Collections . singleton ( new ConvertiblePair ( String . class , User . class )); } @Override public Object convert ( Object source , TypeDescriptor sourceType , TypeDescriptor targetType ) { User user = new User (); user . setName (( String ) source ); return user ; } } 1 2 3 4 DefaultConversionService conversionService = new DefaultConversionService (); conversionService . addConverter ( new StringToUserConverter ()); User value = conversionService . convert ( \"1\" , User . class ); System . out . println ( value ); \u5982\u4f55\u5411Spring\u4e2d\u6ce8\u518cConversionService\uff1a 1 2 3 4 5 6 7 @Bean public ConversionServiceFactoryBean conversionService () { ConversionServiceFactoryBean conversionServiceFactoryBean = new ConversionServiceFactoryBean (); conversionServiceFactoryBean . setConverters ( Collections . singleton ( new StringToUserConverter ())); return conversionServiceFactoryBean ; }","title":"ConversionService"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#typeconverter","text":"\u6574\u5408\u4e86PropertyEditor\u548cConversionService\u7684\u529f\u80fd\uff0c\u662fSpring\u5185\u90e8\u7528\u7684 1 2 3 4 5 SimpleTypeConverter typeConverter = new SimpleTypeConverter (); typeConverter . registerCustomEditor ( User . class , new StringToUserPropertyEditor ()); //typeConverter.setConversionService(conversionService); User value = typeConverter . convertIfNecessary ( \"1\" , User . class ); System . out . println ( value );","title":"TypeConverter"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#ordercomparator","text":"OrderComparator\u662fSpring\u6240\u63d0\u4f9b\u7684\u4e00\u79cd\u6bd4\u8f83\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u6839\u636e@Order\u6ce8\u89e3\u6216\u5b9e\u73b0Ordered\u63a5\u53e3\u6765\u6267\u884c\u503c\u8fdb\u884c\u7b14\u8bb0\uff0c\u4ece\u800c\u53ef\u4ee5\u8fdb\u884c\u6392\u5e8f\u3002 \u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 public class A implements Ordered { @Override public int getOrder () { return 3 ; } @Override public String toString () { return this . getClass (). getSimpleName (); } } 1 2 3 4 5 6 7 8 9 10 11 12 public class B implements Ordered { @Override public int getOrder () { return 2 ; } @Override public String toString () { return this . getClass (). getSimpleName (); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class Main { public static void main ( String [] args ) { A a = new A (); // order=3 B b = new B (); // order=2 OrderComparator comparator = new OrderComparator (); System . out . println ( comparator . compare ( a , b )); // 1 List list = new ArrayList <> (); list . add ( a ); list . add ( b ); // \u6309order\u503c\u5347\u5e8f\u6392\u5e8f list . sort ( comparator ); System . out . println ( list ); // B\uff0cA } } \u53e6\u5916\uff0cSpring\u4e2d\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2aOrderComparator\u7684\u5b50\u7c7b\uff1aAnnotationAwareOrderComparator\uff0c\u5b83\u652f\u6301\u7528@Order\u6765\u6307\u5b9aorder\u503c\u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 @Order ( 3 ) public class A { @Override public String toString () { return this . getClass (). getSimpleName (); } } 1 2 3 4 5 6 7 8 9 @Order ( 2 ) public class B { @Override public String toString () { return this . getClass (). getSimpleName (); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class Main { public static void main ( String [] args ) { A a = new A (); // order=3 B b = new B (); // order=2 AnnotationAwareOrderComparator comparator = new AnnotationAwareOrderComparator (); System . out . println ( comparator . compare ( a , b )); // 1 List list = new ArrayList <> (); list . add ( a ); list . add ( b ); // \u6309order\u503c\u5347\u5e8f\u6392\u5e8f list . sort ( comparator ); System . out . println ( list ); // B\uff0cA } }","title":"OrderComparator"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#beanpostprocessor","text":"BeanPostProcess\u8868\u793aBena\u7684\u540e\u7f6e\u5904\u7406\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u6216\u591a\u4e2aBeanPostProcessor\uff0c\u6bd4\u5982\u901a\u8fc7\u4e00\u4e0b\u4ee3\u7801\u5b9a\u4e49\u4e00\u4e2aBeanPostProcessor\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 @Component public class ZhouyuBeanPostProcessor implements BeanPostProcessor { @Override public Object postProcessBeforeInitialization ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u521d\u59cb\u5316\u524d\" ); } return bean ; } @Override public Object postProcessAfterInitialization ( Object bean , String beanName ) throws BeansException { if ( \"userService\" . equals ( beanName )) { System . out . println ( \"\u521d\u59cb\u5316\u540e\" ); } return bean ; } } \u4e00\u4e2aBeanPostProcessor\u53ef\u4ee5\u5728\u4efb\u610f\u4e00\u4e2aBean\u7684\u521d\u59cb\u5316\u4e4b\u524d\u4ee5\u53ca\u521d\u59cb\u5316\u4e4b\u540e\u53bb\u989d\u5916\u7684\u505a\u4e00\u4e9b\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u903b\u8f91\uff0c\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5224\u65adbeanName\u6765\u8fdb\u884c\u9488\u5bf9\u6027\u5904\u7406\uff08\u9488\u5bf9\u67d0\u4e2aBean\uff0c\u6216\u67d0\u90e8\u5206Bean\uff09\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49BeanPostProcessor\u6765\u5e72\u6d89Spring\u521b\u5efaBean\u7684\u8fc7\u7a0b\u3002","title":"BeanPostProcessor"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#beanfactorypostprocessor","text":"BeanFactoryPostProcessor\u8868\u793aBean\u5de5\u5382\u7684\u540e\u7f6e\u5904\u7406\u5668\uff0c\u5176\u5b9e\u548cBeanPostProcessor\u7c7b\u4f3c\uff0cBeanPostProcessor\u662f\u5e72\u6d89Bean\u7684\u521b\u5efa\u8fc7\u7a0b\uff0cBeanFactoryPostProcessor\u662f\u5e72\u6d89BeanFactory\u7684\u521b\u5efa\u8fc7\u7a0b\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\u4e00\u4e2aBeanFactoryPostProcessor\uff1a 1 2 3 4 5 6 7 8 @Component public class ZhouyuBeanFactoryPostProcessor implements BeanFactoryPostProcessor { @Override public void postProcessBeanFactory ( ConfigurableListableBeanFactory beanFactory ) throws BeansException { System . out . println ( \"\u52a0\u5de5beanFactory\" ); } } \u6211\u4eec\u53ef\u4ee5\u5728postProcessBeanFactory()\u65b9\u6cd5\u4e2d\u5bf9BeanFactory\u8fdb\u884c\u52a0\u5de5\u3002","title":"BeanFactoryPostProcessor"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#factorybean","text":"\u4e0a\u9762\u63d0\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7BeanPostPorcessor\u6765\u5e72\u6d89Spring\u521b\u5efaBean\u7684\u8fc7\u7a0b\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u60f3\u4e00\u4e2aBean\u5b8c\u5b8c\u5168\u5168\u7531\u6211\u4eec\u6765\u521b\u9020\uff0c\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u6bd4\u5982\u901a\u8fc7FactoryBean\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 @Component public class ZhouyuFactoryBean implements FactoryBean { @Override public Object getObject () throws Exception { UserService userService = new UserService (); return userService ; } @Override public Class <?> getObjectType () { return UserService . class ; } } \u901a\u8fc7\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u6211\u4eec\u81ea\u5df1\u521b\u9020\u4e86\u4e00\u4e2aUserService\u5bf9\u8c61\uff0c\u5e76\u4e14\u5b83\u5c06\u6210\u4e3aBean\u3002\u4f46\u662f\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u521b\u9020\u51fa\u6765\u7684UserService\u7684Bean\uff0c\u53ea\u4f1a\u7ecf\u8fc7\u521d\u59cb\u5316\u540e\uff0c\u5176\u4ed6Spring\u7684\u751f\u547d\u5468\u671f\u6b65\u9aa4\u662f\u4e0d\u4f1a\u7ecf\u8fc7\u7684\uff0c\u6bd4\u5982\u4f9d\u8d56\u6ce8\u5165\u3002 \u6709\u540c\u5b66\u53ef\u80fd\u4f1a\u60f3\u5230\uff0c\u901a\u8fc7@Bean\u4e5f\u53ef\u4ee5\u81ea\u5df1\u751f\u6210\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3aBean\uff0c\u90a3\u4e48\u548cFactoryBean\u7684\u533a\u522b\u662f\u4ec0\u4e48\u5462\uff1f\u5176\u5b9e\u5728\u5f88\u591a\u573a\u666f\u4e0b\u4ed6\u4fe9\u662f\u53ef\u4ee5\u66ff\u6362\u7684\uff0c\u4f46\u662f\u7ad9\u5728\u539f\u7406\u5c42\u9762\u6765\u8bf4\u7684\uff0c\u533a\u522b\u5f88\u660e\u663e\uff0c@Bean\u5b9a\u4e49\u7684Bean\u662f\u4f1a\u7ecf\u8fc7\u5b8c\u6574\u7684Bean\u751f\u547d\u5468\u671f\u7684\u3002","title":"FactoryBean"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#excludefilterincludefilter","text":"\u8fd9\u4e24\u4e2aFilter\u662fSpring\u626b\u63cf\u8fc7\u7a0b\u4e2d\u7528\u6765\u8fc7\u6ee4\u7684\u3002ExcludeFilter\u8868\u793a\u6392\u9664\u8fc7\u6ee4\u5668\uff0cIncludeFilter\u8868\u793a\u5305\u542b\u8fc7\u6ee4\u5668\u3002 \u6bd4\u5982\u4ee5\u4e0b\u914d\u7f6e\uff0c\u8868\u793a\u626b\u63cfcom.zhouyu\u8fd9\u4e2a\u5305\u4e0b\u9762\u7684\u6240\u6709\u7c7b\uff0c\u4f46\u662f\u6392\u9664UserService\u7c7b\uff0c\u4e5f\u5c31\u662f\u5c31\u7b97\u5b83\u4e0a\u9762\u6709@Component\u6ce8\u89e3\u4e5f\u4e0d\u4f1a\u6210\u4e3aBean\u3002 1 2 3 4 5 6 @ComponentScan ( value = \"com.zhouyu\" , excludeFilters = { @ComponentScan.Filter ( type = FilterType . ASSIGNABLE_TYPE , classes = UserService . class )}.) public class AppConfig { } \u518d\u6bd4\u5982\u4ee5\u4e0b\u914d\u7f6e\uff0c\u5c31\u7b97UserService\u7c7b\u4e0a\u6ca1\u6709@Component\u6ce8\u89e3\uff0c\u5b83\u4e5f\u4f1a\u88ab\u626b\u63cf\u6210\u4e3a\u4e00\u4e2aBean\u3002 1 2 3 4 5 6 @ComponentScan ( value = \"com.zhouyu\" , includeFilters = { @ComponentScan.Filter ( type = FilterType . ASSIGNABLE_TYPE , classes = UserService . class )}) public class AppConfig { } FilterType\u5206\u4e3a\uff1a ANNOTATION\uff1a\u8868\u793a\u662f\u5426\u5305\u542b\u67d0\u4e2a\u6ce8\u89e3 ASSIGNABLE_TYPE\uff1a\u8868\u793a\u662f\u5426\u662f\u67d0\u4e2a\u7c7b ASPECTJ\uff1a\u8868\u793a\u5426\u662f\u7b26\u5408\u67d0\u4e2aAspectj\u8868\u8fbe\u5f0f REGEX\uff1a\u8868\u793a\u662f\u5426\u7b26\u5408\u67d0\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f CUSTOM\uff1a\u81ea\u5b9a\u4e49 \u5728Spring\u7684\u626b\u63cf\u903b\u8f91\u4e2d\uff0c\u9ed8\u8ba4\u4f1a\u6dfb\u52a0\u4e00\u4e2aAnnotationTypeFilter\u7ed9includeFilters\uff0c\u8868\u793a\u9ed8\u8ba4\u60c5\u51b5\u4e0bSpring\u626b\u63cf\u8fc7\u7a0b\u4e2d\u4f1a\u8ba4\u4e3a\u7c7b\u4e0a\u6709@Component\u6ce8\u89e3\u7684\u5c31\u662fBean\u3002","title":"ExcludeFilter\u548cIncludeFilter"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E4%B9%8B%E5%BA%95%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/#metadatareaderclassmetadataannotationmetadata","text":"\u5728Spring\u4e2d\u9700\u8981\u53bb\u89e3\u6790\u7c7b\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u7c7b\u540d\u3001\u7c7b\u4e2d\u7684\u65b9\u6cd5\u3001\u7c7b\u4e0a\u7684\u6ce8\u89e3\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u7c7b\u7684\u5143\u6570\u636e\uff0c\u6240\u4ee5Spring\u4e2d\u5bf9\u7c7b\u7684\u5143\u6570\u636e\u505a\u4e86\u62bd\u8c61\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5de5\u5177\u7c7b\u3002 MetadataReader\u8868\u793a\u7c7b\u7684\u5143\u6570\u636e\u8bfb\u53d6\u5668\uff0c\u9ed8\u8ba4\u5b9e\u73b0\u7c7b\u4e3a SimpleMetadataReader \u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class Test { public static void main ( String [] args ) throws IOException { SimpleMetadataReaderFactory simpleMetadataReaderFactory = new SimpleMetadataReaderFactory (); // \u6784\u9020\u4e00\u4e2aMetadataReader MetadataReader metadataReader = simpleMetadataReaderFactory . getMetadataReader ( \"com.zhouyu.service.UserService\" ); // \u5f97\u5230\u4e00\u4e2aClassMetadata\uff0c\u5e76\u83b7\u53d6\u4e86\u7c7b\u540d ClassMetadata classMetadata = metadataReader . getClassMetadata (); System . out . println ( classMetadata . getClassName ()); // \u83b7\u53d6\u4e00\u4e2aAnnotationMetadata\uff0c\u5e76\u83b7\u53d6\u7c7b\u4e0a\u7684\u6ce8\u89e3\u4fe1\u606f AnnotationMetadata annotationMetadata = metadataReader . getAnnotationMetadata (); for ( String annotationType : annotationMetadata . getAnnotationTypes ()) { System . out . println ( annotationType ); } } } \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cSimpleMetadataReader\u53bb\u89e3\u6790\u7c7b\u65f6\uff0c\u4f7f\u7528\u7684 ASM\u6280\u672f \u3002 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528ASM\u6280\u672f\uff0cSpring\u542f\u52a8\u7684\u65f6\u5019\u9700\u8981\u53bb\u626b\u63cf\uff0c\u5982\u679c\u6307\u5b9a\u7684\u5305\u8def\u5f84\u6bd4\u8f83\u5bbd\u6cdb\uff0c\u90a3\u4e48\u626b\u63cf\u7684\u7c7b\u662f\u975e\u5e38\u591a\u7684\uff0c\u90a3\u5982\u679c\u5728Spring\u542f\u52a8\u65f6\u5c31\u628a\u8fd9\u4e9b\u7c7b\u5168\u90e8\u52a0\u8f7d\u8fdbJVM\u4e86\uff0c\u8fd9\u6837\u4e0d\u592a\u597d\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86ASM\u6280\u672f\u3002","title":"MetadataReader\u3001ClassMetadata\u3001AnnotationMetadata"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/","text":"\u672c\u8282\u8bfe\u4f1a\u628aSpring\u4e2d\u6838\u5fc3\u77e5\u8bc6\u70b9\u90fd\u7ed9\u5927\u5bb6\u8fdb\u884c\u4e32\u8bb2\uff0c\u8ba9\u5927\u5bb6\u5bf9Spring\u7684\u5e95\u5c42\u6709\u4e00\u4e2a\u6574\u4f53\u7684\u5927\u81f4\u4e86\u89e3 \uff0c\u6bd4\u5982\uff1a Bean\u7684\u751f\u547d\u5468\u671f\u5e95\u5c42\u539f\u7406 \u4f9d\u8d56\u6ce8\u5165\u5e95\u5c42\u539f\u7406 \u521d\u59cb\u5316\u5e95\u5c42\u539f\u7406 \u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u5e95\u5c42\u539f\u7406 AOP\u5e95\u5c42\u539f\u7406 Spring\u4e8b\u52a1\u5e95\u5c42\u539f\u7406 \u4f46\u90fd\u53ea\u662f\u5927\u81f4\u6d41\u7a0b\uff0c \u540e\u7eed\u4f1a\u9488\u5bf9\u6bcf\u4e2a\u6d41\u7a0b\u8be6\u7ec6\u6df1\u5165\u7684\u8bb2\u89e3\u5e76\u5206\u6790\u6e90\u7801\u5b9e\u73b0 \u3002 \u5148\u6765\u770b\u770b\u5165\u95e8\u4f7f\u7528Spring\u7684\u4ee3\u7801\uff1a 1 2 3 ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext ( \"spring.xml\" ); UserService userService = ( UserService ) context . getBean ( \"userService\" ); userService . test (); \u5bf9\u4e8e\u8fd9\u4e09\u884c\u4ee3\u7801\u5e94\u8be5\uff0c\u5927\u90e8\u5206\u540c\u5b66\u5e94\u8be5\u90fd\u662f\u6bd4\u8f83\u719f\u6089\uff0c\u8fd9\u662f\u5b66\u4e60Spring\u7684hello world\u3002\u53ef\u662f\uff0c\u8fd9\u4e09\u884c\u4ee3\u7801\u5e95\u5c42\u90fd\u505a\u4e86\u4ec0\u4e48\uff0c\u6bd4\u5982\uff1a \u7b2c\u4e00\u884c\u4ee3\u7801\uff0c\u4f1a\u6784\u9020\u4e00\u4e2aClassPathXmlApplicationContext\u5bf9\u8c61\uff0cClassPathXmlApplicationContext\u8be5\u5982\u4f55\u7406\u89e3\uff0c\u8c03\u7528\u8be5\u6784\u9020\u65b9\u6cd5\u9664\u5f00\u4f1a\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd8\u4f1a\u505a\u54ea\u4e9b\u4e8b\u60c5\uff1f \u7b2c\u4e8c\u884c\u4ee3\u7801\uff0c\u4f1a\u8c03\u7528ClassPathXmlApplicationContext\u7684getBean\u65b9\u6cd5\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2aUserService\u5bf9\u8c61\uff0cgetBean()\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\u8fd4\u56de\u7684UserService\u5bf9\u8c61\u548c\u6211\u4eec\u81ea\u5df1\u76f4\u63a5new\u7684UserService\u5bf9\u8c61\u6709\u533a\u522b\u5417\uff1f \u7b2c\u4e09\u884c\u4ee3\u7801\uff0c\u5c31\u662f\u7b80\u5355\u7684\u8c03\u7528UserService\u7684test()\u65b9\u6cd5\uff0c\u4e0d\u96be\u7406\u89e3\u3002 \u5149\u770b\u8fd9\u4e09\u884c\u4ee3\u7801\uff0c\u5176\u5b9e \u5e76\u4e0d\u80fd\u4f53\u73b0\u51fa\u6765Spring\u7684\u5f3a\u5927\u4e4b\u5904 \uff0c\u4e5f\u4e0d\u80fd\u7406\u89e3\u4e3a\u4ec0\u4e48\u9700\u8981ClassPathXmlApplicationContext\u548cgetBean()\u65b9\u6cd5\uff0c\u968f\u7740\u8bfe\u7a0b\u7684\u6df1\u5165\u5c06\u4f1a\u6539\u53d8\u4f60\u6b64\u65f6\u7684\u89c2\u5ff5\uff0c\u800c\u5bf9\u4e8e\u4e0a\u9762\u7684\u8fd9\u4e9b\u7591\u95ee\uff0c\u4e5f\u4f1a\u968f\u7740\u8bfe\u7a0b\u6df1\u5165\u9010\u6b65\u5f97\u5230\u89e3\u51b3\u3002\u5bf9\u4e8e\u8fd9\u4e09\u884c\u4ee3\u7801\uff0c\u4f60\u73b0\u5728\u53ef\u4ee5\u8ba4\u4e3a\uff1a\u5982\u679c\u4f60\u8981\u7528Spring\uff0c\u4f60\u5c31\u5f97\u8fd9\u4e48\u5199\u3002\u5c31\u50cf\u4f60\u8981\u7528Mybatis\uff0c\u4f60\u5c31\u5f97\u5199\u5404\u79cdMapper\u63a5\u53e3\u3002 \u200b \u4f46\u662f\u7528ClassPathXmlApplicationContext\u5176\u5b9e\u5df2\u7ecf\u8fc7\u65f6\u4e86\uff0c\u5728\u65b0\u7248\u7684Spring MVC\u548cSpring Boot\u7684\u5e95\u5c42\u4e3b\u8981\u7528\u7684\u90fd\u662f AnnotationConfigApplicationContext \uff0c\u6bd4\u5982\uff1a 1 2 3 4 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); //ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring.xml\"); UserService userService = ( UserService ) context . getBean ( \"userService\" ); userService . test (); \u53ef\u4ee5\u770b\u5230AnnotationConfigApplicationContext\u7684\u7528\u6cd5\u548cClassPathXmlApplicationContext\u662f\u975e\u5e38\u7c7b\u4f3c\u7684\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981\u4f20\u5165\u7684\u662f\u4e00\u4e2aclass\uff0c\u800c\u4e0d\u662f\u4e00\u4e2axml\u6587\u4ef6\u3002 \u800cAppConfig.class\u548cspring.xml\u4e00\u6837\uff0c\u8868\u793aSpring\u7684\u914d\u7f6e\uff0c\u6bd4\u5982\u53ef\u4ee5\u6307\u5b9a\u626b\u63cf\u8def\u5f84\uff0c\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4e49Bean\uff0c\u6bd4\u5982\uff1a \u200b spring.xml\u4e2d\u7684\u5185\u5bb9\u4e3a\uff1a 1 2 < context : component - scan base - package = \"com.zhouyu\" /> < bean id = \"userService\" class =\" com . zhouyu . service . UserService \"/> AppConfig\u4e2d\u7684\u5185\u5bb9\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 @ComponentScan ( \"com.zhouyu\" ) public class AppConfig { @Bean public UserService userService (){ return new UserService (); } } \u6240\u4ee5spring.xml\u548cAppConfig.class\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\u3002 \u200b \u76ee\u524d\uff0c\u6211\u4eec\u57fa\u672c\u5f88\u5c11\u76f4\u63a5\u4f7f\u7528\u4e0a\u9762\u8fd9\u79cd\u65b9\u5f0f\u6765\u7528Spring\uff0c\u800c\u662f\u4f7f\u7528Spring MVC\uff0c\u6216\u8005Spring Boot\uff0c\u4f46\u662f\u5b83\u4eec\u90fd\u662f\u57fa\u4e8e\u4e0a\u9762\u8fd9\u79cd\u65b9\u5f0f\u7684\uff0c\u90fd\u9700\u8981\u5728\u5185\u90e8\u53bb\u521b\u5efa\u4e00\u4e2aApplicationContext\u7684\uff0c\u53ea\u4e0d\u8fc7\uff1a Spring MVC\u521b\u5efa\u7684\u662f XmlWebApplicationContext \uff0c\u548c ClassPathXmlApplicationContext \u7c7b\u4f3c\uff0c\u90fd\u662f\u57fa\u4e8eXML\u914d\u7f6e\u7684 Spring Boot\u521b\u5efa\u7684\u662f AnnotationConfigApplicationContext \u56e0\u4e3aAnnotationConfigApplicationContext\u662f\u6bd4\u8f83\u91cd\u8981\u7684\uff0c\u5e76\u4e14AnnotationConfigApplicationContext\u548cClassPathXmlApplicationContext\u5927\u90e8\u5206\u5e95\u5c42\u90fd\u662f\u5171\u540c\u7684\uff0c\u540e\u7eed\u8bfe\u7a0b\u6211\u4eec\u4f1a\u7740\u91cd\u5c06AnnotationConfigApplicationContext\u7684\u5e95\u5c42\u5b9e\u73b0\uff0c\u5bf9\u4e8eClassPathXmlApplicationContext\uff0c\u540c\u5b66\u4eec\u53ef\u4ee5\u5728\u8bfe\u7a0b\u7ed3\u675f\u540e\u4f5c\u4e3a\u4f5c\u4e1a\uff0c\u4e1a\u4f59\u65f6\u95f4\u770b\u770b\u76f8\u5173\u6e90\u7801\u5373\u53ef\u3002 Spring\u4e2d\u662f\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff1f \u5176\u5b9e\u4e0d\u7ba1\u662fAnnotationConfigApplicationContext\u8fd8\u662fClassPathXmlApplicationContext\uff0c\u76ee\u524d\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u7b80\u5355\u7684\u5c06\u5b83\u4eec\u7406\u89e3\u4e3a\u5c31\u662f\u7528\u6765\u521b\u5efaJava\u5bf9\u8c61\u7684\uff0c\u6bd4\u5982\u8c03\u7528getBean()\u5c31\u4f1a\u53bb\u521b\u5efa\u5bf9\u8c61\uff08\u6b64\u5904\u4e0d\u4e25\u8c28\uff0cgetBean\u53ef\u80fd\u4e5f\u4e0d\u4f1a\u53bb\u521b\u5efa\u5bf9\u8c61\uff0c\u540e\u7eed\u8bfe\u7a0b\u8be6\u89e3\uff09\u3002 \u200b \u5728Java\u8bed\u8a00\u4e2d\uff0c\u80af\u5b9a\u662f\u6839\u636e\u67d0\u4e2a\u7c7b\u6765\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u7684\u3002\u6211\u4eec\u5728\u770b\u4e00\u4e0b\u5b9e\u4f8b\u4ee3\u7801\uff1a 1 2 3 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); UserService userService = ( UserService ) context . getBean ( \"userService\" ); userService . test (); \u5f53\u6211\u4eec\u8c03\u7528context.getBean(\"userService\")\u65f6\uff0c\u5c31\u4f1a\u53bb\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662fgetBean\u65b9\u6cd5\u5185\u90e8\u600e\u4e48\u77e5\u9053\"userService\"\u5bf9\u5e94\u7684\u662fUserService\u7c7b\u5462\uff1f \u200b \u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5206\u6790\u51fa\u6765\uff0c\u5728\u8c03\u7528AnnotationConfigApplicationContext\u7684\u6784\u9020\u65b9\u6cd5\u65f6\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u884c\u4ee3\u7801\uff0c\u4f1a\u53bb\u505a\u4e00\u4e9b\u4e8b\u60c5\uff1a \u89e3\u6790AppConfig.class\uff0c\u5f97\u5230\u626b\u63cf\u8def\u5f84 \u904d\u5386\u626b\u63cf\u8def\u5f84\u4e0b\u7684\u6240\u6709Java\u7c7b\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u7c7b\u4e0a\u5b58\u5728@Component\u3001@Service\u7b49\u6ce8\u89e3\uff0c\u90a3\u4e48Spring\u5c31\u628a\u8fd9\u4e2a\u7c7b\u8bb0\u5f55\u4e0b\u6765\uff0c\u5b58\u5728\u4e00\u4e2aMap\u4e2d\uff0c\u6bd4\u5982Map \u3002\uff08 \u5b9e\u9645\u4e0a\uff0cSpring\u6e90\u7801\u4e2d\u786e\u5b9e\u5b58\u5728\u7c7b\u4f3c\u7684\u8fd9\u4e48\u4e00\u4e2aMap\uff0c\u53eb\u505aBeanDefinitionMap\uff0c\u540e\u7eed\u8bfe\u7a0b\u4f1a\u8bb2\u5230 \uff09 Spring\u4f1a\u6839\u636e\u67d0\u4e2a\u89c4\u5219\u751f\u6210\u5f53\u524d\u7c7b\u5bf9\u5e94\u7684beanName\uff0c\u4f5c\u4e3akey\u5b58\u5165Map\uff0c\u5f53\u524d\u7c7b\u4f5c\u4e3avalue \u8fd9\u6837\uff0c\u4f46\u8c03\u7528context.getBean(\"userService\")\u65f6\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\"userService\"\u627e\u5230UserService\u7c7b\uff0c\u4ece\u800c\u5c31\u53ef\u4ee5\u53bb\u521b\u5efa\u5bf9\u8c61\u4e86\u3002 \u200b Bean\u7684\u521b\u5efa\u8fc7\u7a0b \u90a3\u4e48Spring\u5230\u5e95\u662f\u5982\u4f55\u6765\u521b\u5efa\u4e00\u4e2aBean\u7684\u5462\uff0c\u8fd9\u4e2a\u5c31\u662fBean\u521b\u5efa\u7684\u751f\u547d\u5468\u671f\uff0c\u5927\u81f4\u8fc7\u7a0b\u5982\u4e0b \u5229\u7528\u8be5\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6765\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff08\u4f46\u662f\u5982\u4f55\u4e00\u4e2a\u7c7b\u4e2d\u6709\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u5219\u4f1a\u8fdb\u884c\u9009\u62e9\uff0c\u8fd9\u4e2a\u53eb\u505a \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \uff09 \u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u4e2d\u662f\u5426\u5b58\u5728\u88ab@Autowired\u6ce8\u89e3\u4e86\u7684\u5c5e\u6027\uff0c\u628a\u8fd9\u4e9b\u5c5e\u6027\u627e\u51fa\u6765\u5e76\u7531Spring\u8fdb\u884c\u8d4b\u503c\uff08 \u4f9d\u8d56\u6ce8\u5165 \uff09 \u4f9d\u8d56\u6ce8\u5165\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86BeanNameAware\u63a5\u53e3\u3001BeanClassLoaderAware\u63a5\u53e3\u3001BeanFactoryAware\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\uff0c\u5c31\u8868\u793a\u5f53\u524d\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u8be5\u63a5\u53e3\u4e2d\u6240\u5b9a\u4e49\u7684setBeanName()\u3001setBeanClassLoader()\u3001setBeanFactory()\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\u5e76\u4f20\u5165\u76f8\u5e94\u7684\u53c2\u6570\uff08 Aware\u56de\u8c03 \uff09 Aware\u56de\u8c03\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u65b9\u6cd5\u88ab@PostConstruct\u6ce8\u89e3\u4e86\uff0c\u5982\u679c\u5b58\u5728\uff0cSpring\u4f1a\u8c03\u7528\u5f53\u524d\u5bf9\u8c61\u7684\u6b64\u65b9\u6cd5\uff08 \u521d\u59cb\u5316\u524d \uff09 \u7d27\u63a5\u7740\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86InitializingBean\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\uff0c\u5c31\u8868\u793a\u5f53\u524d\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u8be5\u63a5\u53e3\u4e2d\u7684afterPropertiesSet()\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u8c03\u7528\u5f53\u524d\u5bf9\u8c61\u4e2d\u7684afterPropertiesSet()\u65b9\u6cd5\uff08 \u521d\u59cb\u5316 \uff09 \u6700\u540e\uff0cSpring\u4f1a\u5224\u65ad\u5f53\u524d\u5bf9\u8c61\u9700\u4e0d\u9700\u8981\u8fdb\u884cAOP\uff0c\u5982\u679c\u4e0d\u9700\u8981\u90a3\u4e48Bean\u5c31\u521b\u5efa\u5b8c\u4e86\uff0c\u5982\u679c\u9700\u8981\u8fdb\u884cAOP\uff0c\u5219\u4f1a\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\u5e76\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u505a\u4e3aBean\uff08 \u521d\u59cb\u5316\u540e \uff09 \u901a\u8fc7\u6700\u540e\u4e00\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53Spring\u6839\u636eUserService\u7c7b\u6765\u521b\u5efa\u4e00\u4e2aBean\u65f6\uff1a \u5982\u679c\u4e0d\u7528\u8fdb\u884cAOP\uff0c\u90a3\u4e48Bean\u5c31\u662fUserService\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6240\u5f97\u5230\u7684\u5bf9\u8c61\u3002 \u5982\u679c\u9700\u8981\u8fdb\u884cAOP\uff0c\u90a3\u4e48Bean\u5c31\u662fUserService\u7684\u4ee3\u7406\u7c7b\u6240\u5b9e\u4f8b\u5316\u5f97\u5230\u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u662fUserService\u672c\u8eab\u6240\u5f97\u5230\u7684\u5bf9\u8c61\u3002 Bean\u5bf9\u8c61\u521b\u5efa\u51fa\u6765\u540e\uff1a \u5982\u679c\u5f53\u524dBean\u662f\u5355\u4f8bBean\uff0c\u90a3\u4e48\u4f1a\u628a\u8be5Bean\u5bf9\u8c61\u5b58\u5165\u4e00\u4e2aMap \uff0cMap\u7684key\u4e3abeanName\uff0cvalue\u4e3aBean\u5bf9\u8c61\u3002\u8fd9\u6837\u4e0b\u6b21getBean\u65f6\u5c31\u53ef\u4ee5\u76f4\u63a5\u4eceMap\u4e2d\u62ff\u5230\u5bf9\u5e94\u7684Bean\u5bf9\u8c61\u4e86\u3002\uff08\u5b9e\u9645\u4e0a\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u8fd9\u4e2aMap\u5c31\u662f \u5355\u4f8b\u6c60 \uff09 \u5982\u679c\u5f53\u524dBean\u662f\u539f\u578bBean\uff0c\u90a3\u4e48\u540e\u7eed\u6ca1\u6709\u5176\u4ed6\u52a8\u4f5c\uff0c\u4e0d\u4f1a\u5b58\u5165\u4e00\u4e2aMap\uff0c\u4e0b\u6b21getBean\u65f6\u4f1a\u518d\u6b21\u6267\u884c\u4e0a\u8ff0\u521b\u5efa\u8fc7\u7a0b\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u7684Bean\u5bf9\u8c61\u3002 \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 Spring\u5728\u57fa\u4e8e\u67d0\u4e2a\u7c7b\u751f\u6210Bean\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5229\u7528\u8be5\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6765\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662f \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u4f1a\u4f7f\u7528\u54ea\u4e2a\u5462\uff1f \u200b Spring\u7684\u5224\u65ad\u903b\u8f91\u5982\u4e0b\uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u53ea\u5b58\u5728\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u4e0d\u7ba1\u8be5\u6784\u9020\u65b9\u6cd5\u662f\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u8fd8\u662f\u6709\u53c2\u6784\u9020\u65b9\u6cd5\uff0cSpring\u90fd\u4f1a\u7528\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5 \u8fd9\u4e9b\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u5b58\u5728\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48Spring\u5c31\u4f1a\u7528\u8fd9\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5 \u8fd9\u4e9b\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u4e0d\u5b58\u5728\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48Spring\u5c31\u4f1a \u62a5\u9519 Spring\u7684\u8bbe\u8ba1\u601d\u60f3\u662f\u8fd9\u6837\u7684\uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u6ca1\u5f97\u9009\u62e9\uff0c\u53ea\u80fd\u7528\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u4e0d\u77e5\u9053\u5982\u4f55\u9009\u62e9\uff0c\u5c31\u4f1a\u770b\u662f\u5426\u6709\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u56e0\u4e3a\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u672c\u8eab\u8868\u793a\u4e86\u4e00\u79cd\u9ed8\u8ba4\u7684\u610f\u4e49 \u4e0d\u8fc7\u5982\u679c\u67d0\u4e2a\u6784\u9020\u65b9\u6cd5\u4e0a\u52a0\u4e86@Autowired\u6ce8\u89e3\uff0c\u90a3\u5c31\u8868\u793a\u7a0b\u5e8f\u5458\u544a\u8bc9Spring\u5c31\u7528\u8fd9\u4e2a\u52a0\u4e86\u6ce8\u89e3\u7684\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u7528\u8fd9\u4e2a\u52a0\u4e86@Autowired\u6ce8\u89e3\u6784\u9020\u65b9\u6cd5\u4e86 \u9700\u8981\u91cd\u89c6\u7684\u662f\uff0c\u5982\u679cSpring\u9009\u62e9\u4e86\u4e00\u4e2a\u6709\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0cSpring\u5728\u8c03\u7528\u8fd9\u4e2a\u6709\u53c2\u6784\u9020\u65b9\u6cd5\u65f6\uff0c\u9700\u8981\u4f20\u5165\u53c2\u6570\uff0c\u90a3\u8fd9\u4e2a\u53c2\u6570\u662f\u600e\u4e48\u6765\u7684\u5462\uff1f \u200b Spring\u4f1a\u6839\u636e\u5165\u53c2\u7684\u7c7b\u578b\u548c\u5165\u53c2\u7684\u540d\u5b57\u53bbSpring\u4e2d\u627eBean\u5bf9\u8c61\uff08\u4ee5\u5355\u4f8bBean\u4e3a\u4f8b\uff0cSpring\u4f1a\u4ece\u5355\u4f8b\u6c60\u90a3\u4e2aMap\u4e2d\u53bb\u627e\uff09\uff1a \u5148\u6839\u636e\u5165\u53c2\u7c7b\u578b\u627e\uff0c\u5982\u679c\u53ea\u627e\u5230\u4e00\u4e2a\uff0c\u90a3\u5c31\u76f4\u63a5\u7528\u6765\u4f5c\u4e3a\u5165\u53c2 \u5982\u679c\u6839\u636e\u7c7b\u578b\u627e\u5230\u591a\u4e2a\uff0c\u5219\u518d\u6839\u636e\u5165\u53c2\u540d\u5b57\u6765\u786e\u5b9a\u552f\u4e00\u4e00\u4e2a \u6700\u7ec8\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5219\u4f1a\u62a5\u9519\uff0c\u65e0\u6cd5\u521b\u5efa\u5f53\u524dBean\u5bf9\u8c61 \u786e\u5b9a\u7528\u54ea\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u786e\u5b9a\u5165\u53c2\u7684Bean\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u53eb\u505a \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \u3002 \u200b AOP\u5927\u81f4\u6d41\u7a0b AOP\u5c31\u662f\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\uff0c\u5728\u521b\u5efa\u4e00\u4e2aBean\u7684\u8fc7\u7a0b\u4e2d\uff0cSpring\u5728\u6700\u540e\u4e00\u6b65\u4f1a\u53bb\u5224\u65ad\u5f53\u524d\u6b63\u5728\u521b\u5efa\u7684\u8fd9\u4e2aBean\u662f\u4e0d\u662f\u9700\u8981\u8fdb\u884cAOP\uff0c\u5982\u679c\u9700\u8981\u5219\u4f1a\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\u3002 \u200b \u5982\u4f55\u5224\u65ad\u5f53\u524dBean\u5bf9\u8c61\u9700\u4e0d\u9700\u8981\u8fdb\u884cAOP: \u627e\u51fa\u6240\u6709\u7684\u5207\u9762Bean \u904d\u5386\u5207\u9762\u4e2d\u7684\u6bcf\u4e2a\u65b9\u6cd5\uff0c\u770b\u662f\u5426\u5199\u4e86@Before\u3001@After\u7b49\u6ce8\u89e3 \u5982\u679c\u5199\u4e86\uff0c\u5219\u5224\u65ad\u6240\u5bf9\u5e94\u7684Pointcut\u662f\u5426\u548c\u5f53\u524dBean\u5bf9\u8c61\u7684\u7c7b\u662f\u5426\u5339\u914d \u5982\u679c\u5339\u914d\u5219\u8868\u793a\u5f53\u524dBean\u5bf9\u8c61\u6709\u5339\u914d\u7684\u7684Pointcut\uff0c\u8868\u793a\u9700\u8981\u8fdb\u884cAOP \u5229\u7528cglib\u8fdb\u884cAOP\u7684\u5927\u81f4\u6d41\u7a0b\uff1a \u751f\u6210\u4ee3\u7406\u7c7bUserServiceProxy\uff0c\u4ee3\u7406\u7c7b\u7ee7\u627fUserService \u4ee3\u7406\u7c7b\u4e2d\u91cd\u5199\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982UserService\u4e2d\u7684test()\u65b9\u6cd5 \u4ee3\u7406\u7c7b\u4e2d\u8fd8\u4f1a\u6709\u4e00\u4e2atarget\u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u7684\u503c\u4e3a\u88ab\u4ee3\u7406\u5bf9\u8c61\uff08\u4e5f\u5c31\u662f\u901a\u8fc7UserService\u7c7b\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316\u51fa\u6765\u7684\u5bf9\u8c61\uff0c\u8fdb\u884c\u4e86\u4f9d\u8d56\u6ce8\u5165\u3001\u521d\u59cb\u5316\u7b49\u6b65\u9aa4\u7684\u5bf9\u8c61\uff09 \u4ee3\u7406\u7c7b\u4e2d\u7684test()\u65b9\u6cd5\u88ab\u6267\u884c\u65f6\u7684\u903b\u8f91\u5982\u4e0b\uff1a \u6267\u884c\u5207\u9762\u903b\u8f91\uff08@Before\uff09 \u8c03\u7528target.test() \u5f53\u6211\u4eec\u4eceSpring\u5bb9\u5668\u5f97\u5230UserService\u7684Bean\u5bf9\u8c61\u65f6\uff0c\u62ff\u5230\u7684\u5c31\u662fUserServiceProxy\u6240\u751f\u6210\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b UserService\u4ee3\u7406\u5bf9\u8c61.test()--->\u6267\u884c\u5207\u9762\u903b\u8f91--->target.test()\uff0c\u6ce8\u610ftarget\u5bf9\u8c61\u4e0d\u662f\u4ee3\u7406\u5bf9\u8c61\uff0c\u800c\u662f\u88ab\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b Spring\u4e8b\u52a1 \u5f53\u6211\u4eec\u5728\u67d0\u4e2a\u65b9\u6cd5\u4e0a\u52a0\u4e86@Transactional\u6ce8\u89e3\u540e\uff0c\u5c31\u8868\u793a\u8be5\u65b9\u6cd5\u5728\u8c03\u7528\u65f6\u4f1a\u5f00\u542fSpring\u4e8b\u52a1\uff0c\u800c\u8fd9\u4e2a\u65b9\u6cd5\u6240\u5728\u7684\u7c7b\u6240\u5bf9\u5e94\u7684Bean\u5bf9\u8c61\u4f1a\u662f\u8be5\u7c7b\u7684\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b Spring\u4e8b\u52a1\u7684\u4ee3\u7406\u5bf9\u8c61\u6267\u884c\u67d0\u4e2a\u65b9\u6cd5\u65f6\u7684\u6b65\u9aa4\uff1a \u5224\u65ad\u5f53\u524d\u6267\u884c\u7684\u65b9\u6cd5\u662f\u5426\u5b58\u5728@Transactional\u6ce8\u89e3 \u5982\u679c\u5b58\u5728\uff0c\u5219\u5229\u7528\u4e8b\u52a1\u7ba1\u7406\u5668\uff08TransactionMananger\uff09\u65b0\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5 \u4fee\u6539\u6570\u636e\u5e93\u8fde\u63a5\u7684autocommit\u4e3afalse \u6267\u884ctarget.test()\uff0c\u6267\u884c\u7a0b\u5e8f\u5458\u6240\u5199\u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u6267\u884csql \u6267\u884c\u5b8c\u4e86\u4e4b\u540e\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u5f02\u5e38\uff0c\u5219\u63d0\u4ea4\uff0c\u5426\u5219\u56de\u6eda Spring\u4e8b\u52a1\u662f\u5426\u4f1a\u5931\u6548\u7684\u5224\u65ad\u6807\u51c6\uff1a \u67d0\u4e2a\u52a0\u4e86@Transactional\u6ce8\u89e3\u7684\u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\uff0c\u8981\u5224\u65ad\u5230\u5e95\u662f\u4e0d\u662f\u76f4\u63a5\u88ab\u4ee3\u7406\u5bf9\u8c61\u8c03\u7528\u7684\uff0c\u5982\u679c\u662f\u5219\u4e8b\u52a1\u4f1a\u751f\u6548\uff0c\u5982\u679c\u4e0d\u662f\u5219\u5931\u6548\u3002","title":"1.Spring\u6838\u5fc3\u77e5\u8bc6\u70b9"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/#spring","text":"\u5176\u5b9e\u4e0d\u7ba1\u662fAnnotationConfigApplicationContext\u8fd8\u662fClassPathXmlApplicationContext\uff0c\u76ee\u524d\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u7b80\u5355\u7684\u5c06\u5b83\u4eec\u7406\u89e3\u4e3a\u5c31\u662f\u7528\u6765\u521b\u5efaJava\u5bf9\u8c61\u7684\uff0c\u6bd4\u5982\u8c03\u7528getBean()\u5c31\u4f1a\u53bb\u521b\u5efa\u5bf9\u8c61\uff08\u6b64\u5904\u4e0d\u4e25\u8c28\uff0cgetBean\u53ef\u80fd\u4e5f\u4e0d\u4f1a\u53bb\u521b\u5efa\u5bf9\u8c61\uff0c\u540e\u7eed\u8bfe\u7a0b\u8be6\u89e3\uff09\u3002 \u200b \u5728Java\u8bed\u8a00\u4e2d\uff0c\u80af\u5b9a\u662f\u6839\u636e\u67d0\u4e2a\u7c7b\u6765\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u7684\u3002\u6211\u4eec\u5728\u770b\u4e00\u4e0b\u5b9e\u4f8b\u4ee3\u7801\uff1a 1 2 3 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext ( AppConfig . class ); UserService userService = ( UserService ) context . getBean ( \"userService\" ); userService . test (); \u5f53\u6211\u4eec\u8c03\u7528context.getBean(\"userService\")\u65f6\uff0c\u5c31\u4f1a\u53bb\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662fgetBean\u65b9\u6cd5\u5185\u90e8\u600e\u4e48\u77e5\u9053\"userService\"\u5bf9\u5e94\u7684\u662fUserService\u7c7b\u5462\uff1f \u200b \u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5206\u6790\u51fa\u6765\uff0c\u5728\u8c03\u7528AnnotationConfigApplicationContext\u7684\u6784\u9020\u65b9\u6cd5\u65f6\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u884c\u4ee3\u7801\uff0c\u4f1a\u53bb\u505a\u4e00\u4e9b\u4e8b\u60c5\uff1a \u89e3\u6790AppConfig.class\uff0c\u5f97\u5230\u626b\u63cf\u8def\u5f84 \u904d\u5386\u626b\u63cf\u8def\u5f84\u4e0b\u7684\u6240\u6709Java\u7c7b\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u7c7b\u4e0a\u5b58\u5728@Component\u3001@Service\u7b49\u6ce8\u89e3\uff0c\u90a3\u4e48Spring\u5c31\u628a\u8fd9\u4e2a\u7c7b\u8bb0\u5f55\u4e0b\u6765\uff0c\u5b58\u5728\u4e00\u4e2aMap\u4e2d\uff0c\u6bd4\u5982Map \u3002\uff08 \u5b9e\u9645\u4e0a\uff0cSpring\u6e90\u7801\u4e2d\u786e\u5b9e\u5b58\u5728\u7c7b\u4f3c\u7684\u8fd9\u4e48\u4e00\u4e2aMap\uff0c\u53eb\u505aBeanDefinitionMap\uff0c\u540e\u7eed\u8bfe\u7a0b\u4f1a\u8bb2\u5230 \uff09 Spring\u4f1a\u6839\u636e\u67d0\u4e2a\u89c4\u5219\u751f\u6210\u5f53\u524d\u7c7b\u5bf9\u5e94\u7684beanName\uff0c\u4f5c\u4e3akey\u5b58\u5165Map\uff0c\u5f53\u524d\u7c7b\u4f5c\u4e3avalue \u8fd9\u6837\uff0c\u4f46\u8c03\u7528context.getBean(\"userService\")\u65f6\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\"userService\"\u627e\u5230UserService\u7c7b\uff0c\u4ece\u800c\u5c31\u53ef\u4ee5\u53bb\u521b\u5efa\u5bf9\u8c61\u4e86\u3002 \u200b","title":"Spring\u4e2d\u662f\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff1f"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/#bean","text":"\u90a3\u4e48Spring\u5230\u5e95\u662f\u5982\u4f55\u6765\u521b\u5efa\u4e00\u4e2aBean\u7684\u5462\uff0c\u8fd9\u4e2a\u5c31\u662fBean\u521b\u5efa\u7684\u751f\u547d\u5468\u671f\uff0c\u5927\u81f4\u8fc7\u7a0b\u5982\u4e0b \u5229\u7528\u8be5\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6765\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff08\u4f46\u662f\u5982\u4f55\u4e00\u4e2a\u7c7b\u4e2d\u6709\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u5219\u4f1a\u8fdb\u884c\u9009\u62e9\uff0c\u8fd9\u4e2a\u53eb\u505a \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \uff09 \u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u4e2d\u662f\u5426\u5b58\u5728\u88ab@Autowired\u6ce8\u89e3\u4e86\u7684\u5c5e\u6027\uff0c\u628a\u8fd9\u4e9b\u5c5e\u6027\u627e\u51fa\u6765\u5e76\u7531Spring\u8fdb\u884c\u8d4b\u503c\uff08 \u4f9d\u8d56\u6ce8\u5165 \uff09 \u4f9d\u8d56\u6ce8\u5165\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86BeanNameAware\u63a5\u53e3\u3001BeanClassLoaderAware\u63a5\u53e3\u3001BeanFactoryAware\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\uff0c\u5c31\u8868\u793a\u5f53\u524d\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u8be5\u63a5\u53e3\u4e2d\u6240\u5b9a\u4e49\u7684setBeanName()\u3001setBeanClassLoader()\u3001setBeanFactory()\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\u5e76\u4f20\u5165\u76f8\u5e94\u7684\u53c2\u6570\uff08 Aware\u56de\u8c03 \uff09 Aware\u56de\u8c03\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u65b9\u6cd5\u88ab@PostConstruct\u6ce8\u89e3\u4e86\uff0c\u5982\u679c\u5b58\u5728\uff0cSpring\u4f1a\u8c03\u7528\u5f53\u524d\u5bf9\u8c61\u7684\u6b64\u65b9\u6cd5\uff08 \u521d\u59cb\u5316\u524d \uff09 \u7d27\u63a5\u7740\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86InitializingBean\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\uff0c\u5c31\u8868\u793a\u5f53\u524d\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u8be5\u63a5\u53e3\u4e2d\u7684afterPropertiesSet()\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u8c03\u7528\u5f53\u524d\u5bf9\u8c61\u4e2d\u7684afterPropertiesSet()\u65b9\u6cd5\uff08 \u521d\u59cb\u5316 \uff09 \u6700\u540e\uff0cSpring\u4f1a\u5224\u65ad\u5f53\u524d\u5bf9\u8c61\u9700\u4e0d\u9700\u8981\u8fdb\u884cAOP\uff0c\u5982\u679c\u4e0d\u9700\u8981\u90a3\u4e48Bean\u5c31\u521b\u5efa\u5b8c\u4e86\uff0c\u5982\u679c\u9700\u8981\u8fdb\u884cAOP\uff0c\u5219\u4f1a\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\u5e76\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u505a\u4e3aBean\uff08 \u521d\u59cb\u5316\u540e \uff09 \u901a\u8fc7\u6700\u540e\u4e00\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53Spring\u6839\u636eUserService\u7c7b\u6765\u521b\u5efa\u4e00\u4e2aBean\u65f6\uff1a \u5982\u679c\u4e0d\u7528\u8fdb\u884cAOP\uff0c\u90a3\u4e48Bean\u5c31\u662fUserService\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6240\u5f97\u5230\u7684\u5bf9\u8c61\u3002 \u5982\u679c\u9700\u8981\u8fdb\u884cAOP\uff0c\u90a3\u4e48Bean\u5c31\u662fUserService\u7684\u4ee3\u7406\u7c7b\u6240\u5b9e\u4f8b\u5316\u5f97\u5230\u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u662fUserService\u672c\u8eab\u6240\u5f97\u5230\u7684\u5bf9\u8c61\u3002 Bean\u5bf9\u8c61\u521b\u5efa\u51fa\u6765\u540e\uff1a \u5982\u679c\u5f53\u524dBean\u662f\u5355\u4f8bBean\uff0c\u90a3\u4e48\u4f1a\u628a\u8be5Bean\u5bf9\u8c61\u5b58\u5165\u4e00\u4e2aMap \uff0cMap\u7684key\u4e3abeanName\uff0cvalue\u4e3aBean\u5bf9\u8c61\u3002\u8fd9\u6837\u4e0b\u6b21getBean\u65f6\u5c31\u53ef\u4ee5\u76f4\u63a5\u4eceMap\u4e2d\u62ff\u5230\u5bf9\u5e94\u7684Bean\u5bf9\u8c61\u4e86\u3002\uff08\u5b9e\u9645\u4e0a\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u8fd9\u4e2aMap\u5c31\u662f \u5355\u4f8b\u6c60 \uff09 \u5982\u679c\u5f53\u524dBean\u662f\u539f\u578bBean\uff0c\u90a3\u4e48\u540e\u7eed\u6ca1\u6709\u5176\u4ed6\u52a8\u4f5c\uff0c\u4e0d\u4f1a\u5b58\u5165\u4e00\u4e2aMap\uff0c\u4e0b\u6b21getBean\u65f6\u4f1a\u518d\u6b21\u6267\u884c\u4e0a\u8ff0\u521b\u5efa\u8fc7\u7a0b\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u7684Bean\u5bf9\u8c61\u3002","title":"Bean\u7684\u521b\u5efa\u8fc7\u7a0b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/#_1","text":"Spring\u5728\u57fa\u4e8e\u67d0\u4e2a\u7c7b\u751f\u6210Bean\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5229\u7528\u8be5\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6765\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662f \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u4f1a\u4f7f\u7528\u54ea\u4e2a\u5462\uff1f \u200b Spring\u7684\u5224\u65ad\u903b\u8f91\u5982\u4e0b\uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u53ea\u5b58\u5728\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u4e0d\u7ba1\u8be5\u6784\u9020\u65b9\u6cd5\u662f\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u8fd8\u662f\u6709\u53c2\u6784\u9020\u65b9\u6cd5\uff0cSpring\u90fd\u4f1a\u7528\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5 \u8fd9\u4e9b\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u5b58\u5728\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48Spring\u5c31\u4f1a\u7528\u8fd9\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5 \u8fd9\u4e9b\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u4e0d\u5b58\u5728\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48Spring\u5c31\u4f1a \u62a5\u9519 Spring\u7684\u8bbe\u8ba1\u601d\u60f3\u662f\u8fd9\u6837\u7684\uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u6ca1\u5f97\u9009\u62e9\uff0c\u53ea\u80fd\u7528\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u4e0d\u77e5\u9053\u5982\u4f55\u9009\u62e9\uff0c\u5c31\u4f1a\u770b\u662f\u5426\u6709\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u56e0\u4e3a\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u672c\u8eab\u8868\u793a\u4e86\u4e00\u79cd\u9ed8\u8ba4\u7684\u610f\u4e49 \u4e0d\u8fc7\u5982\u679c\u67d0\u4e2a\u6784\u9020\u65b9\u6cd5\u4e0a\u52a0\u4e86@Autowired\u6ce8\u89e3\uff0c\u90a3\u5c31\u8868\u793a\u7a0b\u5e8f\u5458\u544a\u8bc9Spring\u5c31\u7528\u8fd9\u4e2a\u52a0\u4e86\u6ce8\u89e3\u7684\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u7528\u8fd9\u4e2a\u52a0\u4e86@Autowired\u6ce8\u89e3\u6784\u9020\u65b9\u6cd5\u4e86 \u9700\u8981\u91cd\u89c6\u7684\u662f\uff0c\u5982\u679cSpring\u9009\u62e9\u4e86\u4e00\u4e2a\u6709\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0cSpring\u5728\u8c03\u7528\u8fd9\u4e2a\u6709\u53c2\u6784\u9020\u65b9\u6cd5\u65f6\uff0c\u9700\u8981\u4f20\u5165\u53c2\u6570\uff0c\u90a3\u8fd9\u4e2a\u53c2\u6570\u662f\u600e\u4e48\u6765\u7684\u5462\uff1f \u200b Spring\u4f1a\u6839\u636e\u5165\u53c2\u7684\u7c7b\u578b\u548c\u5165\u53c2\u7684\u540d\u5b57\u53bbSpring\u4e2d\u627eBean\u5bf9\u8c61\uff08\u4ee5\u5355\u4f8bBean\u4e3a\u4f8b\uff0cSpring\u4f1a\u4ece\u5355\u4f8b\u6c60\u90a3\u4e2aMap\u4e2d\u53bb\u627e\uff09\uff1a \u5148\u6839\u636e\u5165\u53c2\u7c7b\u578b\u627e\uff0c\u5982\u679c\u53ea\u627e\u5230\u4e00\u4e2a\uff0c\u90a3\u5c31\u76f4\u63a5\u7528\u6765\u4f5c\u4e3a\u5165\u53c2 \u5982\u679c\u6839\u636e\u7c7b\u578b\u627e\u5230\u591a\u4e2a\uff0c\u5219\u518d\u6839\u636e\u5165\u53c2\u540d\u5b57\u6765\u786e\u5b9a\u552f\u4e00\u4e00\u4e2a \u6700\u7ec8\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5219\u4f1a\u62a5\u9519\uff0c\u65e0\u6cd5\u521b\u5efa\u5f53\u524dBean\u5bf9\u8c61 \u786e\u5b9a\u7528\u54ea\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u786e\u5b9a\u5165\u53c2\u7684Bean\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u53eb\u505a \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \u3002 \u200b","title":"\u63a8\u65ad\u6784\u9020\u65b9\u6cd5"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/#aop","text":"AOP\u5c31\u662f\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\uff0c\u5728\u521b\u5efa\u4e00\u4e2aBean\u7684\u8fc7\u7a0b\u4e2d\uff0cSpring\u5728\u6700\u540e\u4e00\u6b65\u4f1a\u53bb\u5224\u65ad\u5f53\u524d\u6b63\u5728\u521b\u5efa\u7684\u8fd9\u4e2aBean\u662f\u4e0d\u662f\u9700\u8981\u8fdb\u884cAOP\uff0c\u5982\u679c\u9700\u8981\u5219\u4f1a\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\u3002 \u200b \u5982\u4f55\u5224\u65ad\u5f53\u524dBean\u5bf9\u8c61\u9700\u4e0d\u9700\u8981\u8fdb\u884cAOP: \u627e\u51fa\u6240\u6709\u7684\u5207\u9762Bean \u904d\u5386\u5207\u9762\u4e2d\u7684\u6bcf\u4e2a\u65b9\u6cd5\uff0c\u770b\u662f\u5426\u5199\u4e86@Before\u3001@After\u7b49\u6ce8\u89e3 \u5982\u679c\u5199\u4e86\uff0c\u5219\u5224\u65ad\u6240\u5bf9\u5e94\u7684Pointcut\u662f\u5426\u548c\u5f53\u524dBean\u5bf9\u8c61\u7684\u7c7b\u662f\u5426\u5339\u914d \u5982\u679c\u5339\u914d\u5219\u8868\u793a\u5f53\u524dBean\u5bf9\u8c61\u6709\u5339\u914d\u7684\u7684Pointcut\uff0c\u8868\u793a\u9700\u8981\u8fdb\u884cAOP \u5229\u7528cglib\u8fdb\u884cAOP\u7684\u5927\u81f4\u6d41\u7a0b\uff1a \u751f\u6210\u4ee3\u7406\u7c7bUserServiceProxy\uff0c\u4ee3\u7406\u7c7b\u7ee7\u627fUserService \u4ee3\u7406\u7c7b\u4e2d\u91cd\u5199\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982UserService\u4e2d\u7684test()\u65b9\u6cd5 \u4ee3\u7406\u7c7b\u4e2d\u8fd8\u4f1a\u6709\u4e00\u4e2atarget\u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u7684\u503c\u4e3a\u88ab\u4ee3\u7406\u5bf9\u8c61\uff08\u4e5f\u5c31\u662f\u901a\u8fc7UserService\u7c7b\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316\u51fa\u6765\u7684\u5bf9\u8c61\uff0c\u8fdb\u884c\u4e86\u4f9d\u8d56\u6ce8\u5165\u3001\u521d\u59cb\u5316\u7b49\u6b65\u9aa4\u7684\u5bf9\u8c61\uff09 \u4ee3\u7406\u7c7b\u4e2d\u7684test()\u65b9\u6cd5\u88ab\u6267\u884c\u65f6\u7684\u903b\u8f91\u5982\u4e0b\uff1a \u6267\u884c\u5207\u9762\u903b\u8f91\uff08@Before\uff09 \u8c03\u7528target.test() \u5f53\u6211\u4eec\u4eceSpring\u5bb9\u5668\u5f97\u5230UserService\u7684Bean\u5bf9\u8c61\u65f6\uff0c\u62ff\u5230\u7684\u5c31\u662fUserServiceProxy\u6240\u751f\u6210\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b UserService\u4ee3\u7406\u5bf9\u8c61.test()--->\u6267\u884c\u5207\u9762\u903b\u8f91--->target.test()\uff0c\u6ce8\u610ftarget\u5bf9\u8c61\u4e0d\u662f\u4ee3\u7406\u5bf9\u8c61\uff0c\u800c\u662f\u88ab\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b","title":"AOP\u5927\u81f4\u6d41\u7a0b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/#spring_1","text":"\u5f53\u6211\u4eec\u5728\u67d0\u4e2a\u65b9\u6cd5\u4e0a\u52a0\u4e86@Transactional\u6ce8\u89e3\u540e\uff0c\u5c31\u8868\u793a\u8be5\u65b9\u6cd5\u5728\u8c03\u7528\u65f6\u4f1a\u5f00\u542fSpring\u4e8b\u52a1\uff0c\u800c\u8fd9\u4e2a\u65b9\u6cd5\u6240\u5728\u7684\u7c7b\u6240\u5bf9\u5e94\u7684Bean\u5bf9\u8c61\u4f1a\u662f\u8be5\u7c7b\u7684\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b Spring\u4e8b\u52a1\u7684\u4ee3\u7406\u5bf9\u8c61\u6267\u884c\u67d0\u4e2a\u65b9\u6cd5\u65f6\u7684\u6b65\u9aa4\uff1a \u5224\u65ad\u5f53\u524d\u6267\u884c\u7684\u65b9\u6cd5\u662f\u5426\u5b58\u5728@Transactional\u6ce8\u89e3 \u5982\u679c\u5b58\u5728\uff0c\u5219\u5229\u7528\u4e8b\u52a1\u7ba1\u7406\u5668\uff08TransactionMananger\uff09\u65b0\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5 \u4fee\u6539\u6570\u636e\u5e93\u8fde\u63a5\u7684autocommit\u4e3afalse \u6267\u884ctarget.test()\uff0c\u6267\u884c\u7a0b\u5e8f\u5458\u6240\u5199\u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u6267\u884csql \u6267\u884c\u5b8c\u4e86\u4e4b\u540e\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u5f02\u5e38\uff0c\u5219\u63d0\u4ea4\uff0c\u5426\u5219\u56de\u6eda Spring\u4e8b\u52a1\u662f\u5426\u4f1a\u5931\u6548\u7684\u5224\u65ad\u6807\u51c6\uff1a \u67d0\u4e2a\u52a0\u4e86@Transactional\u6ce8\u89e3\u7684\u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\uff0c\u8981\u5224\u65ad\u5230\u5e95\u662f\u4e0d\u662f\u76f4\u63a5\u88ab\u4ee3\u7406\u5bf9\u8c61\u8c03\u7528\u7684\uff0c\u5982\u679c\u662f\u5219\u4e8b\u52a1\u4f1a\u751f\u6548\uff0c\u5982\u679c\u4e0d\u662f\u5219\u5931\u6548\u3002","title":"Spring\u4e8b\u52a1"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/","text":"Spring\u6e90\u7801\u7f16\u8bd1\u6559\u7a0b \u4f5c\u8005\uff1a\u5468\u745c \u6b64\u6559\u7a0b\u662f\u57fa\u4e8e\u5468\u745c\u8001\u5e08\u7684Spring5.3.10\u6ce8\u91ca\u7248\u6e90\u7801\u7f16\u8bd1\u7684\uff0c\u5e76\u4e0d\u662fGithub\u539f\u751f\u7684Spring5.3.10\u6e90\u7801\uff0c\u6709\u4e00\u4e9b\u5dee\u522b\uff0c\u4f46\u90fd\u662fgradle\u914d\u7f6e\u6587\u4ef6\u7684\u5fae\u5c0f\u6539\u52a8\uff0c\u6bd4\u5982\u628a\u67d0\u4e9b\u4f9d\u8d56\u4eceoptional\u6539\u6210compile\u7ea7\u522b\uff08\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u7f16\u8bd1\uff09\uff0c\u5176\u4ed6\u90fd\u6ca1\u6539\u52a8\u3002 \u8bb2\u7684\u662f\u6700\u65b0\u7684Spring\u7248\u672c\uff0c\u6211\u4e4b\u524d\u7528\u7684\u662f2019\u7684\u67d0\u4e2aIDEA\u7248\u672c\uff0c\u4f46\u662f\u6211\u5c1d\u8bd5\u8fc7\u540e\u53d1\u73b0\u7f16\u8bd1\u4e0d\u6210\u529f\uff0c\u6240\u4ee5\u6539\u7528\u4e86\u6700\u65b0\u7248\u672cIDEA\u7248\u672c2021.1.3\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5927\u5bb6\u800c\u8a00\u4e5f\u5c3d\u91cf\u7528\u8fd9\u4e2a\u7248\u672c\uff0c\u7528\u5176\u4ed6IDEA\u7248\u672c\u53ef\u80fd\u4f1a\u9047\u5230\u5404\u79cd\u5404\u6837\u7684\u95ee\u9898\uff0c\u89e3\u51b3\u95ee\u9898\u4f1a\u6bd4\u8f83\u8d39\u65f6\u95f4\uff0c\u6240\u4ee5\u4e3a\u4e86\u8282\u7701\u5927\u5bb6\u548c\u6211\u7684\u65f6\u95f4\uff0c\u8bf7\u5927\u5bb6\u75282021.1.3\u8fd9\u4e2aIDEA\u7248\u672c\u3002 Spring\u5e26\u6ce8\u91ca\u6e90\u7801\u5730\u5740\uff1a git clone\u7684\u5730\u5740\u4e3a\uff1a https://gitee.com/archguide/spring-framework-5.3.10.git \u9644\u4e0a2021.1.3\u7248\u7684\u767e\u5ea6\u7f51\u76d8\u94fe\u63a5\uff1a \u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1X79-2bFGtkL0763QjAya3w \u63d0\u53d6\u7801\uff1auk7w \u6b64\u94fe\u63a5\u4e2d\u8fd8\u6709IDEA\u7834\u89e3\u6240\u9700\u8981\u7684\u5de5\u5177\u5305\uff0c\u548c\u4e00\u4e2a.gradle.zip\u538b\u7f29\u5305\uff08\u540e\u7eed\u4f1a\u7528\u5230\uff0c\u6211\u662f\u7528\u7684360\u538b\u7f29\u8f6f\u4ef6\u8fdb\u884c\u538b\u7f29\u7684\uff0c\u5efa\u8bae\u5927\u5bb6\u4e5f\u7528\u8fd9\u4e2a\u8f6f\u4ef6\u6765\u89e3\u538b\uff0c\u6709\u540c\u5b66\u53cd\u9988\u7528\u5176\u4ed6\u8f6f\u4ef6\u53ef\u80fd\u89e3\u538b\u4f1a\u9047\u5230\u95ee\u9898\uff0c\u4e0a\u9762\u7f51\u76d8\u94fe\u63a5\u91cc\u6709\u4e00\u4e2a.gradle\u7684\u538b\u7f29\u5305\u548c\u4e00\u4e2a\u672a\u538b\u7f29\u7684.gradle\u6587\u4ef6\u5939\uff09\uff0c\u8fd8\u6709\u4e00\u4e2aJDK1.8\u7684\u5b89\u88c5\u5305\uff08\u56e0\u4e3a\u5982\u679c\u7528\u7a0d\u5fae\u8001\u4e00\u70b9\u76841.8\u5c0f\u7248\u672c\uff0c\u4e5f\u4f1a\u51fa\u73b0\u5947\u8469\u95ee\u9898\uff0c\u6240\u4ee5\u4e5f\u5c3d\u91cf\u7528\u6211\u63d0\u4f9b\u7684\u8fd9\u4e2aJDK\uff09 \u9644\u4e0aIDEA\u7834\u89e3\u6559\u7a0b\u94fe\u63a5\uff1a https://www.exception.site/essay/idea-reset-eval 2021.1.3IDEA\u7248\u672c\u622a\u56fe\uff1a \u4e0b\u8f7dSpring\u6e90\u7801\u6240\u9700\u8981\u7684\u4f9d\u8d56 \u767e\u5ea6\u7f51\u76d8\u94fe\u63a5\uff1a https://pan.baidu.com/s/1X79-2bFGtkL0763QjAya3w \u63d0\u53d6\u7801\uff1auk7w \u4e0b\u8f7d\u5f97\u5230.gradle.zip\u538b\u7f29\u5305\uff0c\u5e76\u89e3\u538b\uff0c\u6bd4\u5982\u89e3\u538b\u5230D\u76d8 \u56e0\u4e3aSpring\u6e90\u7801\u5b58\u5728\u5f88\u591a\u4f9d\u8d56\u5305\uff0c\u5982\u679c\u5927\u5bb6\u81ea\u884c\u4e0b\u8f7d\uff0c\u4f1a\u9700\u8981\u4e0b\u5f88\u4e45\uff081\u5c0f\u65f6\u90fd\u6709\u53ef\u80fd\uff09\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u628a\u6211\u7535\u8111\u4e0a\u7684\u4f9d\u8d56\u5305\u7ed9\u5230\u5927\u5bb6\u3002 Spring\u662f\u901a\u8fc7gradle\u6765\u7f16\u8bd1\u6e90\u7801\u4e0b\u8f7d\u4f9d\u8d56\u7684\uff0c.gradle\u6587\u4ef6\u5939\u53ef\u4ee5\u7406\u89e3\u4e3agradle\u7684\u4ed3\u5e93\uff08\u548cmave\u7c7b\u4f3c\uff0c\u4e0d\u61c2gradle\u7684\u5148\u8fd9\u4e48\u7406\u89e3\uff09\uff0c\u800c\u6211\u7ed9\u5927\u5bb6\u7684\u8fd9\u4e2a\u4ed3\u5e93\uff0c\u53ea\u5305\u542b\u4e86Spring\u6e90\u7801\u6240\u9700\u8981\u7684\u4f9d\u8d56\u3002 \u4e0b\u8f7dSpring\u6e90\u7801 git clone\u7684\u5730\u5740\u4e3a\uff1a https://gitee.com/archguide/spring-framework-5.3.10.git \u5efa\u8bae\u76f4\u63a5\u7528IDEA\u7684git\u6765\u4e0b\u8f7d\u6e90\u7801\uff1a \u8f93\u5165\u5730\u5740\uff0c\u70b9\u51fbClone\uff0c\u5c31\u4f1a\u5f00\u59cb\u4e0b\u8f7d\u6e90\u7801\u5de5\u7a0b\uff08\u56e0\u4e3a\u662f\u4ecegitee\u4e0a\u4e0b\u8f7d\uff0c\u6240\u4ee5\u4f1a\u6bd4\u4ecegithub\u4e0a\u4e0b\u8f7d\u5feb\u5f88\u591a\uff09\u3002 \u4e00\u65e6\u4e0b\u8f7d\u5b8c\u6210\uff0cIDEA\u5c31\u4f1a\u81ea\u52a8\u4e0b\u8f7dgradle\uff0c\u4e0b\u8f7d\u5b8cgradle\u5c31\u4f1a\u5f00\u59cb\u4e0b\u8f7dSpring\u6e90\u7801\u4f9d\u8d56\uff0c\u4f46\u662f\u6211\u4eec\u5df2\u7ecf\u6709\u73b0\u6210\u7684\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u53d6\u6d88\u8fd9\u4e2a\u8fc7\u7a0b\u3002 \u4fee\u6539IDEA\u7684gradle\u914d\u7f6e \u9996\u5148\u628agradle user home\u6539\u4e3a .gradle\u538b\u7f29\u5305 \u7684\u89e3\u538b\u4e4b\u540e\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u6bd4\u5982D:.gradle \u7136\u540e\u628aBuild and run suing\u548cRun tests using\u90fd\u6539\u4e3aIntelliJ IDEA\uff0c\u5176\u4ed6\u90fd\u4e0d\u7528\u52a8\uff0c\u6539\u4e3a\u4e4b\u540e\u5982\u4e0b\u56fe\uff1a \u6539\u5b8c\u4e4b\u540e\u70b9\u51fbApply\uff0c\u518d\u70b9\u51fbOK\uff0c\u4f1a\u81ea\u52a8\u89e6\u53d1gradle\u7684\u91cd\u65b0\u7f16\u8bd1\u3002 \u5982\u679c\u6ca1\u6709\u89e6\u53d1\u53ef\u4ee5\uff0c\u70b9\u51fb \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6b64\u65f6gradle\u7f16\u8bd1\u5c06\u6bd4\u8f83\u5feb\uff0c\u4f1a\u6709\u4e00\u4e2a\u7d22\u5f15\u6587\u4ef6\u8fc7\u7a0b\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u989d\u5916\u7684\u4e0b\u8f7dgradle\u548c\u4f9d\u8d56\u4e86\u3002 \u7f16\u8bd1\u6210\u529f\u622a\u56fe\uff1a \u8fd0\u884c\u4ee3\u7801 \u7f16\u8bd1\u6210\u529f\u540e\uff0c\u5728\u5de6\u4fa7\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u6a21\u5757\uff0c\u5176\u4e2d\u6709\u4e00\u4e2atuling\u6a21\u5757\uff0c\u8fd9\u662f\u6211\u5199\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\uff0c\u5728\u5b83\u4e0b\u9762\u6709\u4e00\u4e2aTest\u7c7b\uff0c\u76f4\u63a5\u8fd0\u884cmain\u65b9\u6cd5\u3002 \u95ee\u98981 \u7b2c\u4e00\u6b21\u8fd0\u884c\u53ef\u80fd\u4f1a\u6bd4\u8f83\u6162\uff0c\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e5f\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u6bd4\u5982 \u90a3\u4e48\u8bf7\u8fd0\u884c\u4e00\u4e0b\uff1a \u5982\u679cbuild\u4e4b\u540e\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u6bd4\u5982\uff1a \u6ca1\u5173\u7cfb\uff0c\u8bf7\u5ffd\u7565\uff0c\u7ee7\u7eed\u5f80\u4e0b\u8d70\u3002 \u518d\u6b21\u6267\u884cTest\u7c7b\u4e2d\u7684main\u65b9\u6cd5\uff0c\u53ef\u80fd\u5c31\u76f4\u63a5\u8fd0\u884c\u6210\u529f\u4e86\uff1a \u5230\u6b64\uff0c\u606d\u559c\u4f60\uff0c\u4f60\u5df2\u7ecf\u6210\u529f\u7684\u7f16\u8bd1\u597d\u4e86Spring\u6e90\u7801\uff0c\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u5e76\u8fdb\u884c\u8c03\u8bd5\u4e86\u3002 \u95ee\u98982 \u5982\u679c\u51fa\u73b0\u4e86\uff1a \u62a5\u9519\u7684CoroutinesUtils\u662f\u4e00\u4e2akotlin\u4e2d\u7684\u7c7b\uff0c\u89e3\u51b3\u529e\u6cd5\uff1a \u70b9\u51fbFile -> Project Structure -> Libraries -> \u201c+\u201d -> Java\uff0c\u7136\u540e\u9009\u62e9spring-framework/spring-core/kotlin-coroutines/build/libs/kotlin-coroutines-5.2.4.BUILD-SNAPSHOT.jar\uff0c\u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\u9009\u62e9spring-core.main\uff0c\u5728\u91cd\u65b0\u8fd0\u884cTest\u7c7b\u4e2d\u7684main\u65b9\u6cd5\u5373\u53ef\uff0c\u6ce8\u610f\u6211\u56fe\u4e2d\u662f\u62a5\u9519\u7684\u6a21\u5757spring-core\uff0c\u6240\u4ee5\u64cd\u4f5c\u7684\u662fspring-core.main\uff0c\u5982\u679c\u662f\u5176\u4ed6\u6a21\u5757\u62a5\u7c7b\u4f3c\u7684\u9519\uff0c\u5c31\u505a\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002 \u95ee\u98983 \u9700\u8981\u91cd\u65b0\u5b89\u88c5\u7535\u8111\u4e0a\u7684git\uff0c\u5e76\u4e14\u6700\u597d\u662f\u6309\u7167\u6700\u65b0\u7248\u672c\u7684git\uff08\u4e0a\u9762\u7f51\u76d8\u4e2d\u6709\u6309\u7167\u6587\u4ef6\uff09\uff0c\u5b89\u88c5\u7684\u65f6\u5019\u6ce8\u610f\u4ee5\u4e0b\u9875\u9762\u9009\u62e9\u7b2c\u4e8c\u9879\uff1a \u5982\u679c\u5927\u5bb6\u5728\u7f16\u8bd1\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u5176\u4ed6\u95ee\u9898\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u672c\u6587\u540e\u9762\u8fdb\u884c\u8bc4\u8bba\uff0c\u6700\u597d\u662f\u628a\u89e3\u51b3\u65b9\u6848\u4e5f\u7ed9\u51fa\uff0c\u65b9\u4fbf\u5176\u4ed6\u5c0f\u4f19\u4f34\uff0c\u611f\u8c22\u3002","title":"Spring\u6e90\u7801\u7f16\u8bd1\u6559\u7a0b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#spring","text":"\u4f5c\u8005\uff1a\u5468\u745c \u6b64\u6559\u7a0b\u662f\u57fa\u4e8e\u5468\u745c\u8001\u5e08\u7684Spring5.3.10\u6ce8\u91ca\u7248\u6e90\u7801\u7f16\u8bd1\u7684\uff0c\u5e76\u4e0d\u662fGithub\u539f\u751f\u7684Spring5.3.10\u6e90\u7801\uff0c\u6709\u4e00\u4e9b\u5dee\u522b\uff0c\u4f46\u90fd\u662fgradle\u914d\u7f6e\u6587\u4ef6\u7684\u5fae\u5c0f\u6539\u52a8\uff0c\u6bd4\u5982\u628a\u67d0\u4e9b\u4f9d\u8d56\u4eceoptional\u6539\u6210compile\u7ea7\u522b\uff08\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u7f16\u8bd1\uff09\uff0c\u5176\u4ed6\u90fd\u6ca1\u6539\u52a8\u3002 \u8bb2\u7684\u662f\u6700\u65b0\u7684Spring\u7248\u672c\uff0c\u6211\u4e4b\u524d\u7528\u7684\u662f2019\u7684\u67d0\u4e2aIDEA\u7248\u672c\uff0c\u4f46\u662f\u6211\u5c1d\u8bd5\u8fc7\u540e\u53d1\u73b0\u7f16\u8bd1\u4e0d\u6210\u529f\uff0c\u6240\u4ee5\u6539\u7528\u4e86\u6700\u65b0\u7248\u672cIDEA\u7248\u672c2021.1.3\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5927\u5bb6\u800c\u8a00\u4e5f\u5c3d\u91cf\u7528\u8fd9\u4e2a\u7248\u672c\uff0c\u7528\u5176\u4ed6IDEA\u7248\u672c\u53ef\u80fd\u4f1a\u9047\u5230\u5404\u79cd\u5404\u6837\u7684\u95ee\u9898\uff0c\u89e3\u51b3\u95ee\u9898\u4f1a\u6bd4\u8f83\u8d39\u65f6\u95f4\uff0c\u6240\u4ee5\u4e3a\u4e86\u8282\u7701\u5927\u5bb6\u548c\u6211\u7684\u65f6\u95f4\uff0c\u8bf7\u5927\u5bb6\u75282021.1.3\u8fd9\u4e2aIDEA\u7248\u672c\u3002 Spring\u5e26\u6ce8\u91ca\u6e90\u7801\u5730\u5740\uff1a git clone\u7684\u5730\u5740\u4e3a\uff1a https://gitee.com/archguide/spring-framework-5.3.10.git \u9644\u4e0a2021.1.3\u7248\u7684\u767e\u5ea6\u7f51\u76d8\u94fe\u63a5\uff1a \u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1X79-2bFGtkL0763QjAya3w \u63d0\u53d6\u7801\uff1auk7w \u6b64\u94fe\u63a5\u4e2d\u8fd8\u6709IDEA\u7834\u89e3\u6240\u9700\u8981\u7684\u5de5\u5177\u5305\uff0c\u548c\u4e00\u4e2a.gradle.zip\u538b\u7f29\u5305\uff08\u540e\u7eed\u4f1a\u7528\u5230\uff0c\u6211\u662f\u7528\u7684360\u538b\u7f29\u8f6f\u4ef6\u8fdb\u884c\u538b\u7f29\u7684\uff0c\u5efa\u8bae\u5927\u5bb6\u4e5f\u7528\u8fd9\u4e2a\u8f6f\u4ef6\u6765\u89e3\u538b\uff0c\u6709\u540c\u5b66\u53cd\u9988\u7528\u5176\u4ed6\u8f6f\u4ef6\u53ef\u80fd\u89e3\u538b\u4f1a\u9047\u5230\u95ee\u9898\uff0c\u4e0a\u9762\u7f51\u76d8\u94fe\u63a5\u91cc\u6709\u4e00\u4e2a.gradle\u7684\u538b\u7f29\u5305\u548c\u4e00\u4e2a\u672a\u538b\u7f29\u7684.gradle\u6587\u4ef6\u5939\uff09\uff0c\u8fd8\u6709\u4e00\u4e2aJDK1.8\u7684\u5b89\u88c5\u5305\uff08\u56e0\u4e3a\u5982\u679c\u7528\u7a0d\u5fae\u8001\u4e00\u70b9\u76841.8\u5c0f\u7248\u672c\uff0c\u4e5f\u4f1a\u51fa\u73b0\u5947\u8469\u95ee\u9898\uff0c\u6240\u4ee5\u4e5f\u5c3d\u91cf\u7528\u6211\u63d0\u4f9b\u7684\u8fd9\u4e2aJDK\uff09 \u9644\u4e0aIDEA\u7834\u89e3\u6559\u7a0b\u94fe\u63a5\uff1a https://www.exception.site/essay/idea-reset-eval 2021.1.3IDEA\u7248\u672c\u622a\u56fe\uff1a","title":"Spring\u6e90\u7801\u7f16\u8bd1\u6559\u7a0b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#spring_1","text":"\u767e\u5ea6\u7f51\u76d8\u94fe\u63a5\uff1a https://pan.baidu.com/s/1X79-2bFGtkL0763QjAya3w \u63d0\u53d6\u7801\uff1auk7w \u4e0b\u8f7d\u5f97\u5230.gradle.zip\u538b\u7f29\u5305\uff0c\u5e76\u89e3\u538b\uff0c\u6bd4\u5982\u89e3\u538b\u5230D\u76d8 \u56e0\u4e3aSpring\u6e90\u7801\u5b58\u5728\u5f88\u591a\u4f9d\u8d56\u5305\uff0c\u5982\u679c\u5927\u5bb6\u81ea\u884c\u4e0b\u8f7d\uff0c\u4f1a\u9700\u8981\u4e0b\u5f88\u4e45\uff081\u5c0f\u65f6\u90fd\u6709\u53ef\u80fd\uff09\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u628a\u6211\u7535\u8111\u4e0a\u7684\u4f9d\u8d56\u5305\u7ed9\u5230\u5927\u5bb6\u3002 Spring\u662f\u901a\u8fc7gradle\u6765\u7f16\u8bd1\u6e90\u7801\u4e0b\u8f7d\u4f9d\u8d56\u7684\uff0c.gradle\u6587\u4ef6\u5939\u53ef\u4ee5\u7406\u89e3\u4e3agradle\u7684\u4ed3\u5e93\uff08\u548cmave\u7c7b\u4f3c\uff0c\u4e0d\u61c2gradle\u7684\u5148\u8fd9\u4e48\u7406\u89e3\uff09\uff0c\u800c\u6211\u7ed9\u5927\u5bb6\u7684\u8fd9\u4e2a\u4ed3\u5e93\uff0c\u53ea\u5305\u542b\u4e86Spring\u6e90\u7801\u6240\u9700\u8981\u7684\u4f9d\u8d56\u3002","title":"\u4e0b\u8f7dSpring\u6e90\u7801\u6240\u9700\u8981\u7684\u4f9d\u8d56"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#spring_2","text":"git clone\u7684\u5730\u5740\u4e3a\uff1a https://gitee.com/archguide/spring-framework-5.3.10.git \u5efa\u8bae\u76f4\u63a5\u7528IDEA\u7684git\u6765\u4e0b\u8f7d\u6e90\u7801\uff1a \u8f93\u5165\u5730\u5740\uff0c\u70b9\u51fbClone\uff0c\u5c31\u4f1a\u5f00\u59cb\u4e0b\u8f7d\u6e90\u7801\u5de5\u7a0b\uff08\u56e0\u4e3a\u662f\u4ecegitee\u4e0a\u4e0b\u8f7d\uff0c\u6240\u4ee5\u4f1a\u6bd4\u4ecegithub\u4e0a\u4e0b\u8f7d\u5feb\u5f88\u591a\uff09\u3002 \u4e00\u65e6\u4e0b\u8f7d\u5b8c\u6210\uff0cIDEA\u5c31\u4f1a\u81ea\u52a8\u4e0b\u8f7dgradle\uff0c\u4e0b\u8f7d\u5b8cgradle\u5c31\u4f1a\u5f00\u59cb\u4e0b\u8f7dSpring\u6e90\u7801\u4f9d\u8d56\uff0c\u4f46\u662f\u6211\u4eec\u5df2\u7ecf\u6709\u73b0\u6210\u7684\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u53d6\u6d88\u8fd9\u4e2a\u8fc7\u7a0b\u3002","title":"\u4e0b\u8f7dSpring\u6e90\u7801"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#ideagradle","text":"\u9996\u5148\u628agradle user home\u6539\u4e3a .gradle\u538b\u7f29\u5305 \u7684\u89e3\u538b\u4e4b\u540e\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u6bd4\u5982D:.gradle \u7136\u540e\u628aBuild and run suing\u548cRun tests using\u90fd\u6539\u4e3aIntelliJ IDEA\uff0c\u5176\u4ed6\u90fd\u4e0d\u7528\u52a8\uff0c\u6539\u4e3a\u4e4b\u540e\u5982\u4e0b\u56fe\uff1a \u6539\u5b8c\u4e4b\u540e\u70b9\u51fbApply\uff0c\u518d\u70b9\u51fbOK\uff0c\u4f1a\u81ea\u52a8\u89e6\u53d1gradle\u7684\u91cd\u65b0\u7f16\u8bd1\u3002 \u5982\u679c\u6ca1\u6709\u89e6\u53d1\u53ef\u4ee5\uff0c\u70b9\u51fb \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6b64\u65f6gradle\u7f16\u8bd1\u5c06\u6bd4\u8f83\u5feb\uff0c\u4f1a\u6709\u4e00\u4e2a\u7d22\u5f15\u6587\u4ef6\u8fc7\u7a0b\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u989d\u5916\u7684\u4e0b\u8f7dgradle\u548c\u4f9d\u8d56\u4e86\u3002 \u7f16\u8bd1\u6210\u529f\u622a\u56fe\uff1a","title":"\u4fee\u6539IDEA\u7684gradle\u914d\u7f6e"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#_1","text":"\u7f16\u8bd1\u6210\u529f\u540e\uff0c\u5728\u5de6\u4fa7\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u6a21\u5757\uff0c\u5176\u4e2d\u6709\u4e00\u4e2atuling\u6a21\u5757\uff0c\u8fd9\u662f\u6211\u5199\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\uff0c\u5728\u5b83\u4e0b\u9762\u6709\u4e00\u4e2aTest\u7c7b\uff0c\u76f4\u63a5\u8fd0\u884cmain\u65b9\u6cd5\u3002","title":"\u8fd0\u884c\u4ee3\u7801"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#1","text":"\u7b2c\u4e00\u6b21\u8fd0\u884c\u53ef\u80fd\u4f1a\u6bd4\u8f83\u6162\uff0c\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e5f\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u6bd4\u5982 \u90a3\u4e48\u8bf7\u8fd0\u884c\u4e00\u4e0b\uff1a \u5982\u679cbuild\u4e4b\u540e\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u6bd4\u5982\uff1a \u6ca1\u5173\u7cfb\uff0c\u8bf7\u5ffd\u7565\uff0c\u7ee7\u7eed\u5f80\u4e0b\u8d70\u3002 \u518d\u6b21\u6267\u884cTest\u7c7b\u4e2d\u7684main\u65b9\u6cd5\uff0c\u53ef\u80fd\u5c31\u76f4\u63a5\u8fd0\u884c\u6210\u529f\u4e86\uff1a \u5230\u6b64\uff0c\u606d\u559c\u4f60\uff0c\u4f60\u5df2\u7ecf\u6210\u529f\u7684\u7f16\u8bd1\u597d\u4e86Spring\u6e90\u7801\uff0c\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u5e76\u8fdb\u884c\u8c03\u8bd5\u4e86\u3002","title":"\u95ee\u98981"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#2","text":"\u5982\u679c\u51fa\u73b0\u4e86\uff1a \u62a5\u9519\u7684CoroutinesUtils\u662f\u4e00\u4e2akotlin\u4e2d\u7684\u7c7b\uff0c\u89e3\u51b3\u529e\u6cd5\uff1a \u70b9\u51fbFile -> Project Structure -> Libraries -> \u201c+\u201d -> Java\uff0c\u7136\u540e\u9009\u62e9spring-framework/spring-core/kotlin-coroutines/build/libs/kotlin-coroutines-5.2.4.BUILD-SNAPSHOT.jar\uff0c\u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\u9009\u62e9spring-core.main\uff0c\u5728\u91cd\u65b0\u8fd0\u884cTest\u7c7b\u4e2d\u7684main\u65b9\u6cd5\u5373\u53ef\uff0c\u6ce8\u610f\u6211\u56fe\u4e2d\u662f\u62a5\u9519\u7684\u6a21\u5757spring-core\uff0c\u6240\u4ee5\u64cd\u4f5c\u7684\u662fspring-core.main\uff0c\u5982\u679c\u662f\u5176\u4ed6\u6a21\u5757\u62a5\u7c7b\u4f3c\u7684\u9519\uff0c\u5c31\u505a\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002","title":"\u95ee\u98982"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#3","text":"\u9700\u8981\u91cd\u65b0\u5b89\u88c5\u7535\u8111\u4e0a\u7684git\uff0c\u5e76\u4e14\u6700\u597d\u662f\u6309\u7167\u6700\u65b0\u7248\u672c\u7684git\uff08\u4e0a\u9762\u7f51\u76d8\u4e2d\u6709\u6309\u7167\u6587\u4ef6\uff09\uff0c\u5b89\u88c5\u7684\u65f6\u5019\u6ce8\u610f\u4ee5\u4e0b\u9875\u9762\u9009\u62e9\u7b2c\u4e8c\u9879\uff1a \u5982\u679c\u5927\u5bb6\u5728\u7f16\u8bd1\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u5176\u4ed6\u95ee\u9898\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u672c\u6587\u540e\u9762\u8fdb\u884c\u8bc4\u8bba\uff0c\u6700\u597d\u662f\u628a\u89e3\u51b3\u65b9\u6848\u4e5f\u7ed9\u51fa\uff0c\u65b9\u4fbf\u5176\u4ed6\u5c0f\u4f19\u4f34\uff0c\u611f\u8c22\u3002","title":"\u95ee\u98983"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/%E6%89%8B%E5%86%99%E6%A8%A1%E6%8B%9FSpring%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86/","text":"\u56e0\u4e3a\u662f\u624b\u5199\u6a21\u62dfSpring\u4ee3\u7801\uff0c\u6240\u4ee5\u6ca1\u6709\u7279\u6b8a\u7684\u7b14\u8bb0\uff0c\u8bf7\u76f4\u63a5\u770b\u89c6\u9891\uff0c\u5efa\u8bae\u540c\u5b66\u4eec\u62bd\u7a7a\u81ea\u5df1\u4e5f\u5199\u4e00\u4e2aSpring\u51fa\u6765\uff0c\u52a0\u6df1\u7406\u89e3\u3002 git clone\u5730\u5740\uff1a https://gitee.com/archguide/zhouyu-spring.git \u8bfe\u7a0b\u5185\u5bb9\uff1a \u901a\u8fc7\u624b\u5199\u6a21\u62df\uff0c\u4e86\u89e3Spring\u7684\u5e95\u5c42\u6e90\u7801\u542f\u52a8\u8fc7\u7a0b \u901a\u8fc7\u624b\u5199\u6a21\u62df\uff0c\u4e86\u89e3BeanDefinition\u3001BeanPostProcessor\u7684\u6982\u5ff5 \u901a\u8fc7\u624b\u5199\u6a21\u62df\uff0c\u4e86\u89e3Spring\u89e3\u6790\u914d\u7f6e\u7c7b\u7b49\u5e95\u5c42\u6e90\u7801\u5de5\u4f5c\u6d41\u7a0b \u901a\u8fc7\u624b\u5199\u6a21\u62df\uff0c\u4e86\u89e3\u4f9d\u8d56\u6ce8\u5165\uff0cAware\u56de\u8c03\u7b49\u5e95\u5c42\u6e90\u7801\u5de5\u4f5c\u6d41\u7a0b \u901a\u8fc7\u624b\u5199\u6a21\u62df\uff0c\u4e86\u89e3Spring AOP\u7684\u5e95\u5c42\u6e90\u7801\u5de5\u4f5c\u6d41\u7a0b","title":"2.\u624b\u5199\u6a21\u62dfSpring\u5e95\u5c42\u539f\u7406"},{"location":"Nginx/01Nginx%E5%AE%89%E8%A3%85/","text":"Nginx \u7b80\u4ecb \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 openresty\u6765\u505a\u8bb2\u89e3\u6f14\u793a Nginx\u5b98\u7f51 https://www.nginx.com/ Nginx \u662f\u4e00\u6b3e\u9ad8\u6027\u80fd\u7684HTTP\u670d\u52a1\u5668\u548c\u53cd \u5411\u4ee3\u7406\u670d\u52a1\u5668 \uff0c\u540c\u65f6\u652f\u6301 IMAP/POP3/SMTP \u4ee3\u7406\u670d\u52a1 \u4ec0\u4e48\u662fNginx Nginx \u662f\u4e00\u6b3e\u9ad8\u6027\u80fd\u7684 http \u670d\u52a1\u5668/\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u53ca\u7535\u5b50\u90ae\u4ef6\uff08IMAP/POP3\uff09\u4ee3\u7406\u670d\u52a1\u5668\u3002\u7531\u4fc4\u7f57\u65af\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u5e08\u4f0a\u6208\u5c14\u00b7\u897f\u7d22\u592b\uff08Igor Sysoev\uff09\u6240\u5f00\u53d1\uff0c\u5b98\u65b9\u6d4b\u8bd5 nginx \u80fd\u591f\u652f\u652f\u6491 5 \u4e07\u5e76\u53d1\u94fe\u63a5\uff0c \u5e76\u4e14 cpu\u3001\u5185\u5b58\u7b49\u8d44\u6e90\u6d88\u8017\u5374\u975e\u5e38\u4f4e\uff0c\u8fd0\u884c\u975e\u5e38\u7a33\u5b9a\u3002 \u7531C\u8bed\u8a00\u7f16\u5199 Nginx \u5e94\u7528\u573a\u666f\uff1a 1\u3001http \u670d\u52a1\u5668\u3002Nginx \u662f\u4e00\u4e2a http \u670d\u52a1\u53ef\u4ee5\u72ec\u7acb\u63d0\u4f9b http \u670d\u52a1\u3002\u53ef\u4ee5\u505a \u7f51\u9875\u9759\u6001\u670d\u52a1\u5668 \u3002 2\u3001 \u865a\u62df\u4e3b\u673a \u3002\u53ef\u4ee5\u5b9e\u73b0\u5728\u4e00\u53f0\u670d\u52a1\u5668\u865a\u62df\u51fa\u591a\u4e2a\u7f51\u7ad9\u3002\u4f8b\u5982\u4e2a\u4eba\u7f51\u7ad9\u4f7f\u7528\u7684\u865a\u62df\u4e3b\u673a\u3002 3\u3001\u53cd\u5411\u4ee3\u7406\uff0c\u8d1f\u8f7d\u5747\u8861\u3002\u5f53\u7f51\u7ad9\u7684\u8bbf\u95ee\u91cf\u8fbe\u5230\u4e00\u5b9a\u7a0b\u5ea6\u540e\uff0c\u5355\u53f0\u670d\u52a1\u5668\u4e0d\u80fd\u6ee1\u8db3\u7528\u6237\u7684\u8bf7\u6c42\u65f6\uff0c\u9700\u8981\u7528\u591a\u53f0\u670d\u52a1\u5668\u96c6\u7fa4\u53ef\u4ee5\u4f7f\u7528 nginx \u505a\u53cd\u5411\u4ee3\u7406\u3002\u5e76\u4e14\u591a\u53f0\u670d\u52a1\u5668\u53ef\u4ee5\u5e73\u5747\u5206\u62c5\u8d1f\u8f7d\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u67d0\u53f0\u670d\u52a1\u5668\u8d1f\u8f7d\u9ad8\u5b95\u673a\u800c\u67d0\u53f0\u670d\u52a1\u5668\u95f2\u7f6e\u7684\u60c5\u51b5\u3002 \u5b89\u88c5 \u9996\u5148 \u521b\u5efa\u6587\u4ef6 \u5236\u4f5c\u81ea\u52a8\u5b89\u88c5\u811a\u672c vim openresty.sh 1 2 3 4 5 6 7 8 9 10 11 12 13 yum install - y pcre - devel openssl - devel gcc curl cd / usr / local / wget https : //openresty.org/download/openresty-1.17.8.2.tar.gz cd / usr / local / tar - zxvf openresty - 1.17.8.2 . tar . gz cd / usr / local / mv openresty - 1.17.8.2 openresty cd / usr / local / openresty / . / configure -- with - luajit \\ -- without - http_redis2_module \\ -- with - http_iconv_module cd / usr / local / openresty / make && make install \u8d4b\u4e88\u6267\u884c\u6587\u4ef6 chmod +x openresty.sh \u8fd0\u884c\u5373\u53ef ./openresty.sh \u7136\u540e\u4fee\u6539\u73af\u5883 1 2 3 4 $ vi / etc / profile export PATH =/ usr / local / openresty / nginx / sbin : $PATH $ source / etc / profile OK\u81f3\u6b64\u7ed3\u675f \u914d\u7f6e\u5b8c\u6210 \u53ef\u4ee5\u5728 cd /usr/local/openresty/ \u76ee\u5f55\u4e0b\u627e\u5230NGinx \u542f\u52a8\u4ed6\u5c31ok\u4e86 \u8fd9\u4e2a\u811a\u672c\u53ef\u4ee5\u590d\u7528 \u4e0b\u6b21\u76f4\u63a5 \u8d4b\u4e88\u6267\u884c\u6587\u4ef6\u914d\u7f6e \u73af\u5883\u5373\u53ef \u865a\u62df\u673a\u5185 \u6d4b\u8bd5","title":"01Nginx\u5b89\u88c5"},{"location":"Nginx/01Nginx%E5%AE%89%E8%A3%85/#nginx","text":"\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 openresty\u6765\u505a\u8bb2\u89e3\u6f14\u793a Nginx\u5b98\u7f51 https://www.nginx.com/ Nginx \u662f\u4e00\u6b3e\u9ad8\u6027\u80fd\u7684HTTP\u670d\u52a1\u5668\u548c\u53cd \u5411\u4ee3\u7406\u670d\u52a1\u5668 \uff0c\u540c\u65f6\u652f\u6301 IMAP/POP3/SMTP \u4ee3\u7406\u670d\u52a1","title":"Nginx \u7b80\u4ecb"},{"location":"Nginx/01Nginx%E5%AE%89%E8%A3%85/#nginx_1","text":"Nginx \u662f\u4e00\u6b3e\u9ad8\u6027\u80fd\u7684 http \u670d\u52a1\u5668/\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u53ca\u7535\u5b50\u90ae\u4ef6\uff08IMAP/POP3\uff09\u4ee3\u7406\u670d\u52a1\u5668\u3002\u7531\u4fc4\u7f57\u65af\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u5e08\u4f0a\u6208\u5c14\u00b7\u897f\u7d22\u592b\uff08Igor Sysoev\uff09\u6240\u5f00\u53d1\uff0c\u5b98\u65b9\u6d4b\u8bd5 nginx \u80fd\u591f\u652f\u652f\u6491 5 \u4e07\u5e76\u53d1\u94fe\u63a5\uff0c \u5e76\u4e14 cpu\u3001\u5185\u5b58\u7b49\u8d44\u6e90\u6d88\u8017\u5374\u975e\u5e38\u4f4e\uff0c\u8fd0\u884c\u975e\u5e38\u7a33\u5b9a\u3002 \u7531C\u8bed\u8a00\u7f16\u5199 Nginx \u5e94\u7528\u573a\u666f\uff1a 1\u3001http \u670d\u52a1\u5668\u3002Nginx \u662f\u4e00\u4e2a http \u670d\u52a1\u53ef\u4ee5\u72ec\u7acb\u63d0\u4f9b http \u670d\u52a1\u3002\u53ef\u4ee5\u505a \u7f51\u9875\u9759\u6001\u670d\u52a1\u5668 \u3002 2\u3001 \u865a\u62df\u4e3b\u673a \u3002\u53ef\u4ee5\u5b9e\u73b0\u5728\u4e00\u53f0\u670d\u52a1\u5668\u865a\u62df\u51fa\u591a\u4e2a\u7f51\u7ad9\u3002\u4f8b\u5982\u4e2a\u4eba\u7f51\u7ad9\u4f7f\u7528\u7684\u865a\u62df\u4e3b\u673a\u3002 3\u3001\u53cd\u5411\u4ee3\u7406\uff0c\u8d1f\u8f7d\u5747\u8861\u3002\u5f53\u7f51\u7ad9\u7684\u8bbf\u95ee\u91cf\u8fbe\u5230\u4e00\u5b9a\u7a0b\u5ea6\u540e\uff0c\u5355\u53f0\u670d\u52a1\u5668\u4e0d\u80fd\u6ee1\u8db3\u7528\u6237\u7684\u8bf7\u6c42\u65f6\uff0c\u9700\u8981\u7528\u591a\u53f0\u670d\u52a1\u5668\u96c6\u7fa4\u53ef\u4ee5\u4f7f\u7528 nginx \u505a\u53cd\u5411\u4ee3\u7406\u3002\u5e76\u4e14\u591a\u53f0\u670d\u52a1\u5668\u53ef\u4ee5\u5e73\u5747\u5206\u62c5\u8d1f\u8f7d\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u67d0\u53f0\u670d\u52a1\u5668\u8d1f\u8f7d\u9ad8\u5b95\u673a\u800c\u67d0\u53f0\u670d\u52a1\u5668\u95f2\u7f6e\u7684\u60c5\u51b5\u3002","title":"\u4ec0\u4e48\u662fNginx"},{"location":"Nginx/01Nginx%E5%AE%89%E8%A3%85/#_1","text":"\u9996\u5148 \u521b\u5efa\u6587\u4ef6 \u5236\u4f5c\u81ea\u52a8\u5b89\u88c5\u811a\u672c vim openresty.sh 1 2 3 4 5 6 7 8 9 10 11 12 13 yum install - y pcre - devel openssl - devel gcc curl cd / usr / local / wget https : //openresty.org/download/openresty-1.17.8.2.tar.gz cd / usr / local / tar - zxvf openresty - 1.17.8.2 . tar . gz cd / usr / local / mv openresty - 1.17.8.2 openresty cd / usr / local / openresty / . / configure -- with - luajit \\ -- without - http_redis2_module \\ -- with - http_iconv_module cd / usr / local / openresty / make && make install \u8d4b\u4e88\u6267\u884c\u6587\u4ef6 chmod +x openresty.sh \u8fd0\u884c\u5373\u53ef ./openresty.sh \u7136\u540e\u4fee\u6539\u73af\u5883 1 2 3 4 $ vi / etc / profile export PATH =/ usr / local / openresty / nginx / sbin : $PATH $ source / etc / profile OK\u81f3\u6b64\u7ed3\u675f \u914d\u7f6e\u5b8c\u6210 \u53ef\u4ee5\u5728 cd /usr/local/openresty/ \u76ee\u5f55\u4e0b\u627e\u5230NGinx \u542f\u52a8\u4ed6\u5c31ok\u4e86 \u8fd9\u4e2a\u811a\u672c\u53ef\u4ee5\u590d\u7528 \u4e0b\u6b21\u76f4\u63a5 \u8d4b\u4e88\u6267\u884c\u6587\u4ef6\u914d\u7f6e \u73af\u5883\u5373\u53ef \u865a\u62df\u673a\u5185","title":"\u5b89\u88c5"},{"location":"Nginx/01Nginx%E5%AE%89%E8%A3%85/#_2","text":"","title":"\u6d4b\u8bd5"},{"location":"Nginx/02Nginx%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%A7%A3%E8%AF%BB/","text":"Nginx \u914d\u7f6e\u6587\u4ef6\u89e3\u8bfb \u914d\u7f6e\u6587\u4ef6\u7684\u51e0\u5927\u5757 1 2 3 4 5 6 7 8 # nginx\u914d\u7f6e\u6587\u4ef6\u4e3b\u8981\u5206\u4e3a\u516d\u4e2a\u533a\u57df\uff1a \u6838\u5fc3\u533a\u57df # main(\u5168\u5c40\u8bbe\u7f6e) \u4f5c\u7528\u57df\u662f\u5168\u5c40 # events(nginx\u5de5\u4f5c\u6a21\u5f0f) # upstream(\u8d1f\u8f7d\u5747\u8861\u670d\u52a1\u5668\u8bbe\u7f6e\uff09 # http(http\u8bbe\u7f6e) # sever(\u4e3b\u673a\u8bbe\u7f6e) # location(URL\u5339\u914d) # \u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 #\u8bbe\u7f6e\u7528\u6237\u7684\u6743\u9650 root nobody \u6307\u5b9a \u7528\u6237\u540d\u865a\u62df\u673a\u5185\u7528\u6237 \u6216\u8005 Ip\u8bbf\u95ee #user nobody; #\u8bbe\u7f6e\u5de5\u4f5c\u8fdb\u7a0b\u6570 \u4e00\u822c\u4e3a Cpu \u6838\u5fc3*2 4*2 worker_processes 8; # \u65e5\u5fd7\u8f93\u51fa\u53c2\u6570 #error_log logs/error.log; #error_log logs/error.log notice; #error_log logs/error.log info; # \u8fdb\u7a0bID #pid logs/nginx.pid; events { #\u6307\u5b9a\u8fd0\u884c\u6a21\u578b use epoll; # \u5de5\u4f5c\u8fde\u63a5\u6570 \u9ed8\u8ba4512 \u6839\u636e\u81ea\u5df1\u7684\u60c5\u51b5\u8c03\u6574 worker_connections 1024; } #http\u6a21\u5757 http { # \u80fd\u591f\u652f\u6301\u7684\u7c7b\u578b \u5728 \u8fd9\u4e2a\u6587\u4ef6\u4e0b\u5199\u7740 mime.types include mime.types; # \u9ed8\u8ba4\u7684\u7c7b\u578b \u5728 application/octet-stream; default_type application/octet-stream; # \u65e5\u5fd7\u7684\u683c\u5f0f #log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' # '$status $body_bytes_sent \"$http_referer\" ' # '\"$http_user_agent\" \"$http_x_forwarded_for\"'; #\u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55 #access_log logs/access.log main; #\u542f\u52a8 \u53d1\u9001\u6587\u4ef6 sendfile on; # \u5f00\u542fTCP \u63a8\u9001 #tcp_nopush on; # \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 #keepalive_timeout 0; keepalive_timeout 65; # \u5f00\u542f\u538b\u7f29\u6587\u4ef6 #gzip on; # \u670d\u52a1 # \u670d\u52a1\u5206\u7ec4 \u53cd\u5411\u4ee3\u7406\u7684\u6838\u5fc3\u5173\u952e upstream tuling { # ip \u65b9\u5f0f \u6700\u5927\u5931\u8d253\u4e2a\u8fde\u63a5 \u95f4\u9694 30S \u6743\u91cd\u4e3a 5 server 127.0.0.1:8080 max_fails=3 fail_timeout=30s weight=5; #\u6839\u636eip \u5229\u7528Hash\u7b97\u6cd5\u51b3\u5b9a\u8bbf\u95ee\u54ea\u53f0\u673a\u5668 ip_hash; } server { listen 80; server_name localhost; #charset koi8-r; #\u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55 \u4ee5\u53ca\u4f4d\u7f6e #access_log logs/host.access.log main; # \u5339\u914d\u4f4d\u7f6e \u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f location / { # \u5bfb\u627e\u4f4d\u7f6e \u9ed8\u8ba4\u5728Nginx \u76ee\u5f55\u4e0b\u7684 \u7c7b\u578b root html; index index.html index.htm; proxy_pass http://127.0.0.1; } #\u9519\u8bef\u4fe1\u606f \u9875\u9762 #error_page 404 /404.html; #\u5c06\u670d\u52a1\u5668\u9519\u8bef\u9875\u91cd\u5b9a\u5411\u5230\u9759\u6001\u9875/50x.html # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } #\u5b9e\u4f8b \u5165 \u5c06\u8bbf\u95ee\u5c3e\u7f00\u4e3a \\.php \u8df3\u8f6c\u5230 127.0.0.1 # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \\.php$ { # proxy_pass http://127.0.0.1; #} #\u5c06PHP\u811a\u672c\u4f20\u9012\u7ed9\u6b63\u5728\u4fa6\u542c127.0.0.1:9000\u7684FastCGI\u670d\u52a1\u5668 # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php$ { # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #} #\u62d2\u7edd\u8bbf\u95ee.htaccess\u6587\u4ef6\uff0c\u5982\u679cApache\u7684\u6587\u6863\u6839 # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # #location ~ /\\.ht { # deny all; #} } # another virtual host using mix of IP-, name-, and port-based configuration # #server { # listen 8000; # listen somename:8080; # server_name somename alias another.alias; # location / { # root html; # index index.html index.htm; # } #} # HTTPS server # #server { # listen 443 ssl; # server_name localhost; # ssl_certificate cert.pem; # ssl_certificate_key cert.key; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 5m; # ssl_ciphers HIGH:!aNULL:!MD5; # ssl_prefer_server_ciphers on; # location / { # root html; # index index.html index.htm; # } #} } \u6587\u5b57\u7248\u63cf\u8ff0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 ################### main\u533a\u57df ################################# #user :\u6765\u6307\u5b9aNginx Worker\u8fdb\u7a0b\u8fd0\u884c\u7528\u6237\u4ee5\u53ca\u7528\u6237\u7ec4\uff0c\u9ed8\u8ba4\u7531nobody\u8d26\u53f7\u8fd0\u884c\u3002\u4e5f\u53ef\u4ee5\u521b\u5efanginx\u7528\u6237\u6307\u5b9a\u7528\u6237\u3002 # \u521b\u5efawww\u7528\u6237\uff0c\u5728nginx\u914d\u7f6e\u6587\u4ef6\u4e2d\u628auser noboby noboby;-->user www www;\u5373\u53ef # /usr/sbin/groupadd www # /usr/sbin/useradd -g www www #worker_processes:\u6765\u6307\u5b9a\u4e86Nginx\u8981\u5f00\u542f\u7684\u5b50\u8fdb\u7a0b\u6570\u3002\u6bcf\u4e2aNginx\u8fdb\u7a0b\u5e73\u5747\u8017\u8d3910M~12M\u5185\u5b58\u3002\u6839\u636e\u7ecf\u9a8c\uff0c\u4e00\u822c\u6307\u5b9a1\u4e2a\u8fdb\u7a0b\u5c31\u8db3\u591f\u4e86\uff0c\u5982\u679c\u662f\u591a\u6838CPU\uff0c # \u5efa\u8bae\u6307\u5b9a\u548cCPU\u7684\u6570\u91cf\u4e00\u6837\u7684\u8fdb\u7a0b\u6570\u5373\u53ef\u3002\u6211\u8fd9\u91cc\u51992\uff0c\u90a3\u4e48\u5c31\u4f1a\u5f00\u542f2\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u603b\u51713\u4e2a\u8fdb\u7a0b\u3002 #error_log:\u7528\u6765\u5b9a\u4e49\u5168\u5c40\u9519\u8bef\u65e5\u5fd7\u6587\u4ef6\u3002\u65e5\u5fd7\u8f93\u51fa\u7ea7\u522b\u6709debug\u3001info\u3001notice\u3001warn\u3001error\u3001crit\u53ef\u4f9b\u9009\u62e9\uff0c\u5176\u4e2d\uff0cdebug\u8f93\u51fa\u65e5\u5fd7\u6700\u4e3a\u6700\u8be6\u7ec6\uff0c\u800ccrit\u8f93\u51fa\u65e5\u5fd7\u6700\u5c11\u3002 #pid:\u7528\u6765\u6307\u5b9a\u8fdb\u7a0bid\u7684\u5b58\u50a8\u6587\u4ef6\u4f4d\u7f6e\u3002 #worker_rlimit_nofile:\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2anginx\u8fdb\u7a0b\u53ef\u4ee5\u6253\u5f00\u7684\u6700\u591a\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u76ee\uff0c\u8fd9\u91cc\u662f65535\uff0c\u9700\u8981\u4f7f\u7528\u547d\u4ee4\u201culimit -n 65535\u201d\u6765\u8bbe\u7f6e\u3002 user nobody; worker_processes 1; error_log logs/error.log; error_log logs/error.log notice; error_log logs/error.log info; pid logs/nginx.pid; #####################event \u533a\u57df############################### #use\uff1a\u7528\u6765\u6307\u5b9aNginx\u7684\u5de5\u4f5c\u6a21\u5f0f\u3002Nginx\u652f\u6301\u7684\u5de5\u4f5c\u6a21\u5f0f\u6709select\u3001poll\u3001kqueue\u3001epoll\u3001rtsig\u548c/dev/poll\u3002 # \u5176\u4e2dselect\u548cpoll\u90fd\u662f\u6807\u51c6\u7684\u5de5\u4f5c\u6a21\u5f0f\uff0ckqueue\u548cepoll\u662f\u9ad8\u6548\u7684\u5de5\u4f5c\u6a21\u5f0f\uff0c\u4e0d\u540c\u7684\u662fepoll\u7528\u5728Linux\u5e73\u53f0\u4e0a\uff0c # \u800ckqueue\u7528\u5728BSD\u7cfb\u7edf\u4e2d,\u5bf9\u4e8eLinux\u7cfb\u7edf\uff0cepoll\u5de5\u4f5c\u6a21\u5f0f\u662f\u9996\u9009\u3002 #worker_connections\uff1a\u7528\u4e8e\u5b9a\u4e49Nginx\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u6700\u5927\u8fde\u63a5\u6570\uff0c\u5373\u63a5\u6536\u524d\u7aef\u7684\u6700\u5927\u8bf7\u6c42\u6570\uff0c\u9ed8\u8ba4\u662f1024\u3002 # \u6700\u5927\u5ba2\u6237\u7aef\u8fde\u63a5\u6570\u7531worker_processes\u548cworker_connections\u51b3\u5b9a\uff0c\u5373Max_clients=worker_processes*worker_connections\uff0c # \u5728\u4f5c\u4e3a\u53cd\u5411\u4ee3\u7406\u65f6\uff0cMax_clients\u53d8\u4e3a\uff1aMax_clients = worker_processes * worker_connections/4\u3002 # \u8fdb\u7a0b\u7684\u6700\u5927\u8fde\u63a5\u6570\u53d7Linux\u7cfb\u7edf\u8fdb\u7a0b\u7684\u6700\u5927\u6253\u5f00\u6587\u4ef6\u6570\u9650\u5236\uff0c\u5728\u6267\u884c\u64cd\u4f5c\u7cfb\u7edf\u547d\u4ee4\u201culimit -n 65536\u201d\u540eworker_connections\u7684\u8bbe\u7f6e\u624d\u80fd\u751f\u6548\u3002 events { use epoll; worker_connections 1024; } ######################### http\u8bbe\u7f6e##################################### # http\u6a21\u5757\u8d1f\u8d23HTTP\u670d\u52a1\u5668\u76f8\u5173\u5c5e\u6027\u7684\u914d\u7f6e\uff0c\u6709server\u548cupstream\u4e24\u4e2a\u5b50\u6a21\u5757 http { #include \uff1a\u6765\u7528\u8bbe\u5b9a\u6587\u4ef6\u7684mime\u7c7b\u578b,\u7c7b\u578b\u5728\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\u4e0b\u7684mime.type\u6587\u4ef6\u5b9a\u4e49\uff0c\u6765\u544a\u8bc9nginx\u6765\u8bc6\u522b\u6587\u4ef6\u7c7b\u578b\u3002 #default_type\uff1a\u8bbe\u5b9a\u4e86\u9ed8\u8ba4\u7684\u7c7b\u578b\u4e3a\u4e8c\u8fdb\u5236\u6d41\uff0c\u4e5f\u5c31\u662f\u5f53\u6587\u4ef6\u7c7b\u578b\u672a\u5b9a\u4e49\u65f6\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4f8b\u5982\u5728\u6ca1\u6709\u914d\u7f6easp\u7684locate\u73af\u5883\u65f6\uff0cNginx\u662f\u4e0d\u4e88\u89e3\u6790\u7684\uff0c\u6b64\u65f6\uff0c\u7528\u6d4f\u89c8\u5668\u8bbf\u95eeasp\u6587\u4ef6\u5c31\u4f1a\u51fa\u73b0\u4e0b\u8f7d\u4e86\u3002 #log_format\uff1a\u7528\u4e8e\u8bbe\u7f6e\u65e5\u5fd7\u7684\u683c\u5f0f\uff0c\u548c\u8bb0\u5f55\u54ea\u4e9b\u53c2\u6570\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3amain\uff0c\u521a\u597d\u7528\u4e8eaccess_log\u6765\u7eaa\u5f55\u8fd9\u79cd\u7c7b\u578b\u3002 include mime.types; default_type application/octet-stream; log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; access_log logs/access.log main; sendfile on; tcp_nopush on; keepalive_timeout 0; keepalive_timeout 65; gzip on; ######################### server\u8bbe\u7f6e##################################### #server\u7528\u6765\u5b9a\u4e00\u4e2a\u865a\u62df\u4e3b\u673a\uff0c\u6807\u5fd7\u5b9a\u4e49\u865a\u62df\u4e3b\u673a\u5f00\u59cb\u3002 #listen\uff1a\u7528\u4e8e\u6307\u5b9a\u865a\u62df\u4e3b\u673a\u7684\u670d\u52a1\u7aef\u53e3\u3002 #server_name\uff1a\u7528\u6765\u6307\u5b9aIP\u5730\u5740\u6216\u8005\u57df\u540d\uff0c\u591a\u4e2a\u57df\u540d\u4e4b\u95f4\u7528\u7a7a\u683c\u5206\u5f00\u3002 #root \uff1a\u8868\u793a\u5728\u8fd9\u6574\u4e2aserver\u865a\u62df\u4e3b\u673a\u5185\uff0c\u5168\u90e8\u7684root web\u6839\u76ee\u5f55\u3002\u6ce8\u610f\u8981\u548clocate {}\u4e0b\u9762\u5b9a\u4e49\u7684\u533a\u5206\u5f00\u6765\u3002 #index \uff1a\u5168\u5c40\u5b9a\u4e49\u8bbf\u95ee\u7684\u9ed8\u8ba4\u9996\u9875\u5730\u5740\u3002\u6ce8\u610f\u8981\u548clocate {}\u4e0b\u9762\u5b9a\u4e49\u7684\u533a\u5206\u5f00\u6765\u3002 #charset\uff1a\u7528\u4e8e\u8bbe\u7f6e\u7f51\u9875\u7684\u9ed8\u8ba4\u7f16\u7801\u683c\u5f0f\u3002 #access_log\uff1a\u7528\u6765\u6307\u5b9a\u6b64\u865a\u62df\u4e3b\u673a\u7684\u8bbf\u95ee\u65e5\u5fd7\u5b58\u653e\u8def\u5f84\uff0c\u6700\u540e\u7684main\u7528\u4e8e\u6307\u5b9a\u8bbf\u95ee\u65e5\u5fd7\u7684\u8f93\u51fa\u683c\u5f0f\u3002 server { listen 80; server_name localhost; root /Users/hk/www; index index.php index.html index.htm; charset utf-8; access_log logs/host.access.log main; aerror_log logs/host.error.log main; ######################### location\u8bbe\u7f6e##################################### # location\u6a21\u5757 \u8d1f\u8f7d\u5747\u8861,\u53cd\u5411\u4ee3\u7406,\u865a\u62df\u57df\u540d\u7b49\u914d\u7f6e\u3002\u662f\u6765\u5b9a\u4f4d\u7684\uff0c\u5b9a\u4f4dURL\uff0c\u89e3\u6790URL\uff0c\u5b83\u4e5f\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u6b63\u5219\u5339\u914d\u529f\u80fd\uff0c\u4e5f\u652f\u6301\u6761\u4ef6\u5224\u65ad\u5339\u914d\uff0c # \u53ef\u4ee5\u901a\u8fc7location\u6307\u4ee4\u5b9e\u73b0Nginx\u5bf9\u52a8,\u9759\u6001\u7f51\u9875\u8fdb\u884c\u8fc7\u6ee4\u5904\u7406\u3002 #/\u8868\u793a\u5339\u914d\u8bbf\u95ee\u6839\u76ee\u5f55\u3002 #root\u6307\u4ee4\u7528\u4e8e\u6307\u5b9a\u8bbf\u95ee\u6839\u76ee\u5f55\u65f6\uff0c\u865a\u62df\u4e3b\u673a\u7684web\u76ee\u5f55\uff0c\u8fd9\u4e2a\u76ee\u5f55\u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84\uff08\u76f8\u5bf9\u8def\u5f84\u662f\u76f8\u5bf9\u4e8enginx\u7684\u5b89\u88c5\u76ee\u5f55\uff09\u3002\u4e5f\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84\u3002 #proxy_pass\uff1a\u4ee3\u7406\u8f6c\u53d1\uff0c\u5982\u679c\u5728proxy_pass\u540e\u9762\u7684url\u52a0/\uff0c\u8868\u793a\u7edd\u5bf9\u6839\u8def\u5f84\uff1b\u5982\u679c\u6ca1\u6709/\uff0c\u8868\u793a\u76f8\u5bf9\u8def\u5f84\uff0c\u628a\u5339\u914d\u7684\u8def\u5f84\u90e8\u5206\u4e5f\u7ed9\u4ee3\u7406\u8d70\u3002 #proxy_set_header\uff1a\u5141\u8bb8\u91cd\u65b0\u5b9a\u4e49\u6216\u8005\u6dfb\u52a0\u53d1\u5f80\u540e\u7aef\u670d\u52a1\u5668\u7684\u8bf7\u6c42\u5934\u3002 #include\uff1a\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\uff0c\u540e\u9762\u4ecb\u7ecdnginx\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6\u65f6\u5019\u4f1a\u63d0\u5230\u3002 #root\uff1a\u5b9a\u4f4dlocaltion\u5339\u914d\u7684url\u8d44\u6e90\u8def\u5f84\u3002 #index\uff1a\u5b9a\u4e49\u9875\u9762\u663e\u793ahtml\uff0c\u4e00\u822c\u548calias\u914d\u5408\u4f7f\u7528\u3002 location / { root html; index index.html index.htm; } error_page 404 /404.html; error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } #\u53cd\u5411\u4ee3\u7406\u914d\u7f6e location /jyb { proxy_pass http://qurt/; proxy_read_timeout 1800s; proxy_set_header Host $host:$server_port; proxy_set_header X-real-ip $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } #\u91c7\u7528uwsgi\u65b9\u5f0f location /python/ { include uwsgi_params; uwsgi_pass 127.0.0.1:33333; } # FastCGI\u65b9\u5f0f location ~ \\.php$ { root html; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; include fastcgi_params; } #\u8bbf\u95eenginx\u672c\u673a\u76ee\u5f55\u7684\u6587\u4ef6 location / { root /home/hk/; index index.html index.htm; } location /static/ { alias /var/static/; } # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # location ~ /\\.ht { deny all; } } # another virtual host using mix of IP-, name-, and port-based configuration server { listen 8000; listen somename:8080; server_name somename alias another.alias; location / { root html; index index.html index.htm; } } # HTTPS server server { listen 443 ssl; server_name localhost; ssl_certificate cert.pem; ssl_certificate_key cert.key; ssl_session_cache shared:SSL:1m; ssl_session_timeout 5m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; location / { root html; index index.html index.htm; } } ##############upstram \u6a21\u5757################ # upstream \u6a21\u5757 \u8d1f\u8f7d\u5747\u8861\u6a21\u5757\uff0c\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u8c03\u5ea6\u7b97\u6cd5\u6765\u5b9e\u73b0\u5ba2\u6237\u7aefIP\u5230\u540e\u7aef\u670d\u52a1\u5668\u7684\u8d1f\u8f7d\u5747\u8861\u3002 #Nginx\u7684\u8d1f\u8f7d\u5747\u8861\u6a21\u5757\u76ee\u524d\u652f\u63014\u79cd\u8c03\u5ea6\u7b97\u6cd5: # weight \u8f6e\u8be2\uff08\u9ed8\u8ba4\uff09\u3002\u6bcf\u4e2a\u8bf7\u6c42\u6309\u65f6\u95f4\u987a\u5e8f\u9010\u4e00\u5206\u914d\u5230\u4e0d\u540c\u7684\u540e\u7aef\u670d\u52a1\u5668\uff0c\u5982\u679c\u540e\u7aef\u67d0\u53f0\u670d\u52a1\u5668\u5b95\u673a\uff0c\u6545\u969c\u7cfb\u7edf\u88ab\u81ea\u52a8\u5254\u9664\uff0c\u4f7f\u7528\u6237\u8bbf\u95ee\u4e0d\u53d7\u5f71\u54cd\u3002 # weight\u6307\u5b9a\u8f6e\u8be2\u6743\u503c\uff0cweight\u503c\u8d8a\u5927\uff0c\u5206\u914d\u5230\u7684\u8bbf\u95ee\u673a\u7387\u8d8a\u9ad8\uff0c\u4e3b\u8981\u7528\u4e8e\u540e\u7aef\u6bcf\u4e2a\u670d\u52a1\u5668\u6027\u80fd\u4e0d\u5747\u7684\u60c5\u51b5\u4e0b\u3002 # ip_hash\u3002\u6bcf\u4e2a\u8bf7\u6c42\u6309\u8bbf\u95eeIP\u7684hash\u7ed3\u679c\u5206\u914d\uff0c\u8fd9\u6837\u6765\u81ea\u540c\u4e00\u4e2aIP\u7684\u8bbf\u5ba2\u56fa\u5b9a\u8bbf\u95ee\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\u5668\uff0c\u6709\u6548\u89e3\u51b3\u4e86\u52a8\u6001\u7f51\u9875\u5b58\u5728\u7684session\u5171\u4eab\u95ee\u9898\u3002 # fair\u3002\u6bd4\u4e0a\u9762\u4e24\u4e2a\u66f4\u52a0\u667a\u80fd\u7684\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\u3002\u6b64\u79cd\u7b97\u6cd5\u53ef\u4ee5\u4f9d\u636e\u9875\u9762\u5927\u5c0f\u548c\u52a0\u8f7d\u65f6\u95f4\u957f\u77ed\u667a\u80fd\u5730\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\uff0c # \u4e5f\u5c31\u662f\u6839\u636e\u540e\u7aef\u670d\u52a1\u5668\u7684\u54cd\u5e94\u65f6\u95f4\u6765\u5206\u914d\u8bf7\u6c42\uff0c\u54cd\u5e94\u65f6\u95f4\u77ed\u7684\u4f18\u5148\u5206\u914d\u3002Nginx\u672c\u8eab\u662f\u4e0d\u652f\u6301fair\u7684\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u8fd9\u79cd\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5fc5\u987b\u4e0b\u8f7dNginx\u7684upstream_fair\u6a21\u5757\u3002 # url_hash\u3002\u6309\u8bbf\u95eeurl\u7684hash\u7ed3\u679c\u6765\u5206\u914d\u8bf7\u6c42\uff0c\u4f7f\u6bcf\u4e2aurl\u5b9a\u5411\u5230\u540c\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8\u540e\u7aef\u7f13\u5b58\u670d\u52a1\u5668\u7684\u6548\u7387\u3002Nginx\u672c\u8eab\u662f\u4e0d\u652f\u6301url_hash\u7684\uff0c # \u5982\u679c\u9700\u8981\u4f7f\u7528\u8fd9\u79cd\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5fc5\u987b\u5b89\u88c5Nginx \u7684hash\u8f6f\u4ef6\u5305\u3002 #\u5728HTTP Upstream\u6a21\u5757\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7server\u6307\u4ee4\u6307\u5b9a\u540e\u7aef\u670d\u52a1\u5668\u7684IP\u5730\u5740\u548c\u7aef\u53e3\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u8bbe\u5b9a\u6bcf\u4e2a\u540e\u7aef\u670d\u52a1\u5668\u5728\u8d1f\u8f7d\u5747\u8861\u8c03\u5ea6\u4e2d\u7684\u72b6\u6001\u3002\u5e38\u7528\u7684\u72b6\u6001\u6709\uff1a # down\uff0c\u8868\u793a\u5f53\u524d\u7684server\u6682\u65f6\u4e0d\u53c2\u4e0e\u8d1f\u8f7d\u5747\u8861\u3002 # backup\uff0c\u9884\u7559\u7684\u5907\u4efd\u673a\u5668\u3002\u5f53\u5176\u4ed6\u6240\u6709\u7684\u975ebackup\u673a\u5668\u51fa\u73b0\u6545\u969c\u6216\u8005\u5fd9\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u8bf7\u6c42backup\u673a\u5668\uff0c\u56e0\u6b64\u8fd9\u53f0\u673a\u5668\u7684\u538b\u529b\u6700\u8f7b\u3002 # max_fails\uff0c\u5141\u8bb8\u8bf7\u6c42\u5931\u8d25\u7684\u6b21\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u3002\u5f53\u8d85\u8fc7\u6700\u5927\u6b21\u6570\u65f6\uff0c\u8fd4\u56deproxy_next_upstream \u6a21\u5757\u5b9a\u4e49\u7684\u9519\u8bef\u3002 # fail_timeout\uff0c\u5728\u7ecf\u5386\u4e86max_fails\u6b21\u5931\u8d25\u540e\uff0c\u6682\u505c\u670d\u52a1\u7684\u65f6\u95f4\u3002max_fails\u53ef\u4ee5\u548cfail_timeout\u4e00\u8d77\u4f7f\u7528\u3002 #\u6ce8\u610f \u5f53\u8d1f\u8f7d\u8c03\u5ea6\u7b97\u6cd5\u4e3aip_hash\u65f6\uff0c\u540e\u7aef\u670d\u52a1\u5668\u5728\u8d1f\u8f7d\u5747\u8861\u8c03\u5ea6\u4e2d\u7684\u72b6\u6001\u4e0d\u80fd\u662fweight\u548cbackup\u3002 #\u5907\u6ce8\uff1a nginx\u7684worker_rlimit_nofile\u8fbe\u5230\u4e0a\u9650\u65f6\uff0c\u518d\u6709\u5ba2\u6237\u7aef\u94fe\u63a5\u62a5502\u9519\u8bef. \u7528\u4e86log_format\u6307\u4ee4\u8bbe\u7f6e\u4e86\u65e5\u5fd7\u683c\u5f0f\u4e4b\u540e\uff0c\u9700\u8981\u7528access_log\u6307\u4ee4\u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u7684\u5b58\u653e\u8def\u5f84\u3002 upstream server_group { ip_hash; server 192.168.123.1:80; server 192.168.123.2:80 down; server 192.168.123.3:8080 max_fails=3 fail_timeout=20s; server 192.168.123.4:8080; } server { listen 80; server_name localhost; location / { proxy_pass http://server_group/; } } } ######################nginx \u4e2dlocation\u4e2droot\u548calias\u7684\u533a\u522b #################### nginx\u6307\u5b9a\u6587\u4ef6\u8def\u5f84\u6709\u4e24\u79cd\u65b9\u5f0froot\u548calias\uff0c\u8fd9\u4e24\u8005\u7684\u7528\u6cd5\u533a\u522b\uff0c\u4f7f\u7528\u65b9\u6cd5\u603b\u7ed3\u4e86\u3002 root\u4e0ealias\u4e3b\u8981\u533a\u522b\u5728\u4e8enginx\u5982\u4f55\u89e3\u91calocation\u540e\u9762\u7684uri\uff0c\u8fd9\u4f1a\u4f7f\u4e24\u8005\u5206\u522b\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5c06\u8bf7\u6c42\u6620\u5c04\u5230\u670d\u52a1\u5668\u6587\u4ef6\u4e0a\u3002 [root] \u8bed\u6cd5\uff1aroot path \u9ed8\u8ba4\u503c\uff1aroot html \u914d\u7f6e\u6bb5\uff1ahttp\u3001server\u3001location\u3001if [alias] \u8bed\u6cd5\uff1aalias path \u914d\u7f6e\u6bb5\uff1alocation root\u5b9e\u4f8b\uff1a location ^~ /t/ { root /www/root/html/; } \u5982\u679c\u4e00\u4e2a\u8bf7\u6c42\u7684URI\u662f/t/a.html\u65f6\uff0cweb\u670d\u52a1\u5668\u5c06\u4f1a\u8fd4\u56de\u670d\u52a1\u5668\u4e0a\u7684/www/root/html/t/a.html\u7684\u6587\u4ef6\u3002 alias\u5b9e\u4f8b\uff1a location ^~ /t/ { alias /www/root/html/new_t/; } \u5982\u679c\u4e00\u4e2a\u8bf7\u6c42\u7684URI\u662f/t/a.html\u65f6\uff0cweb\u670d\u52a1\u5668\u5c06\u4f1a\u8fd4\u56de\u670d\u52a1\u5668\u4e0a\u7684/www/root/html/new_t/a.html\u7684\u6587\u4ef6\u3002\u6ce8\u610f\u8fd9\u91cc\u662fnew_t\uff0c \u56e0\u4e3aalias\u4f1a\u628alocation\u540e\u9762\u914d\u7f6e\u7684\u8def\u5f84\u4e22\u5f03\u6389\uff0c\u628a\u5f53\u524d\u5339\u914d\u5230\u7684\u76ee\u5f55\u6307\u5411\u5230\u6307\u5b9a\u7684\u76ee\u5f55\u3002 \u6ce8\u610f\uff1a 1. \u4f7f\u7528alias\u65f6\uff0c\u76ee\u5f55\u540d\u540e\u9762\u4e00\u5b9a\u8981\u52a0\"/\"\u3002 2. alias\u5728\u4f7f\u7528\u6b63\u5219\u5339\u914d\u65f6\uff0c\u5fc5\u987b\u6355\u6349\u8981\u5339\u914d\u7684\u5185\u5bb9\u5e76\u5728\u6307\u5b9a\u7684\u5185\u5bb9\u5904\u4f7f\u7528\u3002 3. alias\u53ea\u80fd\u4f4d\u4e8elocation\u5757\u4e2d\u3002\uff08root\u53ef\u4ee5\u4e0d\u653e\u5728location\u4e2d\uff09","title":"02Nginx\u914d\u7f6e\u6587\u4ef6\u89e3\u8bfb"},{"location":"Nginx/02Nginx%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%A7%A3%E8%AF%BB/#nginx","text":"\u914d\u7f6e\u6587\u4ef6\u7684\u51e0\u5927\u5757 1 2 3 4 5 6 7 8 # nginx\u914d\u7f6e\u6587\u4ef6\u4e3b\u8981\u5206\u4e3a\u516d\u4e2a\u533a\u57df\uff1a \u6838\u5fc3\u533a\u57df # main(\u5168\u5c40\u8bbe\u7f6e) \u4f5c\u7528\u57df\u662f\u5168\u5c40 # events(nginx\u5de5\u4f5c\u6a21\u5f0f) # upstream(\u8d1f\u8f7d\u5747\u8861\u670d\u52a1\u5668\u8bbe\u7f6e\uff09 # http(http\u8bbe\u7f6e) # sever(\u4e3b\u673a\u8bbe\u7f6e) # location(URL\u5339\u914d) # \u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 #\u8bbe\u7f6e\u7528\u6237\u7684\u6743\u9650 root nobody \u6307\u5b9a \u7528\u6237\u540d\u865a\u62df\u673a\u5185\u7528\u6237 \u6216\u8005 Ip\u8bbf\u95ee #user nobody; #\u8bbe\u7f6e\u5de5\u4f5c\u8fdb\u7a0b\u6570 \u4e00\u822c\u4e3a Cpu \u6838\u5fc3*2 4*2 worker_processes 8; # \u65e5\u5fd7\u8f93\u51fa\u53c2\u6570 #error_log logs/error.log; #error_log logs/error.log notice; #error_log logs/error.log info; # \u8fdb\u7a0bID #pid logs/nginx.pid; events { #\u6307\u5b9a\u8fd0\u884c\u6a21\u578b use epoll; # \u5de5\u4f5c\u8fde\u63a5\u6570 \u9ed8\u8ba4512 \u6839\u636e\u81ea\u5df1\u7684\u60c5\u51b5\u8c03\u6574 worker_connections 1024; } #http\u6a21\u5757 http { # \u80fd\u591f\u652f\u6301\u7684\u7c7b\u578b \u5728 \u8fd9\u4e2a\u6587\u4ef6\u4e0b\u5199\u7740 mime.types include mime.types; # \u9ed8\u8ba4\u7684\u7c7b\u578b \u5728 application/octet-stream; default_type application/octet-stream; # \u65e5\u5fd7\u7684\u683c\u5f0f #log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' # '$status $body_bytes_sent \"$http_referer\" ' # '\"$http_user_agent\" \"$http_x_forwarded_for\"'; #\u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55 #access_log logs/access.log main; #\u542f\u52a8 \u53d1\u9001\u6587\u4ef6 sendfile on; # \u5f00\u542fTCP \u63a8\u9001 #tcp_nopush on; # \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 #keepalive_timeout 0; keepalive_timeout 65; # \u5f00\u542f\u538b\u7f29\u6587\u4ef6 #gzip on; # \u670d\u52a1 # \u670d\u52a1\u5206\u7ec4 \u53cd\u5411\u4ee3\u7406\u7684\u6838\u5fc3\u5173\u952e upstream tuling { # ip \u65b9\u5f0f \u6700\u5927\u5931\u8d253\u4e2a\u8fde\u63a5 \u95f4\u9694 30S \u6743\u91cd\u4e3a 5 server 127.0.0.1:8080 max_fails=3 fail_timeout=30s weight=5; #\u6839\u636eip \u5229\u7528Hash\u7b97\u6cd5\u51b3\u5b9a\u8bbf\u95ee\u54ea\u53f0\u673a\u5668 ip_hash; } server { listen 80; server_name localhost; #charset koi8-r; #\u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55 \u4ee5\u53ca\u4f4d\u7f6e #access_log logs/host.access.log main; # \u5339\u914d\u4f4d\u7f6e \u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f location / { # \u5bfb\u627e\u4f4d\u7f6e \u9ed8\u8ba4\u5728Nginx \u76ee\u5f55\u4e0b\u7684 \u7c7b\u578b root html; index index.html index.htm; proxy_pass http://127.0.0.1; } #\u9519\u8bef\u4fe1\u606f \u9875\u9762 #error_page 404 /404.html; #\u5c06\u670d\u52a1\u5668\u9519\u8bef\u9875\u91cd\u5b9a\u5411\u5230\u9759\u6001\u9875/50x.html # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } #\u5b9e\u4f8b \u5165 \u5c06\u8bbf\u95ee\u5c3e\u7f00\u4e3a \\.php \u8df3\u8f6c\u5230 127.0.0.1 # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \\.php$ { # proxy_pass http://127.0.0.1; #} #\u5c06PHP\u811a\u672c\u4f20\u9012\u7ed9\u6b63\u5728\u4fa6\u542c127.0.0.1:9000\u7684FastCGI\u670d\u52a1\u5668 # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php$ { # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #} #\u62d2\u7edd\u8bbf\u95ee.htaccess\u6587\u4ef6\uff0c\u5982\u679cApache\u7684\u6587\u6863\u6839 # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # #location ~ /\\.ht { # deny all; #} } # another virtual host using mix of IP-, name-, and port-based configuration # #server { # listen 8000; # listen somename:8080; # server_name somename alias another.alias; # location / { # root html; # index index.html index.htm; # } #} # HTTPS server # #server { # listen 443 ssl; # server_name localhost; # ssl_certificate cert.pem; # ssl_certificate_key cert.key; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 5m; # ssl_ciphers HIGH:!aNULL:!MD5; # ssl_prefer_server_ciphers on; # location / { # root html; # index index.html index.htm; # } #} } \u6587\u5b57\u7248\u63cf\u8ff0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 ################### main\u533a\u57df ################################# #user :\u6765\u6307\u5b9aNginx Worker\u8fdb\u7a0b\u8fd0\u884c\u7528\u6237\u4ee5\u53ca\u7528\u6237\u7ec4\uff0c\u9ed8\u8ba4\u7531nobody\u8d26\u53f7\u8fd0\u884c\u3002\u4e5f\u53ef\u4ee5\u521b\u5efanginx\u7528\u6237\u6307\u5b9a\u7528\u6237\u3002 # \u521b\u5efawww\u7528\u6237\uff0c\u5728nginx\u914d\u7f6e\u6587\u4ef6\u4e2d\u628auser noboby noboby;-->user www www;\u5373\u53ef # /usr/sbin/groupadd www # /usr/sbin/useradd -g www www #worker_processes:\u6765\u6307\u5b9a\u4e86Nginx\u8981\u5f00\u542f\u7684\u5b50\u8fdb\u7a0b\u6570\u3002\u6bcf\u4e2aNginx\u8fdb\u7a0b\u5e73\u5747\u8017\u8d3910M~12M\u5185\u5b58\u3002\u6839\u636e\u7ecf\u9a8c\uff0c\u4e00\u822c\u6307\u5b9a1\u4e2a\u8fdb\u7a0b\u5c31\u8db3\u591f\u4e86\uff0c\u5982\u679c\u662f\u591a\u6838CPU\uff0c # \u5efa\u8bae\u6307\u5b9a\u548cCPU\u7684\u6570\u91cf\u4e00\u6837\u7684\u8fdb\u7a0b\u6570\u5373\u53ef\u3002\u6211\u8fd9\u91cc\u51992\uff0c\u90a3\u4e48\u5c31\u4f1a\u5f00\u542f2\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u603b\u51713\u4e2a\u8fdb\u7a0b\u3002 #error_log:\u7528\u6765\u5b9a\u4e49\u5168\u5c40\u9519\u8bef\u65e5\u5fd7\u6587\u4ef6\u3002\u65e5\u5fd7\u8f93\u51fa\u7ea7\u522b\u6709debug\u3001info\u3001notice\u3001warn\u3001error\u3001crit\u53ef\u4f9b\u9009\u62e9\uff0c\u5176\u4e2d\uff0cdebug\u8f93\u51fa\u65e5\u5fd7\u6700\u4e3a\u6700\u8be6\u7ec6\uff0c\u800ccrit\u8f93\u51fa\u65e5\u5fd7\u6700\u5c11\u3002 #pid:\u7528\u6765\u6307\u5b9a\u8fdb\u7a0bid\u7684\u5b58\u50a8\u6587\u4ef6\u4f4d\u7f6e\u3002 #worker_rlimit_nofile:\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2anginx\u8fdb\u7a0b\u53ef\u4ee5\u6253\u5f00\u7684\u6700\u591a\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u76ee\uff0c\u8fd9\u91cc\u662f65535\uff0c\u9700\u8981\u4f7f\u7528\u547d\u4ee4\u201culimit -n 65535\u201d\u6765\u8bbe\u7f6e\u3002 user nobody; worker_processes 1; error_log logs/error.log; error_log logs/error.log notice; error_log logs/error.log info; pid logs/nginx.pid; #####################event \u533a\u57df############################### #use\uff1a\u7528\u6765\u6307\u5b9aNginx\u7684\u5de5\u4f5c\u6a21\u5f0f\u3002Nginx\u652f\u6301\u7684\u5de5\u4f5c\u6a21\u5f0f\u6709select\u3001poll\u3001kqueue\u3001epoll\u3001rtsig\u548c/dev/poll\u3002 # \u5176\u4e2dselect\u548cpoll\u90fd\u662f\u6807\u51c6\u7684\u5de5\u4f5c\u6a21\u5f0f\uff0ckqueue\u548cepoll\u662f\u9ad8\u6548\u7684\u5de5\u4f5c\u6a21\u5f0f\uff0c\u4e0d\u540c\u7684\u662fepoll\u7528\u5728Linux\u5e73\u53f0\u4e0a\uff0c # \u800ckqueue\u7528\u5728BSD\u7cfb\u7edf\u4e2d,\u5bf9\u4e8eLinux\u7cfb\u7edf\uff0cepoll\u5de5\u4f5c\u6a21\u5f0f\u662f\u9996\u9009\u3002 #worker_connections\uff1a\u7528\u4e8e\u5b9a\u4e49Nginx\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u6700\u5927\u8fde\u63a5\u6570\uff0c\u5373\u63a5\u6536\u524d\u7aef\u7684\u6700\u5927\u8bf7\u6c42\u6570\uff0c\u9ed8\u8ba4\u662f1024\u3002 # \u6700\u5927\u5ba2\u6237\u7aef\u8fde\u63a5\u6570\u7531worker_processes\u548cworker_connections\u51b3\u5b9a\uff0c\u5373Max_clients=worker_processes*worker_connections\uff0c # \u5728\u4f5c\u4e3a\u53cd\u5411\u4ee3\u7406\u65f6\uff0cMax_clients\u53d8\u4e3a\uff1aMax_clients = worker_processes * worker_connections/4\u3002 # \u8fdb\u7a0b\u7684\u6700\u5927\u8fde\u63a5\u6570\u53d7Linux\u7cfb\u7edf\u8fdb\u7a0b\u7684\u6700\u5927\u6253\u5f00\u6587\u4ef6\u6570\u9650\u5236\uff0c\u5728\u6267\u884c\u64cd\u4f5c\u7cfb\u7edf\u547d\u4ee4\u201culimit -n 65536\u201d\u540eworker_connections\u7684\u8bbe\u7f6e\u624d\u80fd\u751f\u6548\u3002 events { use epoll; worker_connections 1024; } ######################### http\u8bbe\u7f6e##################################### # http\u6a21\u5757\u8d1f\u8d23HTTP\u670d\u52a1\u5668\u76f8\u5173\u5c5e\u6027\u7684\u914d\u7f6e\uff0c\u6709server\u548cupstream\u4e24\u4e2a\u5b50\u6a21\u5757 http { #include \uff1a\u6765\u7528\u8bbe\u5b9a\u6587\u4ef6\u7684mime\u7c7b\u578b,\u7c7b\u578b\u5728\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\u4e0b\u7684mime.type\u6587\u4ef6\u5b9a\u4e49\uff0c\u6765\u544a\u8bc9nginx\u6765\u8bc6\u522b\u6587\u4ef6\u7c7b\u578b\u3002 #default_type\uff1a\u8bbe\u5b9a\u4e86\u9ed8\u8ba4\u7684\u7c7b\u578b\u4e3a\u4e8c\u8fdb\u5236\u6d41\uff0c\u4e5f\u5c31\u662f\u5f53\u6587\u4ef6\u7c7b\u578b\u672a\u5b9a\u4e49\u65f6\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4f8b\u5982\u5728\u6ca1\u6709\u914d\u7f6easp\u7684locate\u73af\u5883\u65f6\uff0cNginx\u662f\u4e0d\u4e88\u89e3\u6790\u7684\uff0c\u6b64\u65f6\uff0c\u7528\u6d4f\u89c8\u5668\u8bbf\u95eeasp\u6587\u4ef6\u5c31\u4f1a\u51fa\u73b0\u4e0b\u8f7d\u4e86\u3002 #log_format\uff1a\u7528\u4e8e\u8bbe\u7f6e\u65e5\u5fd7\u7684\u683c\u5f0f\uff0c\u548c\u8bb0\u5f55\u54ea\u4e9b\u53c2\u6570\uff0c\u8fd9\u91cc\u8bbe\u7f6e\u4e3amain\uff0c\u521a\u597d\u7528\u4e8eaccess_log\u6765\u7eaa\u5f55\u8fd9\u79cd\u7c7b\u578b\u3002 include mime.types; default_type application/octet-stream; log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; access_log logs/access.log main; sendfile on; tcp_nopush on; keepalive_timeout 0; keepalive_timeout 65; gzip on; ######################### server\u8bbe\u7f6e##################################### #server\u7528\u6765\u5b9a\u4e00\u4e2a\u865a\u62df\u4e3b\u673a\uff0c\u6807\u5fd7\u5b9a\u4e49\u865a\u62df\u4e3b\u673a\u5f00\u59cb\u3002 #listen\uff1a\u7528\u4e8e\u6307\u5b9a\u865a\u62df\u4e3b\u673a\u7684\u670d\u52a1\u7aef\u53e3\u3002 #server_name\uff1a\u7528\u6765\u6307\u5b9aIP\u5730\u5740\u6216\u8005\u57df\u540d\uff0c\u591a\u4e2a\u57df\u540d\u4e4b\u95f4\u7528\u7a7a\u683c\u5206\u5f00\u3002 #root \uff1a\u8868\u793a\u5728\u8fd9\u6574\u4e2aserver\u865a\u62df\u4e3b\u673a\u5185\uff0c\u5168\u90e8\u7684root web\u6839\u76ee\u5f55\u3002\u6ce8\u610f\u8981\u548clocate {}\u4e0b\u9762\u5b9a\u4e49\u7684\u533a\u5206\u5f00\u6765\u3002 #index \uff1a\u5168\u5c40\u5b9a\u4e49\u8bbf\u95ee\u7684\u9ed8\u8ba4\u9996\u9875\u5730\u5740\u3002\u6ce8\u610f\u8981\u548clocate {}\u4e0b\u9762\u5b9a\u4e49\u7684\u533a\u5206\u5f00\u6765\u3002 #charset\uff1a\u7528\u4e8e\u8bbe\u7f6e\u7f51\u9875\u7684\u9ed8\u8ba4\u7f16\u7801\u683c\u5f0f\u3002 #access_log\uff1a\u7528\u6765\u6307\u5b9a\u6b64\u865a\u62df\u4e3b\u673a\u7684\u8bbf\u95ee\u65e5\u5fd7\u5b58\u653e\u8def\u5f84\uff0c\u6700\u540e\u7684main\u7528\u4e8e\u6307\u5b9a\u8bbf\u95ee\u65e5\u5fd7\u7684\u8f93\u51fa\u683c\u5f0f\u3002 server { listen 80; server_name localhost; root /Users/hk/www; index index.php index.html index.htm; charset utf-8; access_log logs/host.access.log main; aerror_log logs/host.error.log main; ######################### location\u8bbe\u7f6e##################################### # location\u6a21\u5757 \u8d1f\u8f7d\u5747\u8861,\u53cd\u5411\u4ee3\u7406,\u865a\u62df\u57df\u540d\u7b49\u914d\u7f6e\u3002\u662f\u6765\u5b9a\u4f4d\u7684\uff0c\u5b9a\u4f4dURL\uff0c\u89e3\u6790URL\uff0c\u5b83\u4e5f\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u6b63\u5219\u5339\u914d\u529f\u80fd\uff0c\u4e5f\u652f\u6301\u6761\u4ef6\u5224\u65ad\u5339\u914d\uff0c # \u53ef\u4ee5\u901a\u8fc7location\u6307\u4ee4\u5b9e\u73b0Nginx\u5bf9\u52a8,\u9759\u6001\u7f51\u9875\u8fdb\u884c\u8fc7\u6ee4\u5904\u7406\u3002 #/\u8868\u793a\u5339\u914d\u8bbf\u95ee\u6839\u76ee\u5f55\u3002 #root\u6307\u4ee4\u7528\u4e8e\u6307\u5b9a\u8bbf\u95ee\u6839\u76ee\u5f55\u65f6\uff0c\u865a\u62df\u4e3b\u673a\u7684web\u76ee\u5f55\uff0c\u8fd9\u4e2a\u76ee\u5f55\u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84\uff08\u76f8\u5bf9\u8def\u5f84\u662f\u76f8\u5bf9\u4e8enginx\u7684\u5b89\u88c5\u76ee\u5f55\uff09\u3002\u4e5f\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84\u3002 #proxy_pass\uff1a\u4ee3\u7406\u8f6c\u53d1\uff0c\u5982\u679c\u5728proxy_pass\u540e\u9762\u7684url\u52a0/\uff0c\u8868\u793a\u7edd\u5bf9\u6839\u8def\u5f84\uff1b\u5982\u679c\u6ca1\u6709/\uff0c\u8868\u793a\u76f8\u5bf9\u8def\u5f84\uff0c\u628a\u5339\u914d\u7684\u8def\u5f84\u90e8\u5206\u4e5f\u7ed9\u4ee3\u7406\u8d70\u3002 #proxy_set_header\uff1a\u5141\u8bb8\u91cd\u65b0\u5b9a\u4e49\u6216\u8005\u6dfb\u52a0\u53d1\u5f80\u540e\u7aef\u670d\u52a1\u5668\u7684\u8bf7\u6c42\u5934\u3002 #include\uff1a\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\uff0c\u540e\u9762\u4ecb\u7ecdnginx\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6\u65f6\u5019\u4f1a\u63d0\u5230\u3002 #root\uff1a\u5b9a\u4f4dlocaltion\u5339\u914d\u7684url\u8d44\u6e90\u8def\u5f84\u3002 #index\uff1a\u5b9a\u4e49\u9875\u9762\u663e\u793ahtml\uff0c\u4e00\u822c\u548calias\u914d\u5408\u4f7f\u7528\u3002 location / { root html; index index.html index.htm; } error_page 404 /404.html; error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } #\u53cd\u5411\u4ee3\u7406\u914d\u7f6e location /jyb { proxy_pass http://qurt/; proxy_read_timeout 1800s; proxy_set_header Host $host:$server_port; proxy_set_header X-real-ip $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } #\u91c7\u7528uwsgi\u65b9\u5f0f location /python/ { include uwsgi_params; uwsgi_pass 127.0.0.1:33333; } # FastCGI\u65b9\u5f0f location ~ \\.php$ { root html; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; include fastcgi_params; } #\u8bbf\u95eenginx\u672c\u673a\u76ee\u5f55\u7684\u6587\u4ef6 location / { root /home/hk/; index index.html index.htm; } location /static/ { alias /var/static/; } # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # location ~ /\\.ht { deny all; } } # another virtual host using mix of IP-, name-, and port-based configuration server { listen 8000; listen somename:8080; server_name somename alias another.alias; location / { root html; index index.html index.htm; } } # HTTPS server server { listen 443 ssl; server_name localhost; ssl_certificate cert.pem; ssl_certificate_key cert.key; ssl_session_cache shared:SSL:1m; ssl_session_timeout 5m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; location / { root html; index index.html index.htm; } } ##############upstram \u6a21\u5757################ # upstream \u6a21\u5757 \u8d1f\u8f7d\u5747\u8861\u6a21\u5757\uff0c\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u8c03\u5ea6\u7b97\u6cd5\u6765\u5b9e\u73b0\u5ba2\u6237\u7aefIP\u5230\u540e\u7aef\u670d\u52a1\u5668\u7684\u8d1f\u8f7d\u5747\u8861\u3002 #Nginx\u7684\u8d1f\u8f7d\u5747\u8861\u6a21\u5757\u76ee\u524d\u652f\u63014\u79cd\u8c03\u5ea6\u7b97\u6cd5: # weight \u8f6e\u8be2\uff08\u9ed8\u8ba4\uff09\u3002\u6bcf\u4e2a\u8bf7\u6c42\u6309\u65f6\u95f4\u987a\u5e8f\u9010\u4e00\u5206\u914d\u5230\u4e0d\u540c\u7684\u540e\u7aef\u670d\u52a1\u5668\uff0c\u5982\u679c\u540e\u7aef\u67d0\u53f0\u670d\u52a1\u5668\u5b95\u673a\uff0c\u6545\u969c\u7cfb\u7edf\u88ab\u81ea\u52a8\u5254\u9664\uff0c\u4f7f\u7528\u6237\u8bbf\u95ee\u4e0d\u53d7\u5f71\u54cd\u3002 # weight\u6307\u5b9a\u8f6e\u8be2\u6743\u503c\uff0cweight\u503c\u8d8a\u5927\uff0c\u5206\u914d\u5230\u7684\u8bbf\u95ee\u673a\u7387\u8d8a\u9ad8\uff0c\u4e3b\u8981\u7528\u4e8e\u540e\u7aef\u6bcf\u4e2a\u670d\u52a1\u5668\u6027\u80fd\u4e0d\u5747\u7684\u60c5\u51b5\u4e0b\u3002 # ip_hash\u3002\u6bcf\u4e2a\u8bf7\u6c42\u6309\u8bbf\u95eeIP\u7684hash\u7ed3\u679c\u5206\u914d\uff0c\u8fd9\u6837\u6765\u81ea\u540c\u4e00\u4e2aIP\u7684\u8bbf\u5ba2\u56fa\u5b9a\u8bbf\u95ee\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\u5668\uff0c\u6709\u6548\u89e3\u51b3\u4e86\u52a8\u6001\u7f51\u9875\u5b58\u5728\u7684session\u5171\u4eab\u95ee\u9898\u3002 # fair\u3002\u6bd4\u4e0a\u9762\u4e24\u4e2a\u66f4\u52a0\u667a\u80fd\u7684\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\u3002\u6b64\u79cd\u7b97\u6cd5\u53ef\u4ee5\u4f9d\u636e\u9875\u9762\u5927\u5c0f\u548c\u52a0\u8f7d\u65f6\u95f4\u957f\u77ed\u667a\u80fd\u5730\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\uff0c # \u4e5f\u5c31\u662f\u6839\u636e\u540e\u7aef\u670d\u52a1\u5668\u7684\u54cd\u5e94\u65f6\u95f4\u6765\u5206\u914d\u8bf7\u6c42\uff0c\u54cd\u5e94\u65f6\u95f4\u77ed\u7684\u4f18\u5148\u5206\u914d\u3002Nginx\u672c\u8eab\u662f\u4e0d\u652f\u6301fair\u7684\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u8fd9\u79cd\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5fc5\u987b\u4e0b\u8f7dNginx\u7684upstream_fair\u6a21\u5757\u3002 # url_hash\u3002\u6309\u8bbf\u95eeurl\u7684hash\u7ed3\u679c\u6765\u5206\u914d\u8bf7\u6c42\uff0c\u4f7f\u6bcf\u4e2aurl\u5b9a\u5411\u5230\u540c\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8\u540e\u7aef\u7f13\u5b58\u670d\u52a1\u5668\u7684\u6548\u7387\u3002Nginx\u672c\u8eab\u662f\u4e0d\u652f\u6301url_hash\u7684\uff0c # \u5982\u679c\u9700\u8981\u4f7f\u7528\u8fd9\u79cd\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5fc5\u987b\u5b89\u88c5Nginx \u7684hash\u8f6f\u4ef6\u5305\u3002 #\u5728HTTP Upstream\u6a21\u5757\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7server\u6307\u4ee4\u6307\u5b9a\u540e\u7aef\u670d\u52a1\u5668\u7684IP\u5730\u5740\u548c\u7aef\u53e3\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u8bbe\u5b9a\u6bcf\u4e2a\u540e\u7aef\u670d\u52a1\u5668\u5728\u8d1f\u8f7d\u5747\u8861\u8c03\u5ea6\u4e2d\u7684\u72b6\u6001\u3002\u5e38\u7528\u7684\u72b6\u6001\u6709\uff1a # down\uff0c\u8868\u793a\u5f53\u524d\u7684server\u6682\u65f6\u4e0d\u53c2\u4e0e\u8d1f\u8f7d\u5747\u8861\u3002 # backup\uff0c\u9884\u7559\u7684\u5907\u4efd\u673a\u5668\u3002\u5f53\u5176\u4ed6\u6240\u6709\u7684\u975ebackup\u673a\u5668\u51fa\u73b0\u6545\u969c\u6216\u8005\u5fd9\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u8bf7\u6c42backup\u673a\u5668\uff0c\u56e0\u6b64\u8fd9\u53f0\u673a\u5668\u7684\u538b\u529b\u6700\u8f7b\u3002 # max_fails\uff0c\u5141\u8bb8\u8bf7\u6c42\u5931\u8d25\u7684\u6b21\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u3002\u5f53\u8d85\u8fc7\u6700\u5927\u6b21\u6570\u65f6\uff0c\u8fd4\u56deproxy_next_upstream \u6a21\u5757\u5b9a\u4e49\u7684\u9519\u8bef\u3002 # fail_timeout\uff0c\u5728\u7ecf\u5386\u4e86max_fails\u6b21\u5931\u8d25\u540e\uff0c\u6682\u505c\u670d\u52a1\u7684\u65f6\u95f4\u3002max_fails\u53ef\u4ee5\u548cfail_timeout\u4e00\u8d77\u4f7f\u7528\u3002 #\u6ce8\u610f \u5f53\u8d1f\u8f7d\u8c03\u5ea6\u7b97\u6cd5\u4e3aip_hash\u65f6\uff0c\u540e\u7aef\u670d\u52a1\u5668\u5728\u8d1f\u8f7d\u5747\u8861\u8c03\u5ea6\u4e2d\u7684\u72b6\u6001\u4e0d\u80fd\u662fweight\u548cbackup\u3002 #\u5907\u6ce8\uff1a nginx\u7684worker_rlimit_nofile\u8fbe\u5230\u4e0a\u9650\u65f6\uff0c\u518d\u6709\u5ba2\u6237\u7aef\u94fe\u63a5\u62a5502\u9519\u8bef. \u7528\u4e86log_format\u6307\u4ee4\u8bbe\u7f6e\u4e86\u65e5\u5fd7\u683c\u5f0f\u4e4b\u540e\uff0c\u9700\u8981\u7528access_log\u6307\u4ee4\u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u7684\u5b58\u653e\u8def\u5f84\u3002 upstream server_group { ip_hash; server 192.168.123.1:80; server 192.168.123.2:80 down; server 192.168.123.3:8080 max_fails=3 fail_timeout=20s; server 192.168.123.4:8080; } server { listen 80; server_name localhost; location / { proxy_pass http://server_group/; } } } ######################nginx \u4e2dlocation\u4e2droot\u548calias\u7684\u533a\u522b #################### nginx\u6307\u5b9a\u6587\u4ef6\u8def\u5f84\u6709\u4e24\u79cd\u65b9\u5f0froot\u548calias\uff0c\u8fd9\u4e24\u8005\u7684\u7528\u6cd5\u533a\u522b\uff0c\u4f7f\u7528\u65b9\u6cd5\u603b\u7ed3\u4e86\u3002 root\u4e0ealias\u4e3b\u8981\u533a\u522b\u5728\u4e8enginx\u5982\u4f55\u89e3\u91calocation\u540e\u9762\u7684uri\uff0c\u8fd9\u4f1a\u4f7f\u4e24\u8005\u5206\u522b\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5c06\u8bf7\u6c42\u6620\u5c04\u5230\u670d\u52a1\u5668\u6587\u4ef6\u4e0a\u3002 [root] \u8bed\u6cd5\uff1aroot path \u9ed8\u8ba4\u503c\uff1aroot html \u914d\u7f6e\u6bb5\uff1ahttp\u3001server\u3001location\u3001if [alias] \u8bed\u6cd5\uff1aalias path \u914d\u7f6e\u6bb5\uff1alocation root\u5b9e\u4f8b\uff1a location ^~ /t/ { root /www/root/html/; } \u5982\u679c\u4e00\u4e2a\u8bf7\u6c42\u7684URI\u662f/t/a.html\u65f6\uff0cweb\u670d\u52a1\u5668\u5c06\u4f1a\u8fd4\u56de\u670d\u52a1\u5668\u4e0a\u7684/www/root/html/t/a.html\u7684\u6587\u4ef6\u3002 alias\u5b9e\u4f8b\uff1a location ^~ /t/ { alias /www/root/html/new_t/; } \u5982\u679c\u4e00\u4e2a\u8bf7\u6c42\u7684URI\u662f/t/a.html\u65f6\uff0cweb\u670d\u52a1\u5668\u5c06\u4f1a\u8fd4\u56de\u670d\u52a1\u5668\u4e0a\u7684/www/root/html/new_t/a.html\u7684\u6587\u4ef6\u3002\u6ce8\u610f\u8fd9\u91cc\u662fnew_t\uff0c \u56e0\u4e3aalias\u4f1a\u628alocation\u540e\u9762\u914d\u7f6e\u7684\u8def\u5f84\u4e22\u5f03\u6389\uff0c\u628a\u5f53\u524d\u5339\u914d\u5230\u7684\u76ee\u5f55\u6307\u5411\u5230\u6307\u5b9a\u7684\u76ee\u5f55\u3002 \u6ce8\u610f\uff1a 1. \u4f7f\u7528alias\u65f6\uff0c\u76ee\u5f55\u540d\u540e\u9762\u4e00\u5b9a\u8981\u52a0\"/\"\u3002 2. alias\u5728\u4f7f\u7528\u6b63\u5219\u5339\u914d\u65f6\uff0c\u5fc5\u987b\u6355\u6349\u8981\u5339\u914d\u7684\u5185\u5bb9\u5e76\u5728\u6307\u5b9a\u7684\u5185\u5bb9\u5904\u4f7f\u7528\u3002 3. alias\u53ea\u80fd\u4f4d\u4e8elocation\u5757\u4e2d\u3002\uff08root\u53ef\u4ee5\u4e0d\u653e\u5728location\u4e2d\uff09","title":"Nginx \u914d\u7f6e\u6587\u4ef6\u89e3\u8bfb"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/","text":"Nginx \u670d\u52a1\u5668\u7684\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u662f\u5176\u6700\u5e38\u7528\u7684\u91cd\u8981\u529f\u80fd\uff0c\u7531\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u4e5f\u53ef\u4ee5\u884d\u751f\u51fa\u5f88\u591a\u4e0e\u6b64\u76f8\u5173\u7684 Nginx \u670d\u52a1\u5668\u91cd\u8981\u529f\u80fd\uff0c\u6bd4\u5982\u540e\u9762\u4f1a\u4ecb\u7ecd\u7684\u8d1f\u8f7d\u5747\u8861\u3002\u6211\u4eec\u4f1a\u5148\u4ecb\u7ecd Nginx \u7684\u53cd\u5411\u4ee3\u7406\uff0c\u5f53\u7136\u5728\u4e86\u89e3\u53cd\u5411\u4ee3\u7406\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u77e5\u9053\u4ec0\u4e48\u662f\u4ee3\u7406\u4ee5\u53ca\u4ec0\u4e48\u662f\u6b63\u5411\u4ee3\u7406\u3002 1\u3001\u4ee3\u7406 \u5728Java\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\uff0c\u4ee3\u7406\u6a21\u5f0f\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff1a \u7ed9\u67d0\u4e2a\u5bf9\u8c61\u63d0\u4f9b\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u5e76\u7531\u4ee3\u7406\u5bf9\u8c61\u63a7\u5236\u539f\u5bf9\u8c61\u7684\u5f15\u7528\u3002 ** \u53ef\u80fd\u5927\u5bb6\u4e0d\u592a\u660e\u767d\u8fd9\u53e5\u8bdd\uff0c\u5728\u4e3e\u4e00\u4e2a\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u4f8b\u5b50\uff1a\u6bd4\u5982\u6211\u4eec\u8981\u4e70\u4e00\u95f4\u4e8c\u624b\u623f\uff0c\u867d\u7136\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u53bb\u627e\u623f\u6e90\uff0c\u4f46\u662f\u8fd9\u592a\u82b1\u8d39\u65f6\u95f4\u7cbe\u529b\u4e86\uff0c\u800c\u4e14\u623f\u5c4b\u8d28\u91cf\u68c0\u6d4b\u4ee5\u53ca\u623f\u5c4b\u8fc7\u6237\u7b49\u4e00\u7cfb\u5217\u624b\u7eed\u4e5f\u90fd\u5f97\u6211\u4eec\u53bb\u529e\uff0c\u518d\u8bf4\u73b0\u5728\u8fd9\u4e2a\u793e\u4f1a\uff0c\u7b49\u6211\u4eec\u627e\u5230\u623f\u6e90\uff0c\u8bf4\u4e0d\u5b9a\u623f\u5b50\u90fd\u5df2\u7ecf\u6da8\u4ef7\u4e86\uff0c\u90a3\u4e48\u600e\u4e48\u529e\u5462\uff1f\u6700\u7b80\u5355\u5feb\u6377\u7684\u65b9\u6cd5\u5c31\u662f\u627e\u4e8c\u624b\u623f\u4e2d\u4ecb\u516c\u53f8\uff08\u4e3a\u4ec0\u4e48\uff1f\u522b\u4eba\u90a3\u91cc\u623f\u6e90\u591a\u554a\uff09\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u59d4\u6258\u4e2d\u4ecb\u516c\u53f8\u6765\u7ed9\u6211\u627e\u5408\u9002\u7684\u623f\u5b50\uff0c\u4ee5\u53ca\u540e\u7eed\u7684\u8d28\u91cf\u68c0\u6d4b\u8fc7\u6237\u7b49\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u9009\u597d\u81ea\u5df1\u60f3\u8981\u7684\u623f\u5b50\uff0c\u7136\u540e\u4ea4\u94b1\u5c31\u884c\u4e86\u3002 \u4ee3\u7406\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5982\u679c\u6211\u4eec\u60f3\u505a\u4ec0\u4e48\uff0c\u4f46\u53c8\u4e0d\u60f3\u76f4\u63a5\u53bb\u505a\uff0c\u90a3\u4e48\u8fd9\u65f6\u5019\u5c31\u627e\u53e6\u5916\u4e00\u4e2a\u4eba\u5e2e\u6211\u4eec\u53bb\u505a\u3002\u90a3\u4e48\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u9762\u7684\u4e2d\u4ecb\u516c\u53f8\u5c31\u662f\u7ed9\u6211\u4eec\u505a\u4ee3\u7406\u670d\u52a1\u7684\uff0c\u6211\u4eec\u59d4\u6258\u4e2d\u4ecb\u516c\u53f8\u5e2e\u6211\u4eec\u627e\u623f\u5b50\u3002 Nginx \u4e3b\u8981\u80fd\u591f\u4ee3\u7406\u5982\u4e0b\u51e0\u79cd\u534f\u8bae\uff0c\u5176\u4e2d\u7528\u5230\u7684\u6700\u591a\u7684\u5c31\u662f\u505aHttp\u4ee3\u7406\u670d\u52a1\u5668\u3002 2\u3001\u6b63\u5411\u4ee3\u7406 \u5f04\u6e05\u695a\u4ec0\u4e48\u662f\u4ee3\u7406\u4e86\uff0c\u90a3\u4e48\u4ec0\u4e48\u53c8\u662f\u6b63\u5411\u4ee3\u7406\u5462\uff1f \u8fd9\u91cc\u6211\u518d\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1a\u5927\u5bb6\u90fd\u77e5\u9053\uff0c\u73b0\u5728\u56fd\u5185\u662f\u8bbf\u95ee\u4e0d\u4e86 Google\u7684\uff0c\u90a3\u4e48\u600e\u4e48\u624d\u80fd\u8bbf\u95ee Google\u5462\uff1f\u6211\u4eec\u53c8\u60f3\uff0c\u7f8e\u56fd\u4eba\u4e0d\u662f\u80fd\u8bbf\u95ee Google\u5417\uff08\u8fd9\u4e0d\u5e9f\u8bdd\uff0cGoogle\u5c31\u662f\u7f8e\u56fd\u7684\uff09\uff0c\u5982\u679c\u6211\u4eec\u7535\u8111\u7684\u5bf9\u5916\u516c\u7f51 IP \u5730\u5740\u80fd\u53d8\u6210\u7f8e\u56fd\u7684 IP \u5730\u5740\uff0c\u90a3\u4e0d\u5c31\u53ef\u4ee5\u8bbf\u95ee Google\u4e86\u3002\u4f60\u5f88\u806a\u660e\uff0cVPN \u5c31\u662f\u8fd9\u6837\u4ea7\u751f\u7684\u3002\u6211\u4eec\u5728\u8bbf\u95ee Google \u65f6\uff0c\u5148\u8fde\u4e0a VPN \u670d\u52a1\u5668\u5c06\u6211\u4eec\u7684 IP \u5730\u5740\u53d8\u6210\u7f8e\u56fd\u7684 IP \u5730\u5740\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u987a\u5229\u7684\u8bbf\u95ee\u4e86\u3002 \u8fd9\u91cc\u7684 VPN \u5c31\u662f\u505a\u6b63\u5411\u4ee3\u7406\u7684\u3002\u6b63\u5411\u4ee3\u7406\u670d\u52a1\u5668\u4f4d\u4e8e\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\uff0c\u4e3a\u4e86\u5411\u670d\u52a1\u5668\u83b7\u53d6\u6570\u636e\uff0c\u5ba2\u6237\u7aef\u8981\u5411\u4ee3\u7406\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\uff0c\u5e76\u6307\u5b9a\u76ee\u6807\u670d\u52a1\u5668\uff0c\u4ee3\u7406\u670d\u52a1\u5668\u5c06\u76ee\u6807\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e\u8f6c\u4ea4\u7ed9\u5ba2\u6237\u7aef\u3002\u8fd9\u91cc\u5ba2\u6237\u7aef\u662f\u8981\u8fdb\u884c\u4e00\u4e9b\u6b63\u5411\u4ee3\u7406\u7684\u8bbe\u7f6e\u7684\u3002 3\u3001\u53cd\u5411\u4ee3\u7406 \u53cd\u5411\u4ee3\u7406\u548c\u6b63\u5411\u4ee3\u7406\u7684\u533a\u522b\u5c31\u662f\uff1a \u6b63\u5411\u4ee3\u7406\u4ee3\u7406\u5ba2\u6237\u7aef\uff0c\u53cd\u5411\u4ee3\u7406\u4ee3\u7406\u670d\u52a1\u5668\u3002 \u53cd\u5411\u4ee3\u7406\uff0c\u5176\u5b9e\u5ba2\u6237\u7aef\u5bf9\u4ee3\u7406\u662f\u65e0\u611f\u77e5\u7684\uff0c\u56e0\u4e3a\u5ba2\u6237\u7aef\u4e0d\u9700\u8981\u4efb\u4f55\u914d\u7f6e\u5c31\u53ef\u4ee5\u8bbf\u95ee\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u8bf7\u6c42\u53d1\u9001\u5230\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u7531\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u53bb\u9009\u62e9\u76ee\u6807\u670d\u52a1\u5668\u83b7\u53d6\u6570\u636e\u540e\uff0c\u5728\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u6b64\u65f6\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u548c\u76ee\u6807\u670d\u52a1\u5668\u5bf9\u5916\u5c31\u662f\u4e00\u4e2a\u670d\u52a1\u5668\uff0c\u66b4\u9732\u7684\u662f\u4ee3\u7406\u670d\u52a1\u5668\u5730\u5740\uff0c\u9690\u85cf\u4e86\u771f\u5b9e\u670d\u52a1\u5668IP\u5730\u5740\u3002 \u7406\u89e3\u8fd9\u4e24\u79cd\u4ee3\u7406\u7684\u5173\u952e\u5728\u4e8e\u4ee3\u7406\u670d\u52a1\u5668\u6240\u4ee3\u7406\u7684\u5bf9\u8c61\u662f\u4ec0\u4e48\uff0c\u6b63\u5411\u4ee3\u7406\u4ee3\u7406\u7684\u662f\u5ba2\u6237\u7aef\uff0c\u6211\u4eec\u9700\u8981\u5728\u5ba2\u6237\u7aef\u8fdb\u884c\u4e00\u4e9b\u4ee3\u7406\u7684\u8bbe\u7f6e\u3002\u800c\u53cd\u5411\u4ee3\u7406\u4ee3\u7406\u7684\u662f\u670d\u52a1\u5668\uff0c\u4f5c\u4e3a\u5ba2\u6237\u7aef\u7684\u6211\u4eec\u662f\u65e0\u6cd5\u611f\u77e5\u5230\u670d\u52a1\u5668\u7684\u771f\u5b9e\u5b58\u5728\u7684\u3002 \u603b\u7ed3\u8d77\u6765\u8fd8\u662f\u4e00\u53e5\u8bdd\uff1a \u6b63\u5411\u4ee3\u7406\u4ee3\u7406\u5ba2\u6237\u7aef\uff0c\u53cd\u5411\u4ee3\u7406\u4ee3\u7406\u670d\u52a1\u5668\u3002 4\u3001Nginx \u53cd\u5411\u4ee3\u7406 \u8303\u4f8b\uff1a\u4f7f\u7528 nginx \u53cd\u5411\u4ee3\u7406 www.123.com \u76f4\u63a5\u8df3\u8f6c\u5230127.0.0.1:8080 \u2460\u3001\u542f\u52a8\u4e00\u4e2a tomcat\uff0c\u6d4f\u89c8\u5668\u5730\u5740\u680f\u8f93\u5165 127.0.0.1:8080\uff0c\u51fa\u73b0\u5982\u4e0b\u754c\u9762 \u2461\u3001\u901a\u8fc7\u4fee\u6539\u672c\u5730 host \u6587\u4ef6\uff0c\u5c06 www.123.com \u6620\u5c04\u5230 127.0.0.1 1 127.0.0.1 www.123.com \u5c06\u4e0a\u9762\u4ee3\u7801\u6dfb\u52a0\u5230 Windows \u7684host \u6587\u4ef6\u4e2d\uff0c\u8be5\u6587\u4ef6\u4f4d\u7f6e\u5728\uff1a \u914d\u7f6e\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u901a\u8fc7 www.123.com:8080 \u8bbf\u95ee\u5230\u7b2c\u4e00\u6b65\u51fa\u73b0\u7684 Tomcat\u521d\u59cb\u754c\u9762\u3002 \u90a3\u4e48\u5982\u4f55\u53ea\u9700\u8981\u8f93\u5165 www.123.com \u4fbf\u53ef\u4ee5\u8df3\u8f6c\u5230 Tomcat\u521d\u59cb\u754c\u9762\u5462\uff1f\u4fbf\u7528\u5230 nginx\u7684\u53cd\u5411\u4ee3\u7406\u3002 \u2462\u3001\u5728 nginx.conf \u914d\u7f6e\u6587\u4ef6\u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a 1 2 3 4 5 6 7 8 9 1 server { 2 listen 80; 3 server_name www.123.com; 4 5 location / { 6 proxy_pass http://127.0.0.1:8080; 7 index index.html index.htm index.jsp; 8 } 9 } \u5982\u4e0a\u914d\u7f6e\uff0c\u6211\u4eec\u76d1\u542c80\u7aef\u53e3\uff0c\u8bbf\u95ee\u57df\u540d\u4e3awww.123.com\uff0c\u4e0d\u52a0\u7aef\u53e3\u53f7\u65f6\u9ed8\u8ba4\u4e3a80\u7aef\u53e3\uff0c\u6545\u8bbf\u95ee\u8be5\u57df\u540d\u65f6\u4f1a\u8df3\u8f6c\u5230127.0.0.1:8080\u8def\u5f84\u4e0a\u3002 \u6211\u4eec\u5728\u6d4f\u89c8\u5668\u7aef\u8f93\u5165 www.123.com \u7ed3\u679c\u5982\u4e0b\uff1a \u2463\u3001\u603b\u7ed3 \u5176\u5b9e\u8fd9\u91cc\u66f4\u8d34\u5207\u7684\u8bf4\u662f\u901a\u8fc7nginx\u4ee3\u7406\u7aef\u53e3\uff0c\u539f\u5148\u8bbf\u95ee\u7684\u662f8080\u7aef\u53e3\uff0c\u901a\u8fc7nginx\u4ee3\u7406\u4e4b\u540e\uff0c\u901a\u8fc780\u7aef\u53e3\u5c31\u53ef\u4ee5\u8bbf\u95ee\u4e86\u3002 5\u3001Nginx \u53cd\u5411\u4ee3\u7406\u76f8\u5173\u6307\u4ee4\u4ecb\u7ecd \u2460\u3001listen \u8be5\u6307\u4ee4\u7528\u4e8e\u914d\u7f6e\u7f51\u7edc\u76d1\u542c\u3002\u4e3b\u8981\u6709\u5982\u4e0b\u4e09\u79cd\u914d\u7f6e\u8bed\u6cd5\u7ed3\u6784\uff1a \u4e00\u3001\u914d\u7f6e\u76d1\u542c\u7684IP\u5730\u5740 1 2 listen address[:port] [default_server] [setfib=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [deferred] [accept_filter=filter] [bind] [ssl]; \u4e8c\u3001\u914d\u7f6e\u76d1\u542c\u7aef\u53e3 1 2 listen port[default_server] [setfib=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ipv6only=on|off] [ssl]; \u4e09\u3001\u914d\u7f6e UNIX Domain Socket 1 2 listen unix:path [default_server] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ssl]; \u4e0a\u9762\u7684\u914d\u7f6e\u770b\u4f3c\u6bd4\u8f83\u590d\u6742\uff0c\u5176\u5b9e\u4f7f\u7528\u8d77\u6765\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff1a 1 2 3 4 1 listen *:80 | *:8080 #\u76d1\u542c\u6240\u670980\u7aef\u53e3\u548c8080\u7aef\u53e3 2 listen IP_address:port #\u76d1\u542c\u6307\u5b9a\u7684\u5730\u5740\u548c\u7aef\u53e3\u53f7 3 listen IP_address #\u76d1\u542c\u6307\u5b9aip\u5730\u5740\u6240\u6709\u7aef\u53e3 4 listen port #\u76d1\u542c\u8be5\u7aef\u53e3\u7684\u6240\u6709IP\u8fde\u63a5 \u4e0b\u9762\u5206\u522b\u89e3\u91ca\u6bcf\u4e2a\u9009\u9879\u7684\u5177\u4f53\u542b\u4e49\uff1a 1\u3001address:IP\u5730\u5740\uff0c\u5982\u679c\u662f IPV6\u5730\u5740\uff0c\u9700\u8981\u4f7f\u7528\u4e2d\u62ec\u53f7[] \u62ec\u8d77\u6765\uff0c\u6bd4\u5982[fe80::1]\u7b49\u3002 2\u3001port:\u7aef\u53e3\u53f7\uff0c\u5982\u679c\u53ea\u5b9a\u4e49\u4e86IP\u5730\u5740\uff0c\u6ca1\u6709\u5b9a\u4e49\u7aef\u53e3\u53f7\uff0c\u90a3\u4e48\u5c31\u4f7f\u752880\u7aef\u53e3\u3002 3\u3001path:socket\u6587\u4ef6\u8def\u5f84\uff0c\u5982 var/run/nginx.sock\u7b49\u3002 4\u3001default_server:\u6807\u8bc6\u7b26\uff0c\u5c06\u6b64\u865a\u62df\u4e3b\u673a\u8bbe\u7f6e\u4e3a address:port \u7684\u9ed8\u8ba4\u4e3b\u673a\u3002\uff08\u5728 nginx-0.8.21 \u4e4b\u524d\u4f7f\u7528\u7684\u662f default \u6307\u4ee4\uff09 5\u3001 setfib=number:Nginx-0.8.44 \u4e2d\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf\u76d1\u542c socket \u5173\u8054\u8def\u7531\u8868\uff0c\u76ee\u524d\u53ea\u5bf9 FreeBSD \u8d77\u4f5c\u7528\uff0c\u4e0d\u5e38\u7528\u3002 6\u3001backlog=number:\u8bbe\u7f6e\u76d1\u542c\u51fd\u6570listen()\u6700\u591a\u5141\u8bb8\u591a\u5c11\u7f51\u7edc\u8fde\u63a5\u540c\u65f6\u5904\u4e8e\u6302\u8d77\u72b6\u6001\uff0c\u5728 FreeBSD \u4e2d\u9ed8\u8ba4\u4e3a -1,\u5176\u4ed6\u5e73\u53f0\u9ed8\u8ba4\u4e3a511. 7\u3001rcvbuf=size:\u8bbe\u7f6e\u76d1\u542csocket\u63a5\u6536\u7f13\u5b58\u533a\u5927\u5c0f\u3002 8\u3001sndbuf=size:\u8bbe\u7f6e\u76d1\u542csocket\u53d1\u9001\u7f13\u5b58\u533a\u5927\u5c0f\u3002 9\u3001deferred:\u6807\u8bc6\u7b26\uff0c\u5c06accept()\u8bbe\u7f6e\u4e3aDeferred\u6a21\u5f0f\u3002 10\u3001accept_filter=filter:\u8bbe\u7f6e\u76d1\u542c\u7aef\u53e3\u5bf9\u6240\u6709\u8bf7\u6c42\u8fdb\u884c\u8fc7\u6ee4\uff0c\u88ab\u8fc7\u6ee4\u7684\u5185\u5bb9\u4e0d\u80fd\u88ab\u63a5\u6536\u548c\u5904\u7406\uff0c\u672c\u6307\u4ee4\u53ea\u5728 FreeBSD \u548c NetBSD 5.0+ \u5e73\u53f0\u4e0b\u6709\u6548\u3002filter \u53ef\u4ee5\u8bbe\u7f6e\u4e3a dataready \u6216 httpready \u3002 11\u3001bind:\u6807\u8bc6\u7b26\uff0c\u4f7f\u7528\u72ec\u7acb\u7684bind() \u5904\u7406\u6b64address:port\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u7aef\u53e3\u76f8\u540c\u800cIP\u5730\u5740\u4e0d\u540c\u7684\u591a\u4e2a\u8fde\u63a5\uff0cNginx \u670d\u52a1\u5668\u5c06\u53ea\u4f7f\u7528\u4e00\u4e2a\u76d1\u542c\u6307\u4ee4\uff0c\u5e76\u4f7f\u7528 bind() \u5904\u7406\u7aef\u53e3\u76f8\u540c\u7684\u6240\u6709\u8fde\u63a5\u3002 12\u3001ssl:\u6807\u8bc6\u7b26\uff0c\u8bbe\u7f6e\u4f1a\u8bdd\u8fde\u63a5\u4f7f\u7528 SSL\u6a21\u5f0f\u8fdb\u884c\uff0c\u6b64\u6807\u8bc6\u7b26\u548cNginx\u670d\u52a1\u5668\u63d0\u4f9b\u7684 HTTPS \u670d\u52a1\u6709\u5173\u3002 \u2461\u3001server_name \u8be5\u6307\u4ee4\u7528\u4e8e\u865a\u62df\u4e3b\u673a\u7684\u914d\u7f6e\u3002\u901a\u5e38\u5206\u4e3a\u4ee5\u4e0b\u4e24\u79cd\uff1a 1\u3001\u57fa\u4e8e\u540d\u79f0\u7684\u865a\u62df\u4e3b\u673a\u914d\u7f6e \u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a 1 server_name name ...; \u4e00\u3001\u5bf9\u4e8ename \u6765\u8bf4\uff0c\u53ef\u4ee5\u53ea\u6709\u4e00\u4e2a\u540d\u79f0\uff0c\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u540d\u79f0\uff0c\u4e2d\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002\u800c\u6bcf\u4e2a\u540d\u5b57\u7531\u4e24\u6bb5\u6216\u8005\u4e09\u6bb5\u7ec4\u6210\uff0c\u6bcf\u6bb5\u4e4b\u95f4\u7528\u201c.\u201d\u9694\u5f00\u3002 1 server_name 123.com www.123.com \u4e8c\u3001\u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26\u201c*\u201d\uff0c\u4f46\u901a\u914d\u7b26\u53ea\u80fd\u7528\u5728\u7531\u4e09\u6bb5\u5b57\u7b26\u7ec4\u6210\u7684\u9996\u6bb5\u6216\u8005\u5c3e\u7aef\uff0c\u6216\u8005\u7531\u4e24\u7aef\u5b57\u7b26\u7ec4\u6210\u7684\u5c3e\u7aef\u3002 1 server_name *.123.com www.123.* \u4e09\u3001\u8fd8\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u201c~\u201d\u4f5c\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\u6807\u8bb0\u3002 1 server_name ~^www\\d+\\.123\\.com$; \u8be5\u8868\u8fbe\u5f0f\u201c~\u201d\u8868\u793a\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4ee5www\u5f00\u5934\uff08\u201c^\u201d\u8868\u793a\u5f00\u5934\uff09\uff0c\u7d27\u8ddf\u7740\u4e00\u4e2a0~9\u4e4b\u95f4\u7684\u6570\u5b57\uff0c\u5728\u7d27\u8ddf\u201c.123.co\u201d\uff0c\u6700\u540e\u8ddf\u7740\u201cm\u201d($\u8868\u793a\u7ed3\u5c3e) \u4ee5\u4e0a\u5339\u914d\u7684\u987a\u5e8f\u4f18\u5148\u7ea7\u5982\u4e0b\uff1a 1 2 3 4 1 \u2460\u3001\u51c6\u786e\u5339\u914d server_name 2 \u2461\u3001\u901a\u914d\u7b26\u5728\u5f00\u59cb\u65f6\u5339\u914d server_name \u6210\u529f 3 \u2462\u3001\u901a\u914d\u7b26\u5728\u7ed3\u5c3e\u65f6\u5339\u914d server_name \u6210\u529f 4 \u2463\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d server_name \u6210\u529f 2\u3001\u57fa\u4e8e IP \u5730\u5740\u7684\u865a\u62df\u4e3b\u673a\u914d\u7f6e \u8bed\u6cd5\u7ed3\u6784\u548c\u57fa\u4e8e\u57df\u540d\u5339\u914d\u4e00\u6837\uff0c\u800c\u4e14\u4e0d\u9700\u8981\u8003\u8651\u901a\u914d\u7b26\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u95ee\u9898\u3002 1 server_name 192.168.1.1 \u2462\u3001location \u8be5\u6307\u4ee4\u7528\u4e8e\u5339\u914d URL\u3002 \u8bed\u6cd5\u5982\u4e0b\uff1a 1 2 3 1 location [ = | ~ | ~* | ^~] uri { 2 3 } 1\u3001= \uff1a\u7528\u4e8e\u4e0d\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\u7684 uri \u524d\uff0c\u8981\u6c42\u8bf7\u6c42\u5b57\u7b26\u4e32\u4e0e uri \u4e25\u683c\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5c31\u505c\u6b62\u7ee7\u7eed\u5411\u4e0b\u641c\u7d22\u5e76\u7acb\u5373\u5904\u7406\u8be5\u8bf7\u6c42\u3002 2\u3001~\uff1a\u7528\u4e8e\u8868\u793a uri \u5305\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e14\u533a\u5206\u5927\u5c0f\u5199\u3002 3\u3001~*\uff1a\u7528\u4e8e\u8868\u793a uri \u5305\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e14\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 4\u3001^~\uff1a\u7528\u4e8e\u4e0d\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\u7684 uri \u524d\uff0c\u8981\u6c42 Nginx \u670d\u52a1\u5668\u627e\u5230\u6807\u8bc6 uri \u548c\u8bf7\u6c42\u5b57\u7b26\u4e32\u5339\u914d\u5ea6\u6700\u9ad8\u7684 location \u540e\uff0c\u7acb\u5373\u4f7f\u7528\u6b64 location \u5904\u7406\u8bf7\u6c42\uff0c\u800c\u4e0d\u518d\u4f7f\u7528 location \u5757\u4e2d\u7684\u6b63\u5219 uri \u548c\u8bf7\u6c42\u5b57\u7b26\u4e32\u505a\u5339\u914d\u3002 \u6ce8\u610f\uff1a\u5982\u679c uri \u5305\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5219\u5fc5\u987b\u8981\u6709 ~ \u6216\u8005 ~* \u6807\u8bc6\u3002 \u2463\u3001proxy_pass \u8be5\u6307\u4ee4\u7528\u4e8e\u8bbe\u7f6e\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5730\u5740\u3002\u53ef\u4ee5\u662f\u4e3b\u673a\u540d\u79f0\u3001IP\u5730\u5740\u52a0\u7aef\u53e3\u53f7\u7684\u5f62\u5f0f\u3002 \u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b\uff1a 1 proxy_pass URL; URL \u4e3a\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5730\u5740\uff0c\u53ef\u4ee5\u5305\u542b\u4f20\u8f93\u534f\u8bae\u3001\u4e3b\u673a\u540d\u79f0\u6216IP\u5730\u5740\u52a0\u7aef\u53e3\u53f7\uff0cURI\u7b49\u3002 1 proxy_pass http://www.123.com/uri; \u2464\u3001index \u8be5\u6307\u4ee4\u7528\u4e8e\u8bbe\u7f6e\u7f51\u7ad9\u7684\u9ed8\u8ba4\u9996\u9875\u3002 \u8bed\u6cd5\u4e3a\uff1a 1 index filename ...; \u540e\u9762\u7684\u6587\u4ef6\u540d\u79f0\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u4e2d\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002 1 index index.html index.jsp; \u901a\u5e38\u8be5\u6307\u4ee4\u6709\u4e24\u4e2a\u4f5c\u7528\uff1a\u7b2c\u4e00\u4e2a\u662f\u7528\u6237\u5728\u8bf7\u6c42\u8bbf\u95ee\u7f51\u7ad9\u65f6\uff0c\u8bf7\u6c42\u5730\u5740\u53ef\u4ee5\u4e0d\u5199\u9996\u9875\u540d\u79f0\uff1b\u7b2c\u4e8c\u4e2a\u662f\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u8bf7\u6c42\uff0c\u6839\u636e\u8bf7\u6c42\u5185\u5bb9\u800c\u8bbe\u7f6e\u4e0d\u540c\u7684\u9996\u9875\u3002","title":"03Nginx\u4ee3\u7406"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#1","text":"\u5728Java\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\uff0c\u4ee3\u7406\u6a21\u5f0f\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff1a \u7ed9\u67d0\u4e2a\u5bf9\u8c61\u63d0\u4f9b\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u5e76\u7531\u4ee3\u7406\u5bf9\u8c61\u63a7\u5236\u539f\u5bf9\u8c61\u7684\u5f15\u7528\u3002 ** \u53ef\u80fd\u5927\u5bb6\u4e0d\u592a\u660e\u767d\u8fd9\u53e5\u8bdd\uff0c\u5728\u4e3e\u4e00\u4e2a\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u4f8b\u5b50\uff1a\u6bd4\u5982\u6211\u4eec\u8981\u4e70\u4e00\u95f4\u4e8c\u624b\u623f\uff0c\u867d\u7136\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u53bb\u627e\u623f\u6e90\uff0c\u4f46\u662f\u8fd9\u592a\u82b1\u8d39\u65f6\u95f4\u7cbe\u529b\u4e86\uff0c\u800c\u4e14\u623f\u5c4b\u8d28\u91cf\u68c0\u6d4b\u4ee5\u53ca\u623f\u5c4b\u8fc7\u6237\u7b49\u4e00\u7cfb\u5217\u624b\u7eed\u4e5f\u90fd\u5f97\u6211\u4eec\u53bb\u529e\uff0c\u518d\u8bf4\u73b0\u5728\u8fd9\u4e2a\u793e\u4f1a\uff0c\u7b49\u6211\u4eec\u627e\u5230\u623f\u6e90\uff0c\u8bf4\u4e0d\u5b9a\u623f\u5b50\u90fd\u5df2\u7ecf\u6da8\u4ef7\u4e86\uff0c\u90a3\u4e48\u600e\u4e48\u529e\u5462\uff1f\u6700\u7b80\u5355\u5feb\u6377\u7684\u65b9\u6cd5\u5c31\u662f\u627e\u4e8c\u624b\u623f\u4e2d\u4ecb\u516c\u53f8\uff08\u4e3a\u4ec0\u4e48\uff1f\u522b\u4eba\u90a3\u91cc\u623f\u6e90\u591a\u554a\uff09\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u59d4\u6258\u4e2d\u4ecb\u516c\u53f8\u6765\u7ed9\u6211\u627e\u5408\u9002\u7684\u623f\u5b50\uff0c\u4ee5\u53ca\u540e\u7eed\u7684\u8d28\u91cf\u68c0\u6d4b\u8fc7\u6237\u7b49\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u9009\u597d\u81ea\u5df1\u60f3\u8981\u7684\u623f\u5b50\uff0c\u7136\u540e\u4ea4\u94b1\u5c31\u884c\u4e86\u3002 \u4ee3\u7406\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5982\u679c\u6211\u4eec\u60f3\u505a\u4ec0\u4e48\uff0c\u4f46\u53c8\u4e0d\u60f3\u76f4\u63a5\u53bb\u505a\uff0c\u90a3\u4e48\u8fd9\u65f6\u5019\u5c31\u627e\u53e6\u5916\u4e00\u4e2a\u4eba\u5e2e\u6211\u4eec\u53bb\u505a\u3002\u90a3\u4e48\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u9762\u7684\u4e2d\u4ecb\u516c\u53f8\u5c31\u662f\u7ed9\u6211\u4eec\u505a\u4ee3\u7406\u670d\u52a1\u7684\uff0c\u6211\u4eec\u59d4\u6258\u4e2d\u4ecb\u516c\u53f8\u5e2e\u6211\u4eec\u627e\u623f\u5b50\u3002 Nginx \u4e3b\u8981\u80fd\u591f\u4ee3\u7406\u5982\u4e0b\u51e0\u79cd\u534f\u8bae\uff0c\u5176\u4e2d\u7528\u5230\u7684\u6700\u591a\u7684\u5c31\u662f\u505aHttp\u4ee3\u7406\u670d\u52a1\u5668\u3002","title":"1\u3001\u4ee3\u7406"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#2","text":"\u5f04\u6e05\u695a\u4ec0\u4e48\u662f\u4ee3\u7406\u4e86\uff0c\u90a3\u4e48\u4ec0\u4e48\u53c8\u662f\u6b63\u5411\u4ee3\u7406\u5462\uff1f \u8fd9\u91cc\u6211\u518d\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1a\u5927\u5bb6\u90fd\u77e5\u9053\uff0c\u73b0\u5728\u56fd\u5185\u662f\u8bbf\u95ee\u4e0d\u4e86 Google\u7684\uff0c\u90a3\u4e48\u600e\u4e48\u624d\u80fd\u8bbf\u95ee Google\u5462\uff1f\u6211\u4eec\u53c8\u60f3\uff0c\u7f8e\u56fd\u4eba\u4e0d\u662f\u80fd\u8bbf\u95ee Google\u5417\uff08\u8fd9\u4e0d\u5e9f\u8bdd\uff0cGoogle\u5c31\u662f\u7f8e\u56fd\u7684\uff09\uff0c\u5982\u679c\u6211\u4eec\u7535\u8111\u7684\u5bf9\u5916\u516c\u7f51 IP \u5730\u5740\u80fd\u53d8\u6210\u7f8e\u56fd\u7684 IP \u5730\u5740\uff0c\u90a3\u4e0d\u5c31\u53ef\u4ee5\u8bbf\u95ee Google\u4e86\u3002\u4f60\u5f88\u806a\u660e\uff0cVPN \u5c31\u662f\u8fd9\u6837\u4ea7\u751f\u7684\u3002\u6211\u4eec\u5728\u8bbf\u95ee Google \u65f6\uff0c\u5148\u8fde\u4e0a VPN \u670d\u52a1\u5668\u5c06\u6211\u4eec\u7684 IP \u5730\u5740\u53d8\u6210\u7f8e\u56fd\u7684 IP \u5730\u5740\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u987a\u5229\u7684\u8bbf\u95ee\u4e86\u3002 \u8fd9\u91cc\u7684 VPN \u5c31\u662f\u505a\u6b63\u5411\u4ee3\u7406\u7684\u3002\u6b63\u5411\u4ee3\u7406\u670d\u52a1\u5668\u4f4d\u4e8e\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\uff0c\u4e3a\u4e86\u5411\u670d\u52a1\u5668\u83b7\u53d6\u6570\u636e\uff0c\u5ba2\u6237\u7aef\u8981\u5411\u4ee3\u7406\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\uff0c\u5e76\u6307\u5b9a\u76ee\u6807\u670d\u52a1\u5668\uff0c\u4ee3\u7406\u670d\u52a1\u5668\u5c06\u76ee\u6807\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e\u8f6c\u4ea4\u7ed9\u5ba2\u6237\u7aef\u3002\u8fd9\u91cc\u5ba2\u6237\u7aef\u662f\u8981\u8fdb\u884c\u4e00\u4e9b\u6b63\u5411\u4ee3\u7406\u7684\u8bbe\u7f6e\u7684\u3002","title":"2\u3001\u6b63\u5411\u4ee3\u7406"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#3","text":"\u53cd\u5411\u4ee3\u7406\u548c\u6b63\u5411\u4ee3\u7406\u7684\u533a\u522b\u5c31\u662f\uff1a \u6b63\u5411\u4ee3\u7406\u4ee3\u7406\u5ba2\u6237\u7aef\uff0c\u53cd\u5411\u4ee3\u7406\u4ee3\u7406\u670d\u52a1\u5668\u3002 \u53cd\u5411\u4ee3\u7406\uff0c\u5176\u5b9e\u5ba2\u6237\u7aef\u5bf9\u4ee3\u7406\u662f\u65e0\u611f\u77e5\u7684\uff0c\u56e0\u4e3a\u5ba2\u6237\u7aef\u4e0d\u9700\u8981\u4efb\u4f55\u914d\u7f6e\u5c31\u53ef\u4ee5\u8bbf\u95ee\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u8bf7\u6c42\u53d1\u9001\u5230\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u7531\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u53bb\u9009\u62e9\u76ee\u6807\u670d\u52a1\u5668\u83b7\u53d6\u6570\u636e\u540e\uff0c\u5728\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u6b64\u65f6\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u548c\u76ee\u6807\u670d\u52a1\u5668\u5bf9\u5916\u5c31\u662f\u4e00\u4e2a\u670d\u52a1\u5668\uff0c\u66b4\u9732\u7684\u662f\u4ee3\u7406\u670d\u52a1\u5668\u5730\u5740\uff0c\u9690\u85cf\u4e86\u771f\u5b9e\u670d\u52a1\u5668IP\u5730\u5740\u3002 \u7406\u89e3\u8fd9\u4e24\u79cd\u4ee3\u7406\u7684\u5173\u952e\u5728\u4e8e\u4ee3\u7406\u670d\u52a1\u5668\u6240\u4ee3\u7406\u7684\u5bf9\u8c61\u662f\u4ec0\u4e48\uff0c\u6b63\u5411\u4ee3\u7406\u4ee3\u7406\u7684\u662f\u5ba2\u6237\u7aef\uff0c\u6211\u4eec\u9700\u8981\u5728\u5ba2\u6237\u7aef\u8fdb\u884c\u4e00\u4e9b\u4ee3\u7406\u7684\u8bbe\u7f6e\u3002\u800c\u53cd\u5411\u4ee3\u7406\u4ee3\u7406\u7684\u662f\u670d\u52a1\u5668\uff0c\u4f5c\u4e3a\u5ba2\u6237\u7aef\u7684\u6211\u4eec\u662f\u65e0\u6cd5\u611f\u77e5\u5230\u670d\u52a1\u5668\u7684\u771f\u5b9e\u5b58\u5728\u7684\u3002 \u603b\u7ed3\u8d77\u6765\u8fd8\u662f\u4e00\u53e5\u8bdd\uff1a \u6b63\u5411\u4ee3\u7406\u4ee3\u7406\u5ba2\u6237\u7aef\uff0c\u53cd\u5411\u4ee3\u7406\u4ee3\u7406\u670d\u52a1\u5668\u3002","title":"3\u3001\u53cd\u5411\u4ee3\u7406"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#4nginx","text":"\u8303\u4f8b\uff1a\u4f7f\u7528 nginx \u53cd\u5411\u4ee3\u7406 www.123.com \u76f4\u63a5\u8df3\u8f6c\u5230127.0.0.1:8080 \u2460\u3001\u542f\u52a8\u4e00\u4e2a tomcat\uff0c\u6d4f\u89c8\u5668\u5730\u5740\u680f\u8f93\u5165 127.0.0.1:8080\uff0c\u51fa\u73b0\u5982\u4e0b\u754c\u9762 \u2461\u3001\u901a\u8fc7\u4fee\u6539\u672c\u5730 host \u6587\u4ef6\uff0c\u5c06 www.123.com \u6620\u5c04\u5230 127.0.0.1 1 127.0.0.1 www.123.com \u5c06\u4e0a\u9762\u4ee3\u7801\u6dfb\u52a0\u5230 Windows \u7684host \u6587\u4ef6\u4e2d\uff0c\u8be5\u6587\u4ef6\u4f4d\u7f6e\u5728\uff1a \u914d\u7f6e\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u901a\u8fc7 www.123.com:8080 \u8bbf\u95ee\u5230\u7b2c\u4e00\u6b65\u51fa\u73b0\u7684 Tomcat\u521d\u59cb\u754c\u9762\u3002 \u90a3\u4e48\u5982\u4f55\u53ea\u9700\u8981\u8f93\u5165 www.123.com \u4fbf\u53ef\u4ee5\u8df3\u8f6c\u5230 Tomcat\u521d\u59cb\u754c\u9762\u5462\uff1f\u4fbf\u7528\u5230 nginx\u7684\u53cd\u5411\u4ee3\u7406\u3002 \u2462\u3001\u5728 nginx.conf \u914d\u7f6e\u6587\u4ef6\u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a 1 2 3 4 5 6 7 8 9 1 server { 2 listen 80; 3 server_name www.123.com; 4 5 location / { 6 proxy_pass http://127.0.0.1:8080; 7 index index.html index.htm index.jsp; 8 } 9 } \u5982\u4e0a\u914d\u7f6e\uff0c\u6211\u4eec\u76d1\u542c80\u7aef\u53e3\uff0c\u8bbf\u95ee\u57df\u540d\u4e3awww.123.com\uff0c\u4e0d\u52a0\u7aef\u53e3\u53f7\u65f6\u9ed8\u8ba4\u4e3a80\u7aef\u53e3\uff0c\u6545\u8bbf\u95ee\u8be5\u57df\u540d\u65f6\u4f1a\u8df3\u8f6c\u5230127.0.0.1:8080\u8def\u5f84\u4e0a\u3002 \u6211\u4eec\u5728\u6d4f\u89c8\u5668\u7aef\u8f93\u5165 www.123.com \u7ed3\u679c\u5982\u4e0b\uff1a \u2463\u3001\u603b\u7ed3 \u5176\u5b9e\u8fd9\u91cc\u66f4\u8d34\u5207\u7684\u8bf4\u662f\u901a\u8fc7nginx\u4ee3\u7406\u7aef\u53e3\uff0c\u539f\u5148\u8bbf\u95ee\u7684\u662f8080\u7aef\u53e3\uff0c\u901a\u8fc7nginx\u4ee3\u7406\u4e4b\u540e\uff0c\u901a\u8fc780\u7aef\u53e3\u5c31\u53ef\u4ee5\u8bbf\u95ee\u4e86\u3002","title":"4\u3001Nginx \u53cd\u5411\u4ee3\u7406"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#5nginx","text":"","title":"5\u3001Nginx \u53cd\u5411\u4ee3\u7406\u76f8\u5173\u6307\u4ee4\u4ecb\u7ecd"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#1listen","text":"\u8be5\u6307\u4ee4\u7528\u4e8e\u914d\u7f6e\u7f51\u7edc\u76d1\u542c\u3002\u4e3b\u8981\u6709\u5982\u4e0b\u4e09\u79cd\u914d\u7f6e\u8bed\u6cd5\u7ed3\u6784\uff1a \u4e00\u3001\u914d\u7f6e\u76d1\u542c\u7684IP\u5730\u5740 1 2 listen address[:port] [default_server] [setfib=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [deferred] [accept_filter=filter] [bind] [ssl]; \u4e8c\u3001\u914d\u7f6e\u76d1\u542c\u7aef\u53e3 1 2 listen port[default_server] [setfib=number] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ipv6only=on|off] [ssl]; \u4e09\u3001\u914d\u7f6e UNIX Domain Socket 1 2 listen unix:path [default_server] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_filter=filter] [deferred] [bind] [ssl]; \u4e0a\u9762\u7684\u914d\u7f6e\u770b\u4f3c\u6bd4\u8f83\u590d\u6742\uff0c\u5176\u5b9e\u4f7f\u7528\u8d77\u6765\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff1a 1 2 3 4 1 listen *:80 | *:8080 #\u76d1\u542c\u6240\u670980\u7aef\u53e3\u548c8080\u7aef\u53e3 2 listen IP_address:port #\u76d1\u542c\u6307\u5b9a\u7684\u5730\u5740\u548c\u7aef\u53e3\u53f7 3 listen IP_address #\u76d1\u542c\u6307\u5b9aip\u5730\u5740\u6240\u6709\u7aef\u53e3 4 listen port #\u76d1\u542c\u8be5\u7aef\u53e3\u7684\u6240\u6709IP\u8fde\u63a5 \u4e0b\u9762\u5206\u522b\u89e3\u91ca\u6bcf\u4e2a\u9009\u9879\u7684\u5177\u4f53\u542b\u4e49\uff1a 1\u3001address:IP\u5730\u5740\uff0c\u5982\u679c\u662f IPV6\u5730\u5740\uff0c\u9700\u8981\u4f7f\u7528\u4e2d\u62ec\u53f7[] \u62ec\u8d77\u6765\uff0c\u6bd4\u5982[fe80::1]\u7b49\u3002 2\u3001port:\u7aef\u53e3\u53f7\uff0c\u5982\u679c\u53ea\u5b9a\u4e49\u4e86IP\u5730\u5740\uff0c\u6ca1\u6709\u5b9a\u4e49\u7aef\u53e3\u53f7\uff0c\u90a3\u4e48\u5c31\u4f7f\u752880\u7aef\u53e3\u3002 3\u3001path:socket\u6587\u4ef6\u8def\u5f84\uff0c\u5982 var/run/nginx.sock\u7b49\u3002 4\u3001default_server:\u6807\u8bc6\u7b26\uff0c\u5c06\u6b64\u865a\u62df\u4e3b\u673a\u8bbe\u7f6e\u4e3a address:port \u7684\u9ed8\u8ba4\u4e3b\u673a\u3002\uff08\u5728 nginx-0.8.21 \u4e4b\u524d\u4f7f\u7528\u7684\u662f default \u6307\u4ee4\uff09 5\u3001 setfib=number:Nginx-0.8.44 \u4e2d\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf\u76d1\u542c socket \u5173\u8054\u8def\u7531\u8868\uff0c\u76ee\u524d\u53ea\u5bf9 FreeBSD \u8d77\u4f5c\u7528\uff0c\u4e0d\u5e38\u7528\u3002 6\u3001backlog=number:\u8bbe\u7f6e\u76d1\u542c\u51fd\u6570listen()\u6700\u591a\u5141\u8bb8\u591a\u5c11\u7f51\u7edc\u8fde\u63a5\u540c\u65f6\u5904\u4e8e\u6302\u8d77\u72b6\u6001\uff0c\u5728 FreeBSD \u4e2d\u9ed8\u8ba4\u4e3a -1,\u5176\u4ed6\u5e73\u53f0\u9ed8\u8ba4\u4e3a511. 7\u3001rcvbuf=size:\u8bbe\u7f6e\u76d1\u542csocket\u63a5\u6536\u7f13\u5b58\u533a\u5927\u5c0f\u3002 8\u3001sndbuf=size:\u8bbe\u7f6e\u76d1\u542csocket\u53d1\u9001\u7f13\u5b58\u533a\u5927\u5c0f\u3002 9\u3001deferred:\u6807\u8bc6\u7b26\uff0c\u5c06accept()\u8bbe\u7f6e\u4e3aDeferred\u6a21\u5f0f\u3002 10\u3001accept_filter=filter:\u8bbe\u7f6e\u76d1\u542c\u7aef\u53e3\u5bf9\u6240\u6709\u8bf7\u6c42\u8fdb\u884c\u8fc7\u6ee4\uff0c\u88ab\u8fc7\u6ee4\u7684\u5185\u5bb9\u4e0d\u80fd\u88ab\u63a5\u6536\u548c\u5904\u7406\uff0c\u672c\u6307\u4ee4\u53ea\u5728 FreeBSD \u548c NetBSD 5.0+ \u5e73\u53f0\u4e0b\u6709\u6548\u3002filter \u53ef\u4ee5\u8bbe\u7f6e\u4e3a dataready \u6216 httpready \u3002 11\u3001bind:\u6807\u8bc6\u7b26\uff0c\u4f7f\u7528\u72ec\u7acb\u7684bind() \u5904\u7406\u6b64address:port\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u7aef\u53e3\u76f8\u540c\u800cIP\u5730\u5740\u4e0d\u540c\u7684\u591a\u4e2a\u8fde\u63a5\uff0cNginx \u670d\u52a1\u5668\u5c06\u53ea\u4f7f\u7528\u4e00\u4e2a\u76d1\u542c\u6307\u4ee4\uff0c\u5e76\u4f7f\u7528 bind() \u5904\u7406\u7aef\u53e3\u76f8\u540c\u7684\u6240\u6709\u8fde\u63a5\u3002 12\u3001ssl:\u6807\u8bc6\u7b26\uff0c\u8bbe\u7f6e\u4f1a\u8bdd\u8fde\u63a5\u4f7f\u7528 SSL\u6a21\u5f0f\u8fdb\u884c\uff0c\u6b64\u6807\u8bc6\u7b26\u548cNginx\u670d\u52a1\u5668\u63d0\u4f9b\u7684 HTTPS \u670d\u52a1\u6709\u5173\u3002","title":"\u2460\u3001listen"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#2server_name","text":"\u8be5\u6307\u4ee4\u7528\u4e8e\u865a\u62df\u4e3b\u673a\u7684\u914d\u7f6e\u3002\u901a\u5e38\u5206\u4e3a\u4ee5\u4e0b\u4e24\u79cd\uff1a 1\u3001\u57fa\u4e8e\u540d\u79f0\u7684\u865a\u62df\u4e3b\u673a\u914d\u7f6e \u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a 1 server_name name ...; \u4e00\u3001\u5bf9\u4e8ename \u6765\u8bf4\uff0c\u53ef\u4ee5\u53ea\u6709\u4e00\u4e2a\u540d\u79f0\uff0c\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u540d\u79f0\uff0c\u4e2d\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002\u800c\u6bcf\u4e2a\u540d\u5b57\u7531\u4e24\u6bb5\u6216\u8005\u4e09\u6bb5\u7ec4\u6210\uff0c\u6bcf\u6bb5\u4e4b\u95f4\u7528\u201c.\u201d\u9694\u5f00\u3002 1 server_name 123.com www.123.com \u4e8c\u3001\u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26\u201c*\u201d\uff0c\u4f46\u901a\u914d\u7b26\u53ea\u80fd\u7528\u5728\u7531\u4e09\u6bb5\u5b57\u7b26\u7ec4\u6210\u7684\u9996\u6bb5\u6216\u8005\u5c3e\u7aef\uff0c\u6216\u8005\u7531\u4e24\u7aef\u5b57\u7b26\u7ec4\u6210\u7684\u5c3e\u7aef\u3002 1 server_name *.123.com www.123.* \u4e09\u3001\u8fd8\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u201c~\u201d\u4f5c\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\u6807\u8bb0\u3002 1 server_name ~^www\\d+\\.123\\.com$; \u8be5\u8868\u8fbe\u5f0f\u201c~\u201d\u8868\u793a\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4ee5www\u5f00\u5934\uff08\u201c^\u201d\u8868\u793a\u5f00\u5934\uff09\uff0c\u7d27\u8ddf\u7740\u4e00\u4e2a0~9\u4e4b\u95f4\u7684\u6570\u5b57\uff0c\u5728\u7d27\u8ddf\u201c.123.co\u201d\uff0c\u6700\u540e\u8ddf\u7740\u201cm\u201d($\u8868\u793a\u7ed3\u5c3e) \u4ee5\u4e0a\u5339\u914d\u7684\u987a\u5e8f\u4f18\u5148\u7ea7\u5982\u4e0b\uff1a 1 2 3 4 1 \u2460\u3001\u51c6\u786e\u5339\u914d server_name 2 \u2461\u3001\u901a\u914d\u7b26\u5728\u5f00\u59cb\u65f6\u5339\u914d server_name \u6210\u529f 3 \u2462\u3001\u901a\u914d\u7b26\u5728\u7ed3\u5c3e\u65f6\u5339\u914d server_name \u6210\u529f 4 \u2463\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d server_name \u6210\u529f 2\u3001\u57fa\u4e8e IP \u5730\u5740\u7684\u865a\u62df\u4e3b\u673a\u914d\u7f6e \u8bed\u6cd5\u7ed3\u6784\u548c\u57fa\u4e8e\u57df\u540d\u5339\u914d\u4e00\u6837\uff0c\u800c\u4e14\u4e0d\u9700\u8981\u8003\u8651\u901a\u914d\u7b26\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u95ee\u9898\u3002 1 server_name 192.168.1.1","title":"\u2461\u3001server_name"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#3location","text":"\u8be5\u6307\u4ee4\u7528\u4e8e\u5339\u914d URL\u3002 \u8bed\u6cd5\u5982\u4e0b\uff1a 1 2 3 1 location [ = | ~ | ~* | ^~] uri { 2 3 } 1\u3001= \uff1a\u7528\u4e8e\u4e0d\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\u7684 uri \u524d\uff0c\u8981\u6c42\u8bf7\u6c42\u5b57\u7b26\u4e32\u4e0e uri \u4e25\u683c\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5c31\u505c\u6b62\u7ee7\u7eed\u5411\u4e0b\u641c\u7d22\u5e76\u7acb\u5373\u5904\u7406\u8be5\u8bf7\u6c42\u3002 2\u3001~\uff1a\u7528\u4e8e\u8868\u793a uri \u5305\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e14\u533a\u5206\u5927\u5c0f\u5199\u3002 3\u3001~*\uff1a\u7528\u4e8e\u8868\u793a uri \u5305\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e14\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 4\u3001^~\uff1a\u7528\u4e8e\u4e0d\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\u7684 uri \u524d\uff0c\u8981\u6c42 Nginx \u670d\u52a1\u5668\u627e\u5230\u6807\u8bc6 uri \u548c\u8bf7\u6c42\u5b57\u7b26\u4e32\u5339\u914d\u5ea6\u6700\u9ad8\u7684 location \u540e\uff0c\u7acb\u5373\u4f7f\u7528\u6b64 location \u5904\u7406\u8bf7\u6c42\uff0c\u800c\u4e0d\u518d\u4f7f\u7528 location \u5757\u4e2d\u7684\u6b63\u5219 uri \u548c\u8bf7\u6c42\u5b57\u7b26\u4e32\u505a\u5339\u914d\u3002 \u6ce8\u610f\uff1a\u5982\u679c uri \u5305\u542b\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5219\u5fc5\u987b\u8981\u6709 ~ \u6216\u8005 ~* \u6807\u8bc6\u3002","title":"\u2462\u3001location"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#4proxy_pass","text":"\u8be5\u6307\u4ee4\u7528\u4e8e\u8bbe\u7f6e\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5730\u5740\u3002\u53ef\u4ee5\u662f\u4e3b\u673a\u540d\u79f0\u3001IP\u5730\u5740\u52a0\u7aef\u53e3\u53f7\u7684\u5f62\u5f0f\u3002 \u8bed\u6cd5\u7ed3\u6784\u5982\u4e0b\uff1a 1 proxy_pass URL; URL \u4e3a\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5730\u5740\uff0c\u53ef\u4ee5\u5305\u542b\u4f20\u8f93\u534f\u8bae\u3001\u4e3b\u673a\u540d\u79f0\u6216IP\u5730\u5740\u52a0\u7aef\u53e3\u53f7\uff0cURI\u7b49\u3002 1 proxy_pass http://www.123.com/uri;","title":"\u2463\u3001proxy_pass"},{"location":"Nginx/03Nginx%E4%BB%A3%E7%90%86/#5index","text":"\u8be5\u6307\u4ee4\u7528\u4e8e\u8bbe\u7f6e\u7f51\u7ad9\u7684\u9ed8\u8ba4\u9996\u9875\u3002 \u8bed\u6cd5\u4e3a\uff1a 1 index filename ...; \u540e\u9762\u7684\u6587\u4ef6\u540d\u79f0\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u4e2d\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002 1 index index.html index.jsp; \u901a\u5e38\u8be5\u6307\u4ee4\u6709\u4e24\u4e2a\u4f5c\u7528\uff1a\u7b2c\u4e00\u4e2a\u662f\u7528\u6237\u5728\u8bf7\u6c42\u8bbf\u95ee\u7f51\u7ad9\u65f6\uff0c\u8bf7\u6c42\u5730\u5740\u53ef\u4ee5\u4e0d\u5199\u9996\u9875\u540d\u79f0\uff1b\u7b2c\u4e8c\u4e2a\u662f\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u8bf7\u6c42\uff0c\u6839\u636e\u8bf7\u6c42\u5185\u5bb9\u800c\u8bbe\u7f6e\u4e0d\u540c\u7684\u9996\u9875\u3002","title":"\u2464\u3001index"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/","text":"\u8d1f\u8f7d\u5747\u8861\u4ecb\u7ecd \u8d1f\u8f7d\u5747\u8861\u7684\u610f\u601d\u662f\u5728\u670d\u52a1\u5668\u96c6\u7fa4\u4e2d\uff0c\u9700\u8981\u6709\u4e00\u53f0\u670d\u52a1\u5668\u4f5c\u4e3a\u8c03\u5ea6\u8005\uff0c\u5ba2\u6237\u7aef\u6240\u6709\u7684\u8bf7\u6c42\u90fd\u7531\u8c03\u5ea6\u8005\u63a5\u6536\uff0c\u8c03\u5ea6\u8005\u518d\u6839\u636e\u6bcf\u53f0\u670d\u52a1\u5668\u7684\u8d1f\u8f7d\u60c5\u51b5\uff0c\u5c06\u8bf7\u6c42\u5206\u914d\u7ed9\u5bf9\u5e94\u7684\u670d\u52a1\u5668\u53bb\u5904\u7406\uff1b \u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u8c03\u5ea6\u8005\u5982\u4f55\u5408\u7406\u5206\u914d\u4efb\u52a1\uff0c\u4fdd\u8bc1\u6240\u6709\u670d\u52a1\u5668\u5c06\u6027\u80fd\u5145\u5206\u53d1\u6325\uff0c\u4ece\u800c\u4fdd\u6301\u670d\u52a1\u5668\u96c6\u7fa4\u7684\u6574\u4f53\u6027\u80fd\u6700\u4f18\uff0c\u8fd9\u5c31\u662f\u8d1f\u8f7d\u5747\u8861\u7684\u95ee\u9898\u4e86\u3002 Nginx\u8d1f\u8f7d\u5747\u8861\u7684\u65b9\u5f0f \u8f6e\u8be2 \u8f6e\u8be2\u65b9\u5f0f\u662fNginx\u8d1f\u8f7d\u9ed8\u8ba4\u7684\u65b9\u5f0f\uff0c\u987e\u540d\u601d\u4e49\uff0c\u6240\u6709\u8bf7\u6c42\u90fd\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u5206\u914d\u5230\u4e0d\u540c\u7684\u670d\u52a1\u4e0a\uff0c\u5982\u679c\u670d\u52a1Down\u6389\uff0c\u53ef\u4ee5\u81ea\u52a8\u5254\u9664\uff0c\u5982\u4e0b\u914d\u7f6e\u540e\u8f6e\u8bad10001\u670d\u52a1\u548c10002\u670d\u52a1\u3002 1 2 3 4 upstream dalaoyang-server { server localhost:10001; server localhost:10002; } \u6743\u91cd \u6307\u5b9a\u6bcf\u4e2a\u670d\u52a1\u7684\u6743\u91cd\u6bd4\u4f8b\uff0cweight\u548c\u8bbf\u95ee\u6bd4\u7387\u6210\u6b63\u6bd4\uff0c\u901a\u5e38\u7528\u4e8e\u540e\u7aef\u670d\u52a1\u673a\u5668\u6027\u80fd\u4e0d\u7edf\u4e00\uff0c\u5c06\u6027\u80fd\u597d\u7684\u5206\u914d\u6743\u91cd\u9ad8\u6765\u53d1\u6325\u670d\u52a1\u5668\u6700\u5927\u6027\u80fd\uff0c\u5982\u4e0b\u914d\u7f6e\u540e10002\u670d\u52a1\u7684\u8bbf\u95ee\u6bd4\u7387\u4f1a\u662f10001\u670d\u52a1\u7684\u4e8c\u500d\u3002 1 2 3 4 upstream dalaoyang-server { server localhost:10001 weight=1; server localhost:10002 weight=2; } iphash \u6bcf\u4e2a\u8bf7\u6c42\u90fd\u6839\u636e\u8bbf\u95eeip\u7684hash\u7ed3\u679c\u5206\u914d\uff0c\u7ecf\u8fc7\u8fd9\u6837\u7684\u5904\u7406\uff0c\u6bcf\u4e2a\u8bbf\u5ba2\u56fa\u5b9a\u8bbf\u95ee\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\uff0c\u5982\u4e0b\u914d\u7f6e\uff08ip_hash\u53ef\u4ee5\u548cweight\u914d\u5408\u4f7f\u7528\uff09\u3002 1 2 3 4 5 upstream dalaoyang-server { ip_hash; server localhost:10001 weight=1; server localhost:10002 weight=2; } \u6700\u5c11\u8fde\u63a5 \u5c06\u8bf7\u6c42\u5206\u914d\u5230\u8fde\u63a5\u6570\u6700\u5c11\u7684\u670d\u52a1\u4e0a\u3002 1 2 3 4 5 upstream dalaoyang-server { least_conn; server localhost:10001 weight=1; server localhost:10002 weight=2; } fair \u6309\u540e\u7aef\u670d\u52a1\u5668\u7684\u54cd\u5e94\u65f6\u95f4\u6765\u5206\u914d\u8bf7\u6c42\uff0c\u54cd\u5e94\u65f6\u95f4\u77ed\u7684\u4f18\u5148\u5206\u914d\u3002 \u9700\u8981\u63d2\u4ef6\u6765\u5e2e\u6211\u4eec\u5b9e\u73b0 1 2 3 4 5 upstream dalaoyang-server { server localhost:10001 weight=1; server localhost:10002 weight=2; fair; } Nginx\u914d\u7f6e \u4ee5\u8f6e\u8be2\u4e3a\u4f8b\uff0c\u5982\u4e0b\u662fnginx.conf\u5b8c\u6574\u4ee3\u7801\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 worker_processes 1 ; events { worker_connections 1024 ; } http { upstream dalaoyang - server { server localhost : 10001 ; server localhost : 10002 ; } server { listen 10000 ; server_name localhost ; location / { proxy_pass http : //dalaoyang-server; proxy_redirect default ; } } }","title":"04Nginx\u8d1f\u8f7d\u5747\u8861"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/#_1","text":"\u8d1f\u8f7d\u5747\u8861\u7684\u610f\u601d\u662f\u5728\u670d\u52a1\u5668\u96c6\u7fa4\u4e2d\uff0c\u9700\u8981\u6709\u4e00\u53f0\u670d\u52a1\u5668\u4f5c\u4e3a\u8c03\u5ea6\u8005\uff0c\u5ba2\u6237\u7aef\u6240\u6709\u7684\u8bf7\u6c42\u90fd\u7531\u8c03\u5ea6\u8005\u63a5\u6536\uff0c\u8c03\u5ea6\u8005\u518d\u6839\u636e\u6bcf\u53f0\u670d\u52a1\u5668\u7684\u8d1f\u8f7d\u60c5\u51b5\uff0c\u5c06\u8bf7\u6c42\u5206\u914d\u7ed9\u5bf9\u5e94\u7684\u670d\u52a1\u5668\u53bb\u5904\u7406\uff1b \u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u8c03\u5ea6\u8005\u5982\u4f55\u5408\u7406\u5206\u914d\u4efb\u52a1\uff0c\u4fdd\u8bc1\u6240\u6709\u670d\u52a1\u5668\u5c06\u6027\u80fd\u5145\u5206\u53d1\u6325\uff0c\u4ece\u800c\u4fdd\u6301\u670d\u52a1\u5668\u96c6\u7fa4\u7684\u6574\u4f53\u6027\u80fd\u6700\u4f18\uff0c\u8fd9\u5c31\u662f\u8d1f\u8f7d\u5747\u8861\u7684\u95ee\u9898\u4e86\u3002","title":"\u8d1f\u8f7d\u5747\u8861\u4ecb\u7ecd"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/#nginx","text":"","title":"Nginx\u8d1f\u8f7d\u5747\u8861\u7684\u65b9\u5f0f"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/#_2","text":"\u8f6e\u8be2\u65b9\u5f0f\u662fNginx\u8d1f\u8f7d\u9ed8\u8ba4\u7684\u65b9\u5f0f\uff0c\u987e\u540d\u601d\u4e49\uff0c\u6240\u6709\u8bf7\u6c42\u90fd\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u5206\u914d\u5230\u4e0d\u540c\u7684\u670d\u52a1\u4e0a\uff0c\u5982\u679c\u670d\u52a1Down\u6389\uff0c\u53ef\u4ee5\u81ea\u52a8\u5254\u9664\uff0c\u5982\u4e0b\u914d\u7f6e\u540e\u8f6e\u8bad10001\u670d\u52a1\u548c10002\u670d\u52a1\u3002 1 2 3 4 upstream dalaoyang-server { server localhost:10001; server localhost:10002; }","title":"\u8f6e\u8be2"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/#_3","text":"\u6307\u5b9a\u6bcf\u4e2a\u670d\u52a1\u7684\u6743\u91cd\u6bd4\u4f8b\uff0cweight\u548c\u8bbf\u95ee\u6bd4\u7387\u6210\u6b63\u6bd4\uff0c\u901a\u5e38\u7528\u4e8e\u540e\u7aef\u670d\u52a1\u673a\u5668\u6027\u80fd\u4e0d\u7edf\u4e00\uff0c\u5c06\u6027\u80fd\u597d\u7684\u5206\u914d\u6743\u91cd\u9ad8\u6765\u53d1\u6325\u670d\u52a1\u5668\u6700\u5927\u6027\u80fd\uff0c\u5982\u4e0b\u914d\u7f6e\u540e10002\u670d\u52a1\u7684\u8bbf\u95ee\u6bd4\u7387\u4f1a\u662f10001\u670d\u52a1\u7684\u4e8c\u500d\u3002 1 2 3 4 upstream dalaoyang-server { server localhost:10001 weight=1; server localhost:10002 weight=2; }","title":"\u6743\u91cd"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/#iphash","text":"\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u6839\u636e\u8bbf\u95eeip\u7684hash\u7ed3\u679c\u5206\u914d\uff0c\u7ecf\u8fc7\u8fd9\u6837\u7684\u5904\u7406\uff0c\u6bcf\u4e2a\u8bbf\u5ba2\u56fa\u5b9a\u8bbf\u95ee\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\uff0c\u5982\u4e0b\u914d\u7f6e\uff08ip_hash\u53ef\u4ee5\u548cweight\u914d\u5408\u4f7f\u7528\uff09\u3002 1 2 3 4 5 upstream dalaoyang-server { ip_hash; server localhost:10001 weight=1; server localhost:10002 weight=2; }","title":"iphash"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/#_4","text":"\u5c06\u8bf7\u6c42\u5206\u914d\u5230\u8fde\u63a5\u6570\u6700\u5c11\u7684\u670d\u52a1\u4e0a\u3002 1 2 3 4 5 upstream dalaoyang-server { least_conn; server localhost:10001 weight=1; server localhost:10002 weight=2; }","title":"\u6700\u5c11\u8fde\u63a5"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/#fair","text":"\u6309\u540e\u7aef\u670d\u52a1\u5668\u7684\u54cd\u5e94\u65f6\u95f4\u6765\u5206\u914d\u8bf7\u6c42\uff0c\u54cd\u5e94\u65f6\u95f4\u77ed\u7684\u4f18\u5148\u5206\u914d\u3002 \u9700\u8981\u63d2\u4ef6\u6765\u5e2e\u6211\u4eec\u5b9e\u73b0 1 2 3 4 5 upstream dalaoyang-server { server localhost:10001 weight=1; server localhost:10002 weight=2; fair; }","title":"fair"},{"location":"Nginx/04Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/#nginx_1","text":"\u4ee5\u8f6e\u8be2\u4e3a\u4f8b\uff0c\u5982\u4e0b\u662fnginx.conf\u5b8c\u6574\u4ee3\u7801\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 worker_processes 1 ; events { worker_connections 1024 ; } http { upstream dalaoyang - server { server localhost : 10001 ; server localhost : 10002 ; } server { listen 10000 ; server_name localhost ; location / { proxy_pass http : //dalaoyang-server; proxy_redirect default ; } } }","title":"Nginx\u914d\u7f6e"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/","text":"Nginx\u9650\u6d41\u7194\u65ad *\u4f5c\u4e3a\u4f18\u79c0\u7684\u8d1f\u8f7d\u5747\u8861\u6a21\u5757\uff0c\u76ee\u524d\u662f\u6211\u4eec\u5de5\u4f5c\u4e2d\u7528\u5230\u6700\u591a\u7684\u3002\u5176\u5b9e\uff0c\u8be5\u6a21\u5757\u662f\u63d0\u4f9b\u4e86\u6211\u4eec\u9700\u8981\u7684\u540e\u7aef\u9650\u6d41\u529f\u80fd\u7684\u3002\u901a\u8fc7\u5b98\u65b9\u6587\u6863\u4ecb\u7ecd\uff0c \u4ee4\u724c\u6876\u7b97\u6cd5 \u7b97\u6cd5\u601d\u60f3\u662f\uff1a \u4ee4\u724c\u4ee5\u56fa\u5b9a\u901f\u7387\u4ea7\u751f\uff0c\u5e76\u7f13\u5b58\u5230\u4ee4\u724c\u6876\u4e2d\uff1b \u4ee4\u724c\u6876\u653e\u6ee1\u65f6\uff0c\u591a\u4f59\u7684\u4ee4\u724c\u88ab\u4e22\u5f03\uff1b \u8bf7\u6c42\u8981\u6d88\u8017\u7b49\u6bd4\u4f8b\u7684\u4ee4\u724c\u624d\u80fd\u88ab\u5904\u7406\uff1b \u4ee4\u724c\u4e0d\u591f\u65f6\uff0c\u8bf7\u6c42\u88ab\u7f13\u5b58\u3002 \u6f0f\u6876\u7b97\u6cd5 \u7b97\u6cd5\u601d\u60f3\u662f\uff1a \u6c34\uff08\u8bf7\u6c42\uff09\u4ece\u4e0a\u65b9\u5012\u5165\u6c34\u6876\uff0c\u4ece\u6c34\u6876\u4e0b\u65b9\u6d41\u51fa\uff08\u88ab\u5904\u7406\uff09\uff1b \u6765\u4e0d\u53ca\u6d41\u51fa\u7684\u6c34\u5b58\u5728\u6c34\u6876\u4e2d\uff08\u7f13\u51b2\uff09\uff0c\u4ee5\u56fa\u5b9a\u901f\u7387\u6d41\u51fa\uff1b \u6c34\u6876\u6ee1\u540e\u6c34\u6ea2\u51fa\uff08\u4e22\u5f03\uff09\u3002 \u8fd9\u4e2a\u7b97\u6cd5\u7684\u6838\u5fc3\u662f\uff1a\u7f13\u5b58\u8bf7\u6c42\u3001\u5300\u901f\u5904\u7406\u3001\u591a\u4f59\u7684\u8bf7\u6c42\u76f4\u63a5\u4e22\u5f03\u3002 \u76f8\u6bd4\u6f0f\u6876\u7b97\u6cd5\uff0c\u4ee4\u724c\u6876\u7b97\u6cd5\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4e0d\u4f46\u6709\u4e00\u53ea\u201c\u6876\u201d\uff0c\u8fd8\u6709\u4e2a\u961f\u5217\uff0c\u8fd9\u4e2a\u6876\u662f\u7528\u6765\u5b58\u653e\u4ee4\u724c\u7684\uff0c\u961f\u5217\u624d\u662f\u7528\u6765\u5b58\u653e\u8bf7\u6c42\u7684\u3002 \u4ece\u4f5c\u7528\u4e0a\u6765\u8bf4\uff0c\u6f0f\u6876\u548c\u4ee4\u724c\u6876\u7b97\u6cd5\u6700\u660e\u663e\u7684\u533a\u522b\u5c31\u662f\u662f\u5426\u5141\u8bb8\u7a81\u53d1\u6d41\u91cf(burst)\u7684\u5904\u7406\uff0c\u6f0f\u6876\u7b97\u6cd5\u80fd\u591f\u5f3a\u884c\u9650\u5236\u6570\u636e\u7684\u5b9e\u65f6\u4f20\u8f93\uff08\u5904\u7406\uff09\u901f\u7387\uff0c\u5bf9\u7a81\u53d1\u6d41\u91cf\u4e0d\u505a\u989d\u5916\u5904\u7406\uff1b\u800c\u4ee4\u724c\u6876\u7b97\u6cd5\u80fd\u591f\u5728\u9650\u5236\u6570\u636e\u7684\u5e73\u5747\u4f20\u8f93\u901f\u7387\u7684\u540c\u65f6\u5141\u8bb8\u67d0\u79cd\u7a0b\u5ea6\u7684\u7a81\u53d1\u4f20\u8f93\u3002 Nginx\u6309\u8bf7\u6c42\u901f\u7387\u9650\u901f\u6a21\u5757\u4f7f\u7528\u7684\u662f\u6f0f\u6876\u7b97\u6cd5\uff0c\u5373\u80fd\u591f\u5f3a\u884c\u4fdd\u8bc1\u8bf7\u6c42\u7684\u5b9e\u65f6\u5904\u7406\u901f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u8bbe\u7f6e\u7684\u9608\u503c\u3002 \u6848\u4f8b \u901a\u8fc7\u67e5\u770bnginx\u5b98\u65b9\u6587\u6863\uff0chttps://www.nginx.cn/doc/ HttpLimit zone \u672c\u6a21\u5757\u53ef\u4ee5\u9488\u5bf9\u6761\u4ef6\uff0c\u8fdb\u884c\u4f1a\u8bdd\u7684\u5e76\u53d1\u8fde\u63a5\u6570\u63a7\u5236\u3002\uff08\u4f8b\u5982\uff1a\u9650\u5236\u6bcf\u4e2aIP\u7684\u5e76\u53d1\u8fde\u63a5\u6570\u3002\uff09 \u914d\u7f6e\u793a\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 http { : limit_zone one $binary_remote_addr 10m; : ... : server { : ... : location /download/ { : limit_conn one 1; : } \u6307\u4ee4 [#limit_zone limit_zone] [#limit_conn limit_conn] limit_zone \u8bed\u6cd5\uff1a limit_zone zone_name $variable the_size \u9ed8\u8ba4\u503c\uff1a no \u4f5c\u7528\u57df\uff1a http \u672c\u6307\u4ee4\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6570\u636e\u533a\uff0c\u91cc\u9762\u8bb0\u5f55\u4f1a\u8bdd\u72b6\u6001\u4fe1\u606f\u3002 $variable \u5b9a\u4e49\u5224\u65ad\u4f1a\u8bdd\u7684\u53d8\u91cf\uff1bthe_size \u5b9a\u4e49\u8bb0\u5f55\u533a\u7684\u603b\u5bb9\u91cf\u3002 \u4f8b\u5b50\uff1a 1 limit_zone one $binary_remote_addr 10m; \u5b9a\u4e49\u4e00\u4e2a\u53eb\u201cone\u201d\u7684\u8bb0\u5f55\u533a\uff0c\u603b\u5bb9\u91cf\u4e3a 10M\uff0c\u4ee5\u53d8\u91cf $binary_remote_addr \u4f5c\u4e3a\u4f1a\u8bdd\u7684\u5224\u65ad\u57fa\u51c6\uff08\u5373\u4e00\u4e2a\u5730\u5740\u4e00\u4e2a\u4f1a\u8bdd\uff09\u3002 \u60a8\u53ef\u4ee5\u6ce8\u610f\u5230\u4e86\uff0c\u5728\u8fd9\u91cc\u4f7f\u7528\u7684\u662f $binary_remote_addr \u800c\u4e0d\u662f $remote_addr\u3002 $remote_addr \u7684\u957f\u5ea6\u4e3a 7 \u81f3 15 bytes\uff0c\u4f1a\u8bdd\u4fe1\u606f\u7684\u957f\u5ea6\u4e3a 32 \u6216 64 bytes\u3002 \u800c $binary_remote_addr \u7684\u957f\u5ea6\u4e3a 4 bytes\uff0c\u4f1a\u8bdd\u4fe1\u606f\u7684\u957f\u5ea6\u4e3a 32 bytes\u3002 \u5f53\u533a\u7684\u5927\u5c0f\u4e3a 1M \u7684\u65f6\u5019\uff0c\u5927\u7ea6\u53ef\u4ee5\u8bb0\u5f55 32000 \u4e2a\u4f1a\u8bdd\u4fe1\u606f\uff08\u4e00\u4e2a\u4f1a\u8bdd\u5360\u7528 32 bytes\uff09\u3002 limit_conn \u8bed\u6cd5\uff1a limit_conn zone_name the_size \u9ed8\u8ba4\u503c\uff1a no \u4f5c\u7528\u57df\uff1a http, server, location \u6307\u5b9a\u4e00\u4e2a\u4f1a\u8bdd\u6700\u5927\u7684\u5e76\u53d1\u8fde\u63a5\u6570\u3002 \u5f53\u8d85\u8fc7\u6307\u5b9a\u7684\u6700\u53d1\u5e76\u53d1\u8fde\u63a5\u6570\u65f6\uff0c\u670d\u52a1\u5668\u5c06\u8fd4\u56de \"Service unavailable\" (503)\u3002 \u4f8b\u5b50\uff1a 1 2 3 4 5 6 limit_zone one $binary_remote_addr 10m; : server { : location /download/ { : limit_conn one 1; : } \u5b9a\u4e49\u4e00\u4e2a\u53eb\u201cone\u201d\u7684\u8bb0\u5f55\u533a\uff0c\u603b\u5bb9\u91cf\u4e3a 10M\uff0c\u4ee5\u53d8\u91cf $binary_remote_addr \u4f5c\u4e3a\u4f1a\u8bdd\u7684\u5224\u65ad\u57fa\u51c6\uff08\u5373\u4e00\u4e2a\u5730\u5740\u4e00\u4e2a\u4f1a\u8bdd\uff09\u3002 \u9650\u5236 /download/ \u76ee\u5f55\u4e0b\uff0c\u4e00\u4e2a\u4f1a\u8bdd\u53ea\u80fd\u8fdb\u884c\u4e00\u4e2a\u8fde\u63a5\u3002 \u7b80\u5355\u70b9\uff0c\u5c31\u662f\u9650\u5236 /download/ \u76ee\u5f55\u4e0b\uff0c\u4e00\u4e2aIP\u53ea\u80fd\u53d1\u8d77\u4e00\u4e2a\u8fde\u63a5\uff0c\u591a\u8fc7\u4e00\u4e2a\uff0c\u4e00\u5f8b503\u3002 ab \u6d4b\u8bd5\u5b89\u88c5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #ab\u8fd0\u884c\u9700\u8981\u4f9d\u8d56apr-util\u5305\uff0c\u5b89\u88c5\u547d\u4ee4\u4e3a\uff1a yum install apr-util #\u5b89\u88c5\u4f9d\u8d56 yum-utils\u4e2d\u7684yumdownload \u5de5\u5177\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230 yumdownload \u547d\u4ee4\u53ef\u4ee5 yum install yum-utils cd /opt mkdir abtmp cd abtmp yum install yum-utils.noarch yumdownloader httpd-tools* rpm2cpio httpd-*.rpm | cpio -idmv #\u64cd\u4f5c\u5b8c\u6210\u540e \u5c06\u4f1a\u4ea7\u751f\u4e00\u4e2a usr \u76ee\u5f55 ab\u6587\u4ef6\u5c31\u5728\u8fd9\u4e2ausr \u76ee\u5f55\u4e2d #\u7b80\u5355\u4f7f\u7528\u8bf4\u660e ./ab -c 100 -n 10000 http://127.0.0.1/index.html #-c 100 \u5373\uff1a\u6bcf\u6b21\u5e76\u53d1100\u4e2a #-n 10000 \u5373\uff1a \u5171\u53d1\u900110000\u4e2a\u8bf7\u6c42","title":"05Nginx\u9650\u6d41\u7194\u65ad"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#nginx","text":"*\u4f5c\u4e3a\u4f18\u79c0\u7684\u8d1f\u8f7d\u5747\u8861\u6a21\u5757\uff0c\u76ee\u524d\u662f\u6211\u4eec\u5de5\u4f5c\u4e2d\u7528\u5230\u6700\u591a\u7684\u3002\u5176\u5b9e\uff0c\u8be5\u6a21\u5757\u662f\u63d0\u4f9b\u4e86\u6211\u4eec\u9700\u8981\u7684\u540e\u7aef\u9650\u6d41\u529f\u80fd\u7684\u3002\u901a\u8fc7\u5b98\u65b9\u6587\u6863\u4ecb\u7ecd\uff0c","title":"Nginx\u9650\u6d41\u7194\u65ad"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#_1","text":"\u7b97\u6cd5\u601d\u60f3\u662f\uff1a \u4ee4\u724c\u4ee5\u56fa\u5b9a\u901f\u7387\u4ea7\u751f\uff0c\u5e76\u7f13\u5b58\u5230\u4ee4\u724c\u6876\u4e2d\uff1b \u4ee4\u724c\u6876\u653e\u6ee1\u65f6\uff0c\u591a\u4f59\u7684\u4ee4\u724c\u88ab\u4e22\u5f03\uff1b \u8bf7\u6c42\u8981\u6d88\u8017\u7b49\u6bd4\u4f8b\u7684\u4ee4\u724c\u624d\u80fd\u88ab\u5904\u7406\uff1b \u4ee4\u724c\u4e0d\u591f\u65f6\uff0c\u8bf7\u6c42\u88ab\u7f13\u5b58\u3002","title":"\u4ee4\u724c\u6876\u7b97\u6cd5"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#_2","text":"\u7b97\u6cd5\u601d\u60f3\u662f\uff1a \u6c34\uff08\u8bf7\u6c42\uff09\u4ece\u4e0a\u65b9\u5012\u5165\u6c34\u6876\uff0c\u4ece\u6c34\u6876\u4e0b\u65b9\u6d41\u51fa\uff08\u88ab\u5904\u7406\uff09\uff1b \u6765\u4e0d\u53ca\u6d41\u51fa\u7684\u6c34\u5b58\u5728\u6c34\u6876\u4e2d\uff08\u7f13\u51b2\uff09\uff0c\u4ee5\u56fa\u5b9a\u901f\u7387\u6d41\u51fa\uff1b \u6c34\u6876\u6ee1\u540e\u6c34\u6ea2\u51fa\uff08\u4e22\u5f03\uff09\u3002 \u8fd9\u4e2a\u7b97\u6cd5\u7684\u6838\u5fc3\u662f\uff1a\u7f13\u5b58\u8bf7\u6c42\u3001\u5300\u901f\u5904\u7406\u3001\u591a\u4f59\u7684\u8bf7\u6c42\u76f4\u63a5\u4e22\u5f03\u3002 \u76f8\u6bd4\u6f0f\u6876\u7b97\u6cd5\uff0c\u4ee4\u724c\u6876\u7b97\u6cd5\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4e0d\u4f46\u6709\u4e00\u53ea\u201c\u6876\u201d\uff0c\u8fd8\u6709\u4e2a\u961f\u5217\uff0c\u8fd9\u4e2a\u6876\u662f\u7528\u6765\u5b58\u653e\u4ee4\u724c\u7684\uff0c\u961f\u5217\u624d\u662f\u7528\u6765\u5b58\u653e\u8bf7\u6c42\u7684\u3002 \u4ece\u4f5c\u7528\u4e0a\u6765\u8bf4\uff0c\u6f0f\u6876\u548c\u4ee4\u724c\u6876\u7b97\u6cd5\u6700\u660e\u663e\u7684\u533a\u522b\u5c31\u662f\u662f\u5426\u5141\u8bb8\u7a81\u53d1\u6d41\u91cf(burst)\u7684\u5904\u7406\uff0c\u6f0f\u6876\u7b97\u6cd5\u80fd\u591f\u5f3a\u884c\u9650\u5236\u6570\u636e\u7684\u5b9e\u65f6\u4f20\u8f93\uff08\u5904\u7406\uff09\u901f\u7387\uff0c\u5bf9\u7a81\u53d1\u6d41\u91cf\u4e0d\u505a\u989d\u5916\u5904\u7406\uff1b\u800c\u4ee4\u724c\u6876\u7b97\u6cd5\u80fd\u591f\u5728\u9650\u5236\u6570\u636e\u7684\u5e73\u5747\u4f20\u8f93\u901f\u7387\u7684\u540c\u65f6\u5141\u8bb8\u67d0\u79cd\u7a0b\u5ea6\u7684\u7a81\u53d1\u4f20\u8f93\u3002 Nginx\u6309\u8bf7\u6c42\u901f\u7387\u9650\u901f\u6a21\u5757\u4f7f\u7528\u7684\u662f\u6f0f\u6876\u7b97\u6cd5\uff0c\u5373\u80fd\u591f\u5f3a\u884c\u4fdd\u8bc1\u8bf7\u6c42\u7684\u5b9e\u65f6\u5904\u7406\u901f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u8bbe\u7f6e\u7684\u9608\u503c\u3002","title":"\u6f0f\u6876\u7b97\u6cd5"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#_3","text":"\u901a\u8fc7\u67e5\u770bnginx\u5b98\u65b9\u6587\u6863\uff0chttps://www.nginx.cn/doc/","title":"\u6848\u4f8b"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#httplimit-zone","text":"\u672c\u6a21\u5757\u53ef\u4ee5\u9488\u5bf9\u6761\u4ef6\uff0c\u8fdb\u884c\u4f1a\u8bdd\u7684\u5e76\u53d1\u8fde\u63a5\u6570\u63a7\u5236\u3002\uff08\u4f8b\u5982\uff1a\u9650\u5236\u6bcf\u4e2aIP\u7684\u5e76\u53d1\u8fde\u63a5\u6570\u3002\uff09 \u914d\u7f6e\u793a\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 http { : limit_zone one $binary_remote_addr 10m; : ... : server { : ... : location /download/ { : limit_conn one 1; : }","title":"HttpLimit zone"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#_4","text":"[#limit_zone limit_zone] [#limit_conn limit_conn]","title":"\u6307\u4ee4"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#limit_zone","text":"\u8bed\u6cd5\uff1a limit_zone zone_name $variable the_size \u9ed8\u8ba4\u503c\uff1a no \u4f5c\u7528\u57df\uff1a http \u672c\u6307\u4ee4\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6570\u636e\u533a\uff0c\u91cc\u9762\u8bb0\u5f55\u4f1a\u8bdd\u72b6\u6001\u4fe1\u606f\u3002 $variable \u5b9a\u4e49\u5224\u65ad\u4f1a\u8bdd\u7684\u53d8\u91cf\uff1bthe_size \u5b9a\u4e49\u8bb0\u5f55\u533a\u7684\u603b\u5bb9\u91cf\u3002 \u4f8b\u5b50\uff1a 1 limit_zone one $binary_remote_addr 10m; \u5b9a\u4e49\u4e00\u4e2a\u53eb\u201cone\u201d\u7684\u8bb0\u5f55\u533a\uff0c\u603b\u5bb9\u91cf\u4e3a 10M\uff0c\u4ee5\u53d8\u91cf $binary_remote_addr \u4f5c\u4e3a\u4f1a\u8bdd\u7684\u5224\u65ad\u57fa\u51c6\uff08\u5373\u4e00\u4e2a\u5730\u5740\u4e00\u4e2a\u4f1a\u8bdd\uff09\u3002 \u60a8\u53ef\u4ee5\u6ce8\u610f\u5230\u4e86\uff0c\u5728\u8fd9\u91cc\u4f7f\u7528\u7684\u662f $binary_remote_addr \u800c\u4e0d\u662f $remote_addr\u3002 $remote_addr \u7684\u957f\u5ea6\u4e3a 7 \u81f3 15 bytes\uff0c\u4f1a\u8bdd\u4fe1\u606f\u7684\u957f\u5ea6\u4e3a 32 \u6216 64 bytes\u3002 \u800c $binary_remote_addr \u7684\u957f\u5ea6\u4e3a 4 bytes\uff0c\u4f1a\u8bdd\u4fe1\u606f\u7684\u957f\u5ea6\u4e3a 32 bytes\u3002 \u5f53\u533a\u7684\u5927\u5c0f\u4e3a 1M \u7684\u65f6\u5019\uff0c\u5927\u7ea6\u53ef\u4ee5\u8bb0\u5f55 32000 \u4e2a\u4f1a\u8bdd\u4fe1\u606f\uff08\u4e00\u4e2a\u4f1a\u8bdd\u5360\u7528 32 bytes\uff09\u3002","title":"limit_zone"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#limit_conn","text":"\u8bed\u6cd5\uff1a limit_conn zone_name the_size \u9ed8\u8ba4\u503c\uff1a no \u4f5c\u7528\u57df\uff1a http, server, location \u6307\u5b9a\u4e00\u4e2a\u4f1a\u8bdd\u6700\u5927\u7684\u5e76\u53d1\u8fde\u63a5\u6570\u3002 \u5f53\u8d85\u8fc7\u6307\u5b9a\u7684\u6700\u53d1\u5e76\u53d1\u8fde\u63a5\u6570\u65f6\uff0c\u670d\u52a1\u5668\u5c06\u8fd4\u56de \"Service unavailable\" (503)\u3002 \u4f8b\u5b50\uff1a 1 2 3 4 5 6 limit_zone one $binary_remote_addr 10m; : server { : location /download/ { : limit_conn one 1; : } \u5b9a\u4e49\u4e00\u4e2a\u53eb\u201cone\u201d\u7684\u8bb0\u5f55\u533a\uff0c\u603b\u5bb9\u91cf\u4e3a 10M\uff0c\u4ee5\u53d8\u91cf $binary_remote_addr \u4f5c\u4e3a\u4f1a\u8bdd\u7684\u5224\u65ad\u57fa\u51c6\uff08\u5373\u4e00\u4e2a\u5730\u5740\u4e00\u4e2a\u4f1a\u8bdd\uff09\u3002 \u9650\u5236 /download/ \u76ee\u5f55\u4e0b\uff0c\u4e00\u4e2a\u4f1a\u8bdd\u53ea\u80fd\u8fdb\u884c\u4e00\u4e2a\u8fde\u63a5\u3002 \u7b80\u5355\u70b9\uff0c\u5c31\u662f\u9650\u5236 /download/ \u76ee\u5f55\u4e0b\uff0c\u4e00\u4e2aIP\u53ea\u80fd\u53d1\u8d77\u4e00\u4e2a\u8fde\u63a5\uff0c\u591a\u8fc7\u4e00\u4e2a\uff0c\u4e00\u5f8b503\u3002","title":"limit_conn"},{"location":"Nginx/05Nginx%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD/#ab","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #ab\u8fd0\u884c\u9700\u8981\u4f9d\u8d56apr-util\u5305\uff0c\u5b89\u88c5\u547d\u4ee4\u4e3a\uff1a yum install apr-util #\u5b89\u88c5\u4f9d\u8d56 yum-utils\u4e2d\u7684yumdownload \u5de5\u5177\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230 yumdownload \u547d\u4ee4\u53ef\u4ee5 yum install yum-utils cd /opt mkdir abtmp cd abtmp yum install yum-utils.noarch yumdownloader httpd-tools* rpm2cpio httpd-*.rpm | cpio -idmv #\u64cd\u4f5c\u5b8c\u6210\u540e \u5c06\u4f1a\u4ea7\u751f\u4e00\u4e2a usr \u76ee\u5f55 ab\u6587\u4ef6\u5c31\u5728\u8fd9\u4e2ausr \u76ee\u5f55\u4e2d #\u7b80\u5355\u4f7f\u7528\u8bf4\u660e ./ab -c 100 -n 10000 http://127.0.0.1/index.html #-c 100 \u5373\uff1a\u6bcf\u6b21\u5e76\u53d1100\u4e2a #-n 10000 \u5373\uff1a \u5171\u53d1\u900110000\u4e2a\u8bf7\u6c42","title":"ab \u6d4b\u8bd5\u5b89\u88c5"},{"location":"Nginx/06Nginx%E5%AE%9E%E7%8E%B0%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/","text":"Nginx\u5b9e\u73b0\u52a8\u9759\u5206\u79bb Nginx\u7684\u9759\u6001\u5904\u7406\u80fd\u529b\u5f88\u5f3a\uff0c\u4f46\u662f\u52a8\u6001\u5904\u7406\u80fd\u529b\u4e0d\u8db3\uff0c\u56e0\u6b64\uff0c\u5728\u4f01\u4e1a\u4e2d\u5e38\u7528\u52a8\u9759\u5206\u79bb\u6280\u672f\u3002\u52a8\u9759\u5206\u79bb\u6280\u672f\u5176\u5b9e\u662f\u91c7\u7528\u4ee3\u7406\u7684\u65b9\u5f0f\uff0c\u5728server{}\u6bb5\u4e2d\u52a0\u5165\u5e26\u6b63\u5219\u5339\u914d\u7684location\u6765\u6307\u5b9a\u5339\u914d\u9879\u9488\u5bf9\u670d\u52a1\u7684\u52a8\u9759\u5206\u79bb\uff1a \u9759\u6001\u9875\u9762\u4ea4\u7ed9Nginx\u5904\u7406\uff0c \u52a8\u6001\u9875\u9762\u4ea4\u7ed9\u670d\u52a1\u5668\u6216Apache\u5904\u7406\u3002\u5728Nginx\u7684\u914d\u7f6e\u4e2d\uff0c\u662f\u901a\u8fc7location\u914d\u7f6e\u6bb5\u914d\u5408\u6b63\u5219\u5339\u914d\u5b9e\u73b0\u9759\u6001\u4e0e\u52a8\u6001\u9875\u9762\u7684\u4e0d\u540c\u5904\u7406\u65b9\u5f0f\u3002 \u5b9e\u73b0\u6574\u4e2a\u7f51\u7ad9\u7684\u52a8\u9759\u5206\u79bb\uff0c\u5b9e\u73b0\u5982\u4e0b\u8981\u6c42\uff1a 1.\u524d\u7aefNginx\u6536\u5230\u9759\u6001\u8bf7\u6c42\uff0c\u76f4\u63a5\u4eceNFS\u4e2d\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002 2.\u524d\u7aefNginx\u6536\u5230\u52a8\u6001\u8bf7\u6c42\u8f6c\u4ea4\u7ed9\u901a\u8fc7FastCGI\u4ea4\u7ed9\u670d\u52a1\u5668\u5904\u7406\u3002 ----\u5982\u679c\u5f97\u5230\u9759\u6001\u7ed3\u679c\u76f4\u63a5\u4eceNFS\u53d6\u51fa\u7ed3\u679c\u4ea4\u7ed9Nginx\u7136\u540e\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002 ----\u5982\u679c\u9700\u8981\u6570\u636e\u5904\u7406\u670d\u52a1\u5668\u8fde\u63a5\u6570\u636e\u5e93\u540e\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9Nginx 3.\u524d\u7aefNginx\u6536\u5230\u56fe\u7247\u8bf7\u6c42\u4ee5.jpg\u3001.png\u3001.gif\u7b49\u8bf7\u6c42\u4ea4\u7ed9\u540e\u7aefImages\u670d\u52a1\u5668\u5904\u7406 1 2 3 location ~* \\.(jpg|gif)$ { # location\u5339\u914d\u5c06\u56fe\u7247\u4ea4\u7ed9Image\u5904\u7406 \u200b proxy_pass http://10.10.0.23:80; # Image\u670d\u52a1\u5668\u8981\u5f00\u542fweb\u670d\u52a1 \u200b } \u81f3\u6b64\u914d\u7f6e\u5c31\u5df2\u7ecf\u5b8c\u6210\u3002\u8fbe\u5230\u4e86\u56fe\u7247\u4ece\u56fe\u7247\u670d\u52a1\u5668\u8fd4\u56de\uff0c\u9759\u6001nginx\u76f4\u63a5\u8fd4\u56de\uff0c\u52a8\u6001\u4ea4\u7ed9\u540e\u7aef\u8fdb\u884c\u5904\u7406\u3002 \u603b\u7ed3 1.\u524d\u7aefNginx\u8981\u505a\u597dlocation\u5339\u914d\uff0c\u5c06 .php\u4e0e .jpg\u7b49\u8fdb\u884c\u53cd\u5411\u4ee3\u7406\u3002 2.\u540e\u7aefPHP\u670d\u52a1\u5668\u8981\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0cPHP\u81ea\u5e26\u914d\u7f6e\u6587\u4ef6\u53ea\u76d1\u542c\u672c\u5730\uff0c\u4e14\u53ea\u5141\u8bb8\u672c\u5730\u8bbf\u95ee 3.\u540e\u7aefImage\u670d\u52a1\u5668\uff0c\u4e0d\u8bba\u662fapache\u8fd8\u662fNginx\u8981\u5f00\u542fWEB\u670d\u52a1\u3002\u6839\u76ee\u5f55\u8981\u6307\u5411\u56fe\u7247\u6839\u76ee\u5f55\uff0c\u4e14\u6839\u76ee\u5f55\u4e0b\u7684\u56fe\u7247\u8981\u4e0e\u539f\u672c\u56fe\u7247\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u4e00\u81f4\u3002","title":"06Nginx\u5b9e\u73b0\u52a8\u9759\u5206\u79bb"},{"location":"Nginx/06Nginx%E5%AE%9E%E7%8E%B0%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/#nginx","text":"Nginx\u7684\u9759\u6001\u5904\u7406\u80fd\u529b\u5f88\u5f3a\uff0c\u4f46\u662f\u52a8\u6001\u5904\u7406\u80fd\u529b\u4e0d\u8db3\uff0c\u56e0\u6b64\uff0c\u5728\u4f01\u4e1a\u4e2d\u5e38\u7528\u52a8\u9759\u5206\u79bb\u6280\u672f\u3002\u52a8\u9759\u5206\u79bb\u6280\u672f\u5176\u5b9e\u662f\u91c7\u7528\u4ee3\u7406\u7684\u65b9\u5f0f\uff0c\u5728server{}\u6bb5\u4e2d\u52a0\u5165\u5e26\u6b63\u5219\u5339\u914d\u7684location\u6765\u6307\u5b9a\u5339\u914d\u9879\u9488\u5bf9\u670d\u52a1\u7684\u52a8\u9759\u5206\u79bb\uff1a \u9759\u6001\u9875\u9762\u4ea4\u7ed9Nginx\u5904\u7406\uff0c \u52a8\u6001\u9875\u9762\u4ea4\u7ed9\u670d\u52a1\u5668\u6216Apache\u5904\u7406\u3002\u5728Nginx\u7684\u914d\u7f6e\u4e2d\uff0c\u662f\u901a\u8fc7location\u914d\u7f6e\u6bb5\u914d\u5408\u6b63\u5219\u5339\u914d\u5b9e\u73b0\u9759\u6001\u4e0e\u52a8\u6001\u9875\u9762\u7684\u4e0d\u540c\u5904\u7406\u65b9\u5f0f\u3002 \u5b9e\u73b0\u6574\u4e2a\u7f51\u7ad9\u7684\u52a8\u9759\u5206\u79bb\uff0c\u5b9e\u73b0\u5982\u4e0b\u8981\u6c42\uff1a 1.\u524d\u7aefNginx\u6536\u5230\u9759\u6001\u8bf7\u6c42\uff0c\u76f4\u63a5\u4eceNFS\u4e2d\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002 2.\u524d\u7aefNginx\u6536\u5230\u52a8\u6001\u8bf7\u6c42\u8f6c\u4ea4\u7ed9\u901a\u8fc7FastCGI\u4ea4\u7ed9\u670d\u52a1\u5668\u5904\u7406\u3002 ----\u5982\u679c\u5f97\u5230\u9759\u6001\u7ed3\u679c\u76f4\u63a5\u4eceNFS\u53d6\u51fa\u7ed3\u679c\u4ea4\u7ed9Nginx\u7136\u540e\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002 ----\u5982\u679c\u9700\u8981\u6570\u636e\u5904\u7406\u670d\u52a1\u5668\u8fde\u63a5\u6570\u636e\u5e93\u540e\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9Nginx 3.\u524d\u7aefNginx\u6536\u5230\u56fe\u7247\u8bf7\u6c42\u4ee5.jpg\u3001.png\u3001.gif\u7b49\u8bf7\u6c42\u4ea4\u7ed9\u540e\u7aefImages\u670d\u52a1\u5668\u5904\u7406 1 2 3 location ~* \\.(jpg|gif)$ { # location\u5339\u914d\u5c06\u56fe\u7247\u4ea4\u7ed9Image\u5904\u7406 \u200b proxy_pass http://10.10.0.23:80; # Image\u670d\u52a1\u5668\u8981\u5f00\u542fweb\u670d\u52a1 \u200b } \u81f3\u6b64\u914d\u7f6e\u5c31\u5df2\u7ecf\u5b8c\u6210\u3002\u8fbe\u5230\u4e86\u56fe\u7247\u4ece\u56fe\u7247\u670d\u52a1\u5668\u8fd4\u56de\uff0c\u9759\u6001nginx\u76f4\u63a5\u8fd4\u56de\uff0c\u52a8\u6001\u4ea4\u7ed9\u540e\u7aef\u8fdb\u884c\u5904\u7406\u3002 \u603b\u7ed3 1.\u524d\u7aefNginx\u8981\u505a\u597dlocation\u5339\u914d\uff0c\u5c06 .php\u4e0e .jpg\u7b49\u8fdb\u884c\u53cd\u5411\u4ee3\u7406\u3002 2.\u540e\u7aefPHP\u670d\u52a1\u5668\u8981\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0cPHP\u81ea\u5e26\u914d\u7f6e\u6587\u4ef6\u53ea\u76d1\u542c\u672c\u5730\uff0c\u4e14\u53ea\u5141\u8bb8\u672c\u5730\u8bbf\u95ee 3.\u540e\u7aefImage\u670d\u52a1\u5668\uff0c\u4e0d\u8bba\u662fapache\u8fd8\u662fNginx\u8981\u5f00\u542fWEB\u670d\u52a1\u3002\u6839\u76ee\u5f55\u8981\u6307\u5411\u56fe\u7247\u6839\u76ee\u5f55\uff0c\u4e14\u6839\u76ee\u5f55\u4e0b\u7684\u56fe\u7247\u8981\u4e0e\u539f\u672c\u56fe\u7247\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u4e00\u81f4\u3002","title":"Nginx\u5b9e\u73b0\u52a8\u9759\u5206\u79bb"},{"location":"Nginx/07Nginx%E8%B0%83%E4%BC%98/","text":"Nginx \u6027\u80fd\u8c03\u4f18 \u65b9\u6848 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 #\u8bbe\u7f6e\u7528\u6237\u7684\u6743\u9650 root nobody \u6307\u5b9a \u7528\u6237\u540d\u865a\u62df\u673a\u5185\u7528\u6237 \u6216\u8005 Ip\u8bbf\u95ee #user nobody; #\u8bbe\u7f6e\u5de5\u4f5c\u8fdb\u7a0b\u6570 \u4e00\u822c\u4e3a Cpu \u6838\u5fc3*2 4*2 worker_processes 8; # \u65e5\u5fd7\u8f93\u51fa\u53c2\u6570 #error_log logs/error.log; #error_log logs/error.log notice; #error_log logs/error.log info; # \u8fdb\u7a0bID #pid logs/nginx.pid; events { #\u6307\u5b9a\u8fd0\u884c\u6a21\u578b use epoll; # \u5de5\u4f5c\u8fde\u63a5\u6570 \u9ed8\u8ba4512 \u6839\u636e\u81ea\u5df1\u7684\u60c5\u51b5\u8c03\u6574 worker_connections 1024; } #http\u6a21\u5757 http { # \u80fd\u591f\u652f\u6301\u7684\u7c7b\u578b \u5728 \u8fd9\u4e2a\u6587\u4ef6\u4e0b\u5199\u7740 mime.types include mime.types; # \u9ed8\u8ba4\u7684\u7c7b\u578b \u5728 application/octet-stream; default_type application/octet-stream; # \u65e5\u5fd7\u7684\u683c\u5f0f #log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' # '$status $body_bytes_sent \"$http_referer\" ' # '\"$http_user_agent\" \"$http_x_forwarded_for\"'; #\u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55 #access_log logs/access.log main; #\u542f\u52a8 \u53d1\u9001\u6587\u4ef6 sendfile on; # \u5f00\u542fTCP \u63a8\u9001 #tcp_nopush on; # \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 #keepalive_timeout 0; keepalive_timeout 65; # \u5f00\u542f\u538b\u7f29\u6587\u4ef6 #gzip on; # \u670d\u52a1 # \u670d\u52a1\u5206\u7ec4 \u53cd\u5411\u4ee3\u7406\u7684\u6838\u5fc3\u5173\u952e upstream tuling { # ip \u65b9\u5f0f \u6700\u5927\u5931\u8d253\u4e2a\u8fde\u63a5 \u95f4\u9694 30S \u6743\u91cd\u4e3a 5 server 127.0.0.1:8080 max_fails=3 fail_timeout=30s weight=5; #\u6839\u636eip \u5229\u7528Hash\u7b97\u6cd5\u51b3\u5b9a\u8bbf\u95ee\u54ea\u53f0\u673a\u5668 ip_hash; } server { listen 80; server_name localhost; #charset koi8-r; #\u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55 \u4ee5\u53ca\u4f4d\u7f6e #access_log logs/host.access.log main; # \u5339\u914d\u4f4d\u7f6e \u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f location / { # \u5bfb\u627e\u4f4d\u7f6e \u9ed8\u8ba4\u5728Nginx \u76ee\u5f55\u4e0b\u7684 \u7c7b\u578b root html; index index.html index.htm; proxy_pass http://127.0.0.1; } #\u9519\u8bef\u4fe1\u606f \u9875\u9762 #error_page 404 /404.html; #\u5c06\u670d\u52a1\u5668\u9519\u8bef\u9875\u91cd\u5b9a\u5411\u5230\u9759\u6001\u9875/50x.html # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } #\u5b9e\u4f8b \u5165 \u5c06\u8bbf\u95ee\u5c3e\u7f00\u4e3a \\.php \u8df3\u8f6c\u5230 127.0.0.1 # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \\.php$ { # proxy_pass http://127.0.0.1; #} #\u5c06PHP\u811a\u672c\u4f20\u9012\u7ed9\u6b63\u5728\u4fa6\u542c127.0.0.1:9000\u7684FastCGI\u670d\u52a1\u5668 # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php$ { # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #} #\u62d2\u7edd\u8bbf\u95ee.htaccess\u6587\u4ef6\uff0c\u5982\u679cApache\u7684\u6587\u6863\u6839 # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # #location ~ /\\.ht { # deny all; #} } # another virtual host using mix of IP-, name-, and port-based configuration # #server { # listen 8000; # listen somename:8080; # server_name somename alias another.alias; # location / { # root html; # index index.html index.htm; # } #} # HTTPS server # #server { # listen 443 ssl; # server_name localhost; # ssl_certificate cert.pem; # ssl_certificate_key cert.key; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 5m; # ssl_ciphers HIGH:!aNULL:!MD5; # ssl_prefer_server_ciphers on; # location / { # root html; # index index.html index.htm; # } #} }","title":"07Nginx\u8c03\u4f18"},{"location":"Nginx/07Nginx%E8%B0%83%E4%BC%98/#nginx","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 #\u8bbe\u7f6e\u7528\u6237\u7684\u6743\u9650 root nobody \u6307\u5b9a \u7528\u6237\u540d\u865a\u62df\u673a\u5185\u7528\u6237 \u6216\u8005 Ip\u8bbf\u95ee #user nobody; #\u8bbe\u7f6e\u5de5\u4f5c\u8fdb\u7a0b\u6570 \u4e00\u822c\u4e3a Cpu \u6838\u5fc3*2 4*2 worker_processes 8; # \u65e5\u5fd7\u8f93\u51fa\u53c2\u6570 #error_log logs/error.log; #error_log logs/error.log notice; #error_log logs/error.log info; # \u8fdb\u7a0bID #pid logs/nginx.pid; events { #\u6307\u5b9a\u8fd0\u884c\u6a21\u578b use epoll; # \u5de5\u4f5c\u8fde\u63a5\u6570 \u9ed8\u8ba4512 \u6839\u636e\u81ea\u5df1\u7684\u60c5\u51b5\u8c03\u6574 worker_connections 1024; } #http\u6a21\u5757 http { # \u80fd\u591f\u652f\u6301\u7684\u7c7b\u578b \u5728 \u8fd9\u4e2a\u6587\u4ef6\u4e0b\u5199\u7740 mime.types include mime.types; # \u9ed8\u8ba4\u7684\u7c7b\u578b \u5728 application/octet-stream; default_type application/octet-stream; # \u65e5\u5fd7\u7684\u683c\u5f0f #log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' # '$status $body_bytes_sent \"$http_referer\" ' # '\"$http_user_agent\" \"$http_x_forwarded_for\"'; #\u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55 #access_log logs/access.log main; #\u542f\u52a8 \u53d1\u9001\u6587\u4ef6 sendfile on; # \u5f00\u542fTCP \u63a8\u9001 #tcp_nopush on; # \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 #keepalive_timeout 0; keepalive_timeout 65; # \u5f00\u542f\u538b\u7f29\u6587\u4ef6 #gzip on; # \u670d\u52a1 # \u670d\u52a1\u5206\u7ec4 \u53cd\u5411\u4ee3\u7406\u7684\u6838\u5fc3\u5173\u952e upstream tuling { # ip \u65b9\u5f0f \u6700\u5927\u5931\u8d253\u4e2a\u8fde\u63a5 \u95f4\u9694 30S \u6743\u91cd\u4e3a 5 server 127.0.0.1:8080 max_fails=3 fail_timeout=30s weight=5; #\u6839\u636eip \u5229\u7528Hash\u7b97\u6cd5\u51b3\u5b9a\u8bbf\u95ee\u54ea\u53f0\u673a\u5668 ip_hash; } server { listen 80; server_name localhost; #charset koi8-r; #\u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55 \u4ee5\u53ca\u4f4d\u7f6e #access_log logs/host.access.log main; # \u5339\u914d\u4f4d\u7f6e \u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f location / { # \u5bfb\u627e\u4f4d\u7f6e \u9ed8\u8ba4\u5728Nginx \u76ee\u5f55\u4e0b\u7684 \u7c7b\u578b root html; index index.html index.htm; proxy_pass http://127.0.0.1; } #\u9519\u8bef\u4fe1\u606f \u9875\u9762 #error_page 404 /404.html; #\u5c06\u670d\u52a1\u5668\u9519\u8bef\u9875\u91cd\u5b9a\u5411\u5230\u9759\u6001\u9875/50x.html # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } #\u5b9e\u4f8b \u5165 \u5c06\u8bbf\u95ee\u5c3e\u7f00\u4e3a \\.php \u8df3\u8f6c\u5230 127.0.0.1 # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \\.php$ { # proxy_pass http://127.0.0.1; #} #\u5c06PHP\u811a\u672c\u4f20\u9012\u7ed9\u6b63\u5728\u4fa6\u542c127.0.0.1:9000\u7684FastCGI\u670d\u52a1\u5668 # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php$ { # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #} #\u62d2\u7edd\u8bbf\u95ee.htaccess\u6587\u4ef6\uff0c\u5982\u679cApache\u7684\u6587\u6863\u6839 # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # #location ~ /\\.ht { # deny all; #} } # another virtual host using mix of IP-, name-, and port-based configuration # #server { # listen 8000; # listen somename:8080; # server_name somename alias another.alias; # location / { # root html; # index index.html index.htm; # } #} # HTTPS server # #server { # listen 443 ssl; # server_name localhost; # ssl_certificate cert.pem; # ssl_certificate_key cert.key; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 5m; # ssl_ciphers HIGH:!aNULL:!MD5; # ssl_prefer_server_ciphers on; # location / { # root html; # index index.html index.htm; # } #} }","title":"Nginx \u6027\u80fd\u8c03\u4f18 \u65b9\u6848"},{"location":"Nginx/08Nginx%E9%95%9C%E5%83%8F%E6%9C%8D%E5%8A%A1%E5%99%A8/","text":"Nginx\u7684proxy_store\u4f5c\u7528\u662f\u76f4\u63a5\u628a\u9759\u6001\u6587\u4ef6\u5728\u672c\u5730\u786c\u76d8\u521b\u5efa\u5e76\u8bfb\u53d6\uff0c\u7c7b\u4f3c\u4e8e\u4e03\u725b\u6216\u8005\u53c8\u62cd\u8fd9\u6837\u7684\u955c\u50cfCDN\u529f\u80fd\uff0c\u9996\u6b21\u8bbf\u95ee\u4f1a\u81ea\u52a8\u83b7\u53d6\u6e90\u7ad9\u7684\u9759\u6001\u56fe\u7247\u7b49\u6587\u4ef6\uff0c\u4e4b\u540e\u7684\u8bbf\u95ee\u5c31\u662f\u76f4\u63a5\u4eceCDN\u670d\u52a1\u5668\u8bfb\u53d6\uff0c\u52a0\u5feb\u4e86\u901f\u5ea6\u3002 \u9700\u8981\u914d\u7f6e\u4e00\u4e0b\u53c2\u6570\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 #\u542f\u7528\u7f13\u5b58\u5230\u672c\u5730\u7684\u529f\u80fd proxy_store on; #\u8868\u793a\u7528\u6237\u8bfb\u5199\u6743\u9650\uff0c\u5982\u679c\u5728error\u4e2d\u62a5\u8def\u5f84\u4e0d\u5141\u8bb8\u8bbf\u95ee\u7684\u8bdd\u5c31\u7528\"chomod -R a+rw\"\u5c06\u4e0b\u9762\u914d\u7f6e\u7684\u8def\u5f84\u6539\u4e3a\u76f8\u5e94\u7684\u6743\u9650. proxy_store_access user:rw group:rw all:rw; #\u6b64\u5904\u4e3a\u6587\u4ef6\u7684\u7f13\u5b58\u8def\u5f84\uff0c\u8fd9\u4e2a\u8def\u5f84\u662f\u548curl\u4e2d\u7684\u6587\u4ef6\u8def\u5f84\u4e00\u81f4\u7684 proxy_temp_path \u7f13\u5b58\u76ee\u5f55; #\u5728\u4e0a\u9762\u7684\u914d\u7f6e\u4e4b\u540e\uff0c\u867d\u7136\u6587\u4ef6\u88ab\u7f13\u5b58\u5230\u4e86\u672c\u5730\u78c1\u76d8\u4e0a\uff0c\u4f46\u6bcf\u6b21\u8bf7\u6c42\u4ecd\u4f1a\u5411\u8fdc\u7aef\u62c9\u53d6\u6587\u4ef6\uff0c\u4e3a\u4e86\u907f\u514d\u53bb\u8fdc\u7aef\u62c9\u53d6\u6587\u4ef6\uff0c\u8fd8\u5fc5\u987b\u589e\u52a0\uff1a if ( !-e $request_filename) { proxy_pass http://192.168.10.10; } \u6ce8\uff1a\"!-e $request_filename\"\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5339\u914d\u7f13\u5b58\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u4e0e\u6e90\u6587\u4ef6\u662f\u5426\u5b58\u5728\u3002 \"http://192.168.10.10\" \u6e90\u670d\u52a1\u5668\u7684\u5730\u5740\uff0c\u9ed8\u8ba4\u7aef\u53e380\uff0c\u5982\u76d1\u542c\u5176\u4ed6\u7aef\u53e3\uff0c\u6b64\u5904\u8981\u6307\u51fa\uff0c\u4f8b\u59824000\u7aef\u53e3\uff0chttp://192.168.10.10:4000 \u6574\u4f53\u914d\u7f6e\u5982\u4e0b\uff08\u4fee\u6539nginx\u7684\u914d\u7f6e\u6587\u4ef6nginx.conf\uff09\uff1a 1 2 3 4 5 6 7 8 9 10 11 location / { //\u8fd9\u91cc\u7684location\u662f\u8981\u6362\u6210\u81ea\u5df1\u7ecf\u8fc7\u7cbe\u786e\u5339\u914d\u7684location\uff0c\u6bd4\u5982\u8981\u7f13\u5b58\u56fe\u7247\u8981\u5199\u6210 \"location ~*\\.(gif|jpg|jepg|png|bmp)${\" expires 3d; //\u6240\u6709\u94fe\u63a5\uff0c\u6d4f\u89c8\u5668\u7f13\u5b58\u8fc7\u671f\u65f6\u95f4\u4e3a3\u5929 proxy_set_header Accept-Encoding ''; root /home/mpeg/nginx; //\u6b64\u76ee\u5f55\u4e3a\u670d\u52a1\u5668\u7684\u6839\u76ee\u5f55\uff0c\u4e0b\u9762\u7684if\u8bed\u53e5\u5c31\u662f\u5224\u65ad\u6b64\u76ee\u5f55\u4e0b\u662f\u5426\u6709\u54cd\u5e94\u7684\u6587\u4ef6 proxy_store on; //\u8868\u793a\u5f00\u542f\u7f13\u5b58 proxy_store_access user:rw group:rw all:rw;//\u8868\u793a\u7528\u6237\u8bfb\u5199\u6743\u9650 proxy_temp_path /home/mpeg/nginx; //\u6b64\u5904\u4e3a\u6587\u4ef6\u7684\u7f13\u5b58\u8def\u5f84\uff0c\u8fd9\u4e2a\u8def\u5f84\u662f\u548curl\u4e2d\u7684\u6587\u4ef6\u8def\u5f84\u4e00\u81f4\u7684 if ( !-e $request_filename) { proxy_pass http://192.168.0.1; //\u6b64\u5904\u4e3a\u8981\u88ab\u4ee3\u7406\u7684\u670d\u52a1\u5668\u7684\u5730\u5740 } }","title":"08Nginx\u955c\u50cf\u670d\u52a1\u5668"},{"location":"Nginx/09Nginx%E7%83%AD%E5%A4%87%E9%83%A8%E7%BD%B2/","text":"nginx \u70ed\u5907\u90e8\u7f72 \u53cc\u4e3b\u6a21\u5f0f \u7528nginx\u505a\u8d1f\u8f7d\u5747\u8861\uff0c\u4f5c\u4e3a\u67b6\u6784\u7684\u6700\u524d\u7aef\u6216\u4e2d\u95f4\u5c42\uff0c\u968f\u7740\u65e5\u76ca\u589e\u957f\u7684\u8bbf\u95ee\u91cf\uff0c\u9700\u8981\u7ed9\u8d1f\u8f7d\u5747\u8861\u505a\u9ad8\u53ef\u7528\u67b6\u6784\uff0c\u5229\u7528keepalived\u89e3\u51b3\u5355\u70b9\u98ce\u9669\uff0c\u4e00\u65e6 nginx\u5b95\u673a\u80fd\u5feb\u901f\u5207\u6362\u5230\u5907\u4efd\u670d\u52a1\u5668 \u5b89\u88c5 keepalived 1 yum install nginx keepalived pcre-devel -y \u914d\u7f6ekeepalived\u9ad8\u53ef\u7528\uff0c\u4fee\u6539\u4e3b\u914d\u7f6e\u6587\u4ef6 \u4e24\u53f0\u5747\u5907\u4efd 1 cp /etc/keepalived/keepalived.conf keepalived.conf.bak 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 global_defs { vrrp_garp_interval 0 vrrp_gna_interval 0 } vrrp_instance VI_1 { state MASTER #\u5907\u7528\u673a \u4fee\u6539\u4e3a BACKUP interface enp0s8 virtual_router_id 50 priority 100 # \u53c2\u6570 \u5907\u7528\u6bd4\u4e3b\u673a\u4f4e\u5c31\u53ef\u4ee5\u4e86 advert_int 1 authentication { auth_type PASS auth_pass 1111 } virtual_ipaddress { 192.168.56.120 } } ~ \u542f\u52a8 \u4e24\u53f0\u7684nginx 1 systemctl start nginx \u542f\u52a8 keepalived 1 service keepalived start \u68c0\u67e5\u4e0b\u72b6\u6001 \u68c0\u67e5\u4e0bIP \u68c0\u67e5\u9875\u9762\u8bbf\u95ee","title":"09Nginx\u70ed\u5907\u90e8\u7f72"},{"location":"Nginx/09Nginx%E7%83%AD%E5%A4%87%E9%83%A8%E7%BD%B2/#keepalived","text":"1 yum install nginx keepalived pcre-devel -y","title":"\u5b89\u88c5 keepalived"},{"location":"Nginx/09Nginx%E7%83%AD%E5%A4%87%E9%83%A8%E7%BD%B2/#keepalived_1","text":"\u4e24\u53f0\u5747\u5907\u4efd 1 cp /etc/keepalived/keepalived.conf keepalived.conf.bak 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 global_defs { vrrp_garp_interval 0 vrrp_gna_interval 0 } vrrp_instance VI_1 { state MASTER #\u5907\u7528\u673a \u4fee\u6539\u4e3a BACKUP interface enp0s8 virtual_router_id 50 priority 100 # \u53c2\u6570 \u5907\u7528\u6bd4\u4e3b\u673a\u4f4e\u5c31\u53ef\u4ee5\u4e86 advert_int 1 authentication { auth_type PASS auth_pass 1111 } virtual_ipaddress { 192.168.56.120 } } ~ \u542f\u52a8 \u4e24\u53f0\u7684nginx 1 systemctl start nginx \u542f\u52a8 keepalived 1 service keepalived start \u68c0\u67e5\u4e0b\u72b6\u6001 \u68c0\u67e5\u4e0bIP \u68c0\u67e5\u9875\u9762\u8bbf\u95ee","title":"\u914d\u7f6ekeepalived\u9ad8\u53ef\u7528\uff0c\u4fee\u6539\u4e3b\u914d\u7f6e\u6587\u4ef6"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/","text":"ngx_http_auth_basic_module\u5141\u8bb8\u901a\u8fc7\u4f7f\u7528\"HTTP\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\"\u534f\u8bae\u9a8c\u8bc1\u7528\u6237\u540d\u548c\u5bc6\u7801\u6765\u9650\u5236\u5bf9\u8d44\u6e90\u7684\u8bbf\u95ee\u3002\u5766\u767d\u70b9\u6765\u8bf4\uff0c\u5982\u679c\u60f3\u5bf9\u67d0\u76ee\u5f55\u8bbe\u7f6e\u8bbf\u95ee\u6743\u9650\uff0c\u53ef\u4ee5\u4f7f\u7528ngx_http_auth_basic_module\u63d0\u4f9b\u7684\u529f\u80fd\u3002 \u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u6a21\u5757 \u8bed\u6cd5\u53ca\u8bed\u4e49 auth_basic \u8bed\u6cd5\uff1aauth_basic string | off; \u8bed\u4e49\uff1a\u4f7f\u7528\"HTTP\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\"\u534f\u8bae\u542f\u7528\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u9a8c\u8bc1\u3002\u6307\u5b9a\u7684\u53c2\u6570\u7528\u4f5crealm\uff0c\u53c2\u6570\u503c\u53ef\u4ee5\u5305\u542b\u53d8\u91cf\uff081.3.10\u30011.2.7\uff09\u3002\u8bbe\u7f6e\u7279\u6b8a\u503coff\u5c06\u5173\u95ed\u8eab\u4efd\u8ba4\u8bc1\u3002 \u53c2\u6570\u503c\u4f1a\u4f5c\u4e3a\u63d0\u793a\u663e\u793a\u5728\u8ba4\u8bc1\u5bf9\u8bdd\u6846\u6807\u9898\u680f\u4e2d\u3002 auth_basic_user_file \u8bed\u6cd5\uff1aauth_basic_user_file file; \u8bed\u4e49\uff1a \u6307\u5b9a\u5b58\u50a8\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u6587\u4ef6\u683c\u5f0f\uff1a 1 2 3 4 5 # comment name1:password1 name2:password2:comment name3:password3 1234 \u5bc6\u7801\u652f\u6301\u4ee5\u4e0b\u7c7b\u578b\uff1a \u00b7 \u4f7f\u7528crypt()\u51fd\u6570\u52a0\u5bc6\u3002\u53ef\u4ee5\u4f7f\u7528Apache Http Server\u53d1\u884c\u7248\u4e2d\u7684\u201chtpasswd\u201d\u5b9e\u7528\u7a0b\u5e8f\u6216\u201copenssl passwd\u201d\u547d\u4ee4\u751f\u6210\u3002 \u00b7 \u4f7f\u7528\u57fa\u4e8eMD5\u7684\u5bc6\u7801\u7b97\u6cd5\uff08apr1\uff09\u7684Apache\u53d8\u4f53\u8fdb\u884c\u6563\u5217\uff1b\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u5de5\u5177\u751f\u6210\u3002 \u00b7 \u7531RFC2307\u4e2d\u63cf\u8ff0\u7684\"{scheme}data\"\u8bed\u6cd5\uff081.0.3+\uff09\u6307\u5b9a\u3002\u5f53\u524d\u5b9e\u73b0\u65b9\u6848\u5305\u62ec\u6587\u672c\uff08\u7528\u4e8e\u793a\u4f8b\uff0c\u4e0d\u5e94\u4f7f\u7528\uff09\u3001SHA(1.3.13)(SHA-1\u54c8\u5e0c\u6587\u672c\uff0c\u4e0d\u5e94\u4f7f\u7528)\u3001SSHA\uff08SHA-1\u52a0\u76d0\u54c8\u5e0c\uff0c\u88abOpenLDAP\u3001Dovecot\u7b49\u8f6f\u4ef6\u5305\u4f7f\u7528\uff09\u3002 htpasswd \u751f\u6210\u5bc6\u7801\u6587\u4ef6 htpasswd\u662f\u5f00\u6e90Http\u670d\u52a1\u5668Apache Http Server\u7684\u4e00\u4e2a\u547d\u4ee4\u5de5\u5177\uff0c\u6240\u4ee5\u672c\u673a\u5982\u679c\u6ca1\u6709\u8be5\u547d\u4ee4\uff0c\u9700\u8981\u5148\u5b89\u88c5\u3002 1 2 yum install httpd-tools -y 1 htpasswd\u6307\u4ee4\u7528\u6765\u521b\u5efa\u548c\u66f4\u65b0\u7528\u4e8e\u57fa\u672c\u8ba4\u8bc1\u7684\u7528\u6237\u8ba4\u8bc1\u5bc6\u7801\u6587\u4ef6\u3002htpasswd\u6307\u4ee4\u5fc5\u987b\u5bf9\u5bc6\u7801\u6587\u4ef6\u6709\u8bfb\u5199\u6743\u9650\uff0c\u5426\u5219\u4f1a\u8fd4\u56de\u9519\u8bef\u7801\u3002 htpasswd\u53c2\u6570\u5217\u8868\uff1a \u53c2\u6570 \u53c2\u6570\u8bf4\u660e -b \u5bc6\u7801\u76f4\u63a5\u5199\u5728\u547d\u4ee4\u884c\u4e2d\uff0c\u800c\u975e\u4f7f\u7528\u63d0\u793a\u8f93\u5165\u7684\u65b9\u5f0f -c \u521b\u5efa\u5bc6\u7801\u6587\u4ef6\uff0c\u82e5\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u8986\u76d6\u6587\u4ef6\u91cd\u65b0\u5199\u5165 -n \u4e0d\u66f4\u65b0\u5bc6\u7801\u6587\u4ef6\uff0c\u5c06\u7528\u6237\u540d\u5bc6\u7801\u8fdb\u884c\u6807\u51c6\u8f93\u51fa -m \u4f7f\u7528MD5\u7b97\u6cd5\u5bf9\u5bc6\u7801\u8fdb\u884c\u5904\u7406 -d \u4f7f\u7528CRYPT\u7b97\u6cd5\u5bf9\u5bc6\u7801\u8fdb\u884c\u5904\u7406 -s \u4f7f\u7528SHA\u7b97\u6cd5\u5bf9\u5bc6\u7801\u8fdb\u884c\u5904\u7406 -p \u4e0d\u5bf9\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\u5904\u7406\uff0c\u4f7f\u7528\u660e\u6587\u5bc6\u7801 -D \u4ece\u5bc6\u7801\u6587\u4ef6\u4e2d\u5220\u9664\u6307\u5b9a\u7528\u6237\u8bb0\u5f55 htpasswd\u751f\u6210Nginx\u5bc6\u7801\u6587\u4ef6\uff1a 1 2 htpasswd -bc /usr/local/nginx/conf/nginxpasswd Securitit 000000 1 \u6b64\u65f6\u67e5\u770b/usr/local/nginx/conf/nginxpasswd\u6587\u4ef6\uff1a 1 2 Securitit: $apr1$nuJ /GIEt $nH8z8kk0EFVq5oo9 .qRzI/ 1 \u82e5\u8981\u5728\u5df2\u6709Nginx\u5bc6\u7801\u6587\u4ef6\u4e2d\u8ffd\u52a0\u7528\u6237\uff0c\u5219\u65e0\u9700-c\u53c2\u6570\uff1a 1 2 htpasswd -b /usr/local/nginx/conf/nginxpasswd Csdn 111111 1 \u6b64\u65f6\u67e5\u770b/usr/local/nginx/conf/nginxpasswd\u6587\u4ef6\uff1a 1 2 3 Securitit: $apr1$nuJ /GIEt $nH8z8kk0EFVq5oo9 .qRzI/ Csdn: $apr1$1 IWZsiJl $q1K5CwAboegG1LO18Jdta0 12 \u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u6a21\u5757 \u793a\u4f8b \u57fa\u4e8e\u9ed8\u8ba4nginx.conf\u8fdb\u884c\u4fee\u6539\uff0c\u4f7f\u7528\u4e0a\u9762\u751f\u6210\u7684\u5bc6\u7801\u6587\u4ef6\u8fdb\u884c\u8ba4\u8bc1\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 worker_processes 1 ; error_log logs/error.log ; events { worker_connections 1024 ; } http { include mime.types ; default_type application/octet-stream ; sendfile on ; keepalive_timeout 65 ; server { listen 80 ; server_name securitit ; location / { auth_basic \"Please Input UserName And Password!\" ; auth_basic_user_file nginxpasswd ; } } } 1234567891011121314151617181920212223242526272829 \u901a\u8fc7./nginx -s reload\u5e73\u6ed1\u91cd\u542fNginx\uff0c\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95eehttp://192.168.20.9/\uff0c\u4f1a\u51fa\u73b0\u5982\u4e0b\u7684\u6548\u679c\uff1a \u6ce8\uff1a\u56fe\u6807\u7ea2\u8272\u6807\u8bb0\u7684\u5373\u662fauth_basic\u914d\u7f6e\u7684\u53c2\u6570\u503c\u3002 \u6b64\u65f6\uff0c\u9700\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\u8bbf\u95ee\u8d44\u6e90\uff0c\u82e5\u70b9\u51fb\"\u53d6\u6d88\"\uff0c\u5219\u4f1a\u63d0\u793a\u8bbf\u95ee\u53d7\u9650\uff1a \u8f93\u5165\u6b63\u786e\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u53ef\u4ee5\u6b63\u786e\u8bbf\u95ee\u76ee\u6807\u8d44\u6e90\uff1a \u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u6a21\u5757 \u76ee\u5f55\u68c0\u7d22\u793a\u4f8b \u53c2\u7167 Nginx \u76ee\u5f55\u6d4f\u89c8\u6a21\u5757 \u4e2d\u6587\u4e71\u7801 \u8bbf\u95ee\u8ba4\u8bc1 ngx_http_autoindex_module \uff0c\u8fdb\u884c\u914d\u7f6e\uff0cNginx\u53ef\u4ee5\u8fdb\u884c\u76ee\u5f55\u68c0\u7d22\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u76ee\u5f55\uff0c\u8bbe\u7f6e\u4e0d\u540c\u7684\u6743\u9650\uff0c\u5b9e\u73b0\u8d44\u6e90\u8bbf\u95ee\u63a7\u5236\u3002 \u8bbf\u95ee\u65f6\uff0c\u8fdb\u884c\u8eab\u4efd\u8ba4\u8bc1\uff1a \u8eab\u4efd\u8ba4\u8bc1\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5bf9\u5e94\u7684\u76ee\u5f55\u53ca\u8d44\u6e90\uff1a \u6b64\u65f6\uff0c\u5bf9\u4e8e\u76ee\u5f55\u7684\u5206\u5c42\u3001\u5206\u7c7b\u3001\u6743\u9650\u5206\u79bb\u5c31\u663e\u5f97\u5f88\u91cd\u8981\u4e86\u3002 \u603b\u7ed3 \u5e94\u7528\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u4e8e\u76ee\u5f55\u7684\u8bbf\u95ee\u6743\u9650\u8bbe\u7f6e\u540c\u6837\u91cd\u8981\uff0c\u4f46\u662f\u4e00\u822c\u4e0d\u4f1a\u4f7f\u7528\"HTTP\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\"\u8fd9\u79cd\u65b9\u5f0f\u3002\u9996\u5148\uff0c\u9762\u5bf9\u5927\u4f17\u7528\u6237\uff0c\u5176\u8868\u73b0\u5f62\u5f0f\u663e\u5f97\u5f88\u4e0d\u53cb\u597d\uff0c\u4e0e\u73b0\u4ee3Web UI\u7684\u5bcc\u8868\u73b0\u6280\u672f\u76f8\u6bd4\uff0c\u8fc7\u4e8e\u5355\u8584\u3002\u518d\u8005\uff0c\u4f7f\u7528\u5bc6\u7801\u6587\u4ef6\u7684\u65b9\u5f0f\u7ba1\u7406\u6743\u9650\uff0c\u8fc7\u4e8e\u7b28\u91cd\uff0c\u5f53\u5f85\u7ba1\u7406\u7684\u6743\u9650\u4f53\u91cf\u8fc7\u5927\u65f6\uff0c\u4f1a\u9020\u6210\u5f88\u5927\u7684\u4e0d\u53d8\u3002","title":"10Nginx\u5b89\u5168\u8ba4\u8bc1"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/#_1","text":"","title":"\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u6a21\u5757 \u8bed\u6cd5\u53ca\u8bed\u4e49"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/#auth_basic","text":"\u8bed\u6cd5\uff1aauth_basic string | off; \u8bed\u4e49\uff1a\u4f7f\u7528\"HTTP\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\"\u534f\u8bae\u542f\u7528\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u9a8c\u8bc1\u3002\u6307\u5b9a\u7684\u53c2\u6570\u7528\u4f5crealm\uff0c\u53c2\u6570\u503c\u53ef\u4ee5\u5305\u542b\u53d8\u91cf\uff081.3.10\u30011.2.7\uff09\u3002\u8bbe\u7f6e\u7279\u6b8a\u503coff\u5c06\u5173\u95ed\u8eab\u4efd\u8ba4\u8bc1\u3002 \u53c2\u6570\u503c\u4f1a\u4f5c\u4e3a\u63d0\u793a\u663e\u793a\u5728\u8ba4\u8bc1\u5bf9\u8bdd\u6846\u6807\u9898\u680f\u4e2d\u3002","title":"auth_basic"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/#auth_basic_user_file","text":"\u8bed\u6cd5\uff1aauth_basic_user_file file; \u8bed\u4e49\uff1a \u6307\u5b9a\u5b58\u50a8\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u6587\u4ef6\u683c\u5f0f\uff1a 1 2 3 4 5 # comment name1:password1 name2:password2:comment name3:password3 1234 \u5bc6\u7801\u652f\u6301\u4ee5\u4e0b\u7c7b\u578b\uff1a \u00b7 \u4f7f\u7528crypt()\u51fd\u6570\u52a0\u5bc6\u3002\u53ef\u4ee5\u4f7f\u7528Apache Http Server\u53d1\u884c\u7248\u4e2d\u7684\u201chtpasswd\u201d\u5b9e\u7528\u7a0b\u5e8f\u6216\u201copenssl passwd\u201d\u547d\u4ee4\u751f\u6210\u3002 \u00b7 \u4f7f\u7528\u57fa\u4e8eMD5\u7684\u5bc6\u7801\u7b97\u6cd5\uff08apr1\uff09\u7684Apache\u53d8\u4f53\u8fdb\u884c\u6563\u5217\uff1b\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u5de5\u5177\u751f\u6210\u3002 \u00b7 \u7531RFC2307\u4e2d\u63cf\u8ff0\u7684\"{scheme}data\"\u8bed\u6cd5\uff081.0.3+\uff09\u6307\u5b9a\u3002\u5f53\u524d\u5b9e\u73b0\u65b9\u6848\u5305\u62ec\u6587\u672c\uff08\u7528\u4e8e\u793a\u4f8b\uff0c\u4e0d\u5e94\u4f7f\u7528\uff09\u3001SHA(1.3.13)(SHA-1\u54c8\u5e0c\u6587\u672c\uff0c\u4e0d\u5e94\u4f7f\u7528)\u3001SSHA\uff08SHA-1\u52a0\u76d0\u54c8\u5e0c\uff0c\u88abOpenLDAP\u3001Dovecot\u7b49\u8f6f\u4ef6\u5305\u4f7f\u7528\uff09\u3002","title":"auth_basic_user_file"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/#htpasswd","text":"htpasswd\u662f\u5f00\u6e90Http\u670d\u52a1\u5668Apache Http Server\u7684\u4e00\u4e2a\u547d\u4ee4\u5de5\u5177\uff0c\u6240\u4ee5\u672c\u673a\u5982\u679c\u6ca1\u6709\u8be5\u547d\u4ee4\uff0c\u9700\u8981\u5148\u5b89\u88c5\u3002 1 2 yum install httpd-tools -y 1 htpasswd\u6307\u4ee4\u7528\u6765\u521b\u5efa\u548c\u66f4\u65b0\u7528\u4e8e\u57fa\u672c\u8ba4\u8bc1\u7684\u7528\u6237\u8ba4\u8bc1\u5bc6\u7801\u6587\u4ef6\u3002htpasswd\u6307\u4ee4\u5fc5\u987b\u5bf9\u5bc6\u7801\u6587\u4ef6\u6709\u8bfb\u5199\u6743\u9650\uff0c\u5426\u5219\u4f1a\u8fd4\u56de\u9519\u8bef\u7801\u3002","title":"htpasswd \u751f\u6210\u5bc6\u7801\u6587\u4ef6"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/#htpasswd_1","text":"\u53c2\u6570 \u53c2\u6570\u8bf4\u660e -b \u5bc6\u7801\u76f4\u63a5\u5199\u5728\u547d\u4ee4\u884c\u4e2d\uff0c\u800c\u975e\u4f7f\u7528\u63d0\u793a\u8f93\u5165\u7684\u65b9\u5f0f -c \u521b\u5efa\u5bc6\u7801\u6587\u4ef6\uff0c\u82e5\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u8986\u76d6\u6587\u4ef6\u91cd\u65b0\u5199\u5165 -n \u4e0d\u66f4\u65b0\u5bc6\u7801\u6587\u4ef6\uff0c\u5c06\u7528\u6237\u540d\u5bc6\u7801\u8fdb\u884c\u6807\u51c6\u8f93\u51fa -m \u4f7f\u7528MD5\u7b97\u6cd5\u5bf9\u5bc6\u7801\u8fdb\u884c\u5904\u7406 -d \u4f7f\u7528CRYPT\u7b97\u6cd5\u5bf9\u5bc6\u7801\u8fdb\u884c\u5904\u7406 -s \u4f7f\u7528SHA\u7b97\u6cd5\u5bf9\u5bc6\u7801\u8fdb\u884c\u5904\u7406 -p \u4e0d\u5bf9\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\u5904\u7406\uff0c\u4f7f\u7528\u660e\u6587\u5bc6\u7801 -D \u4ece\u5bc6\u7801\u6587\u4ef6\u4e2d\u5220\u9664\u6307\u5b9a\u7528\u6237\u8bb0\u5f55 htpasswd\u751f\u6210Nginx\u5bc6\u7801\u6587\u4ef6\uff1a 1 2 htpasswd -bc /usr/local/nginx/conf/nginxpasswd Securitit 000000 1 \u6b64\u65f6\u67e5\u770b/usr/local/nginx/conf/nginxpasswd\u6587\u4ef6\uff1a 1 2 Securitit: $apr1$nuJ /GIEt $nH8z8kk0EFVq5oo9 .qRzI/ 1 \u82e5\u8981\u5728\u5df2\u6709Nginx\u5bc6\u7801\u6587\u4ef6\u4e2d\u8ffd\u52a0\u7528\u6237\uff0c\u5219\u65e0\u9700-c\u53c2\u6570\uff1a 1 2 htpasswd -b /usr/local/nginx/conf/nginxpasswd Csdn 111111 1 \u6b64\u65f6\u67e5\u770b/usr/local/nginx/conf/nginxpasswd\u6587\u4ef6\uff1a 1 2 3 Securitit: $apr1$nuJ /GIEt $nH8z8kk0EFVq5oo9 .qRzI/ Csdn: $apr1$1 IWZsiJl $q1K5CwAboegG1LO18Jdta0 12","title":"htpasswd\u53c2\u6570\u5217\u8868\uff1a"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/#_2","text":"\u57fa\u4e8e\u9ed8\u8ba4nginx.conf\u8fdb\u884c\u4fee\u6539\uff0c\u4f7f\u7528\u4e0a\u9762\u751f\u6210\u7684\u5bc6\u7801\u6587\u4ef6\u8fdb\u884c\u8ba4\u8bc1\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 worker_processes 1 ; error_log logs/error.log ; events { worker_connections 1024 ; } http { include mime.types ; default_type application/octet-stream ; sendfile on ; keepalive_timeout 65 ; server { listen 80 ; server_name securitit ; location / { auth_basic \"Please Input UserName And Password!\" ; auth_basic_user_file nginxpasswd ; } } } 1234567891011121314151617181920212223242526272829 \u901a\u8fc7./nginx -s reload\u5e73\u6ed1\u91cd\u542fNginx\uff0c\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95eehttp://192.168.20.9/\uff0c\u4f1a\u51fa\u73b0\u5982\u4e0b\u7684\u6548\u679c\uff1a \u6ce8\uff1a\u56fe\u6807\u7ea2\u8272\u6807\u8bb0\u7684\u5373\u662fauth_basic\u914d\u7f6e\u7684\u53c2\u6570\u503c\u3002 \u6b64\u65f6\uff0c\u9700\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\u8bbf\u95ee\u8d44\u6e90\uff0c\u82e5\u70b9\u51fb\"\u53d6\u6d88\"\uff0c\u5219\u4f1a\u63d0\u793a\u8bbf\u95ee\u53d7\u9650\uff1a \u8f93\u5165\u6b63\u786e\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u53ef\u4ee5\u6b63\u786e\u8bbf\u95ee\u76ee\u6807\u8d44\u6e90\uff1a","title":"\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u6a21\u5757 \u793a\u4f8b"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/#_3","text":"\u53c2\u7167 Nginx \u76ee\u5f55\u6d4f\u89c8\u6a21\u5757 \u4e2d\u6587\u4e71\u7801 \u8bbf\u95ee\u8ba4\u8bc1 ngx_http_autoindex_module \uff0c\u8fdb\u884c\u914d\u7f6e\uff0cNginx\u53ef\u4ee5\u8fdb\u884c\u76ee\u5f55\u68c0\u7d22\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u76ee\u5f55\uff0c\u8bbe\u7f6e\u4e0d\u540c\u7684\u6743\u9650\uff0c\u5b9e\u73b0\u8d44\u6e90\u8bbf\u95ee\u63a7\u5236\u3002 \u8bbf\u95ee\u65f6\uff0c\u8fdb\u884c\u8eab\u4efd\u8ba4\u8bc1\uff1a \u8eab\u4efd\u8ba4\u8bc1\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5bf9\u5e94\u7684\u76ee\u5f55\u53ca\u8d44\u6e90\uff1a \u6b64\u65f6\uff0c\u5bf9\u4e8e\u76ee\u5f55\u7684\u5206\u5c42\u3001\u5206\u7c7b\u3001\u6743\u9650\u5206\u79bb\u5c31\u663e\u5f97\u5f88\u91cd\u8981\u4e86\u3002","title":"\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\u6a21\u5757 \u76ee\u5f55\u68c0\u7d22\u793a\u4f8b"},{"location":"Nginx/10Nginx%E5%AE%89%E5%85%A8%E8%AE%A4%E8%AF%81/#_4","text":"\u5e94\u7528\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u4e8e\u76ee\u5f55\u7684\u8bbf\u95ee\u6743\u9650\u8bbe\u7f6e\u540c\u6837\u91cd\u8981\uff0c\u4f46\u662f\u4e00\u822c\u4e0d\u4f1a\u4f7f\u7528\"HTTP\u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1\"\u8fd9\u79cd\u65b9\u5f0f\u3002\u9996\u5148\uff0c\u9762\u5bf9\u5927\u4f17\u7528\u6237\uff0c\u5176\u8868\u73b0\u5f62\u5f0f\u663e\u5f97\u5f88\u4e0d\u53cb\u597d\uff0c\u4e0e\u73b0\u4ee3Web UI\u7684\u5bcc\u8868\u73b0\u6280\u672f\u76f8\u6bd4\uff0c\u8fc7\u4e8e\u5355\u8584\u3002\u518d\u8005\uff0c\u4f7f\u7528\u5bc6\u7801\u6587\u4ef6\u7684\u65b9\u5f0f\u7ba1\u7406\u6743\u9650\uff0c\u8fc7\u4e8e\u7b28\u91cd\uff0c\u5f53\u5f85\u7ba1\u7406\u7684\u6743\u9650\u4f53\u91cf\u8fc7\u5927\u65f6\uff0c\u4f1a\u9020\u6210\u5f88\u5927\u7684\u4e0d\u53d8\u3002","title":"\u603b\u7ed3"}]}