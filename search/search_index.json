{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"\u6709\u9053\u4e91\u94fe\u63a5\uff1ahttp://note.youdao.com/noteshare? id=663444a188ed9057dffd07cfbeed43cc&sub=D6060DA6961E42D699A3B7DDB2118F93\uff08 \u590d\u5236\u94fe\u63a5\u5230\u6d4f\u89c8\u5668\u7684\u65f6\u5019\u6ce8\u610f\u8f6c\u884c\u7684\u7a7a\u683c\u54e6\uff09 \u4f5c\u8005\uff1a\u5468\u745c \u524d\u9762\u4e24\u8282\u8bfe\uff0c\u6211\u4eec\u5927\u6982\u4e86\u89e3\u4e86Spring\u4e2d\u7684\u4e00\u4e9b\u6982\u5ff5\u548c\u5e95\u5c42\u5de5\u4f5c\u6d41\u7a0b\uff0c\u672c\u8282\u8bfe\u5f00\u59cb\u5c06\u771f\u6b63\u8bb2\u4e00\u4e9bSpring \u4e2d\u7684\u6982\u5ff5\u548c\u5de5\u4f5c\u6d41\u7a0b\u3002 \u672c\u8282\u8bfe\u7684\u5185\u5bb9\uff0c\u662f\u540e\u7eed\u770bSpring\u6e90\u7801\u6240\u5fc5\u5907\u7684\uff0c\u9632\u6b62\u540e\u7eed\u770b\u6e90\u7801\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9047\u5230\u4e0d\u4f1a\u7684\u6982\u5ff5\u5f97\u5355\u72ec\u8df3 \u51fa\u6765\u5b66\u4e60\u3002 BeanDefinition BeanDefinition\u8868\u793aBean\u5b9a\u4e49\uff0cBeanDefinition\u4e2d\u5b58\u5728\u5f88\u591a\u5c5e\u6027\u7528\u6765\u63cf\u8ff0\u4e00\u4e2aBean\u7684\u7279\u70b9\u3002\u6bd4\u5982\uff1a class\uff0c\u8868\u793aBean\u7c7b\u578b scope\uff0c\u8868\u793aBean\u4f5c\u7528\u57df\uff0c\u5355\u4f8b\u6216\u539f\u578b\u7b49 lazyInit\uff1a\u8868\u793aBean\u662f\u5426\u662f\u61d2\u52a0\u8f7d initMethodName\uff1a\u8868\u793aBean\u521d\u59cb\u5316\u65f6\u8981\u6267\u884c\u7684\u65b9\u6cd5 destroyMethodName\uff1a\u8868\u793aBean\u9500\u6bc1\u65f6\u8981\u6267\u884c\u7684\u65b9\u6cd5 \u8fd8\u6709\u5f88\u591a... \u5728Spring\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u901a\u8fc7\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u6765\u5b9a\u4e49Bean\uff1a 1. 2. @Bean 3. @Component(@Service,@Controller) \u8fd9\u4e9b\uff0c\u6211\u4eec\u53ef\u4ee5\u79f0\u4e4b\u7533\u660e\u5f0f\u5b9a\u4e49Bean\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u7f16\u7a0b\u5f0f\u5b9a\u4e49Bean\uff0c\u90a3\u5c31\u662f\u76f4\u63a5\u901a\u8fc7BeanDefinition\uff0c\u6bd4\u5982\uff1a AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class); // \u751f\u6210\u4e00\u4e2aBeanDefinition\u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6ebeanClass\u4e3aUser.class\uff0c\u5e76\u6ce8\u518c\u5230ApplicationContext\u4e2d AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder.genericBeanDefinition().getBeanDefinition(); beanDefinition.setBeanClass(User.class); context.registerBeanDefinition(\"user\", beanDefinition); System.out.println(context.getBean(\"user\")); \u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7BeanDefinition\u8bbe\u7f6e\u4e00\u4e2aBean\u7684\u5176\u4ed6\u5c5e\u6027 beanDefinition.setScope(\"prototype\"); // \u8bbe\u7f6e\u4f5c\u7528\u57df beanDefinition.setInitMethodName(\"init\"); // \u8bbe\u7f6e\u521d\u59cb\u5316\u65b9\u6cd5 beanDefinition.setLazyInit(true); // \u8bbe\u7f6e\u61d2\u52a0\u8f7d \u548c\u7533\u660e\u5f0f\u4e8b\u52a1\u3001\u7f16\u7a0b\u5f0f\u4e8b\u52a1\u7c7b\u4f3c\uff0c\u901a\u8fc7\uff0c@Bean\uff0c@Component\u7b49\u7533\u660e\u5f0f\u65b9\u5f0f\u6240\u5b9a\u4e49\u7684 Bean\uff0c\u6700\u7ec8\u90fd\u4f1a\u88abSpring\u89e3\u6790\u4e3a\u5bf9\u5e94\u7684BeanDefinition\u5bf9\u8c61\uff0c\u5e76\u653e\u5165Spring\u5bb9\u5668\u4e2d\u3002 BeanDefinitionReader \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u4ecb\u7ecd\u51e0\u79cd\u5728Spring\u6e90\u7801\u4e2d\u6240\u63d0\u4f9b\u7684BeanDefinition\u8bfb\u53d6\u5668 \uff08BeanDefinitionReader\uff09\uff0c\u8fd9\u4e9bBeanDefinitionReader\u5728\u6211\u4eec\u4f7f\u7528Spring\u65f6\u7528\u5f97\u5c11\uff0c\u4f46\u5728Spring \u6e90\u7801\u4e2d\u7528\u5f97\u591a\uff0c\u76f8\u5f53\u4e8eSpring\u6e90\u7801\u7684\u57fa\u7840\u8bbe\u65bd\u3002 AnnotatedBeanDefinitionReader \u53ef\u4ee5\u76f4\u63a5\u628a\u67d0\u4e2a\u7c7b\u8f6c\u6362\u4e3aBeanDefinition\uff0c\u5e76\u4e14\u4f1a\u89e3\u6790\u8be5\u7c7b\u4e0a\u7684\u6ce8\u89e3\uff0c\u6bd4\u5982 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class); AnnotatedBeanDefinitionReader annotatedBeanDefinitionReader = new AnnotatedBeanDefinitionReader(context); // \u5c06User.class\u89e3\u6790\u4e3aBeanDefinition annotatedBeanDefinitionReader.register(User.class); System.out.println(context.getBean(\"user\")); \u6ce8\u610f\uff1a\u5b83\u80fd\u89e3\u6790\u7684\u6ce8\u89e3\u662f\uff1a@Conditional\uff0c@Scope\u3001@Lazy\u3001@Primary\u3001@DependsOn\u3001 @Role\u3001@Description XmlBeanDefinitionReader \u53ef\u4ee5\u89e3\u6790\u6807\u7b7e AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class); XmlBeanDefinitionReader xmlBeanDefinitionReader = new XmlBeanDefinitionReader(context); int i = xmlBeanDefinitionReader.loadBeanDefinitions(\"spring.xml\"); System.out.println(context.getBean(\"user\")); ClassPathBeanDefinitionScanner ClassPathBeanDefinitionScanner ClassPathBeanDefinitionScanner\u662f\u626b\u63cf\u5668\uff0c\u4f46\u662f\u5b83\u7684\u4f5c\u7528\u548cBeanDefinitionReader\u7c7b\u4f3c\uff0c\u5b83\u53ef\u4ee5 \u8fdb\u884c\u626b\u63cf\uff0c\u626b\u63cf\u67d0\u4e2a\u5305\u8def\u5f84\uff0c\u5bf9\u626b\u63cf\u5230\u7684\u7c7b\u8fdb\u884c\u89e3\u6790\uff0c\u6bd4\u5982\uff0c\u626b\u63cf\u5230\u7684\u7c7b\u4e0a\u5982\u679c\u5b58\u5728@Component \u6ce8\u89e3\uff0c\u90a3\u4e48\u5c31\u4f1a\u628a\u8fd9\u4e2a\u7c7b\u89e3\u6790\u4e3a\u4e00\u4e2aBeanDefinition\uff0c\u6bd4\u5982\uff1a AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(); context.refresh(); ClassPathBeanDefinitionScanner scanner = new ClassPathBeanDefinitionScanner(context); scanner.scan(\"com.zhouyu\"); System.out.println(context.getBean(\"userService\")); BeanFactory BeanFactory\u8868\u793aBean\u5de5\u5382\uff0c\u6240\u4ee5\u5f88\u660e\u663e\uff0cBeanFactory\u4f1a\u8d1f\u8d23\u521b\u5efaBean\uff0c\u5e76\u4e14\u63d0\u4f9b\u83b7\u53d6Bean\u7684 API\u3002 \u800cApplicationContext\u662fBeanFactory\u7684\u4e00\u79cd\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u662f\u8fd9\u4e48\u5b9a\u4e49\u7684\uff1a public interface ApplicationContext extends EnvironmentCapable, ListableBeanFactory, HierarchicalBeanFactory, MessageSource, ApplicationEventPublisher, ResourcePatternResolver { ... } \u9996\u5148\uff0c\u5728Java\u4e2d\uff0c\u63a5\u53e3\u662f\u53ef\u4ee5\u591a\u7ee7\u627f\u7684\uff0c\u6211\u4eec\u53d1\u73b0ApplicationContext\u7ee7\u627f\u4e86ListableBeanFactory \u548cHierarchicalBeanFactory\uff0c\u800cListableBeanFactory\u548cHierarchicalBeanFactory\u90fd\u7ee7\u627f\u81f3 BeanFactory\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3aApplicationContext\u7ee7\u627f\u4e86BeanFactory\uff0c\u76f8\u5f53\u4e8e\u82f9\u679c\u7ee7\u627f\u6c34\u679c\uff0c \u5b9d\u9a6c\u7ee7\u627f\u6c7d\u8f66\u4e00\u6837\uff0cApplicationContext\u4e5f\u662fBeanFactory\u7684\u4e00\u79cd\uff0c\u62e5\u6709BeanFactory\u652f\u6301\u7684\u6240\u6709\u529f \u80fd\uff0c\u4e0d\u8fc7ApplicationContext\u6bd4BeanFactory\u66f4\u52a0\u5f3a\u5927\uff0cApplicationContext\u8fd8\u57fa\u7840\u4e86\u5176\u4ed6\u63a5\u53e3\uff0c\u4e5f \u5c31\u8868\u793aApplicationContext\u8fd8\u62e5\u6709\u5176\u4ed6\u529f\u80fd\uff0c\u6bd4\u5982MessageSource\u8868\u793a\u56fd\u9645\u5316\uff0c ApplicationEventPublisher\u8868\u793a\u4e8b\u4ef6\u53d1\u5e03\uff0cEnvironmentCapable\u8868\u793a\u83b7\u53d6\u73af\u5883\u53d8\u91cf\uff0c\u7b49\u7b49\uff0c\u5173\u4e8e ApplicationContext\u540e\u9762\u518d\u8be6\u7ec6\u8ba8\u8bba\u3002 \u5728Spring\u7684\u6e90\u7801\u5b9e\u73b0\u4e2d\uff0c\u5f53\u6211\u4eecnew\u4e00\u4e2aApplicationContext\u65f6\uff0c\u5176\u5e95\u5c42\u4f1anew\u4e00\u4e2aBeanFactory\u51fa \u6765\uff0c\u5f53\u4f7f\u7528ApplicationContext\u7684\u67d0\u4e9b\u65b9\u6cd5\u65f6\uff0c\u6bd4\u5982getBean()\uff0c\u5e95\u5c42\u8c03\u7528\u7684\u662fBeanFactory\u7684 getBean()\u65b9\u6cd5\u3002 \u5728Spring\u6e90\u7801\u4e2d\uff0cBeanFactory\u63a5\u53e3\u5b58\u5728\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5b9e\u73b0\u7c7b\u662f\uff1a DefaultListableBeanFactory\uff0c\u4e5f\u662f\u975e\u5e38\u6838\u5fc3\u7684\u3002 \u5177\u4f53\u91cd\u8981\u6027\uff0c\u968f\u7740\u540e\u7eed\u8bfe\u7a0b\u4f1a\u611f\u53d7\u66f4\u6df1\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6765\u4f7f\u7528DefaultListableBeanFactory\uff0c\u800c\u4e0d\u7528\u4f7f\u7528ApplicationContext\u7684\u67d0\u4e2a \u5b9e\u73b0\u7c7b\uff0c\u6bd4\u5982\uff1a DefaultListableBeanFactory beanFactory = new DefaultListableBeanFactory(); AbstractBeanDefinition beanDefinition = BeanDefinitionBuilder.genericBeanDefinition().getBeanDefinition(); beanDefinition.setBeanClass(User.class); beanFactory.registerBeanDefinition(\"user\", beanDefinition); System.out.println(beanFactory.getBean(\"user\")); DefaultListableBeanFactory\u662f\u975e\u5e38\u5f3a\u5927\u7684\uff0c\u652f\u6301\u5f88\u591a\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b DefaultListableBeanFactory\u7684\u7c7b\u7ee7\u627f\u5b9e\u73b0\u7ed3\u6784\u6765\u770b \u8fd9\u90e8\u5206\u73b0\u5728\u770b\u4e0d\u61c2\u6ca1\u5173\u7cfb\uff0c\u6e90\u7801\u719f\u6089\u4e00\u70b9\u540e\u56de\u6765\u518d\u6765\u770b\u90fd\u53ef\u4ee5\u3002 \u5b83\u5b9e\u73b0\u4e86\u5f88\u591a\u63a5\u53e3\uff0c\u8868\u793a\uff0c\u5b83\u62e5\u6709\u5f88\u591a\u529f\u80fd\uff1a 1. AliasRegistry\uff1a\u652f\u6301\u522b\u540d\u529f\u80fd\uff0c\u4e00\u4e2a\u540d\u5b57\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a\u522b\u540d 2. BeanDefinitionRegistry\uff1a\u53ef\u4ee5\u6ce8\u518c\u3001\u4fdd\u5b58\u3001\u79fb\u9664\u3001\u83b7\u53d6\u67d0\u4e2aBeanDefinition 3. BeanFactory\uff1aBean\u5de5\u5382\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2abean\u7684\u540d\u5b57\u3001\u6216\u7c7b\u578b\u3001\u6216\u522b\u540d\u83b7\u53d6\u67d0\u4e2aBean\u5bf9\u8c61 4. SingletonBeanRegistry\uff1a\u53ef\u4ee5\u76f4\u63a5\u6ce8\u518c\u3001\u83b7\u53d6\u67d0\u4e2a\u5355\u4f8bBean 5. SimpleAliasRegistry\uff1a\u5b83\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0\u4e86AliasRegistry\u63a5\u53e3\u4e2d\u6240\u5b9a\u4e49\u7684\u529f\u80fd\uff0c\u652f\u6301\u522b\u540d\u529f\u80fd 6. ListableBeanFactory\uff1a\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e86\u5176\u4ed6\u529f\u80fd\uff0c\u53ef\u4ee5\u83b7\u53d6\u6240\u6709 BeanDefinition\u7684beanNames\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2a\u7c7b\u578b\u83b7\u53d6\u5bf9\u5e94\u7684beanNames\uff0c\u53ef\u4ee5\u6839\u636e\u67d0\u4e2a\u7c7b \u578b\u83b7\u53d6{\u7c7b\u578b\uff1a\u5bf9\u5e94\u7684Bean}\u7684\u6620\u5c04\u5173\u7cfb 7. HierarchicalBeanFactory\uff1a\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u4e86\u83b7\u53d6\u7236BeanFactory\u7684\u529f\u80fd 8. DefaultSingletonBeanRegistry\uff1a\u5b83\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0\u4e86SingletonBeanRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u76f4 \u63a5\u6ce8\u518c\u3001\u83b7\u53d6\u67d0\u4e2a\u5355\u4f8bBean\u7684\u529f\u80fd 9. ConfigurableBeanFactory\uff1a\u5728HierarchicalBeanFactory\u548cSingletonBeanRegistry\u7684\u57fa\u7840\u4e0a\uff0c \u6dfb\u52a0\u4e86\u8bbe\u7f6e\u7236BeanFactory\u3001\u7c7b\u52a0\u8f7d\u5668\uff08\u8868\u793a\u53ef\u4ee5\u6307\u5b9a\u67d0\u4e2a\u7c7b\u52a0\u8f7d\u5668\u8fdb\u884c\u7c7b\u7684\u52a0\u8f7d\uff09\u3001\u8bbe\u7f6e Spring EL\u8868\u8fbe\u5f0f\u89e3\u6790\u5668\uff08\u8868\u793a\u8be5BeanFactory\u53ef\u4ee5\u89e3\u6790EL\u8868\u8fbe\u5f0f\uff09\u3001\u8bbe\u7f6e\u7c7b\u578b\u8f6c\u5316\u670d\u52a1\uff08\u8868\u793a \u8be5BeanFactory\u53ef\u4ee5\u8fdb\u884c\u7c7b\u578b\u8f6c\u5316\uff09\u3001\u53ef\u4ee5\u6dfb\u52a0BeanPostProcessor\uff08\u8868\u793a\u8be5BeanFactory\u652f\u6301 Bean\u7684\u540e\u7f6e\u5904\u7406\u5668\uff09\uff0c\u53ef\u4ee5\u5408\u5e76BeanDefinition\uff0c\u53ef\u4ee5\u9500\u6bc1\u67d0\u4e2aBean\u7b49\u7b49\u529f\u80fd 10. FactoryBeanRegistrySupport\uff1a\u652f\u6301\u4e86FactoryBean\u7684\u529f\u80fd 11. AutowireCapableBeanFactory\uff1a\u662f\u76f4\u63a5\u7ee7\u627f\u4e86BeanFactory\uff0c\u5728BeanFactory\u7684\u57fa\u7840\u4e0a\uff0c\u652f\u6301 \u5728\u521b\u5efaBean\u7684\u8fc7\u7a0b\u4e2d\u80fd\u5bf9Bean\u8fdb\u884c\u81ea\u52a8\u88c5\u914d 12. AbstractBeanFactory\uff1a\u5b9e\u73b0\u4e86ConfigurableBeanFactory\u63a5\u53e3\uff0c\u7ee7\u627f\u4e86 FactoryBeanRegistrySupport\uff0c\u8fd9\u4e2aBeanFactory\u7684\u529f\u80fd\u5df2\u7ecf\u5f88\u5168\u9762\u4e86\uff0c\u4f46\u662f\u4e0d\u80fd\u81ea\u52a8\u88c5\u914d\u548c \u83b7\u53d6beanNames 13. ConfigurableListableBeanFactory\uff1a\u7ee7\u627f\u4e86ListableBeanFactory\u3001 AutowireCapableBeanFactory\u3001ConfigurableBeanFactory 14. AbstractAutowireCapableBeanFactory\uff1a\u7ee7\u627f\u4e86AbstractBeanFactory\uff0c\u5b9e\u73b0\u4e86 AutowireCapableBeanFactory\uff0c\u62e5\u6709\u4e86\u81ea\u52a8\u88c5\u914d\u7684\u529f\u80fd 15. DefaultListableBeanFactory\uff1a\u7ee7\u627f\u4e86AbstractAutowireCapableBeanFactory\uff0c\u5b9e\u73b0\u4e86 ConfigurableListableBeanFactory\u63a5\u53e3\u548cBeanDefinitionRegistry\u63a5\u53e3\uff0c\u6240\u4ee5 DefaultListableBeanFactory\u7684\u529f\u80fd\u5f88\u5f3a\u5927 ApplicationContext \u4e0a\u9762\u6709\u5206\u6790\u5230\uff0cApplicationContext\u662f\u4e2a\u63a5\u53e3\uff0c\u5b9e\u9645\u4e0a\u4e5f\u662f\u4e00\u4e2aBeanFactory\uff0c\u4e0d\u8fc7\u6bd4BeanFactory \u66f4\u52a0\u5f3a\u5927\uff0c\u6bd4\u5982\uff1a 1. HierarchicalBeanFactory\uff1a\u62e5\u6709\u83b7\u53d6\u7236BeanFactory\u7684\u529f\u80fd 2. ListableBeanFactory\uff1a\u62e5\u6709\u83b7\u53d6beanNames\u7684\u529f\u80fd 3. ResourcePatternResolver\uff1a\u8d44\u6e90\u52a0\u8f7d\u5668\uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u83b7\u53d6\u591a\u4e2a\u8d44\u6e90\uff08\u6587\u4ef6\u8d44\u6e90\u7b49\u7b49\uff09 4. EnvironmentCapable\uff1a\u53ef\u4ee5\u83b7\u53d6\u8fd0\u884c\u65f6\u73af\u5883\uff08\u6ca1\u6709\u8bbe\u7f6e\u8fd0\u884c\u65f6\u73af\u5883\u529f\u80fd\uff09 5. ApplicationEventPublisher\uff1a\u62e5\u6709\u5e7f\u64ad\u4e8b\u4ef6\u7684\u529f\u80fd\uff08\u6ca1\u6709\u6dfb\u52a0\u4e8b\u4ef6\u76d1\u542c\u5668\u7684\u529f\u80fd\uff09 6. MessageSource\uff1a\u62e5\u6709\u56fd\u9645\u5316\u529f\u80fd \u5177\u4f53\u7684\u529f\u80fd\u6f14\u793a\uff0c\u540e\u9762\u4f1a\u6709\u3002 \u6211\u4eec\u5148\u6765\u770bApplicationContext\u4e24\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u5b9e\u73b0\u7c7b\uff1a 1. AnnotationConfigApplicationContext 2. ClassPathXmlApplicationContext AnnotationConfigApplicationContext \u8fd9\u90e8\u5206\u73b0\u5728\u770b\u4e0d\u61c2\u6ca1\u5173\u7cfb\uff0c\u6e90\u7801\u719f\u6089\u4e00\u70b9\u540e\u56de\u6765\u518d\u6765\u770b\u90fd\u53ef\u4ee5\u3002 1. ConfigurableApplicationContext\uff1a\u7ee7\u627f\u4e86ApplicationContext\u63a5\u53e3\uff0c\u589e\u52a0\u4e86\uff0c\u6dfb\u52a0\u4e8b\u4ef6\u76d1\u542c \u5668\u3001\u6dfb\u52a0BeanFactoryPostProcessor\u3001\u8bbe\u7f6eEnvironment\uff0c\u83b7\u53d6 ConfigurableListableBeanFactory\u7b49\u529f\u80fd 2. AbstractApplicationContext\uff1a\u5b9e\u73b0\u4e86ConfigurableApplicationContext\u63a5\u53e3 3. GenericApplicationContext\uff1a\u7ee7\u627f\u4e86AbstractApplicationContext\uff0c\u5b9e\u73b0\u4e86 BeanDefinitionRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u6240\u6709ApplicationContext\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u53ef\u4ee5\u6ce8\u518c BeanDefinition\uff0c\u6ce8\u610f\u8fd9\u4e2a\u7c7b\u4e2d\u6709\u4e00\u4e2a\u5c5e\u6027(DefaultListableBeanFactory beanFactory) 4. AnnotationConfigRegistry\uff1a\u53ef\u4ee5\u5355\u72ec\u6ce8\u518c\u67d0\u4e2a\u4e3a\u7c7b\u4e3aBeanDefinition\uff08\u53ef\u4ee5\u5904\u7406\u8be5\u7c7b\u4e0a\u7684 @Configuration\u6ce8\u89e3 \uff0c\u5df2\u7ecf\u53ef\u4ee5\u5904\u7406 @Bean\u6ce8\u89e3 \uff09\uff0c\u540c\u65f6\u53ef\u4ee5\u626b\u63cf 5. AnnotationConfigApplicationContext\uff1a\u7ee7\u627f\u4e86GenericApplicationContext\uff0c\u5b9e\u73b0\u4e86 AnnotationConfigRegistry\u63a5\u53e3\uff0c\u62e5\u6709\u4e86\u4ee5\u4e0a\u6240\u6709\u7684\u529f\u80fd ClassPathXmlApplicationContext \u5b83\u4e5f\u662f\u7ee7\u627f\u4e86AbstractApplicationContext\uff0c\u4f46\u662f\u76f8\u5bf9\u4e8eAnnotationConfigApplicationContext\u800c \u8a00\uff0c\u529f\u80fd\u6ca1\u6709AnnotationConfigApplicationContext\u5f3a\u5927\uff0c\u6bd4\u5982\u4e0d\u80fd\u6ce8\u518cBeanDefinition \u56fd\u9645\u5316 \u5148\u5b9a\u4e49\u4e00\u4e2aMessageSource: @Bean public MessageSource messageSource() { ResourceBundleMessageSource messageSource = new ResourceBundleMessageSource(); messageSource.setBasename(\"messages\"); return messageSource; } \u6709\u4e86\u8fd9\u4e2aBean\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u4efb\u610f\u60f3\u8981\u8fdb\u884c\u56fd\u9645\u5316\u7684\u5730\u65b9\u4f7f\u7528\u8be5MessageSource\u3002 \u540c\u65f6\uff0c\u56e0\u4e3a ApplicationContext\u4e5f\u62e5\u6709\u56fd\u5bb6\u5316\u7684\u529f\u80fd\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8fd9\u4e48\u7528\uff1a context.getMessage(\"test\", null, new Locale(\"en_CN\")) \u8d44\u6e90\u52a0\u8f7d ApplicationContext\u8fd8\u62e5\u6709\u8d44\u6e90\u52a0\u8f7d\u7684\u529f\u80fd\uff0c\u6bd4\u5982\uff0c\u53ef\u4ee5\u76f4\u63a5\u5229\u7528ApplicationContext\u83b7\u53d6\u67d0\u4e2a\u6587 \u4ef6\u7684\u5185\u5bb9\uff1a AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class); Resource resource = context.getResource(\"file://D:\\IdeaProjects\\spring\u2010 framework\\luban\\src\\main\\java\\com\\luban\\entity\\User.java\"); System.out.println(resource.contentLength()); \u4f60\u53ef\u4ee5\u60f3\u60f3\uff0c\u5982\u679c\u4f60\u4e0d\u4f7f\u7528ApplicationContext\uff0c\u800c\u662f\u81ea\u5df1\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u5c31\u6bd4\u8f83\u8d39\u65f6\u95f4\u4e86\u3002 \u8fd8\u6bd4\u5982\u4f60\u53ef\u4ee5\uff1a AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class); Resource resource = context.getResource(\"file://D:\\IdeaProjects\\spring\u2010framework\u2010 5.3.10\\tuling\\src\\main\\java\\com\\zhouyu\\service\\UserService.java\"); System.out.println(resource.contentLength()); System.out.println(resource.getFilename()); Resource resource1 = context.getResource(\"https://www.baidu.com\"); System.out.println(resource1.contentLength()); System.out.println(resource1.getURL()); Resource resource2 = context.getResource(\"classpath:spring.xml\"); System.out.println(resource2.contentLength()); System.out.println(resource2.getURL()); \u8fd8\u53ef\u4ee5\u4e00\u6b21\u6027\u83b7\u53d6\u591a\u4e2a\uff1a Resource[] resources = context.getResources(\"classpath:com/zhouyu/*.class\"); for (Resource resource : resources) { System.out.println(resource.contentLength()); System.out.println(resource.getFilename()); } \u83b7\u53d6\u8fd0\u884c\u65f6\u73af\u5883 \u83b7\u53d6\u8fd0\u884c\u65f6\u73af\u5883 AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class); Map systemEnvironment = context.getEnvironment().getSystemEnvironment(); System.out.println(systemEnvironment); System.out.println(\"=======\"); Map systemProperties = context.getEnvironment().getSystemProperties(); System.out.println(systemProperties); System.out.println(\"=======\"); MutablePropertySources propertySources = context.getEnvironment().getPropertySources(); System.out.println(propertySources); System.out.println(\"=======\"); System.out.println(context.getEnvironment().getProperty(\"NO_PROXY\")); System.out.println(context.getEnvironment().getProperty(\"sun.jnu.encoding\")); System.out.println(context.getEnvironment().getProperty(\"zhouyu\")); \u6ce8\u610f\uff0c\u53ef\u4ee5\u5229\u7528 @PropertySource(\"classpath:spring.properties\") \u6765\u4f7f\u5f97\u67d0\u4e2aproperties\u6587\u4ef6\u4e2d\u7684\u53c2\u6570\u6dfb\u52a0\u5230\u8fd0\u884c\u65f6\u73af\u5883\u4e2d \u4e8b\u4ef6\u53d1\u5e03 \u5148\u5b9a\u4e49\u4e00\u4e2a\u4e8b\u4ef6\u76d1\u542c\u5668 @Bean public ApplicationListener applicationListener() { return new ApplicationListener() { @Override public void onApplicationEvent(ApplicationEvent event) { System.out.println(\"\u63a5\u6536\u5230\u4e86\u4e00\u4e2a\u4e8b\u4ef6\"); } }; } \u7136\u540e\u53d1\u5e03\u4e00\u4e2a\u4e8b\u4ef6\uff1a context.publishEvent(\"kkk\"); \u7c7b\u578b\u8f6c\u5316 \u7c7b\u578b\u8f6c\u5316 \u5728Spring\u6e90\u7801\u4e2d\uff0c\u6709\u53ef\u80fd\u9700\u8981\u628aString\u8f6c\u6210\u5176\u4ed6\u7c7b\u578b\uff0c\u6240\u4ee5\u5728Spring\u6e90\u7801\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6280\u672f\u6765\u66f4\u65b9\u4fbf \u7684\u505a\u5bf9\u8c61\u7684\u7c7b\u578b\u8f6c\u5316\uff0c\u5173\u4e8e\u7c7b\u578b\u8f6c\u5316\u7684\u5e94\u7528\u573a\u666f\uff0c \u540e\u7eed\u770b\u6e90\u7801\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u9047\u5230\u5f88\u591a\u3002 PropertyEditor \u8fd9\u5176\u5b9e\u662fJDK\u4e2d\u63d0\u4f9b\u7684\u7c7b\u578b\u8f6c\u5316\u5de5\u5177\u7c7b public class StringToUserPropertyEditor extends PropertyEditorSupport implements PropertyEditor { @Override public void setAsText(String text) throws IllegalArgumentException { User user = new User(); user.setName(text); this.setValue(user); } } StringToUserPropertyEditor propertyEditor = new StringToUserPropertyEditor(); propertyEditor.setAsText(\"1\"); User value = (User) propertyEditor.getValue(); System.out.println(value); \u5982\u4f55\u5411Spring\u4e2d\u6ce8\u518cPropertyEditor\uff1a @Bean public CustomEditorConfigurer customEditorConfigurer() { CustomEditorConfigurer customEditorConfigurer = new CustomEditorConfigurer(); Map, Class> propertyEditorMap = new HashMap<>(); // \u8868\u793aStringToUserPropertyEditor\u53ef\u4ee5\u5c06String\u8f6c\u5316\u6210User\u7c7b\u578b\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u5982\u679c\u53d1\u73b0\u5f53\u524d \u5bf9\u8c61\u662fString\uff0c\u800c\u9700\u8981\u7684\u7c7b\u578b\u662fUser\uff0c\u5c31\u4f1a\u4f7f\u7528\u8be5PropertyEditor\u6765\u505a\u7c7b\u578b\u8f6c\u5316 propertyEditorMap.put(User.class, StringToUserPropertyEditor.class); customEditorConfigurer.setCustomEditors(propertyEditorMap); return customEditorConfigurer; } \u5047\u8bbe\u73b0\u5728\u6709\u5982\u4e0bBean: @Component public class UserService { @Value(\"xxx\") private User user; public void test() { System.out.println(user); } } \u90a3\u4e48test\u5c5e\u6027\u5c31\u80fd\u6b63\u5e38\u7684\u5b8c\u6210\u5c5e\u6027\u8d4b\u503c ConversionService Spring\u4e2d\u63d0\u4f9b\u7684\u7c7b\u578b\u8f6c\u5316\u670d\u52a1\uff0c\u5b83\u6bd4PropertyEditor\u66f4\u5f3a\u5927 public class StringToUserConverter implements ConditionalGenericConverter { @Override public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) { return sourceType.getType().equals(String.class) && targetType.getType().equals(User.class); } @Override public Set getConvertibleTypes() { return Collections.singleton(new ConvertiblePair(String.class, User.class)); } @Override public Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType) { User user = new User(); user.setName((String)source); return user; } } DefaultConversionService conversionService = new DefaultConversionService(); conversionService.addConverter(new StringToUserConverter()); User value = conversionService.convert(\"1\", User.class); System.out.println(value); \u5982\u4f55\u5411Spring\u4e2d\u6ce8\u518cConversionService\uff1a @Bean public ConversionServiceFactoryBean conversionService() { ConversionServiceFactoryBean conversionServiceFactoryBean = new ConversionServiceFactoryBean(); conversionServiceFactoryBean.setConverters(Collections.singleton(new StringToUserConverter())); return conversionServiceFactoryBean; } TypeConverter TypeConverter \u6574\u5408\u4e86PropertyEditor\u548cConversionService\u7684\u529f\u80fd\uff0c\u662fSpring\u5185\u90e8\u7528\u7684 SimpleTypeConverter typeConverter = new SimpleTypeConverter(); typeConverter.registerCustomEditor(User.class, new StringToUserPropertyEditor()); //typeConverter.setConversionService(conversionService); User value = typeConverter.convertIfNecessary(\"1\", User.class); System.out.println(value); OrderComparator OrderComparator\u662fSpring\u6240\u63d0\u4f9b\u7684\u4e00\u79cd\u6bd4\u8f83\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u6839\u636e@Order\u6ce8\u89e3\u6216\u5b9e\u73b0Ordered\u63a5\u53e3 \u6765\u6267\u884c\u503c\u8fdb\u884c\u7b14\u8bb0\uff0c\u4ece\u800c\u53ef\u4ee5\u8fdb\u884c\u6392\u5e8f\u3002 \u6bd4\u5982\uff1a public class A implements Ordered { @Override public int getOrder() { return 3; } @Override public String toString() { return this.getClass().getSimpleName(); } } public class B implements Ordered { @Override public int getOrder() { return 2; } @Override public String toString() { return this.getClass().getSimpleName(); } } public class Main { public static void main(String[] args) { A a = new A(); // order=3 B b = new B(); // order=2 OrderComparator comparator = new OrderComparator(); System.out.println(comparator.compare(a, b)); // 1 List list = new ArrayList<>(); list.add(a); list.add(b); // \u6309order\u503c\u5347\u5e8f\u6392\u5e8f list.sort(comparator); System.out.println(list); // B\uff0cA } } \u53e6\u5916\uff0cSpring\u4e2d\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2aOrderComparator\u7684\u5b50\u7c7b\uff1a AnnotationAwareOrderComparator\uff0c\u5b83\u652f\u6301\u7528@Order\u6765\u6307\u5b9aorder\u503c\u3002\u6bd4\u5982\uff1a @Order(3) public class A { @Override public String toString() { return this.getClass().getSimpleName(); } } @Order(2) public class B { @Override public String toString() { return this.getClass().getSimpleName(); } } public class Main { public static void main(String[] args) { A a = new A(); // order=3 B b = new B(); // order=2 AnnotationAwareOrderComparator comparator = new AnnotationAwareOrderComparator(); System.out.println(comparator.compare(a, b)); // 1 List list = new ArrayList<>(); list.add(a); list.add(b); // \u6309order\u503c\u5347\u5e8f\u6392\u5e8f list.sort(comparator); System.out.println(list); // B\uff0cA } } BeanPostProcessor BeanPostProcess\u8868\u793aBena\u7684\u540e\u7f6e\u5904\u7406\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u6216\u591a\u4e2aBeanPostProcessor\uff0c\u6bd4\u5982\u901a \u8fc7\u4e00\u4e0b\u4ee3\u7801\u5b9a\u4e49\u4e00\u4e2aBeanPostProcessor\uff1a @Component public class ZhouyuBeanPostProcessor implements BeanPostProcessor { @Override public Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException { if (\"userService\".equals(beanName)) { System.out.println(\"\u521d\u59cb\u5316\u524d\"); } return bean; } @Override public Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException { if (\"userService\".equals(beanName)) { System.out.println(\"\u521d\u59cb\u5316\u540e\"); } return bean; } } \u4e00\u4e2aBeanPostProcessor\u53ef\u4ee5\u5728\u4efb\u610f\u4e00\u4e2aBean\u7684\u521d\u59cb\u5316\u4e4b\u524d\u4ee5\u53ca\u521d\u59cb\u5316\u4e4b\u540e\u53bb\u989d\u5916\u7684\u505a\u4e00\u4e9b\u7528\u6237\u81ea \u5b9a\u4e49\u7684\u903b\u8f91\uff0c\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5224\u65adbeanName\u6765\u8fdb\u884c\u9488\u5bf9\u6027\u5904\u7406\uff08\u9488\u5bf9\u67d0\u4e2aBean\uff0c\u6216\u67d0\u90e8\u5206 Bean\uff09\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49BeanPostProcessor\u6765\u5e72\u6d89Spring\u521b\u5efaBean\u7684\u8fc7\u7a0b\u3002 BeanFactoryPostProcessor BeanFactoryPostProcessor\u8868\u793aBean\u5de5\u5382\u7684\u540e\u7f6e\u5904\u7406\u5668\uff0c\u5176\u5b9e\u548cBeanPostProcessor\u7c7b\u4f3c\uff0c BeanPostProcessor\u662f\u5e72\u6d89Bean\u7684\u521b\u5efa\u8fc7\u7a0b\uff0cBeanFactoryPostProcessor\u662f\u5e72\u6d89BeanFactory\u7684\u521b \u5efa\u8fc7\u7a0b\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\u4e00\u4e2aBeanFactoryPostProcessor\uff1a @Component public class ZhouyuBeanFactoryPostProcessor implements BeanFactoryPostProcessor { @Override public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException { System.out.println(\"\u52a0\u5de5beanFactory\"); } } \u6211\u4eec\u53ef\u4ee5\u5728postProcessBeanFactory()\u65b9\u6cd5\u4e2d\u5bf9BeanFactory\u8fdb\u884c\u52a0\u5de5\u3002 FactoryBean \u4e0a\u9762\u63d0\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7BeanPostPorcessor\u6765\u5e72\u6d89Spring\u521b\u5efaBean\u7684\u8fc7\u7a0b\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u60f3\u4e00\u4e2a Bean\u5b8c\u5b8c\u5168\u5168\u7531\u6211\u4eec\u6765\u521b\u9020\uff0c\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u6bd4\u5982\u901a\u8fc7FactoryBean\uff1a @Component public class ZhouyuFactoryBean implements FactoryBean { @Override public Object getObject() throws Exception { UserService userService = new UserService(); return userService; } @Override public Class getObjectType() { return UserService.class; } } \u901a\u8fc7\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u6211\u4eec\u81ea\u5df1\u521b\u9020\u4e86\u4e00\u4e2aUserService\u5bf9\u8c61\uff0c\u5e76\u4e14\u5b83\u5c06\u6210\u4e3aBean\u3002\u4f46\u662f\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f \u521b\u9020\u51fa\u6765\u7684UserService\u7684Bean\uff0c\u53ea\u4f1a\u7ecf\u8fc7\u521d\u59cb\u5316\u540e\uff0c\u5176\u4ed6Spring\u7684\u751f\u547d\u5468\u671f\u6b65\u9aa4\u662f\u4e0d\u4f1a\u7ecf\u8fc7\u7684\uff0c\u6bd4 \u5982\u4f9d\u8d56\u6ce8\u5165\u3002 \u6709\u540c\u5b66\u53ef\u80fd\u4f1a\u60f3\u5230\uff0c\u901a\u8fc7@Bean\u4e5f\u53ef\u4ee5\u81ea\u5df1\u751f\u6210\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3aBean\uff0c\u90a3\u4e48\u548cFactoryBean\u7684\u533a\u522b\u662f \u4ec0\u4e48\u5462\uff1f\u5176\u5b9e\u5728\u5f88\u591a\u573a\u666f\u4e0b\u4ed6\u4fe9\u662f\u53ef\u4ee5\u66ff\u6362\u7684\uff0c\u4f46\u662f\u7ad9\u5728\u539f\u7406\u5c42\u9762\u6765\u8bf4\u7684\uff0c\u533a\u522b\u5f88\u660e\u663e\uff0c@Bean\u5b9a \u4e49\u7684Bean\u662f\u4f1a\u7ecf\u8fc7\u5b8c\u6574\u7684Bean\u751f\u547d\u5468\u671f\u7684\u3002 ExcludeFilter\u548cIncludeFilter \u8fd9\u4e24\u4e2aFilter\u662fSpring\u626b\u63cf\u8fc7\u7a0b\u4e2d\u7528\u6765\u8fc7\u6ee4\u7684\u3002ExcludeFilter\u8868\u793a\u6392\u9664\u8fc7\u6ee4\u5668\uff0cIncludeFilter\u8868\u793a\u5305 \u542b\u8fc7\u6ee4\u5668\u3002 \u6bd4\u5982\u4ee5\u4e0b\u914d\u7f6e\uff0c\u8868\u793a\u626b\u63cfcom.zhouyu\u8fd9\u4e2a\u5305\u4e0b\u9762\u7684\u6240\u6709\u7c7b\uff0c\u4f46\u662f\u6392\u9664UserService\u7c7b\uff0c\u4e5f\u5c31\u662f\u5c31\u7b97 \u5b83\u4e0a\u9762\u6709@Component\u6ce8\u89e3\u4e5f\u4e0d\u4f1a\u6210\u4e3aBean\u3002 @ComponentScan(value = \"com.zhouyu\", excludeFilters = {@ComponentScan.Filter( type = FilterType.ASSIGNABLE_TYPE, classes = UserService.class)}.) public class AppConfig { } \u518d\u6bd4\u5982\u4ee5\u4e0b\u914d\u7f6e\uff0c\u5c31\u7b97UserService\u7c7b\u4e0a\u6ca1\u6709@Component\u6ce8\u89e3\uff0c\u5b83\u4e5f\u4f1a\u88ab\u626b\u63cf\u6210\u4e3a\u4e00\u4e2aBean\u3002 @ComponentScan(value = \"com.zhouyu\", includeFilters = {@ComponentScan.Filter( type = FilterType.ASSIGNABLE_TYPE, classes = UserService.class)}) public class AppConfig { } FilterType\u5206\u4e3a\uff1a 1. ANNOTATION\uff1a\u8868\u793a\u662f\u5426\u5305\u542b\u67d0\u4e2a\u6ce8\u89e3 2. ASSIGNABLE_TYPE\uff1a\u8868\u793a\u662f\u5426\u662f\u67d0\u4e2a\u7c7b 3. ASPECTJ\uff1a\u8868\u793a\u5426\u662f\u7b26\u5408\u67d0\u4e2aAspectj\u8868\u8fbe\u5f0f 4. REGEX\uff1a\u8868\u793a\u662f\u5426\u7b26\u5408\u67d0\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f 5. CUSTOM\uff1a\u81ea\u5b9a\u4e49 \u5728Spring\u7684\u626b\u63cf\u903b\u8f91\u4e2d\uff0c\u9ed8\u8ba4\u4f1a\u6dfb\u52a0\u4e00\u4e2aAnnotationTypeFilter\u7ed9includeFilters\uff0c\u8868\u793a\u9ed8\u8ba4\u60c5\u51b5\u4e0b Spring\u626b\u63cf\u8fc7\u7a0b\u4e2d\u4f1a\u8ba4\u4e3a\u7c7b\u4e0a\u6709@Component\u6ce8\u89e3\u7684\u5c31\u662fBean\u3002 MetadataReader\u3001ClassMetadata\u3001 AnnotationMetadata \u5728Spring\u4e2d\u9700\u8981\u53bb\u89e3\u6790\u7c7b\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u7c7b\u540d\u3001\u7c7b\u4e2d\u7684\u65b9\u6cd5\u3001\u7c7b\u4e0a\u7684\u6ce8\u89e3\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u7c7b\u7684\u5143\u6570 \u636e\uff0c\u6240\u4ee5Spring\u4e2d\u5bf9\u7c7b\u7684\u5143\u6570\u636e\u505a\u4e86\u62bd\u8c61\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5de5\u5177\u7c7b\u3002 MetadataReader\u8868\u793a\u7c7b\u7684\u5143\u6570\u636e\u8bfb\u53d6\u5668\uff0c\u9ed8\u8ba4\u5b9e\u73b0\u7c7b\u4e3aSimpleMetadataReader\u3002\u6bd4\u5982\uff1a public class Test { public static void main(String[] args) throws IOException { SimpleMetadataReaderFactory simpleMetadataReaderFactory = new SimpleMetadataReaderFactory(); // \u6784\u9020\u4e00\u4e2aMetadataReader MetadataReader metadataReader = simpleMetadataReaderFactory.getMetadataReader(\"com.zhouyu.service.UserService\"); // \u5f97\u5230\u4e00\u4e2aClassMetadata\uff0c\u5e76\u83b7\u53d6\u4e86\u7c7b\u540d ClassMetadata classMetadata = metadataReader.getClassMetadata(); System.out.println(classMetadata.getClassName()); // \u83b7\u53d6\u4e00\u4e2aAnnotationMetadata\uff0c\u5e76\u83b7\u53d6\u7c7b\u4e0a\u7684\u6ce8\u89e3\u4fe1\u606f AnnotationMetadata annotationMetadata = metadataReader.getAnnotationMetadata(); for (String annotationType : annotationMetadata.getAnnotationTypes()) { System.out.println(annotationType); } } } \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cSimpleMetadataReader\u53bb\u89e3\u6790\u7c7b\u65f6\uff0c\u4f7f\u7528\u7684ASM\u6280\u672f\u3002 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528ASM\u6280\u672f\uff0cSpring\u542f\u52a8\u7684\u65f6\u5019\u9700\u8981\u53bb\u626b\u63cf\uff0c\u5982\u679c\u6307\u5b9a\u7684\u5305\u8def\u5f84\u6bd4\u8f83\u5bbd\u6cdb\uff0c\u90a3\u4e48\u626b\u63cf\u7684 \u7c7b\u662f\u975e\u5e38\u591a\u7684\uff0c\u90a3\u5982\u679c\u5728Spring\u542f\u52a8\u65f6\u5c31\u628a\u8fd9\u4e9b\u7c7b\u5168\u90e8\u52a0\u8f7d\u8fdbJVM\u4e86\uff0c\u8fd9\u6837\u4e0d\u592a\u597d\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86 ASM\u6280\u672f\u3002","title":"About"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/","text":"\u672c\u8282\u8bfe\u4f1a\u628aSpring\u4e2d\u6838\u5fc3\u77e5\u8bc6\u70b9\u90fd\u7ed9\u5927\u5bb6\u8fdb\u884c\u4e32\u8bb2\uff0c\u8ba9\u5927\u5bb6\u5bf9Spring\u7684\u5e95\u5c42\u6709\u4e00\u4e2a\u6574\u4f53\u7684\u5927\u81f4\u4e86\u89e3 \uff0c\u6bd4\u5982\uff1a Bean\u7684\u751f\u547d\u5468\u671f\u5e95\u5c42\u539f\u7406 \u4f9d\u8d56\u6ce8\u5165\u5e95\u5c42\u539f\u7406 \u521d\u59cb\u5316\u5e95\u5c42\u539f\u7406 \u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u5e95\u5c42\u539f\u7406 AOP\u5e95\u5c42\u539f\u7406 Spring\u4e8b\u52a1\u5e95\u5c42\u539f\u7406 \u4f46\u90fd\u53ea\u662f\u5927\u81f4\u6d41\u7a0b\uff0c \u540e\u7eed\u4f1a\u9488\u5bf9\u6bcf\u4e2a\u6d41\u7a0b\u8be6\u7ec6\u6df1\u5165\u7684\u8bb2\u89e3\u5e76\u5206\u6790\u6e90\u7801\u5b9e\u73b0 \u3002 \u5148\u6765\u770b\u770b\u5165\u95e8\u4f7f\u7528Spring\u7684\u4ee3\u7801\uff1a ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring.xml\"); UserService userService = (UserService) context.getBean(\"userService\"); userService.test(); \u5bf9\u4e8e\u8fd9\u4e09\u884c\u4ee3\u7801\u5e94\u8be5\uff0c\u5927\u90e8\u5206\u540c\u5b66\u5e94\u8be5\u90fd\u662f\u6bd4\u8f83\u719f\u6089\uff0c\u8fd9\u662f\u5b66\u4e60Spring\u7684hello world\u3002\u53ef\u662f\uff0c\u8fd9\u4e09\u884c\u4ee3\u7801\u5e95\u5c42\u90fd\u505a\u4e86\u4ec0\u4e48\uff0c\u6bd4\u5982\uff1a \u7b2c\u4e00\u884c\u4ee3\u7801\uff0c\u4f1a\u6784\u9020\u4e00\u4e2aClassPathXmlApplicationContext\u5bf9\u8c61\uff0cClassPathXmlApplicationContext\u8be5\u5982\u4f55\u7406\u89e3\uff0c\u8c03\u7528\u8be5\u6784\u9020\u65b9\u6cd5\u9664\u5f00\u4f1a\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd8\u4f1a\u505a\u54ea\u4e9b\u4e8b\u60c5\uff1f \u7b2c\u4e8c\u884c\u4ee3\u7801\uff0c\u4f1a\u8c03\u7528ClassPathXmlApplicationContext\u7684getBean\u65b9\u6cd5\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2aUserService\u5bf9\u8c61\uff0cgetBean()\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\u8fd4\u56de\u7684UserService\u5bf9\u8c61\u548c\u6211\u4eec\u81ea\u5df1\u76f4\u63a5new\u7684UserService\u5bf9\u8c61\u6709\u533a\u522b\u5417\uff1f \u7b2c\u4e09\u884c\u4ee3\u7801\uff0c\u5c31\u662f\u7b80\u5355\u7684\u8c03\u7528UserService\u7684test()\u65b9\u6cd5\uff0c\u4e0d\u96be\u7406\u89e3\u3002 \u5149\u770b\u8fd9\u4e09\u884c\u4ee3\u7801\uff0c\u5176\u5b9e \u5e76\u4e0d\u80fd\u4f53\u73b0\u51fa\u6765Spring\u7684\u5f3a\u5927\u4e4b\u5904 \uff0c\u4e5f\u4e0d\u80fd\u7406\u89e3\u4e3a\u4ec0\u4e48\u9700\u8981ClassPathXmlApplicationContext\u548cgetBean()\u65b9\u6cd5\uff0c\u968f\u7740\u8bfe\u7a0b\u7684\u6df1\u5165\u5c06\u4f1a\u6539\u53d8\u4f60\u6b64\u65f6\u7684\u89c2\u5ff5\uff0c\u800c\u5bf9\u4e8e\u4e0a\u9762\u7684\u8fd9\u4e9b\u7591\u95ee\uff0c\u4e5f\u4f1a\u968f\u7740\u8bfe\u7a0b\u6df1\u5165\u9010\u6b65\u5f97\u5230\u89e3\u51b3\u3002\u5bf9\u4e8e\u8fd9\u4e09\u884c\u4ee3\u7801\uff0c\u4f60\u73b0\u5728\u53ef\u4ee5\u8ba4\u4e3a\uff1a\u5982\u679c\u4f60\u8981\u7528Spring\uff0c\u4f60\u5c31\u5f97\u8fd9\u4e48\u5199\u3002\u5c31\u50cf\u4f60\u8981\u7528Mybatis\uff0c\u4f60\u5c31\u5f97\u5199\u5404\u79cdMapper\u63a5\u53e3\u3002 \u200b \u4f46\u662f\u7528ClassPathXmlApplicationContext\u5176\u5b9e\u5df2\u7ecf\u8fc7\u65f6\u4e86\uff0c\u5728\u65b0\u7248\u7684Spring MVC\u548cSpring Boot\u7684\u5e95\u5c42\u4e3b\u8981\u7528\u7684\u90fd\u662f AnnotationConfigApplicationContext \uff0c\u6bd4\u5982\uff1a AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class); //ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring.xml\"); UserService userService = (UserService) context.getBean(\"userService\"); userService.test(); \u53ef\u4ee5\u770b\u5230AnnotationConfigApplicationContext\u7684\u7528\u6cd5\u548cClassPathXmlApplicationContext\u662f\u975e\u5e38\u7c7b\u4f3c\u7684\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981\u4f20\u5165\u7684\u662f\u4e00\u4e2aclass\uff0c\u800c\u4e0d\u662f\u4e00\u4e2axml\u6587\u4ef6\u3002 \u800cAppConfig.class\u548cspring.xml\u4e00\u6837\uff0c\u8868\u793aSpring\u7684\u914d\u7f6e\uff0c\u6bd4\u5982\u53ef\u4ee5\u6307\u5b9a\u626b\u63cf\u8def\u5f84\uff0c\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4e49Bean\uff0c\u6bd4\u5982\uff1a \u200b spring.xml\u4e2d\u7684\u5185\u5bb9\u4e3a\uff1a <context:component-scan base-package=\"com.zhouyu\"/> <bean id=\"userService\" class=\"com.zhouyu.service.UserService\"/> AppConfig\u4e2d\u7684\u5185\u5bb9\u4e3a\uff1a @ComponentScan(\"com.zhouyu\") public class AppConfig { @Bean public UserService userService(){ return new UserService(); } } \u6240\u4ee5spring.xml\u548cAppConfig.class\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\u3002 \u200b \u76ee\u524d\uff0c\u6211\u4eec\u57fa\u672c\u5f88\u5c11\u76f4\u63a5\u4f7f\u7528\u4e0a\u9762\u8fd9\u79cd\u65b9\u5f0f\u6765\u7528Spring\uff0c\u800c\u662f\u4f7f\u7528Spring MVC\uff0c\u6216\u8005Spring Boot\uff0c\u4f46\u662f\u5b83\u4eec\u90fd\u662f\u57fa\u4e8e\u4e0a\u9762\u8fd9\u79cd\u65b9\u5f0f\u7684\uff0c\u90fd\u9700\u8981\u5728\u5185\u90e8\u53bb\u521b\u5efa\u4e00\u4e2aApplicationContext\u7684\uff0c\u53ea\u4e0d\u8fc7\uff1a Spring MVC\u521b\u5efa\u7684\u662f XmlWebApplicationContext \uff0c\u548c ClassPathXmlApplicationContext \u7c7b\u4f3c\uff0c\u90fd\u662f\u57fa\u4e8eXML\u914d\u7f6e\u7684 Spring Boot\u521b\u5efa\u7684\u662f AnnotationConfigApplicationContext \u56e0\u4e3aAnnotationConfigApplicationContext\u662f\u6bd4\u8f83\u91cd\u8981\u7684\uff0c\u5e76\u4e14AnnotationConfigApplicationContext\u548cClassPathXmlApplicationContext\u5927\u90e8\u5206\u5e95\u5c42\u90fd\u662f\u5171\u540c\u7684\uff0c\u540e\u7eed\u8bfe\u7a0b\u6211\u4eec\u4f1a\u7740\u91cd\u5c06AnnotationConfigApplicationContext\u7684\u5e95\u5c42\u5b9e\u73b0\uff0c\u5bf9\u4e8eClassPathXmlApplicationContext\uff0c\u540c\u5b66\u4eec\u53ef\u4ee5\u5728\u8bfe\u7a0b\u7ed3\u675f\u540e\u4f5c\u4e3a\u4f5c\u4e1a\uff0c\u4e1a\u4f59\u65f6\u95f4\u770b\u770b\u76f8\u5173\u6e90\u7801\u5373\u53ef\u3002 Spring\u4e2d\u662f\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff1f \u5176\u5b9e\u4e0d\u7ba1\u662fAnnotationConfigApplicationContext\u8fd8\u662fClassPathXmlApplicationContext\uff0c\u76ee\u524d\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u7b80\u5355\u7684\u5c06\u5b83\u4eec\u7406\u89e3\u4e3a\u5c31\u662f\u7528\u6765\u521b\u5efaJava\u5bf9\u8c61\u7684\uff0c\u6bd4\u5982\u8c03\u7528getBean()\u5c31\u4f1a\u53bb\u521b\u5efa\u5bf9\u8c61\uff08\u6b64\u5904\u4e0d\u4e25\u8c28\uff0cgetBean\u53ef\u80fd\u4e5f\u4e0d\u4f1a\u53bb\u521b\u5efa\u5bf9\u8c61\uff0c\u540e\u7eed\u8bfe\u7a0b\u8be6\u89e3\uff09\u3002 \u200b \u5728Java\u8bed\u8a00\u4e2d\uff0c\u80af\u5b9a\u662f\u6839\u636e\u67d0\u4e2a\u7c7b\u6765\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u7684\u3002\u6211\u4eec\u5728\u770b\u4e00\u4e0b\u5b9e\u4f8b\u4ee3\u7801\uff1a AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class); UserService userService = (UserService) context.getBean(\"userService\"); userService.test(); \u5f53\u6211\u4eec\u8c03\u7528context.getBean(\"userService\")\u65f6\uff0c\u5c31\u4f1a\u53bb\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662fgetBean\u65b9\u6cd5\u5185\u90e8\u600e\u4e48\u77e5\u9053\"userService\"\u5bf9\u5e94\u7684\u662fUserService\u7c7b\u5462\uff1f \u200b \u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5206\u6790\u51fa\u6765\uff0c\u5728\u8c03\u7528AnnotationConfigApplicationContext\u7684\u6784\u9020\u65b9\u6cd5\u65f6\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u884c\u4ee3\u7801\uff0c\u4f1a\u53bb\u505a\u4e00\u4e9b\u4e8b\u60c5\uff1a \u89e3\u6790AppConfig.class\uff0c\u5f97\u5230\u626b\u63cf\u8def\u5f84 \u904d\u5386\u626b\u63cf\u8def\u5f84\u4e0b\u7684\u6240\u6709Java\u7c7b\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u7c7b\u4e0a\u5b58\u5728@Component\u3001@Service\u7b49\u6ce8\u89e3\uff0c\u90a3\u4e48Spring\u5c31\u628a\u8fd9\u4e2a\u7c7b\u8bb0\u5f55\u4e0b\u6765\uff0c\u5b58\u5728\u4e00\u4e2aMap\u4e2d\uff0c\u6bd4\u5982Map \u3002\uff08 \u5b9e\u9645\u4e0a\uff0cSpring\u6e90\u7801\u4e2d\u786e\u5b9e\u5b58\u5728\u7c7b\u4f3c\u7684\u8fd9\u4e48\u4e00\u4e2aMap\uff0c\u53eb\u505aBeanDefinitionMap\uff0c\u540e\u7eed\u8bfe\u7a0b\u4f1a\u8bb2\u5230 \uff09 Spring\u4f1a\u6839\u636e\u67d0\u4e2a\u89c4\u5219\u751f\u6210\u5f53\u524d\u7c7b\u5bf9\u5e94\u7684beanName\uff0c\u4f5c\u4e3akey\u5b58\u5165Map\uff0c\u5f53\u524d\u7c7b\u4f5c\u4e3avalue \u8fd9\u6837\uff0c\u4f46\u8c03\u7528context.getBean(\"userService\")\u65f6\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\"userService\"\u627e\u5230UserService\u7c7b\uff0c\u4ece\u800c\u5c31\u53ef\u4ee5\u53bb\u521b\u5efa\u5bf9\u8c61\u4e86\u3002 \u200b Bean\u7684\u521b\u5efa\u8fc7\u7a0b \u90a3\u4e48Spring\u5230\u5e95\u662f\u5982\u4f55\u6765\u521b\u5efa\u4e00\u4e2aBean\u7684\u5462\uff0c\u8fd9\u4e2a\u5c31\u662fBean\u521b\u5efa\u7684\u751f\u547d\u5468\u671f\uff0c\u5927\u81f4\u8fc7\u7a0b\u5982\u4e0b \u5229\u7528\u8be5\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6765\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff08\u4f46\u662f\u5982\u4f55\u4e00\u4e2a\u7c7b\u4e2d\u6709\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u5219\u4f1a\u8fdb\u884c\u9009\u62e9\uff0c\u8fd9\u4e2a\u53eb\u505a \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \uff09 \u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u4e2d\u662f\u5426\u5b58\u5728\u88ab@Autowired\u6ce8\u89e3\u4e86\u7684\u5c5e\u6027\uff0c\u628a\u8fd9\u4e9b\u5c5e\u6027\u627e\u51fa\u6765\u5e76\u7531Spring\u8fdb\u884c\u8d4b\u503c\uff08 \u4f9d\u8d56\u6ce8\u5165 \uff09 \u4f9d\u8d56\u6ce8\u5165\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86BeanNameAware\u63a5\u53e3\u3001BeanClassLoaderAware\u63a5\u53e3\u3001BeanFactoryAware\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\uff0c\u5c31\u8868\u793a\u5f53\u524d\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u8be5\u63a5\u53e3\u4e2d\u6240\u5b9a\u4e49\u7684setBeanName()\u3001setBeanClassLoader()\u3001setBeanFactory()\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\u5e76\u4f20\u5165\u76f8\u5e94\u7684\u53c2\u6570\uff08 Aware\u56de\u8c03 \uff09 Aware\u56de\u8c03\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u65b9\u6cd5\u88ab@PostConstruct\u6ce8\u89e3\u4e86\uff0c\u5982\u679c\u5b58\u5728\uff0cSpring\u4f1a\u8c03\u7528\u5f53\u524d\u5bf9\u8c61\u7684\u6b64\u65b9\u6cd5\uff08 \u521d\u59cb\u5316\u524d \uff09 \u7d27\u63a5\u7740\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86InitializingBean\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\uff0c\u5c31\u8868\u793a\u5f53\u524d\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u8be5\u63a5\u53e3\u4e2d\u7684afterPropertiesSet()\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u8c03\u7528\u5f53\u524d\u5bf9\u8c61\u4e2d\u7684afterPropertiesSet()\u65b9\u6cd5\uff08 \u521d\u59cb\u5316 \uff09 \u6700\u540e\uff0cSpring\u4f1a\u5224\u65ad\u5f53\u524d\u5bf9\u8c61\u9700\u4e0d\u9700\u8981\u8fdb\u884cAOP\uff0c\u5982\u679c\u4e0d\u9700\u8981\u90a3\u4e48Bean\u5c31\u521b\u5efa\u5b8c\u4e86\uff0c\u5982\u679c\u9700\u8981\u8fdb\u884cAOP\uff0c\u5219\u4f1a\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\u5e76\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u505a\u4e3aBean\uff08 \u521d\u59cb\u5316\u540e \uff09 \u901a\u8fc7\u6700\u540e\u4e00\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53Spring\u6839\u636eUserService\u7c7b\u6765\u521b\u5efa\u4e00\u4e2aBean\u65f6\uff1a \u5982\u679c\u4e0d\u7528\u8fdb\u884cAOP\uff0c\u90a3\u4e48Bean\u5c31\u662fUserService\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6240\u5f97\u5230\u7684\u5bf9\u8c61\u3002 \u5982\u679c\u9700\u8981\u8fdb\u884cAOP\uff0c\u90a3\u4e48Bean\u5c31\u662fUserService\u7684\u4ee3\u7406\u7c7b\u6240\u5b9e\u4f8b\u5316\u5f97\u5230\u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u662fUserService\u672c\u8eab\u6240\u5f97\u5230\u7684\u5bf9\u8c61\u3002 Bean\u5bf9\u8c61\u521b\u5efa\u51fa\u6765\u540e\uff1a \u5982\u679c\u5f53\u524dBean\u662f\u5355\u4f8bBean\uff0c\u90a3\u4e48\u4f1a\u628a\u8be5Bean\u5bf9\u8c61\u5b58\u5165\u4e00\u4e2aMap \uff0cMap\u7684key\u4e3abeanName\uff0cvalue\u4e3aBean\u5bf9\u8c61\u3002\u8fd9\u6837\u4e0b\u6b21getBean\u65f6\u5c31\u53ef\u4ee5\u76f4\u63a5\u4eceMap\u4e2d\u62ff\u5230\u5bf9\u5e94\u7684Bean\u5bf9\u8c61\u4e86\u3002\uff08\u5b9e\u9645\u4e0a\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u8fd9\u4e2aMap\u5c31\u662f \u5355\u4f8b\u6c60 \uff09 \u5982\u679c\u5f53\u524dBean\u662f\u539f\u578bBean\uff0c\u90a3\u4e48\u540e\u7eed\u6ca1\u6709\u5176\u4ed6\u52a8\u4f5c\uff0c\u4e0d\u4f1a\u5b58\u5165\u4e00\u4e2aMap\uff0c\u4e0b\u6b21getBean\u65f6\u4f1a\u518d\u6b21\u6267\u884c\u4e0a\u8ff0\u521b\u5efa\u8fc7\u7a0b\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u7684Bean\u5bf9\u8c61\u3002 \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 Spring\u5728\u57fa\u4e8e\u67d0\u4e2a\u7c7b\u751f\u6210Bean\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5229\u7528\u8be5\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6765\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662f \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u4f1a\u4f7f\u7528\u54ea\u4e2a\u5462\uff1f \u200b Spring\u7684\u5224\u65ad\u903b\u8f91\u5982\u4e0b\uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u53ea\u5b58\u5728\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u4e0d\u7ba1\u8be5\u6784\u9020\u65b9\u6cd5\u662f\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u8fd8\u662f\u6709\u53c2\u6784\u9020\u65b9\u6cd5\uff0cSpring\u90fd\u4f1a\u7528\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5 \u8fd9\u4e9b\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u5b58\u5728\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48Spring\u5c31\u4f1a\u7528\u8fd9\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5 \u8fd9\u4e9b\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u4e0d\u5b58\u5728\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48Spring\u5c31\u4f1a \u62a5\u9519 Spring\u7684\u8bbe\u8ba1\u601d\u60f3\u662f\u8fd9\u6837\u7684\uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u6ca1\u5f97\u9009\u62e9\uff0c\u53ea\u80fd\u7528\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u4e0d\u77e5\u9053\u5982\u4f55\u9009\u62e9\uff0c\u5c31\u4f1a\u770b\u662f\u5426\u6709\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u56e0\u4e3a\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u672c\u8eab\u8868\u793a\u4e86\u4e00\u79cd\u9ed8\u8ba4\u7684\u610f\u4e49 \u4e0d\u8fc7\u5982\u679c\u67d0\u4e2a\u6784\u9020\u65b9\u6cd5\u4e0a\u52a0\u4e86@Autowired\u6ce8\u89e3\uff0c\u90a3\u5c31\u8868\u793a\u7a0b\u5e8f\u5458\u544a\u8bc9Spring\u5c31\u7528\u8fd9\u4e2a\u52a0\u4e86\u6ce8\u89e3\u7684\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u7528\u8fd9\u4e2a\u52a0\u4e86@Autowired\u6ce8\u89e3\u6784\u9020\u65b9\u6cd5\u4e86 \u9700\u8981\u91cd\u89c6\u7684\u662f\uff0c\u5982\u679cSpring\u9009\u62e9\u4e86\u4e00\u4e2a\u6709\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0cSpring\u5728\u8c03\u7528\u8fd9\u4e2a\u6709\u53c2\u6784\u9020\u65b9\u6cd5\u65f6\uff0c\u9700\u8981\u4f20\u5165\u53c2\u6570\uff0c\u90a3\u8fd9\u4e2a\u53c2\u6570\u662f\u600e\u4e48\u6765\u7684\u5462\uff1f \u200b Spring\u4f1a\u6839\u636e\u5165\u53c2\u7684\u7c7b\u578b\u548c\u5165\u53c2\u7684\u540d\u5b57\u53bbSpring\u4e2d\u627eBean\u5bf9\u8c61\uff08\u4ee5\u5355\u4f8bBean\u4e3a\u4f8b\uff0cSpring\u4f1a\u4ece\u5355\u4f8b\u6c60\u90a3\u4e2aMap\u4e2d\u53bb\u627e\uff09\uff1a \u5148\u6839\u636e\u5165\u53c2\u7c7b\u578b\u627e\uff0c\u5982\u679c\u53ea\u627e\u5230\u4e00\u4e2a\uff0c\u90a3\u5c31\u76f4\u63a5\u7528\u6765\u4f5c\u4e3a\u5165\u53c2 \u5982\u679c\u6839\u636e\u7c7b\u578b\u627e\u5230\u591a\u4e2a\uff0c\u5219\u518d\u6839\u636e\u5165\u53c2\u540d\u5b57\u6765\u786e\u5b9a\u552f\u4e00\u4e00\u4e2a \u6700\u7ec8\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5219\u4f1a\u62a5\u9519\uff0c\u65e0\u6cd5\u521b\u5efa\u5f53\u524dBean\u5bf9\u8c61 \u786e\u5b9a\u7528\u54ea\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u786e\u5b9a\u5165\u53c2\u7684Bean\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u53eb\u505a \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \u3002 \u200b AOP\u5927\u81f4\u6d41\u7a0b AOP\u5c31\u662f\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\uff0c\u5728\u521b\u5efa\u4e00\u4e2aBean\u7684\u8fc7\u7a0b\u4e2d\uff0cSpring\u5728\u6700\u540e\u4e00\u6b65\u4f1a\u53bb\u5224\u65ad\u5f53\u524d\u6b63\u5728\u521b\u5efa\u7684\u8fd9\u4e2aBean\u662f\u4e0d\u662f\u9700\u8981\u8fdb\u884cAOP\uff0c\u5982\u679c\u9700\u8981\u5219\u4f1a\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\u3002 \u200b \u5982\u4f55\u5224\u65ad\u5f53\u524dBean\u5bf9\u8c61\u9700\u4e0d\u9700\u8981\u8fdb\u884cAOP: \u627e\u51fa\u6240\u6709\u7684\u5207\u9762Bean \u904d\u5386\u5207\u9762\u4e2d\u7684\u6bcf\u4e2a\u65b9\u6cd5\uff0c\u770b\u662f\u5426\u5199\u4e86@Before\u3001@After\u7b49\u6ce8\u89e3 \u5982\u679c\u5199\u4e86\uff0c\u5219\u5224\u65ad\u6240\u5bf9\u5e94\u7684Pointcut\u662f\u5426\u548c\u5f53\u524dBean\u5bf9\u8c61\u7684\u7c7b\u662f\u5426\u5339\u914d \u5982\u679c\u5339\u914d\u5219\u8868\u793a\u5f53\u524dBean\u5bf9\u8c61\u6709\u5339\u914d\u7684\u7684Pointcut\uff0c\u8868\u793a\u9700\u8981\u8fdb\u884cAOP \u5229\u7528cglib\u8fdb\u884cAOP\u7684\u5927\u81f4\u6d41\u7a0b\uff1a \u751f\u6210\u4ee3\u7406\u7c7bUserServiceProxy\uff0c\u4ee3\u7406\u7c7b\u7ee7\u627fUserService \u4ee3\u7406\u7c7b\u4e2d\u91cd\u5199\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982UserService\u4e2d\u7684test()\u65b9\u6cd5 \u4ee3\u7406\u7c7b\u4e2d\u8fd8\u4f1a\u6709\u4e00\u4e2atarget\u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u7684\u503c\u4e3a\u88ab\u4ee3\u7406\u5bf9\u8c61\uff08\u4e5f\u5c31\u662f\u901a\u8fc7UserService\u7c7b\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316\u51fa\u6765\u7684\u5bf9\u8c61\uff0c\u8fdb\u884c\u4e86\u4f9d\u8d56\u6ce8\u5165\u3001\u521d\u59cb\u5316\u7b49\u6b65\u9aa4\u7684\u5bf9\u8c61\uff09 \u4ee3\u7406\u7c7b\u4e2d\u7684test()\u65b9\u6cd5\u88ab\u6267\u884c\u65f6\u7684\u903b\u8f91\u5982\u4e0b\uff1a \u6267\u884c\u5207\u9762\u903b\u8f91\uff08@Before\uff09 \u8c03\u7528target.test() \u5f53\u6211\u4eec\u4eceSpring\u5bb9\u5668\u5f97\u5230UserService\u7684Bean\u5bf9\u8c61\u65f6\uff0c\u62ff\u5230\u7684\u5c31\u662fUserServiceProxy\u6240\u751f\u6210\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b UserService\u4ee3\u7406\u5bf9\u8c61.test()--->\u6267\u884c\u5207\u9762\u903b\u8f91--->target.test()\uff0c\u6ce8\u610ftarget\u5bf9\u8c61\u4e0d\u662f\u4ee3\u7406\u5bf9\u8c61\uff0c\u800c\u662f\u88ab\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b Spring\u4e8b\u52a1 \u5f53\u6211\u4eec\u5728\u67d0\u4e2a\u65b9\u6cd5\u4e0a\u52a0\u4e86@Transactional\u6ce8\u89e3\u540e\uff0c\u5c31\u8868\u793a\u8be5\u65b9\u6cd5\u5728\u8c03\u7528\u65f6\u4f1a\u5f00\u542fSpring\u4e8b\u52a1\uff0c\u800c\u8fd9\u4e2a\u65b9\u6cd5\u6240\u5728\u7684\u7c7b\u6240\u5bf9\u5e94\u7684Bean\u5bf9\u8c61\u4f1a\u662f\u8be5\u7c7b\u7684\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b Spring\u4e8b\u52a1\u7684\u4ee3\u7406\u5bf9\u8c61\u6267\u884c\u67d0\u4e2a\u65b9\u6cd5\u65f6\u7684\u6b65\u9aa4\uff1a \u5224\u65ad\u5f53\u524d\u6267\u884c\u7684\u65b9\u6cd5\u662f\u5426\u5b58\u5728@Transactional\u6ce8\u89e3 \u5982\u679c\u5b58\u5728\uff0c\u5219\u5229\u7528\u4e8b\u52a1\u7ba1\u7406\u5668\uff08TransactionMananger\uff09\u65b0\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5 \u4fee\u6539\u6570\u636e\u5e93\u8fde\u63a5\u7684autocommit\u4e3afalse \u6267\u884ctarget.test()\uff0c\u6267\u884c\u7a0b\u5e8f\u5458\u6240\u5199\u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u6267\u884csql \u6267\u884c\u5b8c\u4e86\u4e4b\u540e\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u5f02\u5e38\uff0c\u5219\u63d0\u4ea4\uff0c\u5426\u5219\u56de\u6eda Spring\u4e8b\u52a1\u662f\u5426\u4f1a\u5931\u6548\u7684\u5224\u65ad\u6807\u51c6\uff1a \u67d0\u4e2a\u52a0\u4e86@Transactional\u6ce8\u89e3\u7684\u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\uff0c\u8981\u5224\u65ad\u5230\u5e95\u662f\u4e0d\u662f\u76f4\u63a5\u88ab\u4ee3\u7406\u5bf9\u8c61\u8c03\u7528\u7684\uff0c\u5982\u679c\u662f\u5219\u4e8b\u52a1\u4f1a\u751f\u6548\uff0c\u5982\u679c\u4e0d\u662f\u5219\u5931\u6548\u3002","title":"1.Spring\u6838\u5fc3\u77e5\u8bc6\u70b9"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/#spring","text":"\u5176\u5b9e\u4e0d\u7ba1\u662fAnnotationConfigApplicationContext\u8fd8\u662fClassPathXmlApplicationContext\uff0c\u76ee\u524d\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u7b80\u5355\u7684\u5c06\u5b83\u4eec\u7406\u89e3\u4e3a\u5c31\u662f\u7528\u6765\u521b\u5efaJava\u5bf9\u8c61\u7684\uff0c\u6bd4\u5982\u8c03\u7528getBean()\u5c31\u4f1a\u53bb\u521b\u5efa\u5bf9\u8c61\uff08\u6b64\u5904\u4e0d\u4e25\u8c28\uff0cgetBean\u53ef\u80fd\u4e5f\u4e0d\u4f1a\u53bb\u521b\u5efa\u5bf9\u8c61\uff0c\u540e\u7eed\u8bfe\u7a0b\u8be6\u89e3\uff09\u3002 \u200b \u5728Java\u8bed\u8a00\u4e2d\uff0c\u80af\u5b9a\u662f\u6839\u636e\u67d0\u4e2a\u7c7b\u6765\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u7684\u3002\u6211\u4eec\u5728\u770b\u4e00\u4e0b\u5b9e\u4f8b\u4ee3\u7801\uff1a AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class); UserService userService = (UserService) context.getBean(\"userService\"); userService.test(); \u5f53\u6211\u4eec\u8c03\u7528context.getBean(\"userService\")\u65f6\uff0c\u5c31\u4f1a\u53bb\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662fgetBean\u65b9\u6cd5\u5185\u90e8\u600e\u4e48\u77e5\u9053\"userService\"\u5bf9\u5e94\u7684\u662fUserService\u7c7b\u5462\uff1f \u200b \u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5206\u6790\u51fa\u6765\uff0c\u5728\u8c03\u7528AnnotationConfigApplicationContext\u7684\u6784\u9020\u65b9\u6cd5\u65f6\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u884c\u4ee3\u7801\uff0c\u4f1a\u53bb\u505a\u4e00\u4e9b\u4e8b\u60c5\uff1a \u89e3\u6790AppConfig.class\uff0c\u5f97\u5230\u626b\u63cf\u8def\u5f84 \u904d\u5386\u626b\u63cf\u8def\u5f84\u4e0b\u7684\u6240\u6709Java\u7c7b\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u7c7b\u4e0a\u5b58\u5728@Component\u3001@Service\u7b49\u6ce8\u89e3\uff0c\u90a3\u4e48Spring\u5c31\u628a\u8fd9\u4e2a\u7c7b\u8bb0\u5f55\u4e0b\u6765\uff0c\u5b58\u5728\u4e00\u4e2aMap\u4e2d\uff0c\u6bd4\u5982Map \u3002\uff08 \u5b9e\u9645\u4e0a\uff0cSpring\u6e90\u7801\u4e2d\u786e\u5b9e\u5b58\u5728\u7c7b\u4f3c\u7684\u8fd9\u4e48\u4e00\u4e2aMap\uff0c\u53eb\u505aBeanDefinitionMap\uff0c\u540e\u7eed\u8bfe\u7a0b\u4f1a\u8bb2\u5230 \uff09 Spring\u4f1a\u6839\u636e\u67d0\u4e2a\u89c4\u5219\u751f\u6210\u5f53\u524d\u7c7b\u5bf9\u5e94\u7684beanName\uff0c\u4f5c\u4e3akey\u5b58\u5165Map\uff0c\u5f53\u524d\u7c7b\u4f5c\u4e3avalue \u8fd9\u6837\uff0c\u4f46\u8c03\u7528context.getBean(\"userService\")\u65f6\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\"userService\"\u627e\u5230UserService\u7c7b\uff0c\u4ece\u800c\u5c31\u53ef\u4ee5\u53bb\u521b\u5efa\u5bf9\u8c61\u4e86\u3002 \u200b","title":"Spring\u4e2d\u662f\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff1f"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/#bean","text":"\u90a3\u4e48Spring\u5230\u5e95\u662f\u5982\u4f55\u6765\u521b\u5efa\u4e00\u4e2aBean\u7684\u5462\uff0c\u8fd9\u4e2a\u5c31\u662fBean\u521b\u5efa\u7684\u751f\u547d\u5468\u671f\uff0c\u5927\u81f4\u8fc7\u7a0b\u5982\u4e0b \u5229\u7528\u8be5\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6765\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff08\u4f46\u662f\u5982\u4f55\u4e00\u4e2a\u7c7b\u4e2d\u6709\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u5219\u4f1a\u8fdb\u884c\u9009\u62e9\uff0c\u8fd9\u4e2a\u53eb\u505a \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \uff09 \u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u4e2d\u662f\u5426\u5b58\u5728\u88ab@Autowired\u6ce8\u89e3\u4e86\u7684\u5c5e\u6027\uff0c\u628a\u8fd9\u4e9b\u5c5e\u6027\u627e\u51fa\u6765\u5e76\u7531Spring\u8fdb\u884c\u8d4b\u503c\uff08 \u4f9d\u8d56\u6ce8\u5165 \uff09 \u4f9d\u8d56\u6ce8\u5165\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86BeanNameAware\u63a5\u53e3\u3001BeanClassLoaderAware\u63a5\u53e3\u3001BeanFactoryAware\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\uff0c\u5c31\u8868\u793a\u5f53\u524d\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u8be5\u63a5\u53e3\u4e2d\u6240\u5b9a\u4e49\u7684setBeanName()\u3001setBeanClassLoader()\u3001setBeanFactory()\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\u5e76\u4f20\u5165\u76f8\u5e94\u7684\u53c2\u6570\uff08 Aware\u56de\u8c03 \uff09 Aware\u56de\u8c03\u540e\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u65b9\u6cd5\u88ab@PostConstruct\u6ce8\u89e3\u4e86\uff0c\u5982\u679c\u5b58\u5728\uff0cSpring\u4f1a\u8c03\u7528\u5f53\u524d\u5bf9\u8c61\u7684\u6b64\u65b9\u6cd5\uff08 \u521d\u59cb\u5316\u524d \uff09 \u7d27\u63a5\u7740\uff0cSpring\u4f1a\u5224\u65ad\u8be5\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86InitializingBean\u63a5\u53e3\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\uff0c\u5c31\u8868\u793a\u5f53\u524d\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u8be5\u63a5\u53e3\u4e2d\u7684afterPropertiesSet()\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u8c03\u7528\u5f53\u524d\u5bf9\u8c61\u4e2d\u7684afterPropertiesSet()\u65b9\u6cd5\uff08 \u521d\u59cb\u5316 \uff09 \u6700\u540e\uff0cSpring\u4f1a\u5224\u65ad\u5f53\u524d\u5bf9\u8c61\u9700\u4e0d\u9700\u8981\u8fdb\u884cAOP\uff0c\u5982\u679c\u4e0d\u9700\u8981\u90a3\u4e48Bean\u5c31\u521b\u5efa\u5b8c\u4e86\uff0c\u5982\u679c\u9700\u8981\u8fdb\u884cAOP\uff0c\u5219\u4f1a\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\u5e76\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u505a\u4e3aBean\uff08 \u521d\u59cb\u5316\u540e \uff09 \u901a\u8fc7\u6700\u540e\u4e00\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53Spring\u6839\u636eUserService\u7c7b\u6765\u521b\u5efa\u4e00\u4e2aBean\u65f6\uff1a \u5982\u679c\u4e0d\u7528\u8fdb\u884cAOP\uff0c\u90a3\u4e48Bean\u5c31\u662fUserService\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6240\u5f97\u5230\u7684\u5bf9\u8c61\u3002 \u5982\u679c\u9700\u8981\u8fdb\u884cAOP\uff0c\u90a3\u4e48Bean\u5c31\u662fUserService\u7684\u4ee3\u7406\u7c7b\u6240\u5b9e\u4f8b\u5316\u5f97\u5230\u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u662fUserService\u672c\u8eab\u6240\u5f97\u5230\u7684\u5bf9\u8c61\u3002 Bean\u5bf9\u8c61\u521b\u5efa\u51fa\u6765\u540e\uff1a \u5982\u679c\u5f53\u524dBean\u662f\u5355\u4f8bBean\uff0c\u90a3\u4e48\u4f1a\u628a\u8be5Bean\u5bf9\u8c61\u5b58\u5165\u4e00\u4e2aMap \uff0cMap\u7684key\u4e3abeanName\uff0cvalue\u4e3aBean\u5bf9\u8c61\u3002\u8fd9\u6837\u4e0b\u6b21getBean\u65f6\u5c31\u53ef\u4ee5\u76f4\u63a5\u4eceMap\u4e2d\u62ff\u5230\u5bf9\u5e94\u7684Bean\u5bf9\u8c61\u4e86\u3002\uff08\u5b9e\u9645\u4e0a\uff0c\u5728Spring\u6e90\u7801\u4e2d\uff0c\u8fd9\u4e2aMap\u5c31\u662f \u5355\u4f8b\u6c60 \uff09 \u5982\u679c\u5f53\u524dBean\u662f\u539f\u578bBean\uff0c\u90a3\u4e48\u540e\u7eed\u6ca1\u6709\u5176\u4ed6\u52a8\u4f5c\uff0c\u4e0d\u4f1a\u5b58\u5165\u4e00\u4e2aMap\uff0c\u4e0b\u6b21getBean\u65f6\u4f1a\u518d\u6b21\u6267\u884c\u4e0a\u8ff0\u521b\u5efa\u8fc7\u7a0b\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u7684Bean\u5bf9\u8c61\u3002","title":"Bean\u7684\u521b\u5efa\u8fc7\u7a0b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/#_1","text":"Spring\u5728\u57fa\u4e8e\u67d0\u4e2a\u7c7b\u751f\u6210Bean\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5229\u7528\u8be5\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6765\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662f \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u4f1a\u4f7f\u7528\u54ea\u4e2a\u5462\uff1f \u200b Spring\u7684\u5224\u65ad\u903b\u8f91\u5982\u4e0b\uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u53ea\u5b58\u5728\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u4e0d\u7ba1\u8be5\u6784\u9020\u65b9\u6cd5\u662f\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u8fd8\u662f\u6709\u53c2\u6784\u9020\u65b9\u6cd5\uff0cSpring\u90fd\u4f1a\u7528\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5 \u8fd9\u4e9b\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u5b58\u5728\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48Spring\u5c31\u4f1a\u7528\u8fd9\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5 \u8fd9\u4e9b\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u4e0d\u5b58\u5728\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48Spring\u5c31\u4f1a \u62a5\u9519 Spring\u7684\u8bbe\u8ba1\u601d\u60f3\u662f\u8fd9\u6837\u7684\uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u90a3\u4e48\u6ca1\u5f97\u9009\u62e9\uff0c\u53ea\u80fd\u7528\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5 \u5982\u679c\u4e00\u4e2a\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0cSpring\u4e0d\u77e5\u9053\u5982\u4f55\u9009\u62e9\uff0c\u5c31\u4f1a\u770b\u662f\u5426\u6709\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u56e0\u4e3a\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u672c\u8eab\u8868\u793a\u4e86\u4e00\u79cd\u9ed8\u8ba4\u7684\u610f\u4e49 \u4e0d\u8fc7\u5982\u679c\u67d0\u4e2a\u6784\u9020\u65b9\u6cd5\u4e0a\u52a0\u4e86@Autowired\u6ce8\u89e3\uff0c\u90a3\u5c31\u8868\u793a\u7a0b\u5e8f\u5458\u544a\u8bc9Spring\u5c31\u7528\u8fd9\u4e2a\u52a0\u4e86\u6ce8\u89e3\u7684\u65b9\u6cd5\uff0c\u90a3Spring\u5c31\u4f1a\u7528\u8fd9\u4e2a\u52a0\u4e86@Autowired\u6ce8\u89e3\u6784\u9020\u65b9\u6cd5\u4e86 \u9700\u8981\u91cd\u89c6\u7684\u662f\uff0c\u5982\u679cSpring\u9009\u62e9\u4e86\u4e00\u4e2a\u6709\u53c2\u7684\u6784\u9020\u65b9\u6cd5\uff0cSpring\u5728\u8c03\u7528\u8fd9\u4e2a\u6709\u53c2\u6784\u9020\u65b9\u6cd5\u65f6\uff0c\u9700\u8981\u4f20\u5165\u53c2\u6570\uff0c\u90a3\u8fd9\u4e2a\u53c2\u6570\u662f\u600e\u4e48\u6765\u7684\u5462\uff1f \u200b Spring\u4f1a\u6839\u636e\u5165\u53c2\u7684\u7c7b\u578b\u548c\u5165\u53c2\u7684\u540d\u5b57\u53bbSpring\u4e2d\u627eBean\u5bf9\u8c61\uff08\u4ee5\u5355\u4f8bBean\u4e3a\u4f8b\uff0cSpring\u4f1a\u4ece\u5355\u4f8b\u6c60\u90a3\u4e2aMap\u4e2d\u53bb\u627e\uff09\uff1a \u5148\u6839\u636e\u5165\u53c2\u7c7b\u578b\u627e\uff0c\u5982\u679c\u53ea\u627e\u5230\u4e00\u4e2a\uff0c\u90a3\u5c31\u76f4\u63a5\u7528\u6765\u4f5c\u4e3a\u5165\u53c2 \u5982\u679c\u6839\u636e\u7c7b\u578b\u627e\u5230\u591a\u4e2a\uff0c\u5219\u518d\u6839\u636e\u5165\u53c2\u540d\u5b57\u6765\u786e\u5b9a\u552f\u4e00\u4e00\u4e2a \u6700\u7ec8\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5219\u4f1a\u62a5\u9519\uff0c\u65e0\u6cd5\u521b\u5efa\u5f53\u524dBean\u5bf9\u8c61 \u786e\u5b9a\u7528\u54ea\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u786e\u5b9a\u5165\u53c2\u7684Bean\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u53eb\u505a \u63a8\u65ad\u6784\u9020\u65b9\u6cd5 \u3002 \u200b","title":"\u63a8\u65ad\u6784\u9020\u65b9\u6cd5"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/#aop","text":"AOP\u5c31\u662f\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\uff0c\u5728\u521b\u5efa\u4e00\u4e2aBean\u7684\u8fc7\u7a0b\u4e2d\uff0cSpring\u5728\u6700\u540e\u4e00\u6b65\u4f1a\u53bb\u5224\u65ad\u5f53\u524d\u6b63\u5728\u521b\u5efa\u7684\u8fd9\u4e2aBean\u662f\u4e0d\u662f\u9700\u8981\u8fdb\u884cAOP\uff0c\u5982\u679c\u9700\u8981\u5219\u4f1a\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\u3002 \u200b \u5982\u4f55\u5224\u65ad\u5f53\u524dBean\u5bf9\u8c61\u9700\u4e0d\u9700\u8981\u8fdb\u884cAOP: \u627e\u51fa\u6240\u6709\u7684\u5207\u9762Bean \u904d\u5386\u5207\u9762\u4e2d\u7684\u6bcf\u4e2a\u65b9\u6cd5\uff0c\u770b\u662f\u5426\u5199\u4e86@Before\u3001@After\u7b49\u6ce8\u89e3 \u5982\u679c\u5199\u4e86\uff0c\u5219\u5224\u65ad\u6240\u5bf9\u5e94\u7684Pointcut\u662f\u5426\u548c\u5f53\u524dBean\u5bf9\u8c61\u7684\u7c7b\u662f\u5426\u5339\u914d \u5982\u679c\u5339\u914d\u5219\u8868\u793a\u5f53\u524dBean\u5bf9\u8c61\u6709\u5339\u914d\u7684\u7684Pointcut\uff0c\u8868\u793a\u9700\u8981\u8fdb\u884cAOP \u5229\u7528cglib\u8fdb\u884cAOP\u7684\u5927\u81f4\u6d41\u7a0b\uff1a \u751f\u6210\u4ee3\u7406\u7c7bUserServiceProxy\uff0c\u4ee3\u7406\u7c7b\u7ee7\u627fUserService \u4ee3\u7406\u7c7b\u4e2d\u91cd\u5199\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982UserService\u4e2d\u7684test()\u65b9\u6cd5 \u4ee3\u7406\u7c7b\u4e2d\u8fd8\u4f1a\u6709\u4e00\u4e2atarget\u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u7684\u503c\u4e3a\u88ab\u4ee3\u7406\u5bf9\u8c61\uff08\u4e5f\u5c31\u662f\u901a\u8fc7UserService\u7c7b\u63a8\u65ad\u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316\u51fa\u6765\u7684\u5bf9\u8c61\uff0c\u8fdb\u884c\u4e86\u4f9d\u8d56\u6ce8\u5165\u3001\u521d\u59cb\u5316\u7b49\u6b65\u9aa4\u7684\u5bf9\u8c61\uff09 \u4ee3\u7406\u7c7b\u4e2d\u7684test()\u65b9\u6cd5\u88ab\u6267\u884c\u65f6\u7684\u903b\u8f91\u5982\u4e0b\uff1a \u6267\u884c\u5207\u9762\u903b\u8f91\uff08@Before\uff09 \u8c03\u7528target.test() \u5f53\u6211\u4eec\u4eceSpring\u5bb9\u5668\u5f97\u5230UserService\u7684Bean\u5bf9\u8c61\u65f6\uff0c\u62ff\u5230\u7684\u5c31\u662fUserServiceProxy\u6240\u751f\u6210\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b UserService\u4ee3\u7406\u5bf9\u8c61.test()--->\u6267\u884c\u5207\u9762\u903b\u8f91--->target.test()\uff0c\u6ce8\u610ftarget\u5bf9\u8c61\u4e0d\u662f\u4ee3\u7406\u5bf9\u8c61\uff0c\u800c\u662f\u88ab\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b","title":"AOP\u5927\u81f4\u6d41\u7a0b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/#spring_1","text":"\u5f53\u6211\u4eec\u5728\u67d0\u4e2a\u65b9\u6cd5\u4e0a\u52a0\u4e86@Transactional\u6ce8\u89e3\u540e\uff0c\u5c31\u8868\u793a\u8be5\u65b9\u6cd5\u5728\u8c03\u7528\u65f6\u4f1a\u5f00\u542fSpring\u4e8b\u52a1\uff0c\u800c\u8fd9\u4e2a\u65b9\u6cd5\u6240\u5728\u7684\u7c7b\u6240\u5bf9\u5e94\u7684Bean\u5bf9\u8c61\u4f1a\u662f\u8be5\u7c7b\u7684\u4ee3\u7406\u5bf9\u8c61\u3002 \u200b Spring\u4e8b\u52a1\u7684\u4ee3\u7406\u5bf9\u8c61\u6267\u884c\u67d0\u4e2a\u65b9\u6cd5\u65f6\u7684\u6b65\u9aa4\uff1a \u5224\u65ad\u5f53\u524d\u6267\u884c\u7684\u65b9\u6cd5\u662f\u5426\u5b58\u5728@Transactional\u6ce8\u89e3 \u5982\u679c\u5b58\u5728\uff0c\u5219\u5229\u7528\u4e8b\u52a1\u7ba1\u7406\u5668\uff08TransactionMananger\uff09\u65b0\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5 \u4fee\u6539\u6570\u636e\u5e93\u8fde\u63a5\u7684autocommit\u4e3afalse \u6267\u884ctarget.test()\uff0c\u6267\u884c\u7a0b\u5e8f\u5458\u6240\u5199\u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u6267\u884csql \u6267\u884c\u5b8c\u4e86\u4e4b\u540e\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u5f02\u5e38\uff0c\u5219\u63d0\u4ea4\uff0c\u5426\u5219\u56de\u6eda Spring\u4e8b\u52a1\u662f\u5426\u4f1a\u5931\u6548\u7684\u5224\u65ad\u6807\u51c6\uff1a \u67d0\u4e2a\u52a0\u4e86@Transactional\u6ce8\u89e3\u7684\u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\uff0c\u8981\u5224\u65ad\u5230\u5e95\u662f\u4e0d\u662f\u76f4\u63a5\u88ab\u4ee3\u7406\u5bf9\u8c61\u8c03\u7528\u7684\uff0c\u5982\u679c\u662f\u5219\u4e8b\u52a1\u4f1a\u751f\u6548\uff0c\u5982\u679c\u4e0d\u662f\u5219\u5931\u6548\u3002","title":"Spring\u4e8b\u52a1"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/","text":"Spring\u6e90\u7801\u7f16\u8bd1\u6559\u7a0b \u4f5c\u8005\uff1a\u5468\u745c \u6b64\u6559\u7a0b\u662f\u57fa\u4e8e\u5468\u745c\u8001\u5e08\u7684Spring5.3.10\u6ce8\u91ca\u7248\u6e90\u7801\u7f16\u8bd1\u7684\uff0c\u5e76\u4e0d\u662fGithub\u539f\u751f\u7684Spring5.3.10\u6e90\u7801\uff0c\u6709\u4e00\u4e9b\u5dee\u522b\uff0c\u4f46\u90fd\u662fgradle\u914d\u7f6e\u6587\u4ef6\u7684\u5fae\u5c0f\u6539\u52a8\uff0c\u6bd4\u5982\u628a\u67d0\u4e9b\u4f9d\u8d56\u4eceoptional\u6539\u6210compile\u7ea7\u522b\uff08\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u7f16\u8bd1\uff09\uff0c\u5176\u4ed6\u90fd\u6ca1\u6539\u52a8\u3002 \u8bb2\u7684\u662f\u6700\u65b0\u7684Spring\u7248\u672c\uff0c\u6211\u4e4b\u524d\u7528\u7684\u662f2019\u7684\u67d0\u4e2aIDEA\u7248\u672c\uff0c\u4f46\u662f\u6211\u5c1d\u8bd5\u8fc7\u540e\u53d1\u73b0\u7f16\u8bd1\u4e0d\u6210\u529f\uff0c\u6240\u4ee5\u6539\u7528\u4e86\u6700\u65b0\u7248\u672cIDEA\u7248\u672c2021.1.3\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5927\u5bb6\u800c\u8a00\u4e5f\u5c3d\u91cf\u7528\u8fd9\u4e2a\u7248\u672c\uff0c\u7528\u5176\u4ed6IDEA\u7248\u672c\u53ef\u80fd\u4f1a\u9047\u5230\u5404\u79cd\u5404\u6837\u7684\u95ee\u9898\uff0c\u89e3\u51b3\u95ee\u9898\u4f1a\u6bd4\u8f83\u8d39\u65f6\u95f4\uff0c\u6240\u4ee5\u4e3a\u4e86\u8282\u7701\u5927\u5bb6\u548c\u6211\u7684\u65f6\u95f4\uff0c\u8bf7\u5927\u5bb6\u75282021.1.3\u8fd9\u4e2aIDEA\u7248\u672c\u3002 Spring\u5e26\u6ce8\u91ca\u6e90\u7801\u5730\u5740\uff1a git clone\u7684\u5730\u5740\u4e3a\uff1ahttps://gitee.com/archguide/spring-framework-5.3.10.git \u9644\u4e0a2021.1.3\u7248\u7684\u767e\u5ea6\u7f51\u76d8\u94fe\u63a5\uff1a \u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1X79-2bFGtkL0763QjAya3w \u63d0\u53d6\u7801\uff1auk7w \u6b64\u94fe\u63a5\u4e2d\u8fd8\u6709IDEA\u7834\u89e3\u6240\u9700\u8981\u7684\u5de5\u5177\u5305\uff0c\u548c\u4e00\u4e2a.gradle.zip\u538b\u7f29\u5305\uff08\u540e\u7eed\u4f1a\u7528\u5230\uff0c\u6211\u662f\u7528\u7684360\u538b\u7f29\u8f6f\u4ef6\u8fdb\u884c\u538b\u7f29\u7684\uff0c\u5efa\u8bae\u5927\u5bb6\u4e5f\u7528\u8fd9\u4e2a\u8f6f\u4ef6\u6765\u89e3\u538b\uff0c\u6709\u540c\u5b66\u53cd\u9988\u7528\u5176\u4ed6\u8f6f\u4ef6\u53ef\u80fd\u89e3\u538b\u4f1a\u9047\u5230\u95ee\u9898\uff0c\u4e0a\u9762\u7f51\u76d8\u94fe\u63a5\u91cc\u6709\u4e00\u4e2a.gradle\u7684\u538b\u7f29\u5305\u548c\u4e00\u4e2a\u672a\u538b\u7f29\u7684.gradle\u6587\u4ef6\u5939\uff09\uff0c\u8fd8\u6709\u4e00\u4e2aJDK1.8\u7684\u5b89\u88c5\u5305\uff08\u56e0\u4e3a\u5982\u679c\u7528\u7a0d\u5fae\u8001\u4e00\u70b9\u76841.8\u5c0f\u7248\u672c\uff0c\u4e5f\u4f1a\u51fa\u73b0\u5947\u8469\u95ee\u9898\uff0c\u6240\u4ee5\u4e5f\u5c3d\u91cf\u7528\u6211\u63d0\u4f9b\u7684\u8fd9\u4e2aJDK\uff09 \u9644\u4e0aIDEA\u7834\u89e3\u6559\u7a0b\u94fe\u63a5\uff1ahttps://www.exception.site/essay/idea-reset-eval 2021.1.3IDEA\u7248\u672c\u622a\u56fe\uff1a InteliJIDEA UltiMate2021.1 JIDEA2021.1.3(UltimateEdition) InteliJID Build#IU-211.7628.21,builtonJune30,2 LicensedtolntelliJIDEAEvaluator Expirationdate:September21, Runtimeversion:11.0.11+9-b1341.60amd64 VM:OpenJDK64-BitServerVMbyJetBrainsS.r.O. JET Poweredbyopen-sourcesoftware BRAINS Copyright2000-2021JetBrainss..o. \u4e0b\u8f7dSpring\u6e90\u7801\u6240\u9700\u8981\u7684\u4f9d\u8d56 \u767e\u5ea6\u7f51\u76d8\u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1X79-2bFGtkL0763QjAya3w \u63d0\u53d6\u7801\uff1auk7w \u4e0b\u8f7d\u5f97\u5230.gradle.zip\u538b\u7f29\u5305\uff0c\u5e76\u89e3\u538b\uff0c\u6bd4\u5982\u89e3\u538b\u5230D\u76d8 \u65b0\u52a0\u5377(D:>gradle \u6b64\u7535\u8111 \u540d\u79f0 \u7c7b\u578b \u4fee\u6539\u65e5\u671f \u5927\u5c0f build-scan-data \u6587\u4ef6\u5939 2021/8/2216:56 \u6587\u4ef6\u5939 2021/8/2216:57 caches \u6587\u4ef6\u5939 2021/8/2216:57 daemon \u6587\u4ef6\u5939 2021/8/2216:54 jdks \u6587\u4ef6\u5939 kotlin-profile 2021/8/2217:14 \u6587\u4ef6\u5939 2021/8/2216:57 native \u6587\u4ef6\u5939 2021/8/2216:54 workers \u6587\u4ef6\u5939 2021/8/2216:57 wrapper \u56e0\u4e3aSpring\u6e90\u7801\u5b58\u5728\u5f88\u591a\u4f9d\u8d56\u5305\uff0c\u5982\u679c\u5927\u5bb6\u81ea\u884c\u4e0b\u8f7d\uff0c\u4f1a\u9700\u8981\u4e0b\u5f88\u4e45\uff081\u5c0f\u65f6\u90fd\u6709\u53ef\u80fd\uff09\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u628a\u6211\u7535\u8111\u4e0a\u7684\u4f9d\u8d56\u5305\u7ed9\u5230\u5927\u5bb6\u3002 Spring\u662f\u901a\u8fc7gradle\u6765\u7f16\u8bd1\u6e90\u7801\u4e0b\u8f7d\u4f9d\u8d56\u7684\uff0c.gradle\u6587\u4ef6\u5939\u53ef\u4ee5\u7406\u89e3\u4e3agradle\u7684\u4ed3\u5e93\uff08\u548cmave\u7c7b\u4f3c\uff0c\u4e0d\u61c2gradle\u7684\u5148\u8fd9\u4e48\u7406\u89e3\uff09\uff0c\u800c\u6211\u7ed9\u5927\u5bb6\u7684\u8fd9\u4e2a\u4ed3\u5e93\uff0c\u53ea\u5305\u542b\u4e86Spring\u6e90\u7801\u6240\u9700\u8981\u7684\u4f9d\u8d56\u3002 \u4e0b\u8f7dSpring\u6e90\u7801 git clone\u7684\u5730\u5740\u4e3a\uff1ahttps://gitee.com/archguide/spring-framework-5.3.10.git \u5efa\u8bae\u76f4\u63a5\u7528IDEA\u7684git\u6765\u4e0b\u8f7d\u6e90\u7801\uff1a EditviwNavigateCodeAnalyze BuilD ToolsVcSWindow ZhouyuDemo File Run Help Refactor Project... New Zh ProjectfromExistingSources... gpen... 5a[o-d ProjectfromVersionControl... OpenRecent Module... CloseProject ModulefromExistingSources... Settings... Ctrl+Alt+S Ctrl+Alt+shift+S ProjectStructure... JavaClass FileProperties KotlinClass/File File LocalHistory Ctrl+Alt+Shift+lnsert ScratchFile \u65e5SaveAll Ctrl+S Package ReloadAllfromDisk Ctrl+Alt+Y FXMLFIIe lnvalidateCaches... package-info.java ManageIDESettings HTMLFile SearchEverywhereDoubleShift NewProjectsSettings essStylesheet Export JavaScriptFile GotoFileCtrl+Shift+N Js Print... TypeScriptFile TS AddtoFavorites RecentFilesCtrl+E packagejsonFile PowerSaveMode KotlinScript Exit GetfromVersionControl RepositoryURL Versioncontrol: Git GitHub https://gitee.com/archguide/spring-framework-5.3.10.git URL: Noaccounts D:ldeaProjectslspring-framework-5.3.10 Directory: GitHubEnterprise Noaccounts Space Noaccount Clone Cancel \u8f93\u5165\u5730\u5740\uff0c\u70b9\u51fbClone\uff0c\u5c31\u4f1a\u5f00\u59cb\u4e0b\u8f7d\u6e90\u7801\u5de5\u7a0b\uff08\u56e0\u4e3a\u662f\u4ecegitee\u4e0a\u4e0b\u8f7d\uff0c\u6240\u4ee5\u4f1a\u6bd4\u4ecegithub\u4e0a\u4e0b\u8f7d\u5feb\u5f88\u591a\uff09\u3002 \u4e00\u65e6\u4e0b\u8f7d\u5b8c\u6210\uff0cIDEA\u5c31\u4f1a\u81ea\u52a8\u4e0b\u8f7dgradle\uff0c\u4e0b\u8f7d\u5b8cgradle\u5c31\u4f1a\u5f00\u59cb\u4e0b\u8f7dSpring\u6e90\u7801\u4f9d\u8d56\uff0c\u4f46\u662f\u6211\u4eec\u5df2\u7ecf\u6709\u73b0\u6210\u7684\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u53d6\u6d88\u8fd9\u4e2a\u8fc7\u7a0b\u3002 Git READMEmd AddConfiguration... spring-framework-5.3.10 \u4e09\u4e91\u4e2d-READMEmD Project Gradle \u4e09I spring-framework-5.3.10 HIHT \u4e09\u4e91\u7530\u5341\u5927 qithub lle\u5496Database spring-framework-5.3.10 buildsrc Ci Spring Framework framework-bom buildpassing gradle integration-tests spring-aop spring-aspects spring-beans ThisisthehomeoftheSpringFramworkhoundaij spring-context CollectvelythespringFramoworkandthetamyspringprojecsarien spring-context-indexer Spring-context-support referredtosimplyas\"Spring spring-core spring-expression Springproyideseveryhingrqurdbeyond spring-instrument creatingenterpriseapplicaionowdricur springjc spring-jabc Pleasereadtheoveryiewsecionli spring-ims spring-messaging Build Sync 1G\u5ddd Sprigframework-5.3.10:Downloadgradle-6.2c DowLodhtto:seceh TODO GProfler \u53e3 Git erminal SequenceDiagram EventLog rablems JPAfrmeworksaredetected./configure(momentsaqo) 2:1LFUTF84spaces GRadle:Downloadqrd-6.8.3-bin.zip(14.67.8) Web \u4fee\u6539IDEA\u7684gradle\u914d\u7f6e Tools Build spring-framework-5.3.10-README.md Help Edit View Git CodeAnalyze Refactor Navigate Run File Window New SPi Open... Da[odd README.mdx OpenRecent BIOHHT \u81ea CloseProject Ctrl+Alt+S Settings aJmonns\" ProjectStructure... Ctrl+Alt+Shift+S FileProperties Spring Framework LocalHistory build passing \u65e5 Ctrl+S SaveAll ReloadAllfromDisk Ctrl+Alt+Y GradleEnterprise Revvedupby lnvalidateCaches... ManageIDESettings NewProjectsSettings ThisisthehomeoftheSpringFramework:theoudainospringprojecs Export CollectivelytheSpringFramworkandthampingor Print... referredtosimplyas\"Spring\" PowerSaveMode Exit Springprovideseverythingrequirdbeyondthargrmminguae spring-expression cratingenterpriseappicationwirdrur spring-instrument spring-jc Pleasereadtheoveryiewsecionrrmleei spring-jdbc spring-jms cnrina-maccani Build: Sync Settings BuilD,Execution,Deployment>BuildToolsGradle Generalsettings Appearance&Behavior keymap dradleuserhome: CUsers\\\u5468\u745cgradle Editor bvemoelheogasuociowe \u53e3 Plugins Generate*imlfilesformodulesimportedfromGradle GmablaiyouhivemkdptwhDAm \u53e3 VersionControl BuildExecutionDeployment Gradleprojects \u53e3 BuildTools spring-framework- Downloadexternalannotationsfordependencies \u53e3 Maven \u53e3 Gradle Buildandrun Gant BydefaultInteliIDEAusesGradletobuildtheprojectandruntheask Compiler lnapureyolipoedin Debugger NoethutthelbedoentsGdaomobmhem \u53e3 RemoteJarRepositories Buildandrunusing: GradleDefault) ApplicationServers Runtestsusing: Gradle(Default) Coverage Docker Gradle JavaProfiler gradle-wrapper.properties'file UseGradlefrom: ReguiredPlugins GradleJVM: JAVAHOMEversion1.8.0212 RunTargets TrustedLocations Languages&Frameworks Tools Apply OK Cancel \u9996\u5148\u628agradle user home\u6539\u4e3a.gradle\u538b\u7f29\u5305\u7684\u89e3\u538b\u4e4b\u540e\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u6bd4\u5982D:.gradle \u7136\u540e\u628aBuild and run suing\u548cRun tests using\u90fd\u6539\u4e3aIntelliJ IDEA\uff0c\u5176\u4ed6\u90fd\u4e0d\u7528\u52a8\uff0c\u6539\u4e3a\u4e4b\u540e\u5982\u4e0b\u56fe\uff1a Settings BuilD,Execution,DeloymenBuildToolsGe Reset Generalsettings Appearance&Behavior keymap Gradleuserhome D:gradle Editor QVerdethedbautlioatowo. \u65e5 Plugins Generate*imlfilesformodulesimportedfromGdle mablaiyouhivemkdptwhDAm \u53e3 VersionControl BuildExecutionDeployment Gradleprojects \u53e3 BuildTools spring-framework- Downloadexternalannotationsfordependenci \u53e3 Maven \u53e3 Gradle Buildandrun Gant BydefaultIntelijIDEAusesGradletobuildtheprojectandrunthetasks Compiler lhapue.y/kolipon Debugger NoethatthelDEdowmtmGomoehm \u53e3 RemoteJarRepositories Buildandrunusing: lntelliIDEA ApplicationServers Runtestsusing: IntelliIDEA Coverage Docker Gradle JavaProfiler gradle-wrapper.properties'file UseGradlefrom: ReguiredPlugins GradleJVM: JAVAHOMEversion1.8.0212 RunTargets TrustedLocations Languages&Frameworks Tools OK Cancel Apply \u6539\u5b8c\u4e4b\u540e\u70b9\u51fbApply\uff0c\u518d\u70b9\u51fbOK\uff0c\u4f1a\u81ea\u52a8\u89e6\u53d1gradle\u7684\u91cd\u65b0\u7f16\u8bd1\u3002 Navigate spring-framework-5.3.10READMEMD Help Window Refactor Code Analyze Build View Gi Edit LGG-OGit README.md \u662f pring-framework-5.3.10 AddConfiauration.. \u838e\u4e09\u4e8c\u4e2d READMEMd Project Gradle odd spring-framework-5.3.1deaProjects \u81f3\u4e8c\u5341 \u4e2d \u4e09 HIHT 0 github spring-tramework-5.3.10 gradle aJmarns\" idea build SpringFramework buildSrc bulldpassing ci framework-bom GradleEntempnlse Rewvedupby gradle integration-tests spring-aop ThisisthehomeoftheSpringFramework:theoundaionspringprojects spring-aspects ColecivelytheSpringFrameworkandthetamlyofspringprojecsareofen spring-beans referredtosimplyas\"Spring\" spring-context-indexer spring-context-support Spiingprovideseverythingequirdbeyontrogring spring-core creatingenterpiseapplcationwu spring-expression spring-instrument Pleasereadthooveryiowsecionsrmi spring-jcI spring-idbc crrnn.imr Build: Syng, LDSK:uUILUSIC:CUMpTLeTeSLJaDU-SUURLE 36 i:\u51fb spring-framework-5.3.10:Buildmodel.. Task:buildSc:compieestroovyNoS Task:buildsrc:processTestResourcesNO-SqURCE Task:buildsrc:testclassesUP-TO-DATE Task:buildsrc:testSKIPPED Task:buildsrc:yalidatePlugiFo-cAcH Task:buildsrc:checkSKIPPED SEIIUJOMET Task:buildsrc:build PrObensFGEETErminaETODOCPIOFIER EventLog ISaquonceDiagram Gradle:Buildmodel... Pmain Fameworksdetectedwebmwokrdeedcong Showall(22:1LFU spaces e6minutesago) \u5982\u679c\u6ca1\u6709\u89e6\u53d1\u53ef\u4ee5\uff0c\u70b9\u51fb A spring-READMEMd[Sspringl YIEWNAVIGARECODEANANERETACTORBUIDRUNIooLiT x Window File dit Help GC:DGiL: Q spring-framework-5.3.10 READMEMD AddConfiguration. 123od\u661f \u4e09\u4e91 \u54c1READMEmd |\u4e2d Project \u5e74GRADIe Gradle spring-framework5.3.10pringjDade \u4e09\u4e09\u56db\u5473 IOHIHT \u4e09\u516d T@ + qithub spring gradle amBnns\u53f7 idea build SpringFramework buildsre[opring-framework-5.3.10.bu bUllD passing framework-bom RevvedupbyGraodleEnterprise gradle integradion-tests Spnng-aOP ThisisthehomeoftheSpringFramework:theoudonospringprojects apnng-aspects CollectivelytheSpringFrameworkandtamypirojsr spnng-beans Spring-conText referredtosimplyas\"Spring\" spning-context-indexer Spang-context-support SpringprovideseverythingequirdbeyondtJaprogramingna spang-core creatingenterprseapplcaio Spning-expression spning-instrument sprng-icl . Build Sync dcradlefeaturesweeUsedinthiuiw 1G\u56e2 DeprecatedGradL spring-framework-5.3.10:finishdAt8c568 sel--warning-modeatl'toshowtheindividulionn Use Seehtps:/ldoc.rqc.m.m o BUILDSUCCESSFULin40S Abutldscanwasntputishdyuenit \u56de\u6309 \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6b64\u65f6gradle\u7f16\u8bd1\u5c06\u6bd4\u8f83\u5feb\uff0c\u4f1a\u6709\u4e00\u4e2a\u7d22\u5f15\u6587\u4ef6\u8fc7\u7a0b\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u989d\u5916\u7684\u4e0b\u8f7dgradle\u548c\u4f9d\u8d56\u4e86\u3002 \u7f16\u8bd1\u6210\u529f\u622a\u56fe\uff1a SPring-READMEMDsPrIng] Window Navigate Code Analyze Git Refactor Build Help View ?\u5e0cCG Git:Lv READMEMD spring-framework-5.3.10 AddConfiquration... pa[aLd \u738b\u516d \u4e2d READMEmdx Project Gradle spring-ffammework-5.3.10[spring] \u4e09\u4e8c \u5341 ? HLHT@ github Rspring gradle manns\u53f7 idea build SpringFramework buildSrc[spring-framework-5.3.10.bu bulLDpassing framework-bom RevvedupbyGradleFnterprise radle integration-tests Sprng-aop ThisisthehomeofthespringFramwork:houdain spnng-aspocts ColecivelythespringFramworkandthtamypringprojcsari spring-beans spring-context referredtosimplyas\"Spring spning-context-indexer sprng-context-support SpringproyideseverythingrquirdbeyonJng spring-core creatingenterpiseapication Spring-expression \u4e00 sprng-instrument spring-icl Build: Sync Deprecgtedcrdefoatususedthisu Spring-framework-5.3.1finishedt48ec56m el--warningmodeatt'toshowtheindividulcatnng \u5927\u767d Use htps//0c.qaqcm. see BUILDSUCCESSFULinGFS Abuiidscanwasnotputishedasyouhyeuhentict SIUOMD BUILDsuccESsFuLin547mS EndngintS ETODO GProl -TeminaI SequgnceDi \u8fd0\u884c\u4ee3\u7801 \u7f16\u8bd1\u6210\u529f\u540e\uff0c\u5728\u5de6\u4fa7\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u6a21\u5757\uff0c\u5176\u4e2d\u6709\u4e00\u4e2atuling\u6a21\u5757\uff0c\u8fd9\u662f\u6211\u5199\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\uff0c\u5728\u5b83\u4e0b\u9762\u6709\u4e00\u4e2aTest\u7c7b\uff0c\u76f4\u63a5\u8fd0\u884cmain\u65b9\u6cd5\u3002 spring-Testjava[spring.tuling.min Help Build FIleEDIt Window Iools Navigate Git Kiew Refactor Analyze Run 5 AddConfiguration.CGGit GTest Git: zhouyu tuling spring-framework-5.3.10 15aJ01d 3\u4e09 GTestiava Project Spring-instrument packagecom.zhouyu; Analy 1 spring-jcl NL spring-jdbe spring-jms import sprning-messaging spring-omm publicclassrest spring-oxm spring-r2dbc 7 spring-test publicstaticvoidmain(stringa 8 spring-t 9 spring-Webflux Amotetionconficdpplicationontextcotextnewmttinoniictiootxto 10 sPrng-WebMVc 5pring-websocket context.register(Appconfig.class 11 src context.refreshO; 12 tuling build 13 src Userserwiceusrservicecontext.getBauser 14 main userService.testO: 15 java acom.zhouyu 16 aspect 17 AppConfig 18 Test 19 resources 20 tuling-boot tuling-vip-demo tuling-Web \u674eeditorconfig gitattributes Serpane egitignore .mailmap build.gradle GProfler TODO \u5362Glt Problem Endpoints Spring Bud TSoquencoDlagram \u95ee\u98981 \u7b2c\u4e00\u6b21\u8fd0\u884c\u53ef\u80fd\u4f1a\u6bd4\u8f83\u6162\uff0c\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e5f\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u6bd4\u5982 spring-Testjava[spring.tuling.main] Refactor Window Help avigate Run Build Edit View Tools Testaqo-hGit\u5165o5 spring-framework-5.3.10 java com 13aJoJd \u4e2d GTestjava 6 Project corc publicCLAssTest 6 iang obienesis 7 autil publicstaticvoidmaincstringljargs) kotlin test Amotationconfigupticationttott 10 testFixtures springcore.gradle context.registerAppconfig.class 11 spring-expression 12 context.refreshO; pring-instrument 13 spring-jcI spring-jdbe 14 UserServiceUserServicecontext.geTBean \"userservice\",userservice.class);\u4ee3\u7406\u5bf9\u8c61 name Spring-jms 15 spring-messaging userservice.testOi spring-omm 16 spring-oxm 17 Spring-r2dbc sprng-test 18 spring-tx Testomaing Build: SyncxBuildoutput Springbuildfaidt2021/8/219:59thc HorelsrcinainljavalorgspringframeworkicqLbcosact D:IdeAProjctspring-framewok-5.3iqco kotlin:Languageversion1.5isexperimentalth java:\u7a0b\u5385@org.springframework.cq.co.in Kotlin:Classpathentrypointstoanomexistetlocati KotlinClasspathentrypointstoanon-existentlocati AbstraciclassGeneratorjavaspringcorelsclmainjav \u7a0b\u7597\u5305org-springframeworkcglib.coreinternal\u4e0d\u5b58 \u7a46\u5e8f\u5305org.springtramework.cglib.coreinterna\u4e0d\u6709 \u627e\u4e0d\u5230\u8377\u53f7:37 \u627e\u4e0d\u5230\u4ed8\u53f7:47 \u627e\u4e0d\u5230\u7279\u53f7:49 \u627e\u4e0d\u5230\u7119\u53f7:176 \u627e\u4e0d\u5224\u5f85\u53f7:204 \u6211\u4e0d\u5230\u97f5\u53f7:213 \u5dde\u5341\u522b\u5c14\u65e53\u65e5 ProbensNGEETerminalETODOGProfiler SequenceDiagram EventLog Sprlng Tab Buildcompletedwith100rorsand3wainginu 17:1LFUTF-B main \u90a3\u4e48\u8bf7\u8fd0\u884c\u4e00\u4e0b\uff1a spring-Testjaya[spring.tuling.main] Navigate Git Build Window Help Run View edit Code Tools Reractor GG:DGIt: Test spring-tramework-5.3.10:pringcorebuild zhouyu uling java com spring-framework main \u4e3b\u4e91 Testiava Project cOntEXLFETrESNOi \u4e09\u4e8c\u86cb\u5341 pning-core 13 spring-context kotlin-coroutines[spring-kotlin-coroutines] UserserviceuserservicecontextgeBean 14 spring-context-support 15 Userservice.testO; sprng-core jmh 16 alosks main abuild 17 a5semble org.springtramework 18 build asm buildbependents 19 dcglib buildNeeded 20 AbstractclassGenerator clean AsmApi jar imhclasses package-into.java lostFixturesclasses Reflectutils testFixtureslar SpringNamingPolicy documentation proxy help package-infojava Test ide maino spring-framework-5.3.10:pring-corefbuild] Run: 1G:\u56e2 spring-framework-5.3.10:pnincmin23c29m See tes/lecm springcore.compileTestKotlin1316c833m KotlinReactiveAdapterRegistryTestsktsrctes ThisisadelicateAPlanditsuserequiresca BUILDSUCCESSFULin1m23s 26actionabletasks:18executd,romcac o AbuidsCanwasnotpubhutishdyouhayentuthetictdhs SIUOnE 2Q:83:\u65e56:Taskexecutionfinished*buiid \u5982\u679cbuild\u4e4b\u540e\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u6bd4\u5982\uff1a \u79f0\u6e7e\u4e0a\u4ee3 \u4e2d\u6587 \u53e3 \u53e3 Tall\u56ed ? aQ - iRabe \u5740spnng-tramework-5.3.10onng-corelouu COReEIAbALRIGICLALLGENcRaTOR pring-tramework.53.10pringcorcfremain cgab pringtranorore \u7ea2\u4e09 \u7ed9\u6708\u522b\u7537\u79d1\u8bbe\u79d1\u6708\u5206\u5458\u6c11\u7b2c\u51fa\u51fa\u7ed9\u679c 0 cBL1b.core packageorg.springfranework \u8bfaSring \u5e74PringContent ng.ref.MeakReference; java.5pcurity.protectionoomain; Dapordenciee SprIngcontextsupport import java-util.HashSet; fremcwort-bom Spring-core import java.util.Map; kotlin.coroutnes[epringkotincoroutine] javautil.Set; ImportJjavavtilMEakHashp Lmportorg.springfreneork.cgb.core.nte.Fucton; dongspringfrsmewvork tmortong.springtramgork.cqlib.core.intea.toadincche dEEM ocgm dcore Abstroctctassoratcodqnui Tbad EABAUSCICaSSGEIAraLor ingbdttiontocochiogenrtedeoo curtenttngthedcodectassodet Oppltedboforegeneration. \u4e2dburldDepcrdents ClassloaderAwareGoneratorstretogy /rantypes,unchecked \u4e0a\u51fa\u51fa\u5b9d\u751f\u751f\u5b50\u8d1d abstroctpubltcdasAbtecc dean THreadLocalcuRENTnewThreadLocai0; privatestaticfinalTh SpringNamingPalicy Dtc\u7403clas5cs QtosthnwuresCa5505 PPtvatestaiicwomtieMapcLasd pactg-ifojav PRIVASTATFInIBOoLEaNDEFAULTUSECACHE RunHCPRINgfRaMewoRk5.3.10prngcor[uld ERRCUTLONFHLEdFORtASK:SpringcoR.ChaCKSTYLGIN ICH \u5fa1pringtmGworsopringcorebu7c6 \u52a0\u5fc3 O:pringcoto.chackshyaManoror QCheckstylenuleviolatianswerefound.Scotherepar Checkstylefilesnithvioletions1 Checkstyleviolationsbyseverity:[error:] *Try \u5730\u54c1 \u6fc0\u6cd5Windowe \u6ca1\u5173\u7cfb\uff0c\u8bf7\u5ffd\u7565\uff0c\u7ee7\u7eed\u5f80\u4e0b\u8d70\u3002 \u518d\u6b21\u6267\u884cTest\u7c7b\u4e2d\u7684main\u65b9\u6cd5\uff0c\u53ef\u80fd\u5c31\u76f4\u63a5\u8fd0\u884c\u6210\u529f\u4e86\uff1a 6 spingD:daPojecspringlmewk5.3. x Build IoOlsGitHindow Help Run Retactor Analyze Git: G 5 Test 9 tuling zhouyu Test com src spring-framework-5.3.10 java i50faUd \u4e2d Proje.. Testjava AbstractclassGenerator.java E Grsdle Spring-to 5 spring-web Test wDateDasE 6 CLass public aMOn4S Spring-WEbflux 7 spring-webmvc pring-Wabfockat 8 args) publicstaticvoidmain(stringl STC 9 tuling build Amotationconfiodpplicotioncontextcontextnemmtiooniictioott; 10 context.registerppconfig.clas 11 context.refreshO; 12 java 13 com.zhOUwu apect usgrservtceusersevccontgeBnm 14 Scrvice Userservice.testO; Appconfg15 Test 16 Fresources 17 build.gradle tuling-boot 18 tuling-vip-demo Testomaino Run: Test c:lProgramfiLesJayaldi \u4e2a \u51929\u5c24\u5144 test 1\u4e94\u4e2d\u65e5 Processfinishedwithexitcode SEIUONS+ GitTermInalETODoGProfiler EwentLog Endpalnts Spring ShouenceDiagram \u5230\u6b64\uff0c\u606d\u559c\u4f60\uff0c\u4f60\u5df2\u7ecf\u6210\u529f\u7684\u7f16\u8bd1\u597d\u4e86Spring\u6e90\u7801\uff0c\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u5e76\u8fdb\u884c\u8c03\u8bd5\u4e86\u3002 \u95ee\u98982 \u5982\u679c\u51fa\u73b0\u4e86\uff1a \u62a5\u9519\u7684CoroutinesUtils\u662f\u4e00\u4e2akotlin\u4e2d\u7684\u7c7b\uff0c\u89e3\u51b3\u529e\u6cd5\uff1a \u70b9\u51fbFile -> Project Structure -> Libraries -> \u201c+\u201d -> Java\uff0c\u7136\u540e\u9009\u62e9spring-framework/spring-core/kotlin-coroutines/build/libs/kotlin-coroutines-5.2.4.BUILD-SNAPSHOT.jar\uff0c\u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\u9009\u62e9spring-core.main\uff0c\u5728\u91cd\u65b0\u8fd0\u884cTest\u7c7b\u4e2d\u7684main\u65b9\u6cd5\u5373\u53ef\uff0c\u6ce8\u610f\u6211\u56fe\u4e2d\u662f\u62a5\u9519\u7684\u6a21\u5757spring-core\uff0c\u6240\u4ee5\u64cd\u4f5c\u7684\u662fspring-core.main\uff0c\u5982\u679c\u662f\u5176\u4ed6\u6a21\u5757\u62a5\u7c7b\u4f3c\u7684\u9519\uff0c\u5c31\u505a\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002 \u95ee\u98983 Annotationconf1gppticationcontxto SPaing-context-support Aspang-core Userserviceuserservicecuserservice) lsprng-expression CONTeX\u4e0a:\u53f6 Wspring-instrament Wspring-jal Userservice.testO; AIVspring-jdbc \u6fb3spring-ims spring-messaging \u96f7 sispring-orm Aspring-oxm Espring-2dbe Causedby:net.ubygrapefruit.patformExen sec.825ms ANIdeaProjec I EventL 24428LF \u897f\u5584\u5403\u5e02 acer \u9700\u8981\u91cd\u65b0\u5b89\u88c5\u7535\u8111\u4e0a\u7684git\uff0c\u5e76\u4e14\u6700\u597d\u662f\u6309\u7167\u6700\u65b0\u7248\u672c\u7684git\uff08\u4e0a\u9762\u7f51\u76d8\u4e2d\u6709\u6309\u7167\u6587\u4ef6\uff09\uff0c\u5b89\u88c5\u7684\u65f6\u5019\u6ce8\u610f\u4ee5\u4e0b\u9875\u9762\u9009\u62e9\u7b2c\u4e8c\u9879\uff1a Git2.33.0.2Setup AdjustingyourPATHenvironment HowwouldyouliketouseGitfromthecommandline? UseGItfromGitBashonly ThisisthemostcautiouschoceasyouPAHwobdiedYOU onlybeabletousetheGitcommandlinetoolsfromGiash Gitfromthecommandlneandalsoomrdartywr (Recommnded)Thisoptionaddsonlysomeminiitwrstoour PATHtoavoidcutringyuenironentwthotioixl YoUWILbEAletoUsEGiROMGIBShhmwnd Powershellaswellasanythirawioii UseGitandoptionalUnixtoolsfromtheComandPompt BothGitandtheoptionalUnixtoolswillbeadded edtoyourPATH. \"FInd\"and\" \"sort'.Only Warning:ThiswilloverrideWindowstoolsi lslike\" usethisoptionifyouunderstandtheimplications htts://gitforwindows.org/ Next Cancel Back Qnlyshownewoptions \u5982\u679c\u5927\u5bb6\u5728\u7f16\u8bd1\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u5176\u4ed6\u95ee\u9898\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u672c\u6587\u540e\u9762\u8fdb\u884c\u8bc4\u8bba\uff0c\u6700\u597d\u662f\u628a\u89e3\u51b3\u65b9\u6848\u4e5f\u7ed9\u51fa\uff0c\u65b9\u4fbf\u5176\u4ed6\u5c0f\u4f19\u4f34\uff0c\u611f\u8c22\u3002","title":"Spring\u6e90\u7801\u7f16\u8bd1\u6559\u7a0b"},{"location":"Java%E6%BA%90%E7%A0%81%E7%B3%BB%E5%88%97/Spring/Spring%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#spring","text":"\u4f5c\u8005\uff1a\u5468\u745c \u6b64\u6559\u7a0b\u662f\u57fa\u4e8e\u5468\u745c\u8001\u5e08\u7684Spring5.3.10\u6ce8\u91ca\u7248\u6e90\u7801\u7f16\u8bd1\u7684\uff0c\u5e76\u4e0d\u662fGithub\u539f\u751f\u7684Spring5.3.10\u6e90\u7801\uff0c\u6709\u4e00\u4e9b\u5dee\u522b\uff0c\u4f46\u90fd\u662fgradle\u914d\u7f6e\u6587\u4ef6\u7684\u5fae\u5c0f\u6539\u52a8\uff0c\u6bd4\u5982\u628a\u67d0\u4e9b\u4f9d\u8d56\u4eceoptional\u6539\u6210compile\u7ea7\u522b\uff08\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u7f16\u8bd1\uff09\uff0c\u5176\u4ed6\u90fd\u6ca1\u6539\u52a8\u3002 \u8bb2\u7684\u662f\u6700\u65b0\u7684Spring\u7248\u672c\uff0c\u6211\u4e4b\u524d\u7528\u7684\u662f2019\u7684\u67d0\u4e2aIDEA\u7248\u672c\uff0c\u4f46\u662f\u6211\u5c1d\u8bd5\u8fc7\u540e\u53d1\u73b0\u7f16\u8bd1\u4e0d\u6210\u529f\uff0c\u6240\u4ee5\u6539\u7528\u4e86\u6700\u65b0\u7248\u672cIDEA\u7248\u672c2021.1.3\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5927\u5bb6\u800c\u8a00\u4e5f\u5c3d\u91cf\u7528\u8fd9\u4e2a\u7248\u672c\uff0c\u7528\u5176\u4ed6IDEA\u7248\u672c\u53ef\u80fd\u4f1a\u9047\u5230\u5404\u79cd\u5404\u6837\u7684\u95ee\u9898\uff0c\u89e3\u51b3\u95ee\u9898\u4f1a\u6bd4\u8f83\u8d39\u65f6\u95f4\uff0c\u6240\u4ee5\u4e3a\u4e86\u8282\u7701\u5927\u5bb6\u548c\u6211\u7684\u65f6\u95f4\uff0c\u8bf7\u5927\u5bb6\u75282021.1.3\u8fd9\u4e2aIDEA\u7248\u672c\u3002 Spring\u5e26\u6ce8\u91ca\u6e90\u7801\u5730\u5740\uff1a git clone\u7684\u5730\u5740\u4e3a\uff1ahttps://gitee.com/archguide/spring-framework-5.3.10.git \u9644\u4e0a2021.1.3\u7248\u7684\u767e\u5ea6\u7f51\u76d8\u94fe\u63a5\uff1a \u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1X79-2bFGtkL0763QjAya3w \u63d0\u53d6\u7801\uff1auk7w \u6b64\u94fe\u63a5\u4e2d\u8fd8\u6709IDEA\u7834\u89e3\u6240\u9700\u8981\u7684\u5de5\u5177\u5305\uff0c\u548c\u4e00\u4e2a.gradle.zip\u538b\u7f29\u5305\uff08\u540e\u7eed\u4f1a\u7528\u5230\uff0c\u6211\u662f\u7528\u7684360\u538b\u7f29\u8f6f\u4ef6\u8fdb\u884c\u538b\u7f29\u7684\uff0c\u5efa\u8bae\u5927\u5bb6\u4e5f\u7528\u8fd9\u4e2a\u8f6f\u4ef6\u6765\u89e3\u538b\uff0c\u6709\u540c\u5b66\u53cd\u9988\u7528\u5176\u4ed6\u8f6f\u4ef6\u53ef\u80fd\u89e3\u538b\u4f1a\u9047\u5230\u95ee\u9898\uff0c\u4e0a\u9762\u7f51\u76d8\u94fe\u63a5\u91cc\u6709\u4e00\u4e2a.gradle\u7684\u538b\u7f29\u5305\u548c\u4e00\u4e2a\u672a\u538b\u7f29\u7684.gradle\u6587\u4ef6\u5939\uff09\uff0c\u8fd8\u6709\u4e00\u4e2aJDK1.8\u7684\u5b89\u88c5\u5305\uff08\u56e0\u4e3a\u5982\u679c\u7528\u7a0d\u5fae\u8001\u4e00\u70b9\u76841.8\u5c0f\u7248\u672c\uff0c\u4e5f\u4f1a\u51fa\u73b0\u5947\u8469\u95ee\u9898\uff0c\u6240\u4ee5\u4e5f\u5c3d\u91cf\u7528\u6211\u63d0\u4f9b\u7684\u8fd9\u4e2aJDK\uff09 \u9644\u4e0aIDEA\u7834\u89e3\u6559\u7a0b\u94fe\u63a5\uff1ahttps://www.exception.site/essay/idea-reset-eval 2021.1.3IDEA\u7248\u672c\u622a\u56fe\uff1a InteliJIDEA UltiMate2021.1 JIDEA2021.1.3(UltimateEdition) InteliJID Build#IU-211.7628.21,builtonJune30,2 LicensedtolntelliJIDEAEvaluator Expirationdate:September21, Runtimeversion:11.0.11+9-b1341.60amd64 VM:OpenJDK64-BitServerVMbyJetBrainsS.r.O. JET Poweredbyopen-sourcesoftware BRAINS Copyright2000-2021JetBrainss..o. \u4e0b\u8f7dSpring\u6e90\u7801\u6240\u9700\u8981\u7684\u4f9d\u8d56 \u767e\u5ea6\u7f51\u76d8\u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1X79-2bFGtkL0763QjAya3w \u63d0\u53d6\u7801\uff1auk7w \u4e0b\u8f7d\u5f97\u5230.gradle.zip\u538b\u7f29\u5305\uff0c\u5e76\u89e3\u538b\uff0c\u6bd4\u5982\u89e3\u538b\u5230D\u76d8 \u65b0\u52a0\u5377(D:>gradle \u6b64\u7535\u8111 \u540d\u79f0 \u7c7b\u578b \u4fee\u6539\u65e5\u671f \u5927\u5c0f build-scan-data \u6587\u4ef6\u5939 2021/8/2216:56 \u6587\u4ef6\u5939 2021/8/2216:57 caches \u6587\u4ef6\u5939 2021/8/2216:57 daemon \u6587\u4ef6\u5939 2021/8/2216:54 jdks \u6587\u4ef6\u5939 kotlin-profile 2021/8/2217:14 \u6587\u4ef6\u5939 2021/8/2216:57 native \u6587\u4ef6\u5939 2021/8/2216:54 workers \u6587\u4ef6\u5939 2021/8/2216:57 wrapper \u56e0\u4e3aSpring\u6e90\u7801\u5b58\u5728\u5f88\u591a\u4f9d\u8d56\u5305\uff0c\u5982\u679c\u5927\u5bb6\u81ea\u884c\u4e0b\u8f7d\uff0c\u4f1a\u9700\u8981\u4e0b\u5f88\u4e45\uff081\u5c0f\u65f6\u90fd\u6709\u53ef\u80fd\uff09\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u628a\u6211\u7535\u8111\u4e0a\u7684\u4f9d\u8d56\u5305\u7ed9\u5230\u5927\u5bb6\u3002 Spring\u662f\u901a\u8fc7gradle\u6765\u7f16\u8bd1\u6e90\u7801\u4e0b\u8f7d\u4f9d\u8d56\u7684\uff0c.gradle\u6587\u4ef6\u5939\u53ef\u4ee5\u7406\u89e3\u4e3agradle\u7684\u4ed3\u5e93\uff08\u548cmave\u7c7b\u4f3c\uff0c\u4e0d\u61c2gradle\u7684\u5148\u8fd9\u4e48\u7406\u89e3\uff09\uff0c\u800c\u6211\u7ed9\u5927\u5bb6\u7684\u8fd9\u4e2a\u4ed3\u5e93\uff0c\u53ea\u5305\u542b\u4e86Spring\u6e90\u7801\u6240\u9700\u8981\u7684\u4f9d\u8d56\u3002 \u4e0b\u8f7dSpring\u6e90\u7801 git clone\u7684\u5730\u5740\u4e3a\uff1ahttps://gitee.com/archguide/spring-framework-5.3.10.git \u5efa\u8bae\u76f4\u63a5\u7528IDEA\u7684git\u6765\u4e0b\u8f7d\u6e90\u7801\uff1a EditviwNavigateCodeAnalyze BuilD ToolsVcSWindow ZhouyuDemo File Run Help Refactor Project... New Zh ProjectfromExistingSources... gpen... 5a[o-d ProjectfromVersionControl... OpenRecent Module... CloseProject ModulefromExistingSources... Settings... Ctrl+Alt+S Ctrl+Alt+shift+S ProjectStructure... JavaClass FileProperties KotlinClass/File File LocalHistory Ctrl+Alt+Shift+lnsert ScratchFile \u65e5SaveAll Ctrl+S Package ReloadAllfromDisk Ctrl+Alt+Y FXMLFIIe lnvalidateCaches... package-info.java ManageIDESettings HTMLFile SearchEverywhereDoubleShift NewProjectsSettings essStylesheet Export JavaScriptFile GotoFileCtrl+Shift+N Js Print... TypeScriptFile TS AddtoFavorites RecentFilesCtrl+E packagejsonFile PowerSaveMode KotlinScript Exit GetfromVersionControl RepositoryURL Versioncontrol: Git GitHub https://gitee.com/archguide/spring-framework-5.3.10.git URL: Noaccounts D:ldeaProjectslspring-framework-5.3.10 Directory: GitHubEnterprise Noaccounts Space Noaccount Clone Cancel \u8f93\u5165\u5730\u5740\uff0c\u70b9\u51fbClone\uff0c\u5c31\u4f1a\u5f00\u59cb\u4e0b\u8f7d\u6e90\u7801\u5de5\u7a0b\uff08\u56e0\u4e3a\u662f\u4ecegitee\u4e0a\u4e0b\u8f7d\uff0c\u6240\u4ee5\u4f1a\u6bd4\u4ecegithub\u4e0a\u4e0b\u8f7d\u5feb\u5f88\u591a\uff09\u3002 \u4e00\u65e6\u4e0b\u8f7d\u5b8c\u6210\uff0cIDEA\u5c31\u4f1a\u81ea\u52a8\u4e0b\u8f7dgradle\uff0c\u4e0b\u8f7d\u5b8cgradle\u5c31\u4f1a\u5f00\u59cb\u4e0b\u8f7dSpring\u6e90\u7801\u4f9d\u8d56\uff0c\u4f46\u662f\u6211\u4eec\u5df2\u7ecf\u6709\u73b0\u6210\u7684\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u53d6\u6d88\u8fd9\u4e2a\u8fc7\u7a0b\u3002 Git READMEmd AddConfiguration... spring-framework-5.3.10 \u4e09\u4e91\u4e2d-READMEmD Project Gradle \u4e09I spring-framework-5.3.10 HIHT \u4e09\u4e91\u7530\u5341\u5927 qithub lle\u5496Database spring-framework-5.3.10 buildsrc Ci Spring Framework framework-bom buildpassing gradle integration-tests spring-aop spring-aspects spring-beans ThisisthehomeoftheSpringFramworkhoundaij spring-context CollectvelythespringFramoworkandthetamyspringprojecsarien spring-context-indexer Spring-context-support referredtosimplyas\"Spring spring-core spring-expression Springproyideseveryhingrqurdbeyond spring-instrument creatingenterpriseapplicaionowdricur springjc spring-jabc Pleasereadtheoveryiewsecionli spring-ims spring-messaging Build Sync 1G\u5ddd Sprigframework-5.3.10:Downloadgradle-6.2c DowLodhtto:seceh TODO GProfler \u53e3 Git erminal SequenceDiagram EventLog rablems JPAfrmeworksaredetected./configure(momentsaqo) 2:1LFUTF84spaces GRadle:Downloadqrd-6.8.3-bin.zip(14.67.8) Web \u4fee\u6539IDEA\u7684gradle\u914d\u7f6e Tools Build spring-framework-5.3.10-README.md Help Edit View Git CodeAnalyze Refactor Navigate Run File Window New SPi Open... Da[odd README.mdx OpenRecent BIOHHT \u81ea CloseProject Ctrl+Alt+S Settings aJmonns\" ProjectStructure... Ctrl+Alt+Shift+S FileProperties Spring Framework LocalHistory build passing \u65e5 Ctrl+S SaveAll ReloadAllfromDisk Ctrl+Alt+Y GradleEnterprise Revvedupby lnvalidateCaches... ManageIDESettings NewProjectsSettings ThisisthehomeoftheSpringFramework:theoudainospringprojecs Export CollectivelytheSpringFramworkandthampingor Print... referredtosimplyas\"Spring\" PowerSaveMode Exit Springprovideseverythingrequirdbeyondthargrmminguae spring-expression cratingenterpriseappicationwirdrur spring-instrument spring-jc Pleasereadtheoveryiewsecionrrmleei spring-jdbc spring-jms cnrina-maccani Build: Sync Settings BuilD,Execution,Deployment>BuildToolsGradle Generalsettings Appearance&Behavior keymap dradleuserhome: CUsers\\\u5468\u745cgradle Editor bvemoelheogasuociowe \u53e3 Plugins Generate*imlfilesformodulesimportedfromGradle GmablaiyouhivemkdptwhDAm \u53e3 VersionControl BuildExecutionDeployment Gradleprojects \u53e3 BuildTools spring-framework- Downloadexternalannotationsfordependencies \u53e3 Maven \u53e3 Gradle Buildandrun Gant BydefaultInteliIDEAusesGradletobuildtheprojectandruntheask Compiler lnapureyolipoedin Debugger NoethutthelbedoentsGdaomobmhem \u53e3 RemoteJarRepositories Buildandrunusing: GradleDefault) ApplicationServers Runtestsusing: Gradle(Default) Coverage Docker Gradle JavaProfiler gradle-wrapper.properties'file UseGradlefrom: ReguiredPlugins GradleJVM: JAVAHOMEversion1.8.0212 RunTargets TrustedLocations Languages&Frameworks Tools Apply OK Cancel \u9996\u5148\u628agradle user home\u6539\u4e3a.gradle\u538b\u7f29\u5305\u7684\u89e3\u538b\u4e4b\u540e\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u6bd4\u5982D:.gradle \u7136\u540e\u628aBuild and run suing\u548cRun tests using\u90fd\u6539\u4e3aIntelliJ IDEA\uff0c\u5176\u4ed6\u90fd\u4e0d\u7528\u52a8\uff0c\u6539\u4e3a\u4e4b\u540e\u5982\u4e0b\u56fe\uff1a Settings BuilD,Execution,DeloymenBuildToolsGe Reset Generalsettings Appearance&Behavior keymap Gradleuserhome D:gradle Editor QVerdethedbautlioatowo. \u65e5 Plugins Generate*imlfilesformodulesimportedfromGdle mablaiyouhivemkdptwhDAm \u53e3 VersionControl BuildExecutionDeployment Gradleprojects \u53e3 BuildTools spring-framework- Downloadexternalannotationsfordependenci \u53e3 Maven \u53e3 Gradle Buildandrun Gant BydefaultIntelijIDEAusesGradletobuildtheprojectandrunthetasks Compiler lhapue.y/kolipon Debugger NoethatthelDEdowmtmGomoehm \u53e3 RemoteJarRepositories Buildandrunusing: lntelliIDEA ApplicationServers Runtestsusing: IntelliIDEA Coverage Docker Gradle JavaProfiler gradle-wrapper.properties'file UseGradlefrom: ReguiredPlugins GradleJVM: JAVAHOMEversion1.8.0212 RunTargets TrustedLocations Languages&Frameworks Tools OK Cancel Apply \u6539\u5b8c\u4e4b\u540e\u70b9\u51fbApply\uff0c\u518d\u70b9\u51fbOK\uff0c\u4f1a\u81ea\u52a8\u89e6\u53d1gradle\u7684\u91cd\u65b0\u7f16\u8bd1\u3002 Navigate spring-framework-5.3.10READMEMD Help Window Refactor Code Analyze Build View Gi Edit LGG-OGit README.md \u662f pring-framework-5.3.10 AddConfiauration.. \u838e\u4e09\u4e8c\u4e2d READMEMd Project Gradle odd spring-framework-5.3.1deaProjects \u81f3\u4e8c\u5341 \u4e2d \u4e09 HIHT 0 github spring-tramework-5.3.10 gradle aJmarns\" idea build SpringFramework buildSrc bulldpassing ci framework-bom GradleEntempnlse Rewvedupby gradle integration-tests spring-aop ThisisthehomeoftheSpringFramework:theoundaionspringprojects spring-aspects ColecivelytheSpringFrameworkandthetamlyofspringprojecsareofen spring-beans referredtosimplyas\"Spring\" spring-context-indexer spring-context-support Spiingprovideseverythingequirdbeyontrogring spring-core creatingenterpiseapplcationwu spring-expression spring-instrument Pleasereadthooveryiowsecionsrmi spring-jcI spring-idbc crrnn.imr Build: Syng, LDSK:uUILUSIC:CUMpTLeTeSLJaDU-SUURLE 36 i:\u51fb spring-framework-5.3.10:Buildmodel.. Task:buildSc:compieestroovyNoS Task:buildsrc:processTestResourcesNO-SqURCE Task:buildsrc:testclassesUP-TO-DATE Task:buildsrc:testSKIPPED Task:buildsrc:yalidatePlugiFo-cAcH Task:buildsrc:checkSKIPPED SEIIUJOMET Task:buildsrc:build PrObensFGEETErminaETODOCPIOFIER EventLog ISaquonceDiagram Gradle:Buildmodel... Pmain Fameworksdetectedwebmwokrdeedcong Showall(22:1LFU spaces e6minutesago) \u5982\u679c\u6ca1\u6709\u89e6\u53d1\u53ef\u4ee5\uff0c\u70b9\u51fb A spring-READMEMd[Sspringl YIEWNAVIGARECODEANANERETACTORBUIDRUNIooLiT x Window File dit Help GC:DGiL: Q spring-framework-5.3.10 READMEMD AddConfiguration. 123od\u661f \u4e09\u4e91 \u54c1READMEmd |\u4e2d Project \u5e74GRADIe Gradle spring-framework5.3.10pringjDade \u4e09\u4e09\u56db\u5473 IOHIHT \u4e09\u516d T@ + qithub spring gradle amBnns\u53f7 idea build SpringFramework buildsre[opring-framework-5.3.10.bu bUllD passing framework-bom RevvedupbyGraodleEnterprise gradle integradion-tests Spnng-aOP ThisisthehomeoftheSpringFramework:theoudonospringprojects apnng-aspects CollectivelytheSpringFrameworkandtamypirojsr spnng-beans Spring-conText referredtosimplyas\"Spring\" spning-context-indexer Spang-context-support SpringprovideseverythingequirdbeyondtJaprogramingna spang-core creatingenterprseapplcaio Spning-expression spning-instrument sprng-icl . Build Sync dcradlefeaturesweeUsedinthiuiw 1G\u56e2 DeprecatedGradL spring-framework-5.3.10:finishdAt8c568 sel--warning-modeatl'toshowtheindividulionn Use Seehtps:/ldoc.rqc.m.m o BUILDSUCCESSFULin40S Abutldscanwasntputishdyuenit \u56de\u6309 \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6b64\u65f6gradle\u7f16\u8bd1\u5c06\u6bd4\u8f83\u5feb\uff0c\u4f1a\u6709\u4e00\u4e2a\u7d22\u5f15\u6587\u4ef6\u8fc7\u7a0b\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u989d\u5916\u7684\u4e0b\u8f7dgradle\u548c\u4f9d\u8d56\u4e86\u3002 \u7f16\u8bd1\u6210\u529f\u622a\u56fe\uff1a SPring-READMEMDsPrIng] Window Navigate Code Analyze Git Refactor Build Help View ?\u5e0cCG Git:Lv READMEMD spring-framework-5.3.10 AddConfiquration... pa[aLd \u738b\u516d \u4e2d READMEmdx Project Gradle spring-ffammework-5.3.10[spring] \u4e09\u4e8c \u5341 ? HLHT@ github Rspring gradle manns\u53f7 idea build SpringFramework buildSrc[spring-framework-5.3.10.bu bulLDpassing framework-bom RevvedupbyGradleFnterprise radle integration-tests Sprng-aop ThisisthehomeofthespringFramwork:houdain spnng-aspocts ColecivelythespringFramworkandthtamypringprojcsari spring-beans spring-context referredtosimplyas\"Spring spning-context-indexer sprng-context-support SpringproyideseverythingrquirdbeyonJng spring-core creatingenterpiseapication Spring-expression \u4e00 sprng-instrument spring-icl Build: Sync Deprecgtedcrdefoatususedthisu Spring-framework-5.3.1finishedt48ec56m el--warningmodeatt'toshowtheindividulcatnng \u5927\u767d Use htps//0c.qaqcm. see BUILDSUCCESSFULinGFS Abuiidscanwasnotputishedasyouhyeuhentict SIUOMD BUILDsuccESsFuLin547mS EndngintS ETODO GProl -TeminaI SequgnceDi \u8fd0\u884c\u4ee3\u7801 \u7f16\u8bd1\u6210\u529f\u540e\uff0c\u5728\u5de6\u4fa7\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u6a21\u5757\uff0c\u5176\u4e2d\u6709\u4e00\u4e2atuling\u6a21\u5757\uff0c\u8fd9\u662f\u6211\u5199\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\uff0c\u5728\u5b83\u4e0b\u9762\u6709\u4e00\u4e2aTest\u7c7b\uff0c\u76f4\u63a5\u8fd0\u884cmain\u65b9\u6cd5\u3002 spring-Testjava[spring.tuling.min Help Build FIleEDIt Window Iools Navigate Git Kiew Refactor Analyze Run 5 AddConfiguration.CGGit GTest Git: zhouyu tuling spring-framework-5.3.10 15aJ01d 3\u4e09 GTestiava Project Spring-instrument packagecom.zhouyu; Analy 1 spring-jcl NL spring-jdbe spring-jms import sprning-messaging spring-omm publicclassrest spring-oxm spring-r2dbc 7 spring-test publicstaticvoidmain(stringa 8 spring-t 9 spring-Webflux Amotetionconficdpplicationontextcotextnewmttinoniictiootxto 10 sPrng-WebMVc 5pring-websocket context.register(Appconfig.class 11 src context.refreshO; 12 tuling build 13 src Userserwiceusrservicecontext.getBauser 14 main userService.testO: 15 java acom.zhouyu 16 aspect 17 AppConfig 18 Test 19 resources 20 tuling-boot tuling-vip-demo tuling-Web \u674eeditorconfig gitattributes Serpane egitignore .mailmap build.gradle GProfler TODO \u5362Glt Problem Endpoints Spring Bud TSoquencoDlagram \u95ee\u98981 \u7b2c\u4e00\u6b21\u8fd0\u884c\u53ef\u80fd\u4f1a\u6bd4\u8f83\u6162\uff0c\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e5f\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u6bd4\u5982 spring-Testjava[spring.tuling.main] Refactor Window Help avigate Run Build Edit View Tools Testaqo-hGit\u5165o5 spring-framework-5.3.10 java com 13aJoJd \u4e2d GTestjava 6 Project corc publicCLAssTest 6 iang obienesis 7 autil publicstaticvoidmaincstringljargs) kotlin test Amotationconfigupticationttott 10 testFixtures springcore.gradle context.registerAppconfig.class 11 spring-expression 12 context.refreshO; pring-instrument 13 spring-jcI spring-jdbe 14 UserServiceUserServicecontext.geTBean \"userservice\",userservice.class);\u4ee3\u7406\u5bf9\u8c61 name Spring-jms 15 spring-messaging userservice.testOi spring-omm 16 spring-oxm 17 Spring-r2dbc sprng-test 18 spring-tx Testomaing Build: SyncxBuildoutput Springbuildfaidt2021/8/219:59thc HorelsrcinainljavalorgspringframeworkicqLbcosact D:IdeAProjctspring-framewok-5.3iqco kotlin:Languageversion1.5isexperimentalth java:\u7a0b\u5385@org.springframework.cq.co.in Kotlin:Classpathentrypointstoanomexistetlocati KotlinClasspathentrypointstoanon-existentlocati AbstraciclassGeneratorjavaspringcorelsclmainjav \u7a0b\u7597\u5305org-springframeworkcglib.coreinternal\u4e0d\u5b58 \u7a46\u5e8f\u5305org.springtramework.cglib.coreinterna\u4e0d\u6709 \u627e\u4e0d\u5230\u8377\u53f7:37 \u627e\u4e0d\u5230\u4ed8\u53f7:47 \u627e\u4e0d\u5230\u7279\u53f7:49 \u627e\u4e0d\u5230\u7119\u53f7:176 \u627e\u4e0d\u5224\u5f85\u53f7:204 \u6211\u4e0d\u5230\u97f5\u53f7:213 \u5dde\u5341\u522b\u5c14\u65e53\u65e5 ProbensNGEETerminalETODOGProfiler SequenceDiagram EventLog Sprlng Tab Buildcompletedwith100rorsand3wainginu 17:1LFUTF-B main \u90a3\u4e48\u8bf7\u8fd0\u884c\u4e00\u4e0b\uff1a spring-Testjaya[spring.tuling.main] Navigate Git Build Window Help Run View edit Code Tools Reractor GG:DGIt: Test spring-tramework-5.3.10:pringcorebuild zhouyu uling java com spring-framework main \u4e3b\u4e91 Testiava Project cOntEXLFETrESNOi \u4e09\u4e8c\u86cb\u5341 pning-core 13 spring-context kotlin-coroutines[spring-kotlin-coroutines] UserserviceuserservicecontextgeBean 14 spring-context-support 15 Userservice.testO; sprng-core jmh 16 alosks main abuild 17 a5semble org.springtramework 18 build asm buildbependents 19 dcglib buildNeeded 20 AbstractclassGenerator clean AsmApi jar imhclasses package-into.java lostFixturesclasses Reflectutils testFixtureslar SpringNamingPolicy documentation proxy help package-infojava Test ide maino spring-framework-5.3.10:pring-corefbuild] Run: 1G:\u56e2 spring-framework-5.3.10:pnincmin23c29m See tes/lecm springcore.compileTestKotlin1316c833m KotlinReactiveAdapterRegistryTestsktsrctes ThisisadelicateAPlanditsuserequiresca BUILDSUCCESSFULin1m23s 26actionabletasks:18executd,romcac o AbuidsCanwasnotpubhutishdyouhayentuthetictdhs SIUOnE 2Q:83:\u65e56:Taskexecutionfinished*buiid \u5982\u679cbuild\u4e4b\u540e\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u6bd4\u5982\uff1a \u79f0\u6e7e\u4e0a\u4ee3 \u4e2d\u6587 \u53e3 \u53e3 Tall\u56ed ? aQ - iRabe \u5740spnng-tramework-5.3.10onng-corelouu COReEIAbALRIGICLALLGENcRaTOR pring-tramework.53.10pringcorcfremain cgab pringtranorore \u7ea2\u4e09 \u7ed9\u6708\u522b\u7537\u79d1\u8bbe\u79d1\u6708\u5206\u5458\u6c11\u7b2c\u51fa\u51fa\u7ed9\u679c 0 cBL1b.core packageorg.springfranework \u8bfaSring \u5e74PringContent ng.ref.MeakReference; java.5pcurity.protectionoomain; Dapordenciee SprIngcontextsupport import java-util.HashSet; fremcwort-bom Spring-core import java.util.Map; kotlin.coroutnes[epringkotincoroutine] javautil.Set; ImportJjavavtilMEakHashp Lmportorg.springfreneork.cgb.core.nte.Fucton; dongspringfrsmewvork tmortong.springtramgork.cqlib.core.intea.toadincche dEEM ocgm dcore Abstroctctassoratcodqnui Tbad EABAUSCICaSSGEIAraLor ingbdttiontocochiogenrtedeoo curtenttngthedcodectassodet Oppltedboforegeneration. \u4e2dburldDepcrdents ClassloaderAwareGoneratorstretogy /rantypes,unchecked \u4e0a\u51fa\u51fa\u5b9d\u751f\u751f\u5b50\u8d1d abstroctpubltcdasAbtecc dean THreadLocalcuRENTnewThreadLocai0; privatestaticfinalTh SpringNamingPalicy Dtc\u7403clas5cs QtosthnwuresCa5505 PPtvatestaiicwomtieMapcLasd pactg-ifojav PRIVASTATFInIBOoLEaNDEFAULTUSECACHE RunHCPRINgfRaMewoRk5.3.10prngcor[uld ERRCUTLONFHLEdFORtASK:SpringcoR.ChaCKSTYLGIN ICH \u5fa1pringtmGworsopringcorebu7c6 \u52a0\u5fc3 O:pringcoto.chackshyaManoror QCheckstylenuleviolatianswerefound.Scotherepar Checkstylefilesnithvioletions1 Checkstyleviolationsbyseverity:[error:] *Try \u5730\u54c1 \u6fc0\u6cd5Windowe \u6ca1\u5173\u7cfb\uff0c\u8bf7\u5ffd\u7565\uff0c\u7ee7\u7eed\u5f80\u4e0b\u8d70\u3002 \u518d\u6b21\u6267\u884cTest\u7c7b\u4e2d\u7684main\u65b9\u6cd5\uff0c\u53ef\u80fd\u5c31\u76f4\u63a5\u8fd0\u884c\u6210\u529f\u4e86\uff1a 6 spingD:daPojecspringlmewk5.3. x Build IoOlsGitHindow Help Run Retactor Analyze Git: G 5 Test 9 tuling zhouyu Test com src spring-framework-5.3.10 java i50faUd \u4e2d Proje.. Testjava AbstractclassGenerator.java E Grsdle Spring-to 5 spring-web Test wDateDasE 6 CLass public aMOn4S Spring-WEbflux 7 spring-webmvc pring-Wabfockat 8 args) publicstaticvoidmain(stringl STC 9 tuling build Amotationconfiodpplicotioncontextcontextnemmtiooniictioott; 10 context.registerppconfig.clas 11 context.refreshO; 12 java 13 com.zhOUwu apect usgrservtceusersevccontgeBnm 14 Scrvice Userservice.testO; Appconfg15 Test 16 Fresources 17 build.gradle tuling-boot 18 tuling-vip-demo Testomaino Run: Test c:lProgramfiLesJayaldi \u4e2a \u51929\u5c24\u5144 test 1\u4e94\u4e2d\u65e5 Processfinishedwithexitcode SEIUONS+ GitTermInalETODoGProfiler EwentLog Endpalnts Spring ShouenceDiagram \u5230\u6b64\uff0c\u606d\u559c\u4f60\uff0c\u4f60\u5df2\u7ecf\u6210\u529f\u7684\u7f16\u8bd1\u597d\u4e86Spring\u6e90\u7801\uff0c\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u5e76\u8fdb\u884c\u8c03\u8bd5\u4e86\u3002 \u95ee\u98982 \u5982\u679c\u51fa\u73b0\u4e86\uff1a \u62a5\u9519\u7684CoroutinesUtils\u662f\u4e00\u4e2akotlin\u4e2d\u7684\u7c7b\uff0c\u89e3\u51b3\u529e\u6cd5\uff1a \u70b9\u51fbFile -> Project Structure -> Libraries -> \u201c+\u201d -> Java\uff0c\u7136\u540e\u9009\u62e9spring-framework/spring-core/kotlin-coroutines/build/libs/kotlin-coroutines-5.2.4.BUILD-SNAPSHOT.jar\uff0c\u5728\u5f39\u51fa\u7684\u5bf9\u8bdd\u6846\u4e2d\u9009\u62e9spring-core.main\uff0c\u5728\u91cd\u65b0\u8fd0\u884cTest\u7c7b\u4e2d\u7684main\u65b9\u6cd5\u5373\u53ef\uff0c\u6ce8\u610f\u6211\u56fe\u4e2d\u662f\u62a5\u9519\u7684\u6a21\u5757spring-core\uff0c\u6240\u4ee5\u64cd\u4f5c\u7684\u662fspring-core.main\uff0c\u5982\u679c\u662f\u5176\u4ed6\u6a21\u5757\u62a5\u7c7b\u4f3c\u7684\u9519\uff0c\u5c31\u505a\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002 \u95ee\u98983 Annotationconf1gppticationcontxto SPaing-context-support Aspang-core Userserviceuserservicecuserservice) lsprng-expression CONTeX\u4e0a:\u53f6 Wspring-instrament Wspring-jal Userservice.testO; AIVspring-jdbc \u6fb3spring-ims spring-messaging \u96f7 sispring-orm Aspring-oxm Espring-2dbe Causedby:net.ubygrapefruit.patformExen sec.825ms ANIdeaProjec I EventL 24428LF \u897f\u5584\u5403\u5e02 acer \u9700\u8981\u91cd\u65b0\u5b89\u88c5\u7535\u8111\u4e0a\u7684git\uff0c\u5e76\u4e14\u6700\u597d\u662f\u6309\u7167\u6700\u65b0\u7248\u672c\u7684git\uff08\u4e0a\u9762\u7f51\u76d8\u4e2d\u6709\u6309\u7167\u6587\u4ef6\uff09\uff0c\u5b89\u88c5\u7684\u65f6\u5019\u6ce8\u610f\u4ee5\u4e0b\u9875\u9762\u9009\u62e9\u7b2c\u4e8c\u9879\uff1a Git2.33.0.2Setup AdjustingyourPATHenvironment HowwouldyouliketouseGitfromthecommandline? UseGItfromGitBashonly ThisisthemostcautiouschoceasyouPAHwobdiedYOU onlybeabletousetheGitcommandlinetoolsfromGiash Gitfromthecommandlneandalsoomrdartywr (Recommnded)Thisoptionaddsonlysomeminiitwrstoour PATHtoavoidcutringyuenironentwthotioixl YoUWILbEAletoUsEGiROMGIBShhmwnd Powershellaswellasanythirawioii UseGitandoptionalUnixtoolsfromtheComandPompt BothGitandtheoptionalUnixtoolswillbeadded edtoyourPATH. \"FInd\"and\" \"sort'.Only Warning:ThiswilloverrideWindowstoolsi lslike\" usethisoptionifyouunderstandtheimplications htts://gitforwindows.org/ Next Cancel Back Qnlyshownewoptions \u5982\u679c\u5927\u5bb6\u5728\u7f16\u8bd1\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u5176\u4ed6\u95ee\u9898\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u672c\u6587\u540e\u9762\u8fdb\u884c\u8bc4\u8bba\uff0c\u6700\u597d\u662f\u628a\u89e3\u51b3\u65b9\u6848\u4e5f\u7ed9\u51fa\uff0c\u65b9\u4fbf\u5176\u4ed6\u5c0f\u4f19\u4f34\uff0c\u611f\u8c22\u3002","title":"Spring\u6e90\u7801\u7f16\u8bd1\u6559\u7a0b"}]}